
kernel:     file format elf64-x86-64


Disassembly of section .boottext:

0000000000400000 <_kernel_physical_start>:
  400000:	d6                   	(bad)  
  400001:	50                   	push   %rax
  400002:	52                   	push   %rdx
  400003:	e8 00 00 00 00       	callq  400008 <_kernel_physical_start+0x8>
  400008:	18 00                	sbb    %al,(%rax)
  40000a:	00 00                	add    %al,(%rax)
  40000c:	12 af ad 17 00 00    	adc    0x17ad(%rdi),%ch
  400012:	00 00                	add    %al,(%rax)
  400014:	08 00                	or     %al,(%rax)
	...

0000000000400018 <_start>:
.section .text

.global _start
.type _start, @function
_start:
  cmp $0x36d76289, %eax
  400018:	3d 89 62 d7 36       	cmp    $0x36d76289,%eax
  jne multiboot_error
  40001d:	75 02                	jne    400021 <multiboot_error>
  jmp multiboot_success
  40001f:	eb 0d                	jmp    40002e <multiboot_success>

0000000000400021 <multiboot_error>:

multiboot_error:
  movl $0x4641494C, %eax
  400021:	b8 4c 49 41 46       	mov    $0x4641494c,%eax
  movl $0xb8000, %ebx
  400026:	bb 00 80 0b 00       	mov    $0xb8000,%ebx
  movb %al, (%ebx)
  40002b:	88 03                	mov    %al,(%rbx)
  hlt
  40002d:	f4                   	hlt    

000000000040002e <multiboot_success>:

multiboot_success:
  movl $TMP_STACK + KERNEL_BOOT_STACK_SIZE, %esp
  40002e:	bc 00 b0 40 00       	mov    $0x40b000,%esp

  # Start initializing the PML4.
  movl $PDP_HIGH, %eax
  400033:	b8 00 20 40 00       	mov    $0x402000,%eax
  or $(PAGE_ENTRY_PRESENT | PAGE_ENTRY_RW), %eax
  400038:	83 c8 03             	or     $0x3,%eax
  movl %eax, PML4 + (PML4_ADDR_TO_ENTRY_INDEX(KERNEL_VIRTUAL_START) * PAGE_ENTRY_SIZE)
  40003b:	a3 f8 cf 40 00 b8 00 	movabs %eax,0x40b000b80040cff8
  400042:	b0 40 

  movl $PDP_LOW, %eax
  400044:	00 83 c8 03 a3 00    	add    %al,0xa303c8(%rbx)
  or $(PAGE_ENTRY_PRESENT | PAGE_ENTRY_RW), %eax
  movl %eax, PML4 + (PML4_ADDR_TO_ENTRY_INDEX(KERNEL_PHYSICAL_START) * PAGE_ENTRY_SIZE)
  40004a:	c0 40 00 b8          	rolb   $0xb8,0x0(%rax)

  # Now intialize PDP
  movl $0, %eax
  40004e:	00 00                	add    %al,(%rax)
  400050:	00 00                	add    %al,(%rax)
  or $(PAGE_ENTRY_PRESENT | PAGE_ENTRY_RW | PAGE_PAGE_SIZE), %eax
  400052:	0d 83 00 00 00       	or     $0x83,%eax
  movl %eax, PDP_HIGH + (PDP_ADDR_TO_ENTRY_INDEX(KERNEL_VIRTUAL_START) * PAGE_ENTRY_SIZE)
  400057:	a3 f0 2f 40 00 a3 00 	movabs %eax,0x40b000a300402ff0
  40005e:	b0 40 
  movl %eax, PDP_LOW + (PDP_ADDR_TO_ENTRY_INDEX(KERNEL_PHYSICAL_START) * PAGE_ENTRY_SIZE)
  400060:	00 b8 00 c0 40 00    	add    %bh,0x40c000(%rax)

  # When done, set CR3 register.
  movl $PML4, %eax
  movl %eax, %cr3
  400066:	0f 22 d8             	mov    %rax,%cr3

  movl $KERNEL_CR4, %eax
  400069:	b8 20 00 00 00       	mov    $0x20,%eax
  movl %eax, %cr4
  40006e:	0f 22 e0             	mov    %rax,%cr4

  # Long mode is enabled by setting long-mode enable control bit (EFER.LME) to 1.
  movl $MSR_EFER, %ecx
  400071:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
  rdmsr
  400076:	0f 32                	rdmsr  
  or $MSR_EFER_LME, %eax
  400078:	0d 00 01 00 00       	or     $0x100,%eax
  wrmsr
  40007d:	0f 30                	wrmsr  

  movl %cr0, %eax
  40007f:	0f 20 c0             	mov    %cr0,%rax
  or $CONTROL_REGISTER0_PAGE, %eax
  400082:	0d 00 00 00 80       	or     $0x80000000,%eax
  movl %eax, %cr0
  400087:	0f 22 c0             	mov    %rax,%cr0

  lgdt gdt_ptr
  40008a:	0f 01 15 00 18 40 00 	lgdt   0x401800(%rip)        # 801891 <_kernel_physical_end+0x3e0891>

  # Our Code Descriptor is the second one. (+8 offset from GDT)
  ljmp $0x8, $_start64
  400091:	ea                   	(bad)  
  400092:	9a                   	(bad)  
  400093:	00 40 00             	add    %al,0x0(%rax)
  400096:	08 00                	or     %al,(%rax)

  cli
  400098:	fa                   	cli    
  hlt
  400099:	f4                   	hlt    

000000000040009a <_start64>:

.global _start64
.type _start64, @function
_start64:
  // Setup segment selectors
  movw $0, %ax
  40009a:	66 b8 00 00          	mov    $0x0,%ax
  movw %ax, %ds
  40009e:	8e d8                	mov    %eax,%ds
  movw %ax, %es
  4000a0:	8e c0                	mov    %eax,%es
  movw %ax, %fs
  4000a2:	8e e0                	mov    %eax,%fs
  movw %ax, %gs
  4000a4:	8e e8                	mov    %eax,%gs
  movw %ax, %ss
  4000a6:	8e d0                	mov    %eax,%ss

  movq $0x1, %rax
  4000a8:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax

  call _init
  4000af:	e8 80 ab 01 80       	callq  ffffffff8041ac34 <_init>
  call KernelMain
  4000b4:	e8 97 d0 00 80       	callq  ffffffff8040d150 <KernelMain>
  cli
  4000b9:	fa                   	cli    
  hlt
  4000ba:	f4                   	hlt    

1:
  jmp 1b
  4000bb:	eb fe                	jmp    4000bb <_start64+0x21>

Disassembly of section .text:

ffffffff8040d000 <deregister_tm_clones>:
ffffffff8040d000:	48 c7 c0 68 dc 41 80 	mov    $0xffffffff8041dc68,%rax
ffffffff8040d007:	48 3d 68 dc 41 80    	cmp    $0xffffffff8041dc68,%rax
ffffffff8040d00d:	74 19                	je     ffffffff8040d028 <deregister_tm_clones+0x28>
ffffffff8040d00f:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d016:	48 85 c0             	test   %rax,%rax
ffffffff8040d019:	74 0d                	je     ffffffff8040d028 <deregister_tm_clones+0x28>
ffffffff8040d01b:	48 c7 c7 68 dc 41 80 	mov    $0xffffffff8041dc68,%rdi
ffffffff8040d022:	ff e0                	jmpq   *%rax
ffffffff8040d024:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040d028:	c3                   	retq   
ffffffff8040d029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8040d030 <register_tm_clones>:
ffffffff8040d030:	48 c7 c6 68 dc 41 80 	mov    $0xffffffff8041dc68,%rsi
ffffffff8040d037:	48 81 ee 68 dc 41 80 	sub    $0xffffffff8041dc68,%rsi
ffffffff8040d03e:	48 89 f0             	mov    %rsi,%rax
ffffffff8040d041:	48 c1 ee 3f          	shr    $0x3f,%rsi
ffffffff8040d045:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8040d049:	48 01 c6             	add    %rax,%rsi
ffffffff8040d04c:	48 d1 fe             	sar    %rsi
ffffffff8040d04f:	74 1f                	je     ffffffff8040d070 <register_tm_clones+0x40>
ffffffff8040d051:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d058:	48 85 c0             	test   %rax,%rax
ffffffff8040d05b:	74 13                	je     ffffffff8040d070 <register_tm_clones+0x40>
ffffffff8040d05d:	48 c7 c7 68 dc 41 80 	mov    $0xffffffff8041dc68,%rdi
ffffffff8040d064:	ff e0                	jmpq   *%rax
ffffffff8040d066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040d06d:	00 00 00 
ffffffff8040d070:	c3                   	retq   
ffffffff8040d071:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8040d078:	00 00 00 00 
ffffffff8040d07c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8040d080 <__do_global_dtors_aux>:
ffffffff8040d080:	80 3d 79 0f 01 00 00 	cmpb   $0x0,0x10f79(%rip)        # ffffffff8041e000 <completed.4608>
ffffffff8040d087:	75 7f                	jne    ffffffff8040d108 <__do_global_dtors_aux+0x88>
ffffffff8040d089:	55                   	push   %rbp
ffffffff8040d08a:	48 8b 05 77 0f 01 00 	mov    0x10f77(%rip),%rax        # ffffffff8041e008 <dtor_idx.4610>
ffffffff8040d091:	48 89 e5             	mov    %rsp,%rbp
ffffffff8040d094:	41 54                	push   %r12
ffffffff8040d096:	49 c7 c4 58 dc 41 80 	mov    $0xffffffff8041dc58,%r12
ffffffff8040d09d:	53                   	push   %rbx
ffffffff8040d09e:	48 c7 c3 60 dc 41 80 	mov    $0xffffffff8041dc60,%rbx
ffffffff8040d0a5:	48 81 eb 58 dc 41 80 	sub    $0xffffffff8041dc58,%rbx
ffffffff8040d0ac:	48 c1 fb 03          	sar    $0x3,%rbx
ffffffff8040d0b0:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff8040d0b4:	48 39 d8             	cmp    %rbx,%rax
ffffffff8040d0b7:	73 22                	jae    ffffffff8040d0db <__do_global_dtors_aux+0x5b>
ffffffff8040d0b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8040d0c0:	48 83 c0 01          	add    $0x1,%rax
ffffffff8040d0c4:	48 89 05 3d 0f 01 00 	mov    %rax,0x10f3d(%rip)        # ffffffff8041e008 <dtor_idx.4610>
ffffffff8040d0cb:	41 ff 14 c4          	callq  *(%r12,%rax,8)
ffffffff8040d0cf:	48 8b 05 32 0f 01 00 	mov    0x10f32(%rip),%rax        # ffffffff8041e008 <dtor_idx.4610>
ffffffff8040d0d6:	48 39 d8             	cmp    %rbx,%rax
ffffffff8040d0d9:	72 e5                	jb     ffffffff8040d0c0 <__do_global_dtors_aux+0x40>
ffffffff8040d0db:	e8 20 ff ff ff       	callq  ffffffff8040d000 <deregister_tm_clones>
ffffffff8040d0e0:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d0e7:	48 85 c0             	test   %rax,%rax
ffffffff8040d0ea:	74 0c                	je     ffffffff8040d0f8 <__do_global_dtors_aux+0x78>
ffffffff8040d0ec:	48 c7 c7 08 c0 41 80 	mov    $0xffffffff8041c008,%rdi
ffffffff8040d0f3:	e8 08 2f bf 7f       	callq  0 <MULTIBOOT_HEADER_LENGTH-0x18>
ffffffff8040d0f8:	5b                   	pop    %rbx
ffffffff8040d0f9:	41 5c                	pop    %r12
ffffffff8040d0fb:	c6 05 fe 0e 01 00 01 	movb   $0x1,0x10efe(%rip)        # ffffffff8041e000 <completed.4608>
ffffffff8040d102:	5d                   	pop    %rbp
ffffffff8040d103:	c3                   	retq   
ffffffff8040d104:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040d108:	c3                   	retq   
ffffffff8040d109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8040d110 <frame_dummy>:
ffffffff8040d110:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d117:	48 85 c0             	test   %rax,%rax
ffffffff8040d11a:	74 24                	je     ffffffff8040d140 <frame_dummy+0x30>
ffffffff8040d11c:	55                   	push   %rbp
ffffffff8040d11d:	48 c7 c6 20 e0 41 80 	mov    $0xffffffff8041e020,%rsi
ffffffff8040d124:	48 c7 c7 08 c0 41 80 	mov    $0xffffffff8041c008,%rdi
ffffffff8040d12b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8040d12e:	e8 cd 2e bf 7f       	callq  0 <MULTIBOOT_HEADER_LENGTH-0x18>
ffffffff8040d133:	5d                   	pop    %rbp
ffffffff8040d134:	e9 f7 fe ff ff       	jmpq   ffffffff8040d030 <register_tm_clones>
ffffffff8040d139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8040d140:	e9 eb fe ff ff       	jmpq   ffffffff8040d030 <register_tm_clones>
ffffffff8040d145:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040d14c:	00 00 00 
ffffffff8040d14f:	90                   	nop

ffffffff8040d150 <KernelMain>:

Kernel::VGAOutput<> Kernel::vga_output{};

extern "C" void KernelMain(void);

void KernelMain() {
ffffffff8040d150:	48 83 ec 18          	sub    $0x18,%rsp
  // Initialize Interrupts.
  Kernel::IDTManager idt_manager{};
  idt_manager.InitializeIDTForCPUException();
ffffffff8040d154:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
ffffffff8040d159:	e8 02 01 00 00       	callq  ffffffff8040d260 <_ZN6Kernel10IDTManager28InitializeIDTForCPUExceptionEv>
  idt_manager.InitializeIDTForIRQ();
ffffffff8040d15e:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
ffffffff8040d163:	e8 68 0a 00 00       	callq  ffffffff8040dbd0 <_ZN6Kernel10IDTManager19InitializeIDTForIRQEv>
  idt_manager.LoadIDT();
ffffffff8040d168:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
ffffffff8040d16d:	e8 3e 0a 00 00       	callq  ffffffff8040dbb0 <_ZN6Kernel10IDTManager7LoadIDTEv>

namespace Kernel {
template <typename CharT>
class basic_string_view {
 public:
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040d172:	48 c7 c7 e8 b7 41 80 	mov    $0xffffffff8041b7e8,%rdi
ffffffff8040d179:	e8 42 00 00 00       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
      }
    }
  }

  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(string_view s) {
    PrintString(s);
ffffffff8040d17e:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040d183:	48 c7 c6 e8 b7 41 80 	mov    $0xffffffff8041b7e8,%rsi
ffffffff8040d18a:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040d191:	89 c2                	mov    %eax,%edx
ffffffff8040d193:	e8 18 d4 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
class KernelTest;

class KernelTestRunner {
 public:
  static KernelTestRunner& GetTestRunner() {
    static KernelTestRunner test_runner;
ffffffff8040d198:	80 3d 21 39 01 00 00 	cmpb   $0x0,0x13921(%rip)        # ffffffff80420ac0 <_kernel_virtual_end>
ffffffff8040d19f:	75 11                	jne    ffffffff8040d1b2 <KernelMain+0x62>
  void RunTest();
  KernelTestRunner(const KernelTestRunner&) = delete;
  void operator=(const KernelTestRunner&) = delete;

 public:
  KernelTestRunner() : num_tests_(0) {}
ffffffff8040d1a1:	c7 05 55 3c 01 00 00 	movl   $0x0,0x13c55(%rip)        # ffffffff80420e00 <_ZZN6Kernel11kernel_test16KernelTestRunner13GetTestRunnerEvE11test_runner+0x320>
ffffffff8040d1a8:	00 00 00 
    static KernelTestRunner test_runner;
ffffffff8040d1ab:	c6 05 0e 39 01 00 01 	movb   $0x1,0x1390e(%rip)        # ffffffff80420ac0 <_kernel_virtual_end>

  Kernel::vga_output << "IDT setup is done! \n";
  Kernel::kernel_test::KernelTestRunner::GetTestRunner().RunTest();
ffffffff8040d1b2:	48 c7 c7 e0 0a 42 80 	mov    $0xffffffff80420ae0,%rdi
ffffffff8040d1b9:	e8 e2 cb 00 00       	callq  ffffffff80419da0 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv>

  /*
  asm volatile ("int $10");
  asm volatile ("int $11");
  asm volatile ("int $12");*/
  while (1) {
ffffffff8040d1be:	eb fe                	jmp    ffffffff8040d1be <KernelMain+0x6e>

ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>:
#include "string_util.h"

namespace Kernel {
unsigned int strlen(const char* s) {
  unsigned int len = 0;
  while (*s++) {
ffffffff8040d1c0:	80 3f 00             	cmpb   $0x0,(%rdi)
ffffffff8040d1c3:	48 8d 47 01          	lea    0x1(%rdi),%rax
ffffffff8040d1c7:	74 1f                	je     ffffffff8040d1e8 <_ZN6Kernel6strlenEPKc+0x28>
ffffffff8040d1c9:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040d1ce:	29 c2                	sub    %eax,%edx
    len++;
ffffffff8040d1d0:	44 8d 04 02          	lea    (%rdx,%rax,1),%r8d
  while (*s++) {
ffffffff8040d1d4:	48 83 c0 01          	add    $0x1,%rax
ffffffff8040d1d8:	80 78 ff 00          	cmpb   $0x0,-0x1(%rax)
ffffffff8040d1dc:	75 f2                	jne    ffffffff8040d1d0 <_ZN6Kernel6strlenEPKc+0x10>
  }
  return len;
}
ffffffff8040d1de:	44 89 c0             	mov    %r8d,%eax
ffffffff8040d1e1:	c3                   	retq   
ffffffff8040d1e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  unsigned int len = 0;
ffffffff8040d1e8:	45 31 c0             	xor    %r8d,%r8d
}
ffffffff8040d1eb:	44 89 c0             	mov    %r8d,%eax
ffffffff8040d1ee:	c3                   	retq   
ffffffff8040d1ef:	90                   	nop

ffffffff8040d1f0 <_ZN6Kernel14PITimerHandlerEPNS_23CPUInterruptHandlerArgsE>:
  outb(0x20, 0x20);
}

}  // namespace

__attribute__((interrupt)) void PITimerHandler(CPUInterruptHandlerArgs* args) {
ffffffff8040d1f0:	41 53                	push   %r11
ffffffff8040d1f2:	41 52                	push   %r10
ffffffff8040d1f4:	41 51                	push   %r9
ffffffff8040d1f6:	41 50                	push   %r8
ffffffff8040d1f8:	57                   	push   %rdi
  UNUSED(args);

  pic_timer.TimerInterruptHandler();
ffffffff8040d1f9:	48 c7 c7 80 09 42 80 	mov    $0xffffffff80420980,%rdi
__attribute__((interrupt)) void PITimerHandler(CPUInterruptHandlerArgs* args) {
ffffffff8040d200:	56                   	push   %rsi
ffffffff8040d201:	51                   	push   %rcx
ffffffff8040d202:	52                   	push   %rdx
ffffffff8040d203:	50                   	push   %rax
  pic_timer.TimerInterruptHandler();
ffffffff8040d204:	fc                   	cld    
ffffffff8040d205:	e8 b6 a8 00 00       	callq  ffffffff80417ac0 <_ZN6Kernel7PITimer21TimerInterruptHandlerEv>
#include "types.h"

namespace Kernel {
static inline void outb(uint16_t port, uint8_t val) {
  // Copy value to EAX and port to EDX.
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040d20a:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8040d20f:	e6 20                	out    %al,$0x20
  EndOfIRQ();
}
ffffffff8040d211:	58                   	pop    %rax
ffffffff8040d212:	5a                   	pop    %rdx
ffffffff8040d213:	59                   	pop    %rcx
ffffffff8040d214:	5e                   	pop    %rsi
ffffffff8040d215:	5f                   	pop    %rdi
ffffffff8040d216:	41 58                	pop    %r8
ffffffff8040d218:	41 59                	pop    %r9
ffffffff8040d21a:	41 5a                	pop    %r10
ffffffff8040d21c:	41 5b                	pop    %r11
ffffffff8040d21e:	48 cf                	iretq  

ffffffff8040d220 <_ZN6Kernel15KeyboardHandlerEPNS_23CPUInterruptHandlerArgsE>:

__attribute__((interrupt)) void KeyboardHandler(CPUInterruptHandlerArgs* args) {
ffffffff8040d220:	41 53                	push   %r11
ffffffff8040d222:	41 52                	push   %r10
ffffffff8040d224:	41 51                	push   %r9
ffffffff8040d226:	41 50                	push   %r8
ffffffff8040d228:	57                   	push   %rdi
ffffffff8040d229:	56                   	push   %rsi
ffffffff8040d22a:	51                   	push   %rcx
ffffffff8040d22b:	52                   	push   %rdx
ffffffff8040d22c:	50                   	push   %rax
}

static inline uint8_t inb(uint16_t port) {
  uint8_t ret;
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040d22d:	e4 60                	in     $0x60,%al
  UNUSED(args);

  uint8_t scan_code = inb(0x60);
  ps2_keyboard.MainKeyboardHandler(scan_code);
ffffffff8040d22f:	48 c7 c7 40 00 42 80 	mov    $0xffffffff80420040,%rdi
ffffffff8040d236:	0f b6 f0             	movzbl %al,%esi
ffffffff8040d239:	fc                   	cld    
ffffffff8040d23a:	e8 a1 9c 00 00       	callq  ffffffff80416ee0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh>
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040d23f:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8040d244:	e6 20                	out    %al,$0x20
  EndOfIRQ();
}
ffffffff8040d246:	58                   	pop    %rax
ffffffff8040d247:	5a                   	pop    %rdx
ffffffff8040d248:	59                   	pop    %rcx
ffffffff8040d249:	5e                   	pop    %rsi
ffffffff8040d24a:	5f                   	pop    %rdi
ffffffff8040d24b:	41 58                	pop    %r8
ffffffff8040d24d:	41 59                	pop    %r9
ffffffff8040d24f:	41 5a                	pop    %r10
ffffffff8040d251:	41 5b                	pop    %r11
ffffffff8040d253:	48 cf                	iretq  
ffffffff8040d255:	90                   	nop
ffffffff8040d256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040d25d:	00 00 00 

ffffffff8040d260 <_ZN6Kernel10IDTManager28InitializeIDTForCPUExceptionEv>:
  entry.selector = 0x8;  // Code segment.
ffffffff8040d260:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff8040d265:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8040d26a:	bf 08 00 00 00       	mov    $0x8,%edi
  auto ih_addr = has_error_code
ffffffff8040d26f:	48 c7 c2 40 18 41 80 	mov    $0xffffffff80411840,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d276:	66 89 15 c3 1d 01 00 	mov    %dx,0x11dc3(%rip)        # ffffffff8041f040 <idt_entries>

void IDTManager::InitializeIDTForCPUException() {
  InstallIDTEntry<0>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
ffffffff8040d27d:	0f b6 05 7c dd 00 00 	movzbl 0xdd7c(%rip),%eax        # ffffffff8041b000 <_init+0x3cc>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d284:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffff8040d28a:	41 b9 08 00 00 00    	mov    $0x8,%r9d
ffffffff8040d290:	66 89 0d ab 1d 01 00 	mov    %cx,0x11dab(%rip)        # ffffffff8041f042 <idt_entries+0x2>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d297:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d29a:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d29e:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2a4:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2a8:	89 15 9a 1d 01 00    	mov    %edx,0x11d9a(%rip)        # ffffffff8041f048 <idt_entries+0x8>
  auto ih_addr = has_error_code
ffffffff8040d2ae:	48 c7 c2 70 18 41 80 	mov    $0xffffffff80411870,%rdx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d2b5:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2bb:	66 89 0d 84 1d 01 00 	mov    %cx,0x11d84(%rip)        # ffffffff8041f046 <idt_entries+0x6>
ffffffff8040d2c2:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d2c5:	66 89 15 84 1d 01 00 	mov    %dx,0x11d84(%rip)        # ffffffff8041f050 <idt_entries+0x10>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2cc:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2d0:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2d4:	89 15 7e 1d 01 00    	mov    %edx,0x11d7e(%rip)        # ffffffff8041f058 <idt_entries+0x18>
  auto ih_addr = has_error_code
ffffffff8040d2da:	48 c7 c2 a0 18 41 80 	mov    $0xffffffff804118a0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2e1:	66 89 0d 6e 1d 01 00 	mov    %cx,0x11d6e(%rip)        # ffffffff8041f056 <idt_entries+0x16>
ffffffff8040d2e8:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d2eb:	66 89 15 6e 1d 01 00 	mov    %dx,0x11d6e(%rip)        # ffffffff8041f060 <idt_entries+0x20>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2f2:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2f6:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2fa:	89 15 68 1d 01 00    	mov    %edx,0x11d68(%rip)        # ffffffff8041f068 <idt_entries+0x28>
  auto ih_addr = has_error_code
ffffffff8040d300:	48 c7 c2 d0 18 41 80 	mov    $0xffffffff804118d0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d307:	66 89 0d 58 1d 01 00 	mov    %cx,0x11d58(%rip)        # ffffffff8041f066 <idt_entries+0x26>
ffffffff8040d30e:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d311:	66 89 15 58 1d 01 00 	mov    %dx,0x11d58(%rip)        # ffffffff8041f070 <idt_entries+0x30>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d318:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d31c:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d320:	89 15 52 1d 01 00    	mov    %edx,0x11d52(%rip)        # ffffffff8041f078 <idt_entries+0x38>
  auto ih_addr = has_error_code
ffffffff8040d326:	48 c7 c2 00 19 41 80 	mov    $0xffffffff80411900,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d32d:	66 89 0d 42 1d 01 00 	mov    %cx,0x11d42(%rip)        # ffffffff8041f076 <idt_entries+0x36>
ffffffff8040d334:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d337:	66 89 15 42 1d 01 00 	mov    %dx,0x11d42(%rip)        # ffffffff8041f080 <idt_entries+0x40>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d33e:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d342:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.type_attr = type_attr;
ffffffff8040d346:	88 05 f9 1c 01 00    	mov    %al,0x11cf9(%rip)        # ffffffff8041f045 <idt_entries+0x5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d34c:	66 89 35 ff 1c 01 00 	mov    %si,0x11cff(%rip)        # ffffffff8041f052 <idt_entries+0x12>
ffffffff8040d353:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d358:	88 05 f7 1c 01 00    	mov    %al,0x11cf7(%rip)        # ffffffff8041f055 <idt_entries+0x15>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d35e:	66 89 3d fd 1c 01 00 	mov    %di,0x11cfd(%rip)        # ffffffff8041f062 <idt_entries+0x22>
ffffffff8040d365:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.type_attr = type_attr;
ffffffff8040d36a:	88 05 f5 1c 01 00    	mov    %al,0x11cf5(%rip)        # ffffffff8041f065 <idt_entries+0x25>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d370:	66 44 89 05 fa 1c 01 	mov    %r8w,0x11cfa(%rip)        # ffffffff8041f072 <idt_entries+0x32>
ffffffff8040d377:	00 
ffffffff8040d378:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040d37e:	88 05 f1 1c 01 00    	mov    %al,0x11cf1(%rip)        # ffffffff8041f075 <idt_entries+0x35>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d384:	66 44 89 0d f6 1c 01 	mov    %r9w,0x11cf6(%rip)        # ffffffff8041f082 <idt_entries+0x42>
ffffffff8040d38b:	00 
ffffffff8040d38c:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  entry.ist = 0;
ffffffff8040d392:	c6 05 ab 1c 01 00 00 	movb   $0x0,0x11cab(%rip)        # ffffffff8041f044 <idt_entries+0x4>
  entry.zero = 0;
ffffffff8040d399:	c7 05 a9 1c 01 00 00 	movl   $0x0,0x11ca9(%rip)        # ffffffff8041f04c <idt_entries+0xc>
ffffffff8040d3a0:	00 00 00 
  entry.ist = 0;
ffffffff8040d3a3:	c6 05 aa 1c 01 00 00 	movb   $0x0,0x11caa(%rip)        # ffffffff8041f054 <idt_entries+0x14>
  entry.zero = 0;
ffffffff8040d3aa:	c7 05 a8 1c 01 00 00 	movl   $0x0,0x11ca8(%rip)        # ffffffff8041f05c <idt_entries+0x1c>
ffffffff8040d3b1:	00 00 00 
  entry.ist = 0;
ffffffff8040d3b4:	c6 05 a9 1c 01 00 00 	movb   $0x0,0x11ca9(%rip)        # ffffffff8041f064 <idt_entries+0x24>
  entry.zero = 0;
ffffffff8040d3bb:	c7 05 a7 1c 01 00 00 	movl   $0x0,0x11ca7(%rip)        # ffffffff8041f06c <idt_entries+0x2c>
ffffffff8040d3c2:	00 00 00 
  entry.ist = 0;
ffffffff8040d3c5:	c6 05 a8 1c 01 00 00 	movb   $0x0,0x11ca8(%rip)        # ffffffff8041f074 <idt_entries+0x34>
  entry.zero = 0;
ffffffff8040d3cc:	c7 05 a6 1c 01 00 00 	movl   $0x0,0x11ca6(%rip)        # ffffffff8041f07c <idt_entries+0x3c>
ffffffff8040d3d3:	00 00 00 
  entry.ist = 0;
ffffffff8040d3d6:	c6 05 a7 1c 01 00 00 	movb   $0x0,0x11ca7(%rip)        # ffffffff8041f084 <idt_entries+0x44>
  entry.type_attr = type_attr;
ffffffff8040d3dd:	88 05 a2 1c 01 00    	mov    %al,0x11ca2(%rip)        # ffffffff8041f085 <idt_entries+0x45>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d3e3:	89 15 9f 1c 01 00    	mov    %edx,0x11c9f(%rip)        # ffffffff8041f088 <idt_entries+0x48>
  auto ih_addr = has_error_code
ffffffff8040d3e9:	48 c7 c2 30 19 41 80 	mov    $0xffffffff80411930,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d3f0:	66 89 0d 8f 1c 01 00 	mov    %cx,0x11c8f(%rip)        # ffffffff8041f086 <idt_entries+0x46>
ffffffff8040d3f7:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d3fa:	66 89 15 8f 1c 01 00 	mov    %dx,0x11c8f(%rip)        # ffffffff8041f090 <idt_entries+0x50>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d401:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d405:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d409:	89 15 89 1c 01 00    	mov    %edx,0x11c89(%rip)        # ffffffff8041f098 <idt_entries+0x58>
  auto ih_addr = has_error_code
ffffffff8040d40f:	48 c7 c2 60 19 41 80 	mov    $0xffffffff80411960,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d416:	66 89 0d 79 1c 01 00 	mov    %cx,0x11c79(%rip)        # ffffffff8041f096 <idt_entries+0x56>
ffffffff8040d41d:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040d420:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d424:	66 89 15 75 1c 01 00 	mov    %dx,0x11c75(%rip)        # ffffffff8041f0a0 <idt_entries+0x60>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d42b:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d42f:	66 89 0d 70 1c 01 00 	mov    %cx,0x11c70(%rip)        # ffffffff8041f0a6 <idt_entries+0x66>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d436:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d43b:	89 15 67 1c 01 00    	mov    %edx,0x11c67(%rip)        # ffffffff8041f0a8 <idt_entries+0x68>
  auto ih_addr = has_error_code
ffffffff8040d441:	48 c7 c2 90 19 41 80 	mov    $0xffffffff80411990,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d448:	66 89 15 61 1c 01 00 	mov    %dx,0x11c61(%rip)        # ffffffff8041f0b0 <idt_entries+0x70>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d44f:	66 89 0d 5c 1c 01 00 	mov    %cx,0x11c5c(%rip)        # ffffffff8041f0b2 <idt_entries+0x72>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d456:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d459:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d45d:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d461:	89 15 51 1c 01 00    	mov    %edx,0x11c51(%rip)        # ffffffff8041f0b8 <idt_entries+0x78>
  auto ih_addr = has_error_code
ffffffff8040d467:	48 c7 c2 f0 1c 41 80 	mov    $0xffffffff80411cf0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d46e:	66 89 0d 41 1c 01 00 	mov    %cx,0x11c41(%rip)        # ffffffff8041f0b6 <idt_entries+0x76>
ffffffff8040d475:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d478:	66 89 15 41 1c 01 00 	mov    %dx,0x11c41(%rip)        # ffffffff8041f0c0 <idt_entries+0x80>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d47f:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d483:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d487:	89 15 3b 1c 01 00    	mov    %edx,0x11c3b(%rip)        # ffffffff8041f0c8 <idt_entries+0x88>
  auto ih_addr = has_error_code
ffffffff8040d48d:	48 c7 c2 c0 19 41 80 	mov    $0xffffffff804119c0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d494:	66 89 0d 2b 1c 01 00 	mov    %cx,0x11c2b(%rip)        # ffffffff8041f0c6 <idt_entries+0x86>
ffffffff8040d49b:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d49e:	66 89 15 2b 1c 01 00 	mov    %dx,0x11c2b(%rip)        # ffffffff8041f0d0 <idt_entries+0x90>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d4a5:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d4a9:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d4ad:	66 44 89 15 dd 1b 01 	mov    %r10w,0x11bdd(%rip)        # ffffffff8041f092 <idt_entries+0x52>
ffffffff8040d4b4:	00 
ffffffff8040d4b5:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.type_attr = type_attr;
ffffffff8040d4bb:	88 05 d4 1b 01 00    	mov    %al,0x11bd4(%rip)        # ffffffff8041f095 <idt_entries+0x55>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d4c1:	66 44 89 1d d9 1b 01 	mov    %r11w,0x11bd9(%rip)        # ffffffff8041f0a2 <idt_entries+0x62>
ffffffff8040d4c8:	00 
ffffffff8040d4c9:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.type_attr = type_attr;
ffffffff8040d4cf:	88 05 d0 1b 01 00    	mov    %al,0x11bd0(%rip)        # ffffffff8041f0a5 <idt_entries+0x65>
ffffffff8040d4d5:	88 05 da 1b 01 00    	mov    %al,0x11bda(%rip)        # ffffffff8041f0b5 <idt_entries+0x75>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d4db:	66 89 35 e0 1b 01 00 	mov    %si,0x11be0(%rip)        # ffffffff8041f0c2 <idt_entries+0x82>
ffffffff8040d4e2:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d4e7:	88 05 d8 1b 01 00    	mov    %al,0x11bd8(%rip)        # ffffffff8041f0c5 <idt_entries+0x85>
  entry.zero = 0;
ffffffff8040d4ed:	c7 05 95 1b 01 00 00 	movl   $0x0,0x11b95(%rip)        # ffffffff8041f08c <idt_entries+0x4c>
ffffffff8040d4f4:	00 00 00 
  entry.ist = 0;
ffffffff8040d4f7:	c6 05 96 1b 01 00 00 	movb   $0x0,0x11b96(%rip)        # ffffffff8041f094 <idt_entries+0x54>
  entry.zero = 0;
ffffffff8040d4fe:	c7 05 94 1b 01 00 00 	movl   $0x0,0x11b94(%rip)        # ffffffff8041f09c <idt_entries+0x5c>
ffffffff8040d505:	00 00 00 
  entry.ist = 0;
ffffffff8040d508:	c6 05 95 1b 01 00 00 	movb   $0x0,0x11b95(%rip)        # ffffffff8041f0a4 <idt_entries+0x64>
  entry.zero = 0;
ffffffff8040d50f:	c7 05 93 1b 01 00 00 	movl   $0x0,0x11b93(%rip)        # ffffffff8041f0ac <idt_entries+0x6c>
ffffffff8040d516:	00 00 00 
  entry.ist = 0;
ffffffff8040d519:	c6 05 94 1b 01 00 00 	movb   $0x0,0x11b94(%rip)        # ffffffff8041f0b4 <idt_entries+0x74>
  entry.zero = 0;
ffffffff8040d520:	c7 05 92 1b 01 00 00 	movl   $0x0,0x11b92(%rip)        # ffffffff8041f0bc <idt_entries+0x7c>
ffffffff8040d527:	00 00 00 
  entry.ist = 0;
ffffffff8040d52a:	c6 05 93 1b 01 00 00 	movb   $0x0,0x11b93(%rip)        # ffffffff8041f0c4 <idt_entries+0x84>
  entry.zero = 0;
ffffffff8040d531:	c7 05 91 1b 01 00 00 	movl   $0x0,0x11b91(%rip)        # ffffffff8041f0cc <idt_entries+0x8c>
ffffffff8040d538:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040d53b:	66 89 3d 90 1b 01 00 	mov    %di,0x11b90(%rip)        # ffffffff8041f0d2 <idt_entries+0x92>
ffffffff8040d542:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d547:	89 15 8b 1b 01 00    	mov    %edx,0x11b8b(%rip)        # ffffffff8041f0d8 <idt_entries+0x98>
  auto ih_addr = has_error_code
ffffffff8040d54d:	48 c7 c2 a0 28 41 80 	mov    $0xffffffff804128a0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d554:	66 89 0d 7b 1b 01 00 	mov    %cx,0x11b7b(%rip)        # ffffffff8041f0d6 <idt_entries+0x96>
ffffffff8040d55b:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d55e:	66 89 15 7b 1b 01 00 	mov    %dx,0x11b7b(%rip)        # ffffffff8041f0e0 <idt_entries+0xa0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d565:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d569:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d56d:	89 15 75 1b 01 00    	mov    %edx,0x11b75(%rip)        # ffffffff8041f0e8 <idt_entries+0xa8>
  auto ih_addr = has_error_code
ffffffff8040d573:	48 c7 c2 50 34 41 80 	mov    $0xffffffff80413450,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d57a:	66 89 0d 65 1b 01 00 	mov    %cx,0x11b65(%rip)        # ffffffff8041f0e6 <idt_entries+0xa6>
ffffffff8040d581:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d584:	66 89 15 65 1b 01 00 	mov    %dx,0x11b65(%rip)        # ffffffff8041f0f0 <idt_entries+0xb0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d58b:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d58f:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d593:	89 15 5f 1b 01 00    	mov    %edx,0x11b5f(%rip)        # ffffffff8041f0f8 <idt_entries+0xb8>
  auto ih_addr = has_error_code
ffffffff8040d599:	48 c7 c2 00 40 41 80 	mov    $0xffffffff80414000,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5a0:	66 89 0d 4f 1b 01 00 	mov    %cx,0x11b4f(%rip)        # ffffffff8041f0f6 <idt_entries+0xb6>
ffffffff8040d5a7:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d5aa:	66 89 15 4f 1b 01 00 	mov    %dx,0x11b4f(%rip)        # ffffffff8041f100 <idt_entries+0xc0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5b1:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5b5:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5b9:	89 15 49 1b 01 00    	mov    %edx,0x11b49(%rip)        # ffffffff8041f108 <idt_entries+0xc8>
  auto ih_addr = has_error_code
ffffffff8040d5bf:	48 c7 c2 b0 4b 41 80 	mov    $0xffffffff80414bb0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5c6:	66 89 0d 39 1b 01 00 	mov    %cx,0x11b39(%rip)        # ffffffff8041f106 <idt_entries+0xc6>
ffffffff8040d5cd:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040d5d0:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d5d4:	66 89 15 35 1b 01 00 	mov    %dx,0x11b35(%rip)        # ffffffff8041f110 <idt_entries+0xd0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5db:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5df:	66 89 0d 30 1b 01 00 	mov    %cx,0x11b30(%rip)        # ffffffff8041f116 <idt_entries+0xd6>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d5e6:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5eb:	89 15 27 1b 01 00    	mov    %edx,0x11b27(%rip)        # ffffffff8041f118 <idt_entries+0xd8>
  auto ih_addr = has_error_code
ffffffff8040d5f1:	48 c7 c2 60 57 41 80 	mov    $0xffffffff80415760,%rdx
  entry.type_attr = type_attr;
ffffffff8040d5f8:	88 05 d7 1a 01 00    	mov    %al,0x11ad7(%rip)        # ffffffff8041f0d5 <idt_entries+0x95>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d5fe:	66 44 89 05 dc 1a 01 	mov    %r8w,0x11adc(%rip)        # ffffffff8041f0e2 <idt_entries+0xa2>
ffffffff8040d605:	00 
ffffffff8040d606:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040d60c:	88 05 d3 1a 01 00    	mov    %al,0x11ad3(%rip)        # ffffffff8041f0e5 <idt_entries+0xa5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d612:	66 44 89 0d d8 1a 01 	mov    %r9w,0x11ad8(%rip)        # ffffffff8041f0f2 <idt_entries+0xb2>
ffffffff8040d619:	00 
ffffffff8040d61a:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  entry.type_attr = type_attr;
ffffffff8040d620:	88 05 cf 1a 01 00    	mov    %al,0x11acf(%rip)        # ffffffff8041f0f5 <idt_entries+0xb5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d626:	66 44 89 15 d4 1a 01 	mov    %r10w,0x11ad4(%rip)        # ffffffff8041f102 <idt_entries+0xc2>
ffffffff8040d62d:	00 
ffffffff8040d62e:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.type_attr = type_attr;
ffffffff8040d634:	88 05 cb 1a 01 00    	mov    %al,0x11acb(%rip)        # ffffffff8041f105 <idt_entries+0xc5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d63a:	66 44 89 1d d0 1a 01 	mov    %r11w,0x11ad0(%rip)        # ffffffff8041f112 <idt_entries+0xd2>
ffffffff8040d641:	00 
ffffffff8040d642:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.type_attr = type_attr;
ffffffff8040d648:	88 05 c7 1a 01 00    	mov    %al,0x11ac7(%rip)        # ffffffff8041f115 <idt_entries+0xd5>
  entry.ist = 0;
ffffffff8040d64e:	c6 05 7f 1a 01 00 00 	movb   $0x0,0x11a7f(%rip)        # ffffffff8041f0d4 <idt_entries+0x94>
  entry.zero = 0;
ffffffff8040d655:	c7 05 7d 1a 01 00 00 	movl   $0x0,0x11a7d(%rip)        # ffffffff8041f0dc <idt_entries+0x9c>
ffffffff8040d65c:	00 00 00 
  entry.ist = 0;
ffffffff8040d65f:	c6 05 7e 1a 01 00 00 	movb   $0x0,0x11a7e(%rip)        # ffffffff8041f0e4 <idt_entries+0xa4>
  entry.zero = 0;
ffffffff8040d666:	c7 05 7c 1a 01 00 00 	movl   $0x0,0x11a7c(%rip)        # ffffffff8041f0ec <idt_entries+0xac>
ffffffff8040d66d:	00 00 00 
  entry.ist = 0;
ffffffff8040d670:	c6 05 7d 1a 01 00 00 	movb   $0x0,0x11a7d(%rip)        # ffffffff8041f0f4 <idt_entries+0xb4>
  entry.zero = 0;
ffffffff8040d677:	c7 05 7b 1a 01 00 00 	movl   $0x0,0x11a7b(%rip)        # ffffffff8041f0fc <idt_entries+0xbc>
ffffffff8040d67e:	00 00 00 
  entry.ist = 0;
ffffffff8040d681:	c6 05 7c 1a 01 00 00 	movb   $0x0,0x11a7c(%rip)        # ffffffff8041f104 <idt_entries+0xc4>
  entry.zero = 0;
ffffffff8040d688:	c7 05 7a 1a 01 00 00 	movl   $0x0,0x11a7a(%rip)        # ffffffff8041f10c <idt_entries+0xcc>
ffffffff8040d68f:	00 00 00 
  entry.ist = 0;
ffffffff8040d692:	c6 05 7b 1a 01 00 00 	movb   $0x0,0x11a7b(%rip)        # ffffffff8041f114 <idt_entries+0xd4>
  entry.zero = 0;
ffffffff8040d699:	c7 05 79 1a 01 00 00 	movl   $0x0,0x11a79(%rip)        # ffffffff8041f11c <idt_entries+0xdc>
ffffffff8040d6a0:	00 00 00 
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d6a3:	66 89 15 76 1a 01 00 	mov    %dx,0x11a76(%rip)        # ffffffff8041f120 <idt_entries+0xe0>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d6aa:	66 89 0d 71 1a 01 00 	mov    %cx,0x11a71(%rip)        # ffffffff8041f122 <idt_entries+0xe2>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6b1:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6b4:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6b8:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6bc:	89 15 66 1a 01 00    	mov    %edx,0x11a66(%rip)        # ffffffff8041f128 <idt_entries+0xe8>
  auto ih_addr = has_error_code
ffffffff8040d6c2:	48 c7 c2 f0 19 41 80 	mov    $0xffffffff804119f0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6c9:	66 89 0d 56 1a 01 00 	mov    %cx,0x11a56(%rip)        # ffffffff8041f126 <idt_entries+0xe6>
ffffffff8040d6d0:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d6d3:	66 89 15 56 1a 01 00 	mov    %dx,0x11a56(%rip)        # ffffffff8041f130 <idt_entries+0xf0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6da:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6de:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6e2:	89 15 50 1a 01 00    	mov    %edx,0x11a50(%rip)        # ffffffff8041f138 <idt_entries+0xf8>
  auto ih_addr = has_error_code
ffffffff8040d6e8:	48 c7 c2 20 1a 41 80 	mov    $0xffffffff80411a20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6ef:	66 89 0d 40 1a 01 00 	mov    %cx,0x11a40(%rip)        # ffffffff8041f136 <idt_entries+0xf6>
ffffffff8040d6f6:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040d6f9:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d6fd:	66 89 15 3c 1a 01 00 	mov    %dx,0x11a3c(%rip)        # ffffffff8041f140 <idt_entries+0x100>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d704:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffff8040d708:	89 15 3a 1a 01 00    	mov    %edx,0x11a3a(%rip)        # ffffffff8041f148 <idt_entries+0x108>
  auto ih_addr = has_error_code
ffffffff8040d70e:	48 c7 c2 10 63 41 80 	mov    $0xffffffff80416310,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d715:	66 89 0d 2a 1a 01 00 	mov    %cx,0x11a2a(%rip)        # ffffffff8041f146 <idt_entries+0x106>
ffffffff8040d71c:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d71f:	66 89 15 2a 1a 01 00 	mov    %dx,0x11a2a(%rip)        # ffffffff8041f150 <idt_entries+0x110>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d726:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d72a:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d72e:	89 15 24 1a 01 00    	mov    %edx,0x11a24(%rip)        # ffffffff8041f158 <idt_entries+0x118>
  auto ih_addr = has_error_code
ffffffff8040d734:	48 c7 c2 50 1a 41 80 	mov    $0xffffffff80411a50,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d73b:	66 89 0d 14 1a 01 00 	mov    %cx,0x11a14(%rip)        # ffffffff8041f156 <idt_entries+0x116>
ffffffff8040d742:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d745:	66 89 15 14 1a 01 00 	mov    %dx,0x11a14(%rip)        # ffffffff8041f160 <idt_entries+0x120>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d74c:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d750:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.type_attr = type_attr;
ffffffff8040d754:	88 05 cb 19 01 00    	mov    %al,0x119cb(%rip)        # ffffffff8041f125 <idt_entries+0xe5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d75a:	66 89 35 d1 19 01 00 	mov    %si,0x119d1(%rip)        # ffffffff8041f132 <idt_entries+0xf2>
ffffffff8040d761:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d766:	88 05 c9 19 01 00    	mov    %al,0x119c9(%rip)        # ffffffff8041f135 <idt_entries+0xf5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d76c:	66 89 3d cf 19 01 00 	mov    %di,0x119cf(%rip)        # ffffffff8041f142 <idt_entries+0x102>
ffffffff8040d773:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.type_attr = type_attr;
ffffffff8040d778:	88 05 c7 19 01 00    	mov    %al,0x119c7(%rip)        # ffffffff8041f145 <idt_entries+0x105>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d77e:	66 44 89 05 cc 19 01 	mov    %r8w,0x119cc(%rip)        # ffffffff8041f152 <idt_entries+0x112>
ffffffff8040d785:	00 
ffffffff8040d786:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040d78c:	88 05 c3 19 01 00    	mov    %al,0x119c3(%rip)        # ffffffff8041f155 <idt_entries+0x115>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d792:	66 44 89 0d c8 19 01 	mov    %r9w,0x119c8(%rip)        # ffffffff8041f162 <idt_entries+0x122>
ffffffff8040d799:	00 
ffffffff8040d79a:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  entry.type_attr = type_attr;
ffffffff8040d7a0:	88 05 bf 19 01 00    	mov    %al,0x119bf(%rip)        # ffffffff8041f165 <idt_entries+0x125>
  entry.ist = 0;
ffffffff8040d7a6:	c6 05 77 19 01 00 00 	movb   $0x0,0x11977(%rip)        # ffffffff8041f124 <idt_entries+0xe4>
  entry.zero = 0;
ffffffff8040d7ad:	c7 05 75 19 01 00 00 	movl   $0x0,0x11975(%rip)        # ffffffff8041f12c <idt_entries+0xec>
ffffffff8040d7b4:	00 00 00 
  entry.ist = 0;
ffffffff8040d7b7:	c6 05 76 19 01 00 00 	movb   $0x0,0x11976(%rip)        # ffffffff8041f134 <idt_entries+0xf4>
  entry.zero = 0;
ffffffff8040d7be:	c7 05 74 19 01 00 00 	movl   $0x0,0x11974(%rip)        # ffffffff8041f13c <idt_entries+0xfc>
ffffffff8040d7c5:	00 00 00 
  entry.ist = 0;
ffffffff8040d7c8:	c6 05 75 19 01 00 00 	movb   $0x0,0x11975(%rip)        # ffffffff8041f144 <idt_entries+0x104>
  entry.zero = 0;
ffffffff8040d7cf:	c7 05 73 19 01 00 00 	movl   $0x0,0x11973(%rip)        # ffffffff8041f14c <idt_entries+0x10c>
ffffffff8040d7d6:	00 00 00 
  entry.ist = 0;
ffffffff8040d7d9:	c6 05 74 19 01 00 00 	movb   $0x0,0x11974(%rip)        # ffffffff8041f154 <idt_entries+0x114>
  entry.zero = 0;
ffffffff8040d7e0:	c7 05 72 19 01 00 00 	movl   $0x0,0x11972(%rip)        # ffffffff8041f15c <idt_entries+0x11c>
ffffffff8040d7e7:	00 00 00 
  entry.ist = 0;
ffffffff8040d7ea:	c6 05 73 19 01 00 00 	movb   $0x0,0x11973(%rip)        # ffffffff8041f164 <idt_entries+0x124>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d7f1:	66 89 0d 6e 19 01 00 	mov    %cx,0x1196e(%rip)        # ffffffff8041f166 <idt_entries+0x126>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d7f8:	89 15 6a 19 01 00    	mov    %edx,0x1196a(%rip)        # ffffffff8041f168 <idt_entries+0x128>
  auto ih_addr = has_error_code
ffffffff8040d7fe:	48 c7 c2 80 1a 41 80 	mov    $0xffffffff80411a80,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d805:	66 89 15 64 19 01 00 	mov    %dx,0x11964(%rip)        # ffffffff8041f170 <idt_entries+0x130>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d80c:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d80f:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffff8040d813:	89 15 5f 19 01 00    	mov    %edx,0x1195f(%rip)        # ffffffff8041f178 <idt_entries+0x138>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d819:	48 c1 e9 10          	shr    $0x10,%rcx
  auto ih_addr = has_error_code
ffffffff8040d81d:	48 c7 c2 b0 1a 41 80 	mov    $0xffffffff80411ab0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d824:	66 89 0d 4b 19 01 00 	mov    %cx,0x1194b(%rip)        # ffffffff8041f176 <idt_entries+0x136>
ffffffff8040d82b:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d82e:	66 89 15 4b 19 01 00 	mov    %dx,0x1194b(%rip)        # ffffffff8041f180 <idt_entries+0x140>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d835:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d839:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d83d:	66 89 0d 42 19 01 00 	mov    %cx,0x11942(%rip)        # ffffffff8041f186 <idt_entries+0x146>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d844:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d849:	89 15 39 19 01 00    	mov    %edx,0x11939(%rip)        # ffffffff8041f188 <idt_entries+0x148>
  auto ih_addr = has_error_code
ffffffff8040d84f:	48 c7 c2 e0 1a 41 80 	mov    $0xffffffff80411ae0,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d856:	66 89 15 33 19 01 00 	mov    %dx,0x11933(%rip)        # ffffffff8041f190 <idt_entries+0x150>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d85d:	66 89 0d 2e 19 01 00 	mov    %cx,0x1192e(%rip)        # ffffffff8041f192 <idt_entries+0x152>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d864:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d867:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffff8040d86b:	89 15 27 19 01 00    	mov    %edx,0x11927(%rip)        # ffffffff8041f198 <idt_entries+0x158>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d871:	48 c1 e9 10          	shr    $0x10,%rcx
  auto ih_addr = has_error_code
ffffffff8040d875:	48 c7 c2 10 1b 41 80 	mov    $0xffffffff80411b10,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d87c:	66 89 0d 13 19 01 00 	mov    %cx,0x11913(%rip)        # ffffffff8041f196 <idt_entries+0x156>
ffffffff8040d883:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d886:	66 89 15 13 19 01 00 	mov    %dx,0x11913(%rip)        # ffffffff8041f1a0 <idt_entries+0x160>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d88d:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d891:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d895:	89 15 0d 19 01 00    	mov    %edx,0x1190d(%rip)        # ffffffff8041f1a8 <idt_entries+0x168>
  auto ih_addr = has_error_code
ffffffff8040d89b:	48 c7 c2 40 1b 41 80 	mov    $0xffffffff80411b40,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d8a2:	66 89 0d fd 18 01 00 	mov    %cx,0x118fd(%rip)        # ffffffff8041f1a6 <idt_entries+0x166>
ffffffff8040d8a9:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d8ac:	66 89 15 fd 18 01 00 	mov    %dx,0x118fd(%rip)        # ffffffff8041f1b0 <idt_entries+0x170>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d8b3:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d8b7:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8bb:	66 44 89 15 af 18 01 	mov    %r10w,0x118af(%rip)        # ffffffff8041f172 <idt_entries+0x132>
ffffffff8040d8c2:	00 
ffffffff8040d8c3:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.type_attr = type_attr;
ffffffff8040d8c9:	88 05 a6 18 01 00    	mov    %al,0x118a6(%rip)        # ffffffff8041f175 <idt_entries+0x135>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8cf:	66 44 89 1d ab 18 01 	mov    %r11w,0x118ab(%rip)        # ffffffff8041f182 <idt_entries+0x142>
ffffffff8040d8d6:	00 
ffffffff8040d8d7:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.type_attr = type_attr;
ffffffff8040d8dd:	88 05 a2 18 01 00    	mov    %al,0x118a2(%rip)        # ffffffff8041f185 <idt_entries+0x145>
ffffffff8040d8e3:	88 05 ac 18 01 00    	mov    %al,0x118ac(%rip)        # ffffffff8041f195 <idt_entries+0x155>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8e9:	66 89 35 b2 18 01 00 	mov    %si,0x118b2(%rip)        # ffffffff8041f1a2 <idt_entries+0x162>
ffffffff8040d8f0:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d8f5:	88 05 aa 18 01 00    	mov    %al,0x118aa(%rip)        # ffffffff8041f1a5 <idt_entries+0x165>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8fb:	66 89 3d b0 18 01 00 	mov    %di,0x118b0(%rip)        # ffffffff8041f1b2 <idt_entries+0x172>
ffffffff8040d902:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.zero = 0;
ffffffff8040d907:	c7 05 5b 18 01 00 00 	movl   $0x0,0x1185b(%rip)        # ffffffff8041f16c <idt_entries+0x12c>
ffffffff8040d90e:	00 00 00 
  entry.ist = 0;
ffffffff8040d911:	c6 05 5c 18 01 00 00 	movb   $0x0,0x1185c(%rip)        # ffffffff8041f174 <idt_entries+0x134>
  entry.zero = 0;
ffffffff8040d918:	c7 05 5a 18 01 00 00 	movl   $0x0,0x1185a(%rip)        # ffffffff8041f17c <idt_entries+0x13c>
ffffffff8040d91f:	00 00 00 
  entry.ist = 0;
ffffffff8040d922:	c6 05 5b 18 01 00 00 	movb   $0x0,0x1185b(%rip)        # ffffffff8041f184 <idt_entries+0x144>
  entry.zero = 0;
ffffffff8040d929:	c7 05 59 18 01 00 00 	movl   $0x0,0x11859(%rip)        # ffffffff8041f18c <idt_entries+0x14c>
ffffffff8040d930:	00 00 00 
  entry.ist = 0;
ffffffff8040d933:	c6 05 5a 18 01 00 00 	movb   $0x0,0x1185a(%rip)        # ffffffff8041f194 <idt_entries+0x154>
  entry.zero = 0;
ffffffff8040d93a:	c7 05 58 18 01 00 00 	movl   $0x0,0x11858(%rip)        # ffffffff8041f19c <idt_entries+0x15c>
ffffffff8040d941:	00 00 00 
  entry.ist = 0;
ffffffff8040d944:	c6 05 59 18 01 00 00 	movb   $0x0,0x11859(%rip)        # ffffffff8041f1a4 <idt_entries+0x164>
  entry.zero = 0;
ffffffff8040d94b:	c7 05 57 18 01 00 00 	movl   $0x0,0x11857(%rip)        # ffffffff8041f1ac <idt_entries+0x16c>
ffffffff8040d952:	00 00 00 
  entry.ist = 0;
ffffffff8040d955:	c6 05 58 18 01 00 00 	movb   $0x0,0x11858(%rip)        # ffffffff8041f1b4 <idt_entries+0x174>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d95c:	89 15 56 18 01 00    	mov    %edx,0x11856(%rip)        # ffffffff8041f1b8 <idt_entries+0x178>
  auto ih_addr = has_error_code
ffffffff8040d962:	48 c7 c2 70 1b 41 80 	mov    $0xffffffff80411b70,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d969:	66 89 0d 46 18 01 00 	mov    %cx,0x11846(%rip)        # ffffffff8041f1b6 <idt_entries+0x176>
ffffffff8040d970:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d973:	66 89 15 46 18 01 00 	mov    %dx,0x11846(%rip)        # ffffffff8041f1c0 <idt_entries+0x180>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d97a:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d97e:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d982:	89 15 40 18 01 00    	mov    %edx,0x11840(%rip)        # ffffffff8041f1c8 <idt_entries+0x188>
  auto ih_addr = has_error_code
ffffffff8040d988:	48 c7 c2 a0 1b 41 80 	mov    $0xffffffff80411ba0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d98f:	66 89 0d 30 18 01 00 	mov    %cx,0x11830(%rip)        # ffffffff8041f1c6 <idt_entries+0x186>
ffffffff8040d996:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d999:	66 89 15 30 18 01 00 	mov    %dx,0x11830(%rip)        # ffffffff8041f1d0 <idt_entries+0x190>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9a0:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9a4:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9a8:	89 15 2a 18 01 00    	mov    %edx,0x1182a(%rip)        # ffffffff8041f1d8 <idt_entries+0x198>
  auto ih_addr = has_error_code
ffffffff8040d9ae:	48 c7 c2 d0 1b 41 80 	mov    $0xffffffff80411bd0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9b5:	66 89 0d 1a 18 01 00 	mov    %cx,0x1181a(%rip)        # ffffffff8041f1d6 <idt_entries+0x196>
ffffffff8040d9bc:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d9bf:	66 89 15 1a 18 01 00 	mov    %dx,0x1181a(%rip)        # ffffffff8041f1e0 <idt_entries+0x1a0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9c6:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9ca:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9ce:	89 15 14 18 01 00    	mov    %edx,0x11814(%rip)        # ffffffff8041f1e8 <idt_entries+0x1a8>
  auto ih_addr = has_error_code
ffffffff8040d9d4:	48 c7 c2 00 1c 41 80 	mov    $0xffffffff80411c00,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9db:	66 89 0d 04 18 01 00 	mov    %cx,0x11804(%rip)        # ffffffff8041f1e6 <idt_entries+0x1a6>
ffffffff8040d9e2:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d9e5:	66 89 15 04 18 01 00 	mov    %dx,0x11804(%rip)        # ffffffff8041f1f0 <idt_entries+0x1b0>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9ec:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9f0:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9f4:	66 89 0d fb 17 01 00 	mov    %cx,0x117fb(%rip)        # ffffffff8041f1f6 <idt_entries+0x1b6>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d9fb:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040da00:	89 15 f2 17 01 00    	mov    %edx,0x117f2(%rip)        # ffffffff8041f1f8 <idt_entries+0x1b8>
  auto ih_addr = has_error_code
ffffffff8040da06:	48 c7 c2 30 1c 41 80 	mov    $0xffffffff80411c30,%rdx
  entry.type_attr = type_attr;
ffffffff8040da0d:	88 05 a2 17 01 00    	mov    %al,0x117a2(%rip)        # ffffffff8041f1b5 <idt_entries+0x175>
  entry.selector = 0x8;  // Code segment.
ffffffff8040da13:	66 44 89 05 a7 17 01 	mov    %r8w,0x117a7(%rip)        # ffffffff8041f1c2 <idt_entries+0x182>
ffffffff8040da1a:	00 
ffffffff8040da1b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040da21:	88 05 9e 17 01 00    	mov    %al,0x1179e(%rip)        # ffffffff8041f1c5 <idt_entries+0x185>
ffffffff8040da27:	88 05 a8 17 01 00    	mov    %al,0x117a8(%rip)        # ffffffff8041f1d5 <idt_entries+0x195>
ffffffff8040da2d:	88 05 b2 17 01 00    	mov    %al,0x117b2(%rip)        # ffffffff8041f1e5 <idt_entries+0x1a5>
ffffffff8040da33:	88 05 bc 17 01 00    	mov    %al,0x117bc(%rip)        # ffffffff8041f1f5 <idt_entries+0x1b5>
  entry.zero = 0;
ffffffff8040da39:	c7 05 79 17 01 00 00 	movl   $0x0,0x11779(%rip)        # ffffffff8041f1bc <idt_entries+0x17c>
ffffffff8040da40:	00 00 00 
  entry.ist = 0;
ffffffff8040da43:	c6 05 7a 17 01 00 00 	movb   $0x0,0x1177a(%rip)        # ffffffff8041f1c4 <idt_entries+0x184>
  entry.zero = 0;
ffffffff8040da4a:	c7 05 78 17 01 00 00 	movl   $0x0,0x11778(%rip)        # ffffffff8041f1cc <idt_entries+0x18c>
ffffffff8040da51:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040da54:	66 44 89 0d 76 17 01 	mov    %r9w,0x11776(%rip)        # ffffffff8041f1d2 <idt_entries+0x192>
ffffffff8040da5b:	00 
  entry.ist = 0;
ffffffff8040da5c:	c6 05 71 17 01 00 00 	movb   $0x0,0x11771(%rip)        # ffffffff8041f1d4 <idt_entries+0x194>
  entry.zero = 0;
ffffffff8040da63:	c7 05 6f 17 01 00 00 	movl   $0x0,0x1176f(%rip)        # ffffffff8041f1dc <idt_entries+0x19c>
ffffffff8040da6a:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040da6d:	66 44 89 15 6d 17 01 	mov    %r10w,0x1176d(%rip)        # ffffffff8041f1e2 <idt_entries+0x1a2>
ffffffff8040da74:	00 
  entry.ist = 0;
ffffffff8040da75:	c6 05 68 17 01 00 00 	movb   $0x0,0x11768(%rip)        # ffffffff8041f1e4 <idt_entries+0x1a4>
  entry.zero = 0;
ffffffff8040da7c:	c7 05 66 17 01 00 00 	movl   $0x0,0x11766(%rip)        # ffffffff8041f1ec <idt_entries+0x1ac>
ffffffff8040da83:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040da86:	66 44 89 1d 64 17 01 	mov    %r11w,0x11764(%rip)        # ffffffff8041f1f2 <idt_entries+0x1b2>
ffffffff8040da8d:	00 
  entry.ist = 0;
ffffffff8040da8e:	c6 05 5f 17 01 00 00 	movb   $0x0,0x1175f(%rip)        # ffffffff8041f1f4 <idt_entries+0x1b4>
  entry.zero = 0;
ffffffff8040da95:	c7 05 5d 17 01 00 00 	movl   $0x0,0x1175d(%rip)        # ffffffff8041f1fc <idt_entries+0x1bc>
ffffffff8040da9c:	00 00 00 
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040da9f:	66 89 15 5a 17 01 00 	mov    %dx,0x1175a(%rip)        # ffffffff8041f200 <idt_entries+0x1c0>
  entry.selector = 0x8;  // Code segment.
ffffffff8040daa6:	66 89 0d 55 17 01 00 	mov    %cx,0x11755(%rip)        # ffffffff8041f202 <idt_entries+0x1c2>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040daad:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dab0:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dab4:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dab8:	89 15 4a 17 01 00    	mov    %edx,0x1174a(%rip)        # ffffffff8041f208 <idt_entries+0x1c8>
  auto ih_addr = has_error_code
ffffffff8040dabe:	48 c7 c2 60 1c 41 80 	mov    $0xffffffff80411c60,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dac5:	66 89 0d 3a 17 01 00 	mov    %cx,0x1173a(%rip)        # ffffffff8041f206 <idt_entries+0x1c6>
ffffffff8040dacc:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040dacf:	66 89 15 3a 17 01 00 	mov    %dx,0x1173a(%rip)        # ffffffff8041f210 <idt_entries+0x1d0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dad6:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dada:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dade:	89 15 34 17 01 00    	mov    %edx,0x11734(%rip)        # ffffffff8041f218 <idt_entries+0x1d8>
  auto ih_addr = has_error_code
ffffffff8040dae4:	48 c7 c2 90 1c 41 80 	mov    $0xffffffff80411c90,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040daeb:	66 89 0d 24 17 01 00 	mov    %cx,0x11724(%rip)        # ffffffff8041f216 <idt_entries+0x1d6>
ffffffff8040daf2:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040daf5:	66 89 15 24 17 01 00 	mov    %dx,0x11724(%rip)        # ffffffff8041f220 <idt_entries+0x1e0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dafc:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db00:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040db04:	89 15 1e 17 01 00    	mov    %edx,0x1171e(%rip)        # ffffffff8041f228 <idt_entries+0x1e8>
  auto ih_addr = has_error_code
ffffffff8040db0a:	48 c7 c2 c0 1c 41 80 	mov    $0xffffffff80411cc0,%rdx
  entry.type_attr = type_attr;
ffffffff8040db11:	88 05 ee 16 01 00    	mov    %al,0x116ee(%rip)        # ffffffff8041f205 <idt_entries+0x1c5>
ffffffff8040db17:	88 05 f8 16 01 00    	mov    %al,0x116f8(%rip)        # ffffffff8041f215 <idt_entries+0x1d5>
ffffffff8040db1d:	88 05 02 17 01 00    	mov    %al,0x11702(%rip)        # ffffffff8041f225 <idt_entries+0x1e5>
ffffffff8040db23:	88 05 0c 17 01 00    	mov    %al,0x1170c(%rip)        # ffffffff8041f235 <idt_entries+0x1f5>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db29:	48 89 d0             	mov    %rdx,%rax
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040db2c:	66 89 15 fd 16 01 00 	mov    %dx,0x116fd(%rip)        # ffffffff8041f230 <idt_entries+0x1f0>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db33:	48 c1 e8 10          	shr    $0x10,%rax
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040db37:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.ist = 0;
ffffffff8040db3b:	c6 05 c2 16 01 00 00 	movb   $0x0,0x116c2(%rip)        # ffffffff8041f204 <idt_entries+0x1c4>
  entry.zero = 0;
ffffffff8040db42:	c7 05 c0 16 01 00 00 	movl   $0x0,0x116c0(%rip)        # ffffffff8041f20c <idt_entries+0x1cc>
ffffffff8040db49:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040db4c:	66 89 35 bf 16 01 00 	mov    %si,0x116bf(%rip)        # ffffffff8041f212 <idt_entries+0x1d2>
  entry.ist = 0;
ffffffff8040db53:	c6 05 ba 16 01 00 00 	movb   $0x0,0x116ba(%rip)        # ffffffff8041f214 <idt_entries+0x1d4>
  entry.zero = 0;
ffffffff8040db5a:	c7 05 b8 16 01 00 00 	movl   $0x0,0x116b8(%rip)        # ffffffff8041f21c <idt_entries+0x1dc>
ffffffff8040db61:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040db64:	66 89 3d b7 16 01 00 	mov    %di,0x116b7(%rip)        # ffffffff8041f222 <idt_entries+0x1e2>
  entry.ist = 0;
ffffffff8040db6b:	c6 05 b2 16 01 00 00 	movb   $0x0,0x116b2(%rip)        # ffffffff8041f224 <idt_entries+0x1e4>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db72:	66 89 0d ad 16 01 00 	mov    %cx,0x116ad(%rip)        # ffffffff8041f226 <idt_entries+0x1e6>
  entry.zero = 0;
ffffffff8040db79:	c7 05 a9 16 01 00 00 	movl   $0x0,0x116a9(%rip)        # ffffffff8041f22c <idt_entries+0x1ec>
ffffffff8040db80:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040db83:	66 44 89 05 a7 16 01 	mov    %r8w,0x116a7(%rip)        # ffffffff8041f232 <idt_entries+0x1f2>
ffffffff8040db8a:	00 
  entry.ist = 0;
ffffffff8040db8b:	c6 05 a2 16 01 00 00 	movb   $0x0,0x116a2(%rip)        # ffffffff8041f234 <idt_entries+0x1f4>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db92:	66 89 05 9d 16 01 00 	mov    %ax,0x1169d(%rip)        # ffffffff8041f236 <idt_entries+0x1f6>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040db99:	89 15 99 16 01 00    	mov    %edx,0x11699(%rip)        # ffffffff8041f238 <idt_entries+0x1f8>
  entry.zero = 0;
ffffffff8040db9f:	c7 05 93 16 01 00 00 	movl   $0x0,0x11693(%rip)        # ffffffff8041f23c <idt_entries+0x1fc>
ffffffff8040dba6:	00 00 00 
  InstallIDTEntry<27>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<28>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<29>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<30>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<31>({INTERRUPT_GATE_32_BIT, 0, 1}, false);  // 0x19
}
ffffffff8040dba9:	c3                   	retq   
ffffffff8040dbaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8040dbb0 <_ZN6Kernel10IDTManager7LoadIDTEv>:

void IDTManager::LoadIDT() {
  // Load IDT to CPU.
  idt_ptr.limit = sizeof(IDTEntry) * 256 - 1;
  idt_ptr.base_addr = reinterpret_cast<uint64_t>(idt_entries);
ffffffff8040dbb0:	48 c7 05 67 14 01 00 	movq   $0xffffffff8041f040,0x11467(%rip)        # ffffffff8041f022 <idt_ptr+0x2>
ffffffff8040dbb7:	40 f0 41 80 
  idt_ptr.limit = sizeof(IDTEntry) * 256 - 1;
ffffffff8040dbbb:	b8 ff 0f 00 00       	mov    $0xfff,%eax
ffffffff8040dbc0:	66 89 05 59 14 01 00 	mov    %ax,0x11459(%rip)        # ffffffff8041f020 <idt_ptr>

  asm volatile("lidt %0" ::"m"(idt_ptr) :);
ffffffff8040dbc7:	0f 01 1d 52 14 01 00 	lidt   0x11452(%rip)        # ffffffff8041f020 <idt_ptr>
  asm volatile("sti");
ffffffff8040dbce:	fb                   	sti    
}
ffffffff8040dbcf:	c3                   	retq   

ffffffff8040dbd0 <_ZN6Kernel10IDTManager19InitializeIDTForIRQEv>:
void IDTManager::InitializeIDTForIRQ() {
ffffffff8040dbd0:	48 83 ec 08          	sub    $0x8,%rsp
  pic_timer.InstallPITimer();
ffffffff8040dbd4:	48 c7 c7 80 09 42 80 	mov    $0xffffffff80420980,%rdi
ffffffff8040dbdb:	e8 10 9f 00 00       	callq  ffffffff80417af0 <_ZNK6Kernel7PITimer14InstallPITimerEv>
  entry.selector = 0x8;  // Code segment.
ffffffff8040dbe0:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff8040dbe5:	be 08 00 00 00       	mov    $0x8,%esi
  auto ih_addr = reinterpret_cast<uint64_t>(handler);
ffffffff8040dbea:	48 c7 c0 f0 d1 40 80 	mov    $0xffffffff8040d1f0,%rax

  InstallIDTEntry(PITimerHandler, {INTERRUPT_GATE_32_BIT, 0, 1}, 0x20);
ffffffff8040dbf1:	0f b6 15 08 d4 00 00 	movzbl 0xd408(%rip),%edx        # ffffffff8041b000 <_init+0x3cc>
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040dbf8:	66 89 05 41 16 01 00 	mov    %ax,0x11641(%rip)        # ffffffff8041f240 <idt_entries+0x200>
  entry.selector = 0x8;  // Code segment.
ffffffff8040dbff:	66 89 0d 3c 16 01 00 	mov    %cx,0x1163c(%rip)        # ffffffff8041f242 <idt_entries+0x202>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc06:	48 89 c1             	mov    %rax,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dc09:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff8040dc0d:	89 05 35 16 01 00    	mov    %eax,0x11635(%rip)        # ffffffff8041f248 <idt_entries+0x208>
  auto ih_addr = reinterpret_cast<uint64_t>(handler);
ffffffff8040dc13:	48 c7 c0 20 d2 40 80 	mov    $0xffffffff8040d220,%rax
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc1a:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.type_attr = type_attr;
ffffffff8040dc1e:	88 15 21 16 01 00    	mov    %dl,0x11621(%rip)        # ffffffff8041f245 <idt_entries+0x205>
ffffffff8040dc24:	88 15 2b 16 01 00    	mov    %dl,0x1162b(%rip)        # ffffffff8041f255 <idt_entries+0x215>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc2a:	48 89 c2             	mov    %rax,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040dc2d:	66 89 05 1c 16 01 00 	mov    %ax,0x1161c(%rip)        # ffffffff8041f250 <idt_entries+0x210>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc34:	48 c1 ea 10          	shr    $0x10,%rdx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dc38:	48 c1 e8 20          	shr    $0x20,%rax
  entry.ist = 0;
ffffffff8040dc3c:	c6 05 01 16 01 00 00 	movb   $0x0,0x11601(%rip)        # ffffffff8041f244 <idt_entries+0x204>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc43:	66 89 0d fc 15 01 00 	mov    %cx,0x115fc(%rip)        # ffffffff8041f246 <idt_entries+0x206>
  entry.zero = 0;
ffffffff8040dc4a:	c7 05 f8 15 01 00 00 	movl   $0x0,0x115f8(%rip)        # ffffffff8041f24c <idt_entries+0x20c>
ffffffff8040dc51:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040dc54:	66 89 35 f7 15 01 00 	mov    %si,0x115f7(%rip)        # ffffffff8041f252 <idt_entries+0x212>
  entry.ist = 0;
ffffffff8040dc5b:	c6 05 f2 15 01 00 00 	movb   $0x0,0x115f2(%rip)        # ffffffff8041f254 <idt_entries+0x214>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc62:	66 89 15 ed 15 01 00 	mov    %dx,0x115ed(%rip)        # ffffffff8041f256 <idt_entries+0x216>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dc69:	89 05 e9 15 01 00    	mov    %eax,0x115e9(%rip)        # ffffffff8041f258 <idt_entries+0x218>
  entry.zero = 0;
ffffffff8040dc6f:	c7 05 e3 15 01 00 00 	movl   $0x0,0x115e3(%rip)        # ffffffff8041f25c <idt_entries+0x21c>
ffffffff8040dc76:	00 00 00 
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040dc79:	e4 21                	in     $0x21,%al
ffffffff8040dc7b:	89 c1                	mov    %eax,%ecx
ffffffff8040dc7d:	e4 a1                	in     $0xa1,%al
ffffffff8040dc7f:	89 c2                	mov    %eax,%edx
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040dc81:	b8 11 00 00 00       	mov    $0x11,%eax
ffffffff8040dc86:	e6 20                	out    %al,$0x20
ffffffff8040dc88:	e6 a0                	out    %al,$0xa0
ffffffff8040dc8a:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8040dc8f:	e6 21                	out    %al,$0x21
ffffffff8040dc91:	b8 28 00 00 00       	mov    $0x28,%eax
ffffffff8040dc96:	e6 a1                	out    %al,$0xa1
ffffffff8040dc98:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8040dc9d:	e6 21                	out    %al,$0x21
ffffffff8040dc9f:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff8040dca4:	e6 a1                	out    %al,$0xa1
ffffffff8040dca6:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8040dcab:	e6 21                	out    %al,$0x21
ffffffff8040dcad:	e6 a1                	out    %al,$0xa1
ffffffff8040dcaf:	89 c8                	mov    %ecx,%eax
ffffffff8040dcb1:	e6 21                	out    %al,$0x21
ffffffff8040dcb3:	89 d0                	mov    %edx,%eax
ffffffff8040dcb5:	e6 a1                	out    %al,$0xa1
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040dcb7:	e4 21                	in     $0x21,%al
  value = inb(port) & ~(1 << irq_line);
ffffffff8040dcb9:	83 e0 fe             	and    $0xfffffffe,%eax
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040dcbc:	e6 21                	out    %al,$0x21
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040dcbe:	e4 21                	in     $0x21,%al
ffffffff8040dcc0:	83 e0 fd             	and    $0xfffffffd,%eax
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040dcc3:	e6 21                	out    %al,$0x21
  IRQClearMask(0);
  IRQClearMask(1);

  // outb(PIC_MASTER_DATA, 0xFD);
  // outb(PIC_SLAVE_DATA, 0xFF);
}
ffffffff8040dcc5:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8040dcc9:	c3                   	retq   
ffffffff8040dcca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>:
void PrintCPUInterruptFrame(CPUInterruptHandlerArgs* args, size_t int_num) {
ffffffff8040dcd0:	41 57                	push   %r15
ffffffff8040dcd2:	41 56                	push   %r14
ffffffff8040dcd4:	41 55                	push   %r13
ffffffff8040dcd6:	41 54                	push   %r12
ffffffff8040dcd8:	55                   	push   %rbp
ffffffff8040dcd9:	53                   	push   %rbx
ffffffff8040dcda:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff8040dcde:	48 89 3c 24          	mov    %rdi,(%rsp)
ffffffff8040dce2:	48 c7 c7 00 b8 41 80 	mov    $0xffffffff8041b800,%rdi
ffffffff8040dce9:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff8040dcee:	e8 cd f4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040dcf3:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040dcf5:	48 85 c0             	test   %rax,%rax
ffffffff8040dcf8:	0f 84 0a 3b 00 00    	je     ffffffff80411808 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3b38>
ffffffff8040dcfe:	4c 8b 25 5b 03 01 00 	mov    0x1035b(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040dd05:	4c 8b 0d 5c 03 01 00 	mov    0x1035c(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040dd0c:	49 c7 c2 00 b8 41 80 	mov    $0xffffffff8041b800,%r10
ffffffff8040dd13:	4c 8b 05 5e 03 01 00 	mov    0x1035e(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040dd1a:	48 8b 35 4f 03 01 00 	mov    0x1034f(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040dd21:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040dd26:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040dd29:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040dd2d:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040dd31:	4c 01 ca             	add    %r9,%rdx
ffffffff8040dd34:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040dd3b:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040dd42:	80 
ffffffff8040dd43:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040dd48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040dd4f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040dd50:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040dd53:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040dd56:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040dd59:	48 0f 47 f8          	cmova  %rax,%rdi
    size_ -= min(n, size_);
  }

  constexpr bool empty() const { return size_ == 0; }

  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040dd5d:	48 39 f8             	cmp    %rdi,%rax
ffffffff8040dd60:	48 89 f9             	mov    %rdi,%rcx
ffffffff8040dd63:	48 0f 46 c8          	cmovbe %rax,%rcx
      noexcept {
    size_t i = pos;
    for (; i < min(size_, pos + count); i++) {
ffffffff8040dd67:	48 85 c9             	test   %rcx,%rcx
ffffffff8040dd6a:	0f 84 f0 23 00 00    	je     ffffffff80410160 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2490>
    size_t i = pos;
ffffffff8040dd70:	31 d2                	xor    %edx,%edx
ffffffff8040dd72:	eb 11                	jmp    ffffffff8040dd85 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xb5>
ffffffff8040dd74:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040dd78:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040dd7c:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040dd7f:	0f 84 db 23 00 00    	je     ffffffff80410160 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2490>
      if (str_[i] == c) {
ffffffff8040dd85:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040dd8a:	75 ec                	jne    ffffffff8040dd78 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xa8>
ffffffff8040dd8c:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040dd8f:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040dd92:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040dd95:	48 0f 46 c8          	cmovbe %rax,%rcx
    }
  }

  // Print the string at single line.
  void PrintStringLineAtCursor(string_view s, VGAColor color) {
    if (current_row_ == num_rows_) {
ffffffff8040dd99:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040dd9c:	0f 84 0e 23 00 00    	je     ffffffff804100b0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x23e0>
      ScrollTextBufferUp();
      current_row_--;
    }

    size_t i;
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040dda2:	4c 01 c1             	add    %r8,%rcx
ffffffff8040dda5:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040dda8:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040ddac:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040ddaf:	0f 83 9a 23 00 00    	jae    ffffffff8041014f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x247f>
ffffffff8040ddb5:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040ddb9:	4d 89 d5             	mov    %r10,%r13
ffffffff8040ddbc:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040ddc0:	4d 29 c5             	sub    %r8,%r13
ffffffff8040ddc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040ddc8:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040ddcf:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040ddd4:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040dddb:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040dddd:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040dde1:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040dde4:	75 e2                	jne    ffffffff8040ddc8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf8>
    }
    current_col_ = i;

    if (current_col_ == num_cols_) {
ffffffff8040dde6:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040dde9:	0f 84 81 22 00 00    	je     ffffffff80410070 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x23a0>
    current_col_ = i;
ffffffff8040ddef:	48 89 0d 82 02 01 00 	mov    %rcx,0x10282(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ddf6:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040ddfa:	0f 84 92 22 00 00    	je     ffffffff80410092 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x23c2>
ffffffff8040de00:	48 85 c9             	test   %rcx,%rcx
ffffffff8040de03:	74 0a                	je     ffffffff8040de0f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13f>
ffffffff8040de05:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040de09:	0f 86 81 23 00 00    	jbe    ffffffff80410190 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x24c0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040de0f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040de13:	49 89 c8             	mov    %rcx,%r8
ffffffff8040de16:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040de19:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040de1d:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040de20:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040de23:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040de27:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040de2a:	48 85 c0             	test   %rax,%rax
ffffffff8040de2d:	0f 85 1d ff ff ff    	jne    ffffffff8040dd50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x80>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040de33:	48 85 f6             	test   %rsi,%rsi
ffffffff8040de36:	74 5e                	je     ffffffff8040de96 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1c6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040de38:	48 8b 3d 29 02 01 00 	mov    0x10229(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040de3f:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040de46:	31 d2                	xor    %edx,%edx
ffffffff8040de48:	48 89 f8             	mov    %rdi,%rax
ffffffff8040de4b:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040de4f:	48 f7 d8             	neg    %rax
ffffffff8040de52:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040de59:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040de5a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040de5f:	90                   	nop
ffffffff8040de60:	4c 8d 0c 18          	lea    (%rax,%rbx,1),%r9
ffffffff8040de64:	48 85 ff             	test   %rdi,%rdi
ffffffff8040de67:	74 1e                	je     ffffffff8040de87 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1b7>
ffffffff8040de69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040de70:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040de77:	f4 ff 
ffffffff8040de79:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040de7d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040de82:	49 39 c1             	cmp    %rax,%r9
ffffffff8040de85:	75 e9                	jne    ffffffff8040de70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1a0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040de87:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040de8b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040de8e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040de91:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040de94:	75 ca                	jne    ffffffff8040de60 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x190>
    if (current_col_ != 0) {
ffffffff8040de96:	4d 85 c0             	test   %r8,%r8
ffffffff8040de99:	74 52                	je     ffffffff8040deed <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x21d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040de9b:	48 8b 0d c6 01 01 00 	mov    0x101c6(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040dea2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040dea5:	74 46                	je     ffffffff8040deed <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x21d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040dea7:	48 89 f2             	mov    %rsi,%rdx
ffffffff8040deaa:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040deae:	48 0f af d1          	imul   %rcx,%rdx
ffffffff8040deb2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040deb6:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040debd:	00 
ffffffff8040debe:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040dec5:	00 
ffffffff8040dec6:	48 f7 da             	neg    %rdx
ffffffff8040dec9:	48 01 c9             	add    %rcx,%rcx
ffffffff8040decc:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040ded3:	80 
ffffffff8040ded4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040ded8:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040dedf:	ff 
ffffffff8040dee0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040dee4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040dee8:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040deeb:	75 eb                	jne    ffffffff8040ded8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x208>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040deed:	48 c7 c7 26 b8 41 80 	mov    $0xffffffff8041b826,%rdi
ffffffff8040def4:	e8 c7 f2 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040def9:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040defb:	48 85 c0             	test   %rax,%rax
ffffffff8040defe:	0f 84 1c 39 00 00    	je     ffffffff80411820 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3b50>
ffffffff8040df04:	4c 8b 25 55 01 01 00 	mov    0x10155(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040df0b:	4c 8b 0d 56 01 01 00 	mov    0x10156(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040df12:	49 c7 c2 26 b8 41 80 	mov    $0xffffffff8041b826,%r10
ffffffff8040df19:	4c 8b 05 58 01 01 00 	mov    0x10158(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040df20:	48 8b 35 49 01 01 00 	mov    0x10149(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040df27:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040df2c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040df2f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040df33:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040df37:	4c 01 ca             	add    %r9,%rdx
ffffffff8040df3a:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040df41:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040df48:	80 
ffffffff8040df49:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040df4e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040df50:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040df53:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040df56:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040df59:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040df5d:	48 39 f8             	cmp    %rdi,%rax
ffffffff8040df60:	48 89 f9             	mov    %rdi,%rcx
ffffffff8040df63:	48 0f 46 c8          	cmovbe %rax,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040df67:	48 85 c9             	test   %rcx,%rcx
ffffffff8040df6a:	0f 84 d0 20 00 00    	je     ffffffff80410040 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2370>
    size_t i = pos;
ffffffff8040df70:	31 d2                	xor    %edx,%edx
ffffffff8040df72:	eb 11                	jmp    ffffffff8040df85 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2b5>
ffffffff8040df74:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040df78:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040df7c:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040df7f:	0f 84 bb 20 00 00    	je     ffffffff80410040 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2370>
      if (str_[i] == c) {
ffffffff8040df85:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040df8a:	75 ec                	jne    ffffffff8040df78 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2a8>
ffffffff8040df8c:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040df8f:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040df92:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040df95:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040df99:	49 39 f4             	cmp    %rsi,%r12
ffffffff8040df9c:	0f 84 ee 1f 00 00    	je     ffffffff8040ff90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x22c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040dfa2:	4c 01 c1             	add    %r8,%rcx
ffffffff8040dfa5:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040dfa8:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040dfac:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040dfaf:	0f 83 79 20 00 00    	jae    ffffffff8041002e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x235e>
ffffffff8040dfb5:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040dfb9:	4d 89 d5             	mov    %r10,%r13
ffffffff8040dfbc:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040dfc0:	4d 29 c5             	sub    %r8,%r13
ffffffff8040dfc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040dfc8:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040dfcf:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040dfd4:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040dfdb:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040dfdd:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040dfe1:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040dfe4:	75 e2                	jne    ffffffff8040dfc8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f8>
    if (current_col_ == num_cols_) {
ffffffff8040dfe6:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040dfe9:	0f 84 61 1f 00 00    	je     ffffffff8040ff50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2280>
    current_col_ = i;
ffffffff8040dfef:	48 89 0d 82 00 01 00 	mov    %rcx,0x10082(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040dff6:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040dffa:	0f 84 72 1f 00 00    	je     ffffffff8040ff72 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x22a2>
ffffffff8040e000:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e003:	74 0a                	je     ffffffff8040e00f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x33f>
ffffffff8040e005:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040e009:	0f 86 e1 21 00 00    	jbe    ffffffff804101f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2520>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e00f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e013:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e016:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040e019:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040e01d:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040e020:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e023:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040e027:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040e02a:	48 85 c0             	test   %rax,%rax
ffffffff8040e02d:	0f 85 1d ff ff ff    	jne    ffffffff8040df50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x280>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e033:	48 85 f6             	test   %rsi,%rsi
ffffffff8040e036:	74 5e                	je     ffffffff8040e096 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3c6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e038:	48 8b 3d 29 00 01 00 	mov    0x10029(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e03f:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e046:	31 d2                	xor    %edx,%edx
ffffffff8040e048:	48 89 f8             	mov    %rdi,%rax
ffffffff8040e04b:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040e04f:	48 f7 d8             	neg    %rax
ffffffff8040e052:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040e059:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e05a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040e05f:	90                   	nop
ffffffff8040e060:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040e064:	48 85 ff             	test   %rdi,%rdi
ffffffff8040e067:	74 1e                	je     ffffffff8040e087 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff8040e069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e070:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040e077:	f4 ff 
ffffffff8040e079:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e07d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e082:	4c 39 c8             	cmp    %r9,%rax
ffffffff8040e085:	75 e9                	jne    ffffffff8040e070 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e087:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e08b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040e08e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040e091:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040e094:	75 ca                	jne    ffffffff8040e060 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x390>
    if (current_col_ != 0) {
ffffffff8040e096:	4d 85 c0             	test   %r8,%r8
ffffffff8040e099:	74 52                	je     ffffffff8040e0ed <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x41d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e09b:	48 8b 0d c6 ff 00 00 	mov    0xffc6(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e0a2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e0a5:	74 46                	je     ffffffff8040e0ed <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x41d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e0a7:	48 89 f2             	mov    %rsi,%rdx
ffffffff8040e0aa:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040e0ae:	48 0f af d1          	imul   %rcx,%rdx
ffffffff8040e0b2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040e0b6:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040e0bd:	00 
ffffffff8040e0be:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040e0c5:	00 
ffffffff8040e0c6:	48 f7 da             	neg    %rdx
ffffffff8040e0c9:	48 01 c9             	add    %rcx,%rcx
ffffffff8040e0cc:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040e0d3:	80 
ffffffff8040e0d4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040e0d8:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040e0df:	ff 
ffffffff8040e0e0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e0e4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e0e8:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040e0eb:	75 eb                	jne    ffffffff8040e0d8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x408>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e0ed:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
unsigned int strlen(const char* s);

template <typename Int>
void ntoa(char* str, size_t size, Int num, size_t base = 10) {
  char buffer[NTOA_BUFFER_SIZE];
  size_t num_len = 0;
ffffffff8040e0f2:	31 d2                	xor    %edx,%edx
ffffffff8040e0f4:	0f 1f 40 00          	nopl   0x0(%rax)
  }

  for (size_t i = 0; i < size; i++) {
    num_len++;

    buffer[i] = num % base;
ffffffff8040e0f8:	48 89 c1             	mov    %rax,%rcx
    num_len++;
ffffffff8040e0fb:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff8040e0ff:	83 e1 0f             	and    $0xf,%ecx
ffffffff8040e102:	88 4c 14 3b          	mov    %cl,0x3b(%rsp,%rdx,1)
ffffffff8040e106:	48 89 c1             	mov    %rax,%rcx
    num /= base;
ffffffff8040e109:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040e10d:	48 83 f9 0f          	cmp    $0xf,%rcx
ffffffff8040e111:	76 06                	jbe    ffffffff8040e119 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x449>
  for (size_t i = 0; i < size; i++) {
ffffffff8040e113:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8040e117:	75 df                	jne    ffffffff8040e0f8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x428>
      break;
    }
  }

  if (num != 0) {
ffffffff8040e119:	48 85 c0             	test   %rax,%rax
ffffffff8040e11c:	0f 85 ae 34 00 00    	jne    ffffffff804115d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3900>
    str[offset++] = '-';
  }
  if (base == 8) {
    str[offset++] = '0';
  } else if (base == 16) {
    str[offset++] = '0';
ffffffff8040e122:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040e128:	48 8d 7c 24 3c       	lea    0x3c(%rsp),%rdi
ffffffff8040e12d:	48 8d 74 14 3b       	lea    0x3b(%rsp,%rdx,1),%rsi
ffffffff8040e132:	66 44 89 64 24 28    	mov    %r12w,0x28(%rsp)
ffffffff8040e138:	48 8d 4c 24 2a       	lea    0x2a(%rsp),%rcx
ffffffff8040e13d:	eb 17                	jmp    ffffffff8040e156 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x486>
ffffffff8040e13f:	90                   	nop
    str[offset++] = 'b';
  }

  for (size_t i = 0; i < num_len; i++) {
    if (buffer[num_len - i - 1] >= 10) {
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040e140:	83 c0 37             	add    $0x37,%eax
ffffffff8040e143:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040e147:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040e14a:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e14e:	48 39 fe             	cmp    %rdi,%rsi
ffffffff8040e151:	74 1d                	je     ffffffff8040e170 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x4a0>
ffffffff8040e153:	48 89 c6             	mov    %rax,%rsi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040e156:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8040e159:	3c 09                	cmp    $0x9,%al
ffffffff8040e15b:	7f e3                	jg     ffffffff8040e140 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x470>
    } else {
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040e15d:	83 c0 30             	add    $0x30,%eax
ffffffff8040e160:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040e164:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040e167:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e16b:	48 39 fe             	cmp    %rdi,%rsi
ffffffff8040e16e:	75 e3                	jne    ffffffff8040e153 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x483>
    }
  }
  str[num_len + offset] = 0;
ffffffff8040e170:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e175:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff8040e17a:	e8 41 f0 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040e17f:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040e181:	48 85 c0             	test   %rax,%rax
ffffffff8040e184:	0f 84 66 36 00 00    	je     ffffffff804117f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3b20>
ffffffff8040e18a:	4c 8b 25 cf fe 00 00 	mov    0xfecf(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e191:	4c 8b 0d d0 fe 00 00 	mov    0xfed0(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e198:	4c 8d 54 24 28       	lea    0x28(%rsp),%r10
ffffffff8040e19d:	4c 8b 05 d4 fe 00 00 	mov    0xfed4(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040e1a4:	48 8b 35 c5 fe 00 00 	mov    0xfec5(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040e1ab:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040e1b0:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e1b3:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e1b7:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e1bb:	4c 01 ca             	add    %r9,%rdx
ffffffff8040e1be:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040e1c5:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040e1cc:	80 
ffffffff8040e1cd:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040e1d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e1d8:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040e1db:	48 89 c1             	mov    %rax,%rcx
ffffffff8040e1de:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040e1e1:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e1e4:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e1e8:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e1eb:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e1ef:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e1f2:	0f 84 48 21 00 00    	je     ffffffff80410340 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2670>
    size_t i = pos;
ffffffff8040e1f8:	31 d2                	xor    %edx,%edx
ffffffff8040e1fa:	eb 11                	jmp    ffffffff8040e20d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x53d>
ffffffff8040e1fc:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e200:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e204:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040e207:	0f 84 33 21 00 00    	je     ffffffff80410340 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2670>
      if (str_[i] == c) {
ffffffff8040e20d:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040e212:	75 ec                	jne    ffffffff8040e200 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x530>
ffffffff8040e214:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e217:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040e21a:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e21d:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040e221:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040e224:	0f 84 66 20 00 00    	je     ffffffff80410290 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x25c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e22a:	4c 01 c1             	add    %r8,%rcx
ffffffff8040e22d:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040e230:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040e234:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040e237:	0f 83 f1 20 00 00    	jae    ffffffff8041032e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x265e>
ffffffff8040e23d:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040e241:	4d 89 d5             	mov    %r10,%r13
ffffffff8040e244:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040e248:	4d 29 c5             	sub    %r8,%r13
ffffffff8040e24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e250:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040e257:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040e25c:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040e263:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e265:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040e269:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040e26c:	75 e2                	jne    ffffffff8040e250 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x580>
    if (current_col_ == num_cols_) {
ffffffff8040e26e:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040e271:	0f 84 d9 1f 00 00    	je     ffffffff80410250 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2580>
    current_col_ = i;
ffffffff8040e277:	48 89 0d fa fd 00 00 	mov    %rcx,0xfdfa(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040e27e:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040e282:	0f 84 ea 1f 00 00    	je     ffffffff80410272 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x25a2>
ffffffff8040e288:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e28b:	74 0a                	je     ffffffff8040e297 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x5c7>
ffffffff8040e28d:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040e291:	0f 86 d9 20 00 00    	jbe    ffffffff80410370 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x26a0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e297:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e29b:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e29e:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040e2a1:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040e2a5:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040e2a8:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e2ab:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040e2af:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040e2b2:	48 85 c0             	test   %rax,%rax
ffffffff8040e2b5:	0f 85 1d ff ff ff    	jne    ffffffff8040e1d8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x508>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e2bb:	48 85 f6             	test   %rsi,%rsi
ffffffff8040e2be:	74 66                	je     ffffffff8040e326 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x656>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e2c0:	48 8b 3d a1 fd 00 00 	mov    0xfda1(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e2c7:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e2ce:	31 d2                	xor    %edx,%edx
ffffffff8040e2d0:	48 89 f8             	mov    %rdi,%rax
ffffffff8040e2d3:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040e2d7:	48 f7 d8             	neg    %rax
ffffffff8040e2da:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040e2e1:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e2e2:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040e2e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040e2ee:	00 00 
ffffffff8040e2f0:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040e2f4:	48 85 ff             	test   %rdi,%rdi
ffffffff8040e2f7:	74 1e                	je     ffffffff8040e317 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x647>
ffffffff8040e2f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e300:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040e307:	f4 ff 
ffffffff8040e309:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e30d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e312:	4c 39 c8             	cmp    %r9,%rax
ffffffff8040e315:	75 e9                	jne    ffffffff8040e300 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x630>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e317:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e31b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040e31e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040e321:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040e324:	75 ca                	jne    ffffffff8040e2f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x620>
    if (current_col_ != 0) {
ffffffff8040e326:	4d 85 c0             	test   %r8,%r8
ffffffff8040e329:	74 52                	je     ffffffff8040e37d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x6ad>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e32b:	48 8b 0d 36 fd 00 00 	mov    0xfd36(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e332:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e335:	74 46                	je     ffffffff8040e37d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x6ad>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e337:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040e33a:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040e33e:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040e342:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040e346:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040e34d:	00 
ffffffff8040e34e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040e355:	00 
ffffffff8040e356:	48 f7 da             	neg    %rdx
ffffffff8040e359:	48 01 c9             	add    %rcx,%rcx
ffffffff8040e35c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040e363:	80 
ffffffff8040e364:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040e368:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040e36f:	ff 
ffffffff8040e370:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e374:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e378:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040e37b:	75 eb                	jne    ffffffff8040e368 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x698>
  if (int_num < sizeof(kCPUExceptionErrorMessages) /
ffffffff8040e37d:	48 83 7c 24 08 14    	cmpq   $0x14,0x8(%rsp)
ffffffff8040e383:	0f 86 c7 32 00 00    	jbe    ffffffff80411650 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3980>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e389:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040e390:	e8 2b ee ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(s);
ffffffff8040e395:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040e39a:	48 c7 c6 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rsi
ffffffff8040e3a1:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040e3a8:	89 c2                	mov    %eax,%edx
ffffffff8040e3aa:	e8 01 c2 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff8040e3af:	48 c7 c7 54 b8 41 80 	mov    $0xffffffff8041b854,%rdi
ffffffff8040e3b6:	e8 05 ee ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040e3bb:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040e3c0:	48 c7 c6 54 b8 41 80 	mov    $0xffffffff8041b854,%rsi
ffffffff8040e3c7:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040e3ce:	89 c2                	mov    %eax,%edx
ffffffff8040e3d0:	e8 db c1 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
  vga_output << " cs : " << args->cs << "\n";
ffffffff8040e3d5:	48 8b 04 24          	mov    (%rsp),%rax
  size_t num_len = 0;
ffffffff8040e3d9:	31 d2                	xor    %edx,%edx
ffffffff8040e3db:	48 8b 40 08          	mov    0x8(%rax),%rax
void ntoa(char* str, size_t size, Int num, size_t base = 10) {
ffffffff8040e3df:	90                   	nop
    buffer[i] = num % base;
ffffffff8040e3e0:	48 89 c1             	mov    %rax,%rcx
    num_len++;
ffffffff8040e3e3:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff8040e3e7:	83 e1 0f             	and    $0xf,%ecx
ffffffff8040e3ea:	88 4c 14 3b          	mov    %cl,0x3b(%rsp,%rdx,1)
ffffffff8040e3ee:	48 89 c1             	mov    %rax,%rcx
    num /= base;
ffffffff8040e3f1:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040e3f5:	48 83 f9 0f          	cmp    $0xf,%rcx
ffffffff8040e3f9:	76 06                	jbe    ffffffff8040e401 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x731>
  for (size_t i = 0; i < size; i++) {
ffffffff8040e3fb:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8040e3ff:	75 df                	jne    ffffffff8040e3e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x710>
  if (num != 0) {
ffffffff8040e401:	48 85 c0             	test   %rax,%rax
ffffffff8040e404:	0f 85 26 32 00 00    	jne    ffffffff80411630 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3960>
    str[offset++] = '0';
ffffffff8040e40a:	41 bf 30 78 00 00    	mov    $0x7830,%r15d
ffffffff8040e410:	48 8d 7c 24 3c       	lea    0x3c(%rsp),%rdi
ffffffff8040e415:	48 8d 74 14 3b       	lea    0x3b(%rsp,%rdx,1),%rsi
ffffffff8040e41a:	66 44 89 7c 24 28    	mov    %r15w,0x28(%rsp)
ffffffff8040e420:	48 8d 4c 24 2a       	lea    0x2a(%rsp),%rcx
ffffffff8040e425:	eb 1f                	jmp    ffffffff8040e446 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x776>
ffffffff8040e427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040e42e:	00 00 
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040e430:	83 c0 37             	add    $0x37,%eax
ffffffff8040e433:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040e437:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040e43a:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e43e:	48 39 fe             	cmp    %rdi,%rsi
ffffffff8040e441:	74 1d                	je     ffffffff8040e460 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x790>
ffffffff8040e443:	48 89 c6             	mov    %rax,%rsi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040e446:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8040e449:	3c 09                	cmp    $0x9,%al
ffffffff8040e44b:	7f e3                	jg     ffffffff8040e430 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x760>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040e44d:	83 c0 30             	add    $0x30,%eax
ffffffff8040e450:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040e454:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040e457:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e45b:	48 39 fe             	cmp    %rdi,%rsi
ffffffff8040e45e:	75 e3                	jne    ffffffff8040e443 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x773>
  str[num_len + offset] = 0;
ffffffff8040e460:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
ffffffff8040e465:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff8040e46a:	e8 51 ed ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040e46f:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040e471:	48 85 c0             	test   %rax,%rax
ffffffff8040e474:	0f 84 16 33 00 00    	je     ffffffff80411790 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3ac0>
ffffffff8040e47a:	4c 8b 25 df fb 00 00 	mov    0xfbdf(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e481:	4c 8b 0d e0 fb 00 00 	mov    0xfbe0(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e488:	4c 8d 54 24 28       	lea    0x28(%rsp),%r10
ffffffff8040e48d:	4c 8b 05 e4 fb 00 00 	mov    0xfbe4(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040e494:	48 8b 35 d5 fb 00 00 	mov    0xfbd5(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040e49b:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040e4a0:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e4a3:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e4a7:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e4ab:	4c 01 ca             	add    %r9,%rdx
ffffffff8040e4ae:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040e4b5:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040e4bc:	80 
ffffffff8040e4bd:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040e4c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e4c8:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040e4cb:	48 89 c1             	mov    %rax,%rcx
ffffffff8040e4ce:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040e4d1:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e4d4:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e4d8:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e4db:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e4df:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e4e2:	0f 84 f8 20 00 00    	je     ffffffff804105e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2910>
    size_t i = pos;
ffffffff8040e4e8:	31 d2                	xor    %edx,%edx
ffffffff8040e4ea:	eb 11                	jmp    ffffffff8040e4fd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x82d>
ffffffff8040e4ec:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e4f0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e4f4:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8040e4f7:	0f 84 e3 20 00 00    	je     ffffffff804105e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2910>
      if (str_[i] == c) {
ffffffff8040e4fd:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040e502:	75 ec                	jne    ffffffff8040e4f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff8040e504:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e507:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040e50a:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e50d:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040e511:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040e514:	0f 84 16 20 00 00    	je     ffffffff80410530 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2860>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e51a:	4c 01 c1             	add    %r8,%rcx
ffffffff8040e51d:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040e520:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040e524:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040e527:	0f 83 a2 20 00 00    	jae    ffffffff804105cf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x28ff>
ffffffff8040e52d:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040e531:	4d 89 d5             	mov    %r10,%r13
ffffffff8040e534:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040e538:	4d 29 c5             	sub    %r8,%r13
ffffffff8040e53b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e540:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040e547:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040e54c:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040e553:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e555:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040e559:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040e55c:	75 e2                	jne    ffffffff8040e540 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x870>
    if (current_col_ == num_cols_) {
ffffffff8040e55e:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040e561:	0f 84 89 1f 00 00    	je     ffffffff804104f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2820>
    current_col_ = i;
ffffffff8040e567:	48 89 0d 0a fb 00 00 	mov    %rcx,0xfb0a(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040e56e:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040e572:	0f 84 9a 1f 00 00    	je     ffffffff80410512 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2842>
ffffffff8040e578:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e57b:	74 0a                	je     ffffffff8040e587 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x8b7>
ffffffff8040e57d:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040e581:	0f 86 89 20 00 00    	jbe    ffffffff80410610 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2940>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e587:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e58b:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e58e:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040e591:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040e595:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040e598:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e59b:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040e59f:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040e5a2:	48 85 c0             	test   %rax,%rax
ffffffff8040e5a5:	0f 85 1d ff ff ff    	jne    ffffffff8040e4c8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x7f8>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e5ab:	48 85 f6             	test   %rsi,%rsi
ffffffff8040e5ae:	74 66                	je     ffffffff8040e616 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x946>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e5b0:	48 8b 3d b1 fa 00 00 	mov    0xfab1(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e5b7:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e5be:	31 d2                	xor    %edx,%edx
ffffffff8040e5c0:	48 89 f8             	mov    %rdi,%rax
ffffffff8040e5c3:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040e5c7:	48 f7 d8             	neg    %rax
ffffffff8040e5ca:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040e5d1:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e5d2:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040e5d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040e5de:	00 00 
ffffffff8040e5e0:	4c 8d 0c 18          	lea    (%rax,%rbx,1),%r9
ffffffff8040e5e4:	48 85 ff             	test   %rdi,%rdi
ffffffff8040e5e7:	74 1e                	je     ffffffff8040e607 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x937>
ffffffff8040e5e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e5f0:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040e5f7:	f4 ff 
ffffffff8040e5f9:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e5fd:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e602:	4c 39 c8             	cmp    %r9,%rax
ffffffff8040e605:	75 e9                	jne    ffffffff8040e5f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e607:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e60b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040e60e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040e611:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040e614:	75 ca                	jne    ffffffff8040e5e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x910>
    if (current_col_ != 0) {
ffffffff8040e616:	4d 85 c0             	test   %r8,%r8
ffffffff8040e619:	74 52                	je     ffffffff8040e66d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x99d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e61b:	48 8b 0d 46 fa 00 00 	mov    0xfa46(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e622:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e625:	74 46                	je     ffffffff8040e66d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x99d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e627:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040e62a:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040e62e:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040e632:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040e636:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040e63d:	00 
ffffffff8040e63e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040e645:	00 
ffffffff8040e646:	48 f7 da             	neg    %rdx
ffffffff8040e649:	48 01 c9             	add    %rcx,%rcx
ffffffff8040e64c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040e653:	80 
ffffffff8040e654:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040e658:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040e65f:	ff 
ffffffff8040e660:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e664:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e668:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040e66b:	75 eb                	jne    ffffffff8040e658 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x988>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e66d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040e674:	e8 47 eb ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(s);
ffffffff8040e679:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040e67e:	48 c7 c6 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rsi
ffffffff8040e685:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040e68c:	89 c2                	mov    %eax,%edx
ffffffff8040e68e:	e8 1d bf 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff8040e693:	48 c7 c7 3a b8 41 80 	mov    $0xffffffff8041b83a,%rdi
ffffffff8040e69a:	e8 21 eb ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040e69f:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040e6a1:	48 85 c0             	test   %rax,%rax
ffffffff8040e6a4:	0f 84 26 30 00 00    	je     ffffffff804116d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a00>
ffffffff8040e6aa:	4c 8b 25 af f9 00 00 	mov    0xf9af(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e6b1:	4c 8b 0d b0 f9 00 00 	mov    0xf9b0(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e6b8:	49 c7 c2 3a b8 41 80 	mov    $0xffffffff8041b83a,%r10
ffffffff8040e6bf:	4c 8b 05 b2 f9 00 00 	mov    0xf9b2(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040e6c6:	48 8b 35 a3 f9 00 00 	mov    0xf9a3(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040e6cd:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040e6d2:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e6d5:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e6d9:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e6dd:	4c 01 ca             	add    %r9,%rdx
ffffffff8040e6e0:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040e6e7:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040e6ee:	80 
ffffffff8040e6ef:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040e6f4:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e6f8:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040e6fb:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040e6fe:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e701:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e705:	48 39 f8             	cmp    %rdi,%rax
ffffffff8040e708:	48 89 f9             	mov    %rdi,%rcx
ffffffff8040e70b:	48 0f 46 c8          	cmovbe %rax,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e70f:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e712:	0f 84 a8 1d 00 00    	je     ffffffff804104c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x27f0>
    size_t i = pos;
ffffffff8040e718:	31 d2                	xor    %edx,%edx
ffffffff8040e71a:	eb 11                	jmp    ffffffff8040e72d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xa5d>
ffffffff8040e71c:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e720:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e724:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040e727:	0f 84 93 1d 00 00    	je     ffffffff804104c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x27f0>
      if (str_[i] == c) {
ffffffff8040e72d:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040e732:	75 ec                	jne    ffffffff8040e720 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xa50>
ffffffff8040e734:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e737:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040e73a:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e73d:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040e741:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040e744:	0f 84 c6 1c 00 00    	je     ffffffff80410410 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2740>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e74a:	4c 01 c1             	add    %r8,%rcx
ffffffff8040e74d:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040e750:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040e754:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040e757:	0f 86 51 1d 00 00    	jbe    ffffffff804104ae <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x27de>
ffffffff8040e75d:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040e761:	4d 89 d5             	mov    %r10,%r13
ffffffff8040e764:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040e768:	4d 29 c5             	sub    %r8,%r13
ffffffff8040e76b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e770:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040e777:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040e77c:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040e783:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e785:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040e789:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040e78c:	75 e2                	jne    ffffffff8040e770 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xaa0>
    if (current_col_ == num_cols_) {
ffffffff8040e78e:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040e791:	0f 84 39 1c 00 00    	je     ffffffff804103d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2700>
    current_col_ = i;
ffffffff8040e797:	48 89 0d da f8 00 00 	mov    %rcx,0xf8da(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040e79e:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040e7a2:	0f 84 4a 1c 00 00    	je     ffffffff804103f2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2722>
ffffffff8040e7a8:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e7ab:	74 0a                	je     ffffffff8040e7b7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xae7>
ffffffff8040e7ad:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040e7b1:	0f 86 b9 1e 00 00    	jbe    ffffffff80410670 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x29a0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e7b7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e7bb:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e7be:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040e7c1:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040e7c5:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040e7c8:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e7cb:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040e7cf:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040e7d2:	48 85 c0             	test   %rax,%rax
ffffffff8040e7d5:	0f 85 1d ff ff ff    	jne    ffffffff8040e6f8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xa28>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e7db:	48 85 f6             	test   %rsi,%rsi
ffffffff8040e7de:	74 66                	je     ffffffff8040e846 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xb76>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e7e0:	48 8b 3d 81 f8 00 00 	mov    0xf881(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e7e7:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e7ee:	31 d2                	xor    %edx,%edx
ffffffff8040e7f0:	48 89 f8             	mov    %rdi,%rax
ffffffff8040e7f3:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040e7f7:	48 f7 d8             	neg    %rax
ffffffff8040e7fa:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040e801:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e802:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040e807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040e80e:	00 00 
ffffffff8040e810:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040e814:	48 85 ff             	test   %rdi,%rdi
ffffffff8040e817:	74 1e                	je     ffffffff8040e837 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xb67>
ffffffff8040e819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e820:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040e827:	f4 ff 
ffffffff8040e829:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e82d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e832:	4c 39 c8             	cmp    %r9,%rax
ffffffff8040e835:	75 e9                	jne    ffffffff8040e820 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xb50>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e837:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e83b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040e83e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040e841:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040e844:	75 ca                	jne    ffffffff8040e810 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xb40>
    if (current_col_ != 0) {
ffffffff8040e846:	4d 85 c0             	test   %r8,%r8
ffffffff8040e849:	74 52                	je     ffffffff8040e89d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xbcd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e84b:	48 8b 0d 16 f8 00 00 	mov    0xf816(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e852:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e855:	74 46                	je     ffffffff8040e89d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xbcd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e857:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040e85a:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040e85e:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040e862:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040e866:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040e86d:	00 
ffffffff8040e86e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040e875:	00 
ffffffff8040e876:	48 f7 da             	neg    %rdx
ffffffff8040e879:	48 01 c9             	add    %rcx,%rcx
ffffffff8040e87c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040e883:	80 
ffffffff8040e884:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040e888:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040e88f:	ff 
ffffffff8040e890:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e894:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e898:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040e89b:	75 eb                	jne    ffffffff8040e888 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xbb8>
  vga_output << " rip : " << args->rip << "\n";
ffffffff8040e89d:	48 8b 04 24          	mov    (%rsp),%rax
  size_t num_len = 0;
ffffffff8040e8a1:	31 d2                	xor    %edx,%edx
ffffffff8040e8a3:	48 8b 00             	mov    (%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040e8a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040e8ad:	00 00 00 
    buffer[i] = num % base;
ffffffff8040e8b0:	48 89 c1             	mov    %rax,%rcx
    num_len++;
ffffffff8040e8b3:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff8040e8b7:	83 e1 0f             	and    $0xf,%ecx
ffffffff8040e8ba:	88 4c 14 3b          	mov    %cl,0x3b(%rsp,%rdx,1)
ffffffff8040e8be:	48 89 c1             	mov    %rax,%rcx
    num /= base;
ffffffff8040e8c1:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040e8c5:	48 83 f9 0f          	cmp    $0xf,%rcx
ffffffff8040e8c9:	76 06                	jbe    ffffffff8040e8d1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xc01>
  for (size_t i = 0; i < size; i++) {
ffffffff8040e8cb:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8040e8cf:	75 df                	jne    ffffffff8040e8b0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xbe0>
  if (num != 0) {
ffffffff8040e8d1:	48 85 c0             	test   %rax,%rax
ffffffff8040e8d4:	0f 85 3e 2d 00 00    	jne    ffffffff80411618 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3948>
    str[offset++] = '0';
ffffffff8040e8da:	41 bf 30 78 00 00    	mov    $0x7830,%r15d
ffffffff8040e8e0:	48 8d 7c 24 3c       	lea    0x3c(%rsp),%rdi
ffffffff8040e8e5:	48 8d 74 14 3b       	lea    0x3b(%rsp,%rdx,1),%rsi
ffffffff8040e8ea:	66 44 89 7c 24 28    	mov    %r15w,0x28(%rsp)
ffffffff8040e8f0:	48 8d 4c 24 2a       	lea    0x2a(%rsp),%rcx
ffffffff8040e8f5:	eb 1f                	jmp    ffffffff8040e916 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xc46>
ffffffff8040e8f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040e8fe:	00 00 
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040e900:	83 c0 37             	add    $0x37,%eax
ffffffff8040e903:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040e907:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040e90a:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e90e:	48 39 fe             	cmp    %rdi,%rsi
ffffffff8040e911:	74 1d                	je     ffffffff8040e930 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xc60>
ffffffff8040e913:	48 89 c6             	mov    %rax,%rsi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040e916:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8040e919:	3c 09                	cmp    $0x9,%al
ffffffff8040e91b:	7f e3                	jg     ffffffff8040e900 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xc30>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040e91d:	83 c0 30             	add    $0x30,%eax
ffffffff8040e920:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040e924:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040e927:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e92b:	48 39 fe             	cmp    %rdi,%rsi
ffffffff8040e92e:	75 e3                	jne    ffffffff8040e913 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xc43>
  str[num_len + offset] = 0;
ffffffff8040e930:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e935:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff8040e93a:	e8 81 e8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040e93f:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040e941:	48 85 c0             	test   %rax,%rax
ffffffff8040e944:	0f 84 9e 2d 00 00    	je     ffffffff804116e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a18>
ffffffff8040e94a:	4c 8b 25 0f f7 00 00 	mov    0xf70f(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e951:	4c 8b 0d 10 f7 00 00 	mov    0xf710(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e958:	4c 8d 54 24 28       	lea    0x28(%rsp),%r10
ffffffff8040e95d:	4c 8b 05 14 f7 00 00 	mov    0xf714(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040e964:	48 8b 35 05 f7 00 00 	mov    0xf705(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040e96b:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040e970:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e973:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e977:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e97b:	4c 01 ca             	add    %r9,%rdx
ffffffff8040e97e:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040e985:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040e98c:	80 
ffffffff8040e98d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040e992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e998:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040e99b:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040e99e:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040e9a1:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e9a5:	48 39 f8             	cmp    %rdi,%rax
ffffffff8040e9a8:	48 89 f9             	mov    %rdi,%rcx
ffffffff8040e9ab:	48 0f 46 c8          	cmovbe %rax,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e9af:	48 85 c9             	test   %rcx,%rcx
ffffffff8040e9b2:	0f 84 28 1f 00 00    	je     ffffffff804108e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2c10>
    size_t i = pos;
ffffffff8040e9b8:	31 d2                	xor    %edx,%edx
ffffffff8040e9ba:	eb 11                	jmp    ffffffff8040e9cd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xcfd>
ffffffff8040e9bc:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e9c0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e9c4:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040e9c7:	0f 84 13 1f 00 00    	je     ffffffff804108e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2c10>
      if (str_[i] == c) {
ffffffff8040e9cd:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040e9d2:	75 ec                	jne    ffffffff8040e9c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xcf0>
ffffffff8040e9d4:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e9d7:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040e9da:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e9dd:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040e9e1:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040e9e4:	0f 84 46 1e 00 00    	je     ffffffff80410830 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2b60>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e9ea:	4c 01 c1             	add    %r8,%rcx
ffffffff8040e9ed:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040e9f0:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040e9f4:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040e9f7:	0f 83 d2 1e 00 00    	jae    ffffffff804108cf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2bff>
ffffffff8040e9fd:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040ea01:	4d 89 d5             	mov    %r10,%r13
ffffffff8040ea04:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040ea08:	4d 29 c5             	sub    %r8,%r13
ffffffff8040ea0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040ea10:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040ea17:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040ea1c:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040ea23:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040ea25:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040ea29:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040ea2c:	75 e2                	jne    ffffffff8040ea10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd40>
    if (current_col_ == num_cols_) {
ffffffff8040ea2e:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040ea31:	0f 84 b9 1d 00 00    	je     ffffffff804107f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2b20>
    current_col_ = i;
ffffffff8040ea37:	48 89 0d 3a f6 00 00 	mov    %rcx,0xf63a(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ea3e:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040ea42:	0f 84 ca 1d 00 00    	je     ffffffff80410812 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2b42>
ffffffff8040ea48:	48 85 c9             	test   %rcx,%rcx
ffffffff8040ea4b:	74 0a                	je     ffffffff8040ea57 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd87>
ffffffff8040ea4d:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040ea51:	0f 86 b9 1e 00 00    	jbe    ffffffff80410910 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2c40>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040ea57:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ea5b:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ea5e:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040ea61:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040ea65:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040ea68:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040ea6b:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040ea6f:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040ea72:	48 85 c0             	test   %rax,%rax
ffffffff8040ea75:	0f 85 1d ff ff ff    	jne    ffffffff8040e998 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xcc8>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ea7b:	48 85 f6             	test   %rsi,%rsi
ffffffff8040ea7e:	74 66                	je     ffffffff8040eae6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xe16>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ea80:	48 8b 3d e1 f5 00 00 	mov    0xf5e1(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040ea87:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ea8e:	31 d2                	xor    %edx,%edx
ffffffff8040ea90:	48 89 f8             	mov    %rdi,%rax
ffffffff8040ea93:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040ea97:	48 f7 d8             	neg    %rax
ffffffff8040ea9a:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040eaa1:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040eaa2:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040eaa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040eaae:	00 00 
ffffffff8040eab0:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040eab4:	48 85 ff             	test   %rdi,%rdi
ffffffff8040eab7:	74 1e                	je     ffffffff8040ead7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xe07>
ffffffff8040eab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040eac0:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040eac7:	f4 ff 
ffffffff8040eac9:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040eacd:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ead2:	4c 39 c8             	cmp    %r9,%rax
ffffffff8040ead5:	75 e9                	jne    ffffffff8040eac0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xdf0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ead7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040eadb:	4c 89 c8             	mov    %r9,%rax
ffffffff8040eade:	4c 01 d9             	add    %r11,%rcx
ffffffff8040eae1:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040eae4:	75 ca                	jne    ffffffff8040eab0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xde0>
    if (current_col_ != 0) {
ffffffff8040eae6:	4d 85 c0             	test   %r8,%r8
ffffffff8040eae9:	74 52                	je     ffffffff8040eb3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xe6d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040eaeb:	48 8b 0d 76 f5 00 00 	mov    0xf576(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040eaf2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040eaf5:	74 46                	je     ffffffff8040eb3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xe6d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040eaf7:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040eafa:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040eafe:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040eb02:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040eb06:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040eb0d:	00 
ffffffff8040eb0e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040eb15:	00 
ffffffff8040eb16:	48 f7 da             	neg    %rdx
ffffffff8040eb19:	48 01 c9             	add    %rcx,%rcx
ffffffff8040eb1c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040eb23:	80 
ffffffff8040eb24:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040eb28:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040eb2f:	ff 
ffffffff8040eb30:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040eb34:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040eb38:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040eb3b:	75 eb                	jne    ffffffff8040eb28 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xe58>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040eb3d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040eb44:	e8 77 e6 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040eb49:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040eb4b:	48 85 c0             	test   %rax,%rax
ffffffff8040eb4e:	0f 84 54 2c 00 00    	je     ffffffff804117a8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3ad8>
ffffffff8040eb54:	4c 8b 25 05 f5 00 00 	mov    0xf505(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040eb5b:	4c 8b 0d 06 f5 00 00 	mov    0xf506(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040eb62:	49 c7 c2 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r10
ffffffff8040eb69:	4c 8b 05 08 f5 00 00 	mov    0xf508(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040eb70:	48 8b 35 f9 f4 00 00 	mov    0xf4f9(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040eb77:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040eb7c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040eb7f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040eb83:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040eb87:	4c 01 ca             	add    %r9,%rdx
ffffffff8040eb8a:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040eb91:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040eb98:	80 
ffffffff8040eb99:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040eb9e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040eba0:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040eba3:	48 89 c1             	mov    %rax,%rcx
ffffffff8040eba6:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040eba9:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040ebac:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040ebb0:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040ebb3:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040ebb7:	48 85 c9             	test   %rcx,%rcx
ffffffff8040ebba:	0f 84 00 1c 00 00    	je     ffffffff804107c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2af0>
    size_t i = pos;
ffffffff8040ebc0:	31 d2                	xor    %edx,%edx
ffffffff8040ebc2:	eb 11                	jmp    ffffffff8040ebd5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf05>
ffffffff8040ebc4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040ebc8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ebcc:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040ebcf:	0f 84 eb 1b 00 00    	je     ffffffff804107c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2af0>
      if (str_[i] == c) {
ffffffff8040ebd5:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040ebda:	75 ec                	jne    ffffffff8040ebc8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xef8>
ffffffff8040ebdc:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040ebdf:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040ebe2:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040ebe5:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040ebe9:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040ebec:	0f 84 1e 1b 00 00    	je     ffffffff80410710 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2a40>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040ebf2:	4c 01 c1             	add    %r8,%rcx
ffffffff8040ebf5:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040ebf8:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040ebfc:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040ebff:	0f 83 a9 1b 00 00    	jae    ffffffff804107ae <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ade>
ffffffff8040ec05:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040ec09:	4d 89 d5             	mov    %r10,%r13
ffffffff8040ec0c:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040ec10:	4d 29 c5             	sub    %r8,%r13
ffffffff8040ec13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040ec18:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040ec1f:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040ec24:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040ec2b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040ec2d:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040ec31:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040ec34:	75 e2                	jne    ffffffff8040ec18 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf48>
    if (current_col_ == num_cols_) {
ffffffff8040ec36:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040ec39:	0f 84 91 1a 00 00    	je     ffffffff804106d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2a00>
    current_col_ = i;
ffffffff8040ec3f:	48 89 0d 32 f4 00 00 	mov    %rcx,0xf432(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ec46:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040ec4a:	0f 84 a2 1a 00 00    	je     ffffffff804106f2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2a22>
ffffffff8040ec50:	48 85 c9             	test   %rcx,%rcx
ffffffff8040ec53:	74 0a                	je     ffffffff8040ec5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf8f>
ffffffff8040ec55:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040ec59:	0f 86 11 1d 00 00    	jbe    ffffffff80410970 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ca0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040ec5f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ec63:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ec66:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040ec69:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040ec6d:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040ec70:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040ec73:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040ec77:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040ec7a:	48 85 c0             	test   %rax,%rax
ffffffff8040ec7d:	0f 85 1d ff ff ff    	jne    ffffffff8040eba0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xed0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ec83:	48 85 f6             	test   %rsi,%rsi
ffffffff8040ec86:	74 5e                	je     ffffffff8040ece6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1016>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ec88:	48 8b 3d d9 f3 00 00 	mov    0xf3d9(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040ec8f:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ec96:	31 d2                	xor    %edx,%edx
ffffffff8040ec98:	48 89 f8             	mov    %rdi,%rax
ffffffff8040ec9b:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040ec9f:	48 f7 d8             	neg    %rax
ffffffff8040eca2:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040eca9:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ecaa:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040ecaf:	90                   	nop
ffffffff8040ecb0:	4c 8d 0c 18          	lea    (%rax,%rbx,1),%r9
ffffffff8040ecb4:	48 85 ff             	test   %rdi,%rdi
ffffffff8040ecb7:	74 1e                	je     ffffffff8040ecd7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1007>
ffffffff8040ecb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040ecc0:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040ecc7:	f4 ff 
ffffffff8040ecc9:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040eccd:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ecd2:	49 39 c1             	cmp    %rax,%r9
ffffffff8040ecd5:	75 e9                	jne    ffffffff8040ecc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xff0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ecd7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ecdb:	4c 89 c8             	mov    %r9,%rax
ffffffff8040ecde:	4c 01 d9             	add    %r11,%rcx
ffffffff8040ece1:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040ece4:	75 ca                	jne    ffffffff8040ecb0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xfe0>
    if (current_col_ != 0) {
ffffffff8040ece6:	4d 85 c0             	test   %r8,%r8
ffffffff8040ece9:	74 52                	je     ffffffff8040ed3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x106d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040eceb:	48 8b 0d 76 f3 00 00 	mov    0xf376(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040ecf2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040ecf5:	74 46                	je     ffffffff8040ed3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x106d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040ecf7:	48 89 f2             	mov    %rsi,%rdx
ffffffff8040ecfa:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040ecfe:	48 0f af d1          	imul   %rcx,%rdx
ffffffff8040ed02:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040ed06:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040ed0d:	00 
ffffffff8040ed0e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040ed15:	00 
ffffffff8040ed16:	48 f7 da             	neg    %rdx
ffffffff8040ed19:	48 01 c9             	add    %rcx,%rcx
ffffffff8040ed1c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040ed23:	80 
ffffffff8040ed24:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040ed28:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040ed2f:	ff 
ffffffff8040ed30:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040ed34:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040ed38:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040ed3b:	75 eb                	jne    ffffffff8040ed28 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1058>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040ed3d:	48 c7 c7 5b b8 41 80 	mov    $0xffffffff8041b85b,%rdi
ffffffff8040ed44:	e8 77 e4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(s);
ffffffff8040ed49:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040ed4e:	48 c7 c6 5b b8 41 80 	mov    $0xffffffff8041b85b,%rsi
ffffffff8040ed55:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040ed5c:	89 c2                	mov    %eax,%edx
ffffffff8040ed5e:	e8 4d b8 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
  vga_output << " rflags : " << args->rflags << "\n";
ffffffff8040ed63:	48 8b 04 24          	mov    (%rsp),%rax
  size_t num_len = 0;
ffffffff8040ed67:	31 d2                	xor    %edx,%edx
ffffffff8040ed69:	48 8b 40 10          	mov    0x10(%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040ed6d:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff8040ed70:	48 89 c1             	mov    %rax,%rcx
    num_len++;
ffffffff8040ed73:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff8040ed77:	83 e1 0f             	and    $0xf,%ecx
ffffffff8040ed7a:	88 4c 14 3b          	mov    %cl,0x3b(%rsp,%rdx,1)
ffffffff8040ed7e:	48 89 c1             	mov    %rax,%rcx
    num /= base;
ffffffff8040ed81:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040ed85:	48 83 f9 0f          	cmp    $0xf,%rcx
ffffffff8040ed89:	76 06                	jbe    ffffffff8040ed91 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x10c1>
  for (size_t i = 0; i < size; i++) {
ffffffff8040ed8b:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8040ed8f:	75 df                	jne    ffffffff8040ed70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x10a0>
  if (num != 0) {
ffffffff8040ed91:	48 85 c0             	test   %rax,%rax
ffffffff8040ed94:	0f 85 4e 28 00 00    	jne    ffffffff804115e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3918>
    str[offset++] = '0';
ffffffff8040ed9a:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040eda0:	48 8d 7c 24 3c       	lea    0x3c(%rsp),%rdi
ffffffff8040eda5:	48 8d 74 14 3b       	lea    0x3b(%rsp,%rdx,1),%rsi
ffffffff8040edaa:	66 44 89 64 24 28    	mov    %r12w,0x28(%rsp)
ffffffff8040edb0:	48 8d 4c 24 2a       	lea    0x2a(%rsp),%rcx
ffffffff8040edb5:	eb 1f                	jmp    ffffffff8040edd6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1106>
ffffffff8040edb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040edbe:	00 00 
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040edc0:	83 c0 37             	add    $0x37,%eax
ffffffff8040edc3:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040edc7:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040edca:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040edce:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8040edd1:	74 1d                	je     ffffffff8040edf0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1120>
ffffffff8040edd3:	48 89 c6             	mov    %rax,%rsi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040edd6:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8040edd9:	3c 09                	cmp    $0x9,%al
ffffffff8040eddb:	7f e3                	jg     ffffffff8040edc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x10f0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040eddd:	83 c0 30             	add    $0x30,%eax
ffffffff8040ede0:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040ede4:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040ede7:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040edeb:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8040edee:	75 e3                	jne    ffffffff8040edd3 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1103>
  str[num_len + offset] = 0;
ffffffff8040edf0:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
ffffffff8040edf5:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff8040edfa:	e8 c1 e3 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040edff:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040ee01:	48 85 c0             	test   %rax,%rax
ffffffff8040ee04:	0f 84 ce 29 00 00    	je     ffffffff804117d8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3b08>
ffffffff8040ee0a:	4c 8b 25 4f f2 00 00 	mov    0xf24f(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040ee11:	4c 8b 0d 50 f2 00 00 	mov    0xf250(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040ee18:	4c 8d 54 24 28       	lea    0x28(%rsp),%r10
ffffffff8040ee1d:	4c 8b 05 54 f2 00 00 	mov    0xf254(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040ee24:	48 8b 35 45 f2 00 00 	mov    0xf245(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040ee2b:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040ee30:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040ee33:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040ee37:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040ee3b:	4c 01 ca             	add    %r9,%rdx
ffffffff8040ee3e:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040ee45:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040ee4c:	80 
ffffffff8040ee4d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040ee52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040ee58:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040ee5b:	48 89 c1             	mov    %rax,%rcx
ffffffff8040ee5e:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040ee61:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040ee64:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040ee68:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040ee6b:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040ee6f:	48 85 c9             	test   %rcx,%rcx
ffffffff8040ee72:	0f 84 a8 1d 00 00    	je     ffffffff80410c20 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f50>
    size_t i = pos;
ffffffff8040ee78:	31 d2                	xor    %edx,%edx
ffffffff8040ee7a:	eb 11                	jmp    ffffffff8040ee8d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x11bd>
ffffffff8040ee7c:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040ee80:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ee84:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8040ee87:	0f 84 93 1d 00 00    	je     ffffffff80410c20 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f50>
      if (str_[i] == c) {
ffffffff8040ee8d:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040ee92:	75 ec                	jne    ffffffff8040ee80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x11b0>
ffffffff8040ee94:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040ee97:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040ee9a:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040ee9d:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040eea1:	49 39 f4             	cmp    %rsi,%r12
ffffffff8040eea4:	0f 84 c6 1c 00 00    	je     ffffffff80410b70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ea0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040eeaa:	4c 01 c1             	add    %r8,%rcx
ffffffff8040eead:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040eeb0:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040eeb4:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040eeb7:	0f 86 51 1d 00 00    	jbe    ffffffff80410c0e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f3e>
ffffffff8040eebd:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040eec1:	4d 89 d5             	mov    %r10,%r13
ffffffff8040eec4:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040eec8:	4d 29 c5             	sub    %r8,%r13
ffffffff8040eecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040eed0:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040eed7:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040eedc:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040eee3:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040eee5:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040eee9:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040eeec:	75 e2                	jne    ffffffff8040eed0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1200>
    if (current_col_ == num_cols_) {
ffffffff8040eeee:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040eef1:	0f 84 39 1c 00 00    	je     ffffffff80410b30 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2e60>
    current_col_ = i;
ffffffff8040eef7:	48 89 0d 7a f1 00 00 	mov    %rcx,0xf17a(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040eefe:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040ef02:	0f 84 4a 1c 00 00    	je     ffffffff80410b52 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2e82>
ffffffff8040ef08:	48 85 c9             	test   %rcx,%rcx
ffffffff8040ef0b:	74 0a                	je     ffffffff8040ef17 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1247>
ffffffff8040ef0d:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040ef11:	0f 86 19 1e 00 00    	jbe    ffffffff80410d30 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3060>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040ef17:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ef1b:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ef1e:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040ef21:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040ef25:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040ef28:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040ef2b:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040ef2f:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040ef32:	48 85 c0             	test   %rax,%rax
ffffffff8040ef35:	0f 85 1d ff ff ff    	jne    ffffffff8040ee58 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1188>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ef3b:	48 85 f6             	test   %rsi,%rsi
ffffffff8040ef3e:	74 66                	je     ffffffff8040efa6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x12d6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ef40:	48 8b 3d 21 f1 00 00 	mov    0xf121(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040ef47:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ef4e:	31 d2                	xor    %edx,%edx
ffffffff8040ef50:	48 89 f8             	mov    %rdi,%rax
ffffffff8040ef53:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040ef57:	48 f7 d8             	neg    %rax
ffffffff8040ef5a:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040ef61:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ef62:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040ef67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040ef6e:	00 00 
ffffffff8040ef70:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040ef74:	48 85 ff             	test   %rdi,%rdi
ffffffff8040ef77:	74 1e                	je     ffffffff8040ef97 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x12c7>
ffffffff8040ef79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040ef80:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040ef87:	f4 ff 
ffffffff8040ef89:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040ef8d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ef92:	49 39 c1             	cmp    %rax,%r9
ffffffff8040ef95:	75 e9                	jne    ffffffff8040ef80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x12b0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ef97:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ef9b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040ef9e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040efa1:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040efa4:	75 ca                	jne    ffffffff8040ef70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x12a0>
    if (current_col_ != 0) {
ffffffff8040efa6:	4d 85 c0             	test   %r8,%r8
ffffffff8040efa9:	74 52                	je     ffffffff8040effd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x132d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040efab:	48 8b 0d b6 f0 00 00 	mov    0xf0b6(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040efb2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040efb5:	74 46                	je     ffffffff8040effd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x132d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040efb7:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040efba:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040efbe:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040efc2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040efc6:	48 8d 8c 0a 00 c0 05 	lea    0x5c000(%rdx,%rcx,1),%rcx
ffffffff8040efcd:	00 
ffffffff8040efce:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040efd5:	00 
ffffffff8040efd6:	48 f7 da             	neg    %rdx
ffffffff8040efd9:	48 01 c9             	add    %rcx,%rcx
ffffffff8040efdc:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040efe3:	80 
ffffffff8040efe4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040efe8:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040efef:	ff 
ffffffff8040eff0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040eff4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040eff8:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040effb:	75 eb                	jne    ffffffff8040efe8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1318>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040effd:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040f004:	e8 b7 e1 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040f009:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040f00b:	48 85 c0             	test   %rax,%rax
ffffffff8040f00e:	0f 84 ac 27 00 00    	je     ffffffff804117c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3af0>
ffffffff8040f014:	4c 8b 25 45 f0 00 00 	mov    0xf045(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f01b:	4c 8b 0d 46 f0 00 00 	mov    0xf046(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f022:	49 c7 c2 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r10
ffffffff8040f029:	4c 8b 05 48 f0 00 00 	mov    0xf048(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040f030:	48 8b 35 39 f0 00 00 	mov    0xf039(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040f037:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040f03c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f03f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f043:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f047:	4c 01 ca             	add    %r9,%rdx
ffffffff8040f04a:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040f051:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040f058:	80 
ffffffff8040f059:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f05e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f060:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040f063:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040f066:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f069:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f06d:	48 39 f8             	cmp    %rdi,%rax
ffffffff8040f070:	48 89 f9             	mov    %rdi,%rcx
ffffffff8040f073:	48 0f 46 c8          	cmovbe %rax,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f077:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f07a:	0f 84 80 1a 00 00    	je     ffffffff80410b00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2e30>
    size_t i = pos;
ffffffff8040f080:	31 d2                	xor    %edx,%edx
ffffffff8040f082:	eb 11                	jmp    ffffffff8040f095 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13c5>
ffffffff8040f084:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f088:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f08c:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040f08f:	0f 84 6b 1a 00 00    	je     ffffffff80410b00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2e30>
      if (str_[i] == c) {
ffffffff8040f095:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040f09a:	75 ec                	jne    ffffffff8040f088 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13b8>
ffffffff8040f09c:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f09f:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040f0a2:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f0a5:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040f0a9:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040f0ac:	0f 84 5e 19 00 00    	je     ffffffff80410a10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2d40>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f0b2:	4c 01 c1             	add    %r8,%rcx
ffffffff8040f0b5:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040f0b8:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040f0bc:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040f0bf:	0f 83 ea 19 00 00    	jae    ffffffff80410aaf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ddf>
ffffffff8040f0c5:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040f0c9:	4d 89 d5             	mov    %r10,%r13
ffffffff8040f0cc:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040f0d0:	4d 29 c5             	sub    %r8,%r13
ffffffff8040f0d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f0d8:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040f0df:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040f0e4:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040f0eb:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f0ed:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040f0f1:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040f0f4:	75 e2                	jne    ffffffff8040f0d8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1408>
    if (current_col_ == num_cols_) {
ffffffff8040f0f6:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040f0f9:	0f 84 c1 19 00 00    	je     ffffffff80410ac0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2df0>
    current_col_ = i;
ffffffff8040f0ff:	48 89 0d 72 ef 00 00 	mov    %rcx,0xef72(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f106:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040f10a:	0f 84 d2 19 00 00    	je     ffffffff80410ae2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2e12>
ffffffff8040f110:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f113:	74 0a                	je     ffffffff8040f11f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x144f>
ffffffff8040f115:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040f119:	0f 86 71 1c 00 00    	jbe    ffffffff80410d90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x30c0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f11f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f123:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f126:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040f129:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040f12d:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040f130:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f133:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040f137:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040f13a:	48 85 c0             	test   %rax,%rax
ffffffff8040f13d:	0f 85 1d ff ff ff    	jne    ffffffff8040f060 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1390>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f143:	48 85 f6             	test   %rsi,%rsi
ffffffff8040f146:	74 5e                	je     ffffffff8040f1a6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x14d6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f148:	48 8b 3d 19 ef 00 00 	mov    0xef19(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f14f:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f156:	31 d2                	xor    %edx,%edx
ffffffff8040f158:	48 89 f8             	mov    %rdi,%rax
ffffffff8040f15b:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040f15f:	48 f7 d8             	neg    %rax
ffffffff8040f162:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040f169:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f16a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040f16f:	90                   	nop
ffffffff8040f170:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040f174:	48 85 ff             	test   %rdi,%rdi
ffffffff8040f177:	74 1e                	je     ffffffff8040f197 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x14c7>
ffffffff8040f179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f180:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040f187:	f4 ff 
ffffffff8040f189:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f18d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f192:	49 39 c1             	cmp    %rax,%r9
ffffffff8040f195:	75 e9                	jne    ffffffff8040f180 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x14b0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f197:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f19b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040f19e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040f1a1:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040f1a4:	75 ca                	jne    ffffffff8040f170 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x14a0>
    if (current_col_ != 0) {
ffffffff8040f1a6:	4d 85 c0             	test   %r8,%r8
ffffffff8040f1a9:	74 52                	je     ffffffff8040f1fd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x152d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f1ab:	48 8b 0d b6 ee 00 00 	mov    0xeeb6(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f1b2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f1b5:	74 46                	je     ffffffff8040f1fd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x152d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f1b7:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040f1ba:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040f1be:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040f1c2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040f1c6:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8040f1cd:	00 
ffffffff8040f1ce:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040f1d5:	00 
ffffffff8040f1d6:	48 f7 da             	neg    %rdx
ffffffff8040f1d9:	48 01 c9             	add    %rcx,%rcx
ffffffff8040f1dc:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040f1e3:	80 
ffffffff8040f1e4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040f1e8:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040f1ef:	ff 
ffffffff8040f1f0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f1f4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f1f8:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040f1fb:	75 eb                	jne    ffffffff8040f1e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1518>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f1fd:	48 c7 c7 42 b8 41 80 	mov    $0xffffffff8041b842,%rdi
ffffffff8040f204:	e8 b7 df ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040f209:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040f20b:	48 85 c0             	test   %rax,%rax
ffffffff8040f20e:	0f 84 ec 24 00 00    	je     ffffffff80411700 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a30>
ffffffff8040f214:	4c 8b 25 45 ee 00 00 	mov    0xee45(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f21b:	4c 8b 0d 46 ee 00 00 	mov    0xee46(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f222:	49 c7 c2 42 b8 41 80 	mov    $0xffffffff8041b842,%r10
ffffffff8040f229:	4c 8b 05 48 ee 00 00 	mov    0xee48(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040f230:	48 8b 35 39 ee 00 00 	mov    0xee39(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040f237:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040f23c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f23f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f243:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f247:	4c 01 ca             	add    %r9,%rdx
ffffffff8040f24a:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040f251:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040f258:	80 
ffffffff8040f259:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f25e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f260:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040f263:	48 89 c1             	mov    %rax,%rcx
ffffffff8040f266:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040f269:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f26c:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f270:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f273:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f277:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f27a:	0f 84 80 1a 00 00    	je     ffffffff80410d00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3030>
    size_t i = pos;
ffffffff8040f280:	31 d2                	xor    %edx,%edx
ffffffff8040f282:	eb 11                	jmp    ffffffff8040f295 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x15c5>
ffffffff8040f284:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f288:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f28c:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040f28f:	0f 84 6b 1a 00 00    	je     ffffffff80410d00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3030>
      if (str_[i] == c) {
ffffffff8040f295:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040f29a:	75 ec                	jne    ffffffff8040f288 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x15b8>
ffffffff8040f29c:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f29f:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040f2a2:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f2a5:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040f2a9:	49 39 f4             	cmp    %rsi,%r12
ffffffff8040f2ac:	0f 84 9e 19 00 00    	je     ffffffff80410c50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f80>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f2b2:	4c 01 c1             	add    %r8,%rcx
ffffffff8040f2b5:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040f2b8:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040f2bc:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040f2bf:	0f 83 29 1a 00 00    	jae    ffffffff80410cee <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x301e>
ffffffff8040f2c5:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040f2c9:	4d 89 d5             	mov    %r10,%r13
ffffffff8040f2cc:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040f2d0:	4d 29 c5             	sub    %r8,%r13
ffffffff8040f2d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f2d8:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040f2df:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040f2e4:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040f2eb:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f2ed:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040f2f1:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040f2f4:	75 e2                	jne    ffffffff8040f2d8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1608>
    if (current_col_ == num_cols_) {
ffffffff8040f2f6:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040f2f9:	0f 84 d1 16 00 00    	je     ffffffff804109d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2d00>
    current_col_ = i;
ffffffff8040f2ff:	48 89 0d 72 ed 00 00 	mov    %rcx,0xed72(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f306:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040f30a:	0f 84 e2 16 00 00    	je     ffffffff804109f2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2d22>
ffffffff8040f310:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f313:	74 0a                	je     ffffffff8040f31f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x164f>
ffffffff8040f315:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040f319:	0f 86 d1 1a 00 00    	jbe    ffffffff80410df0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3120>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f31f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f323:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f326:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040f329:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040f32d:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040f330:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f333:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040f337:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040f33a:	48 85 c0             	test   %rax,%rax
ffffffff8040f33d:	0f 85 1d ff ff ff    	jne    ffffffff8040f260 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f343:	48 85 f6             	test   %rsi,%rsi
ffffffff8040f346:	74 5e                	je     ffffffff8040f3a6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x16d6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f348:	48 8b 3d 19 ed 00 00 	mov    0xed19(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f34f:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f356:	31 d2                	xor    %edx,%edx
ffffffff8040f358:	48 89 f8             	mov    %rdi,%rax
ffffffff8040f35b:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040f35f:	48 f7 d8             	neg    %rax
ffffffff8040f362:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040f369:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f36a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040f36f:	90                   	nop
ffffffff8040f370:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040f374:	48 85 ff             	test   %rdi,%rdi
ffffffff8040f377:	74 1e                	je     ffffffff8040f397 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x16c7>
ffffffff8040f379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f380:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040f387:	f4 ff 
ffffffff8040f389:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f38d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f392:	4c 39 c8             	cmp    %r9,%rax
ffffffff8040f395:	75 e9                	jne    ffffffff8040f380 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x16b0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f397:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f39b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040f39e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040f3a1:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040f3a4:	75 ca                	jne    ffffffff8040f370 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x16a0>
    if (current_col_ != 0) {
ffffffff8040f3a6:	4d 85 c0             	test   %r8,%r8
ffffffff8040f3a9:	74 52                	je     ffffffff8040f3fd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x172d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f3ab:	48 8b 0d b6 ec 00 00 	mov    0xecb6(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f3b2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f3b5:	74 46                	je     ffffffff8040f3fd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x172d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f3b7:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040f3ba:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040f3be:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040f3c2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040f3c6:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8040f3cd:	00 
ffffffff8040f3ce:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040f3d5:	00 
ffffffff8040f3d6:	48 f7 da             	neg    %rdx
ffffffff8040f3d9:	48 01 c9             	add    %rcx,%rcx
ffffffff8040f3dc:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040f3e3:	80 
ffffffff8040f3e4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040f3e8:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040f3ef:	ff 
ffffffff8040f3f0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f3f4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f3f8:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040f3fb:	75 eb                	jne    ffffffff8040f3e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1718>
  vga_output << " rsp : " << args->rsp << "\n";
ffffffff8040f3fd:	48 8b 04 24          	mov    (%rsp),%rax
  size_t num_len = 0;
ffffffff8040f401:	31 d2                	xor    %edx,%edx
ffffffff8040f403:	48 8b 40 18          	mov    0x18(%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040f407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040f40e:	00 00 
    buffer[i] = num % base;
ffffffff8040f410:	48 89 c1             	mov    %rax,%rcx
    num_len++;
ffffffff8040f413:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff8040f417:	83 e1 0f             	and    $0xf,%ecx
ffffffff8040f41a:	88 4c 14 3b          	mov    %cl,0x3b(%rsp,%rdx,1)
ffffffff8040f41e:	48 89 c1             	mov    %rax,%rcx
    num /= base;
ffffffff8040f421:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040f425:	48 83 f9 0f          	cmp    $0xf,%rcx
ffffffff8040f429:	76 06                	jbe    ffffffff8040f431 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1761>
  for (size_t i = 0; i < size; i++) {
ffffffff8040f42b:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8040f42f:	75 df                	jne    ffffffff8040f410 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1740>
  if (num != 0) {
ffffffff8040f431:	48 85 c0             	test   %rax,%rax
ffffffff8040f434:	0f 85 c6 21 00 00    	jne    ffffffff80411600 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3930>
    str[offset++] = '0';
ffffffff8040f43a:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040f440:	48 8d 7c 24 3c       	lea    0x3c(%rsp),%rdi
ffffffff8040f445:	48 8d 74 14 3b       	lea    0x3b(%rsp,%rdx,1),%rsi
ffffffff8040f44a:	66 44 89 64 24 28    	mov    %r12w,0x28(%rsp)
ffffffff8040f450:	48 8d 4c 24 2a       	lea    0x2a(%rsp),%rcx
ffffffff8040f455:	eb 1f                	jmp    ffffffff8040f476 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x17a6>
ffffffff8040f457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040f45e:	00 00 
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040f460:	83 c0 37             	add    $0x37,%eax
ffffffff8040f463:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040f467:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040f46a:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040f46e:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8040f471:	74 1d                	je     ffffffff8040f490 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x17c0>
ffffffff8040f473:	48 89 c6             	mov    %rax,%rsi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040f476:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8040f479:	3c 09                	cmp    $0x9,%al
ffffffff8040f47b:	7f e3                	jg     ffffffff8040f460 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1790>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040f47d:	83 c0 30             	add    $0x30,%eax
ffffffff8040f480:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040f484:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040f487:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040f48b:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8040f48e:	75 e3                	jne    ffffffff8040f473 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x17a3>
  str[num_len + offset] = 0;
ffffffff8040f490:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f495:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff8040f49a:	e8 21 dd ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040f49f:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040f4a1:	48 85 c0             	test   %rax,%rax
ffffffff8040f4a4:	0f 84 6e 22 00 00    	je     ffffffff80411718 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a48>
ffffffff8040f4aa:	4c 8b 25 af eb 00 00 	mov    0xebaf(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f4b1:	4c 8b 0d b0 eb 00 00 	mov    0xebb0(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f4b8:	4c 8d 54 24 28       	lea    0x28(%rsp),%r10
ffffffff8040f4bd:	4c 8b 05 b4 eb 00 00 	mov    0xebb4(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040f4c4:	48 8b 35 a5 eb 00 00 	mov    0xeba5(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040f4cb:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040f4d0:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f4d3:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f4d7:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f4db:	4c 01 ca             	add    %r9,%rdx
ffffffff8040f4de:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040f4e5:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040f4ec:	80 
ffffffff8040f4ed:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f4f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f4f8:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040f4fb:	48 89 c1             	mov    %rax,%rcx
ffffffff8040f4fe:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040f501:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f504:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f508:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f50b:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f50f:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f512:	0f 84 88 1b 00 00    	je     ffffffff804110a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x33d0>
    size_t i = pos;
ffffffff8040f518:	31 d2                	xor    %edx,%edx
ffffffff8040f51a:	eb 11                	jmp    ffffffff8040f52d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x185d>
ffffffff8040f51c:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f520:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f524:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040f527:	0f 84 73 1b 00 00    	je     ffffffff804110a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x33d0>
      if (str_[i] == c) {
ffffffff8040f52d:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040f532:	75 ec                	jne    ffffffff8040f520 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1850>
ffffffff8040f534:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f537:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040f53a:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f53d:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040f541:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040f544:	0f 84 a6 1a 00 00    	je     ffffffff80410ff0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3320>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f54a:	4c 01 c1             	add    %r8,%rcx
ffffffff8040f54d:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040f550:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040f554:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040f557:	0f 83 31 1b 00 00    	jae    ffffffff8041108e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x33be>
ffffffff8040f55d:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040f561:	4d 89 d5             	mov    %r10,%r13
ffffffff8040f564:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040f568:	4d 29 c5             	sub    %r8,%r13
ffffffff8040f56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f570:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040f577:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040f57c:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040f583:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f585:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040f589:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040f58c:	75 e2                	jne    ffffffff8040f570 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x18a0>
    if (current_col_ == num_cols_) {
ffffffff8040f58e:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040f591:	0f 84 19 1a 00 00    	je     ffffffff80410fb0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x32e0>
    current_col_ = i;
ffffffff8040f597:	48 89 0d da ea 00 00 	mov    %rcx,0xeada(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f59e:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040f5a2:	0f 84 2a 1a 00 00    	je     ffffffff80410fd2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3302>
ffffffff8040f5a8:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f5ab:	74 0a                	je     ffffffff8040f5b7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x18e7>
ffffffff8040f5ad:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040f5b1:	0f 86 f9 1b 00 00    	jbe    ffffffff804111b0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x34e0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f5b7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f5bb:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f5be:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040f5c1:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040f5c5:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040f5c8:	48 39 f8             	cmp    %rdi,%rax
ffffffff8040f5cb:	48 0f 46 f8          	cmovbe %rax,%rdi
ffffffff8040f5cf:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040f5d2:	48 85 c0             	test   %rax,%rax
ffffffff8040f5d5:	0f 85 1d ff ff ff    	jne    ffffffff8040f4f8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1828>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f5db:	48 85 f6             	test   %rsi,%rsi
ffffffff8040f5de:	74 66                	je     ffffffff8040f646 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1976>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f5e0:	48 8b 3d 81 ea 00 00 	mov    0xea81(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f5e7:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f5ee:	31 d2                	xor    %edx,%edx
ffffffff8040f5f0:	48 89 f8             	mov    %rdi,%rax
ffffffff8040f5f3:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040f5f7:	48 f7 d8             	neg    %rax
ffffffff8040f5fa:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040f601:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f602:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040f607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040f60e:	00 00 
ffffffff8040f610:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040f614:	48 85 ff             	test   %rdi,%rdi
ffffffff8040f617:	74 1e                	je     ffffffff8040f637 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1967>
ffffffff8040f619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f620:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040f627:	f4 ff 
ffffffff8040f629:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f62d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f632:	49 39 c1             	cmp    %rax,%r9
ffffffff8040f635:	75 e9                	jne    ffffffff8040f620 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1950>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f637:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f63b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040f63e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040f641:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040f644:	75 ca                	jne    ffffffff8040f610 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1940>
    if (current_col_ != 0) {
ffffffff8040f646:	4d 85 c0             	test   %r8,%r8
ffffffff8040f649:	74 52                	je     ffffffff8040f69d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x19cd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f64b:	48 8b 0d 16 ea 00 00 	mov    0xea16(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f652:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f655:	74 46                	je     ffffffff8040f69d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x19cd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f657:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040f65a:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040f65e:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040f662:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040f666:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8040f66d:	00 
ffffffff8040f66e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040f675:	00 
ffffffff8040f676:	48 f7 da             	neg    %rdx
ffffffff8040f679:	48 01 c9             	add    %rcx,%rcx
ffffffff8040f67c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040f683:	80 
ffffffff8040f684:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040f688:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040f68f:	ff 
ffffffff8040f690:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f694:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f698:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040f69b:	75 eb                	jne    ffffffff8040f688 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x19b8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f69d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040f6a4:	e8 17 db ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040f6a9:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040f6ab:	48 85 c0             	test   %rax,%rax
ffffffff8040f6ae:	0f 84 7c 20 00 00    	je     ffffffff80411730 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a60>
ffffffff8040f6b4:	4c 8b 25 a5 e9 00 00 	mov    0xe9a5(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f6bb:	4c 8b 0d a6 e9 00 00 	mov    0xe9a6(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f6c2:	49 c7 c2 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r10
ffffffff8040f6c9:	4c 8b 05 a8 e9 00 00 	mov    0xe9a8(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040f6d0:	48 8b 35 99 e9 00 00 	mov    0xe999(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040f6d7:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040f6dc:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f6df:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f6e3:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f6e7:	4c 01 ca             	add    %r9,%rdx
ffffffff8040f6ea:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040f6f1:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040f6f8:	80 
ffffffff8040f6f9:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f6fe:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f700:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040f703:	48 89 c1             	mov    %rax,%rcx
ffffffff8040f706:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040f709:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f70c:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f710:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f713:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f717:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f71a:	0f 84 60 18 00 00    	je     ffffffff80410f80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x32b0>
    size_t i = pos;
ffffffff8040f720:	31 d2                	xor    %edx,%edx
ffffffff8040f722:	eb 11                	jmp    ffffffff8040f735 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1a65>
ffffffff8040f724:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f728:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f72c:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040f72f:	0f 84 4b 18 00 00    	je     ffffffff80410f80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x32b0>
      if (str_[i] == c) {
ffffffff8040f735:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040f73a:	75 ec                	jne    ffffffff8040f728 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1a58>
ffffffff8040f73c:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f73f:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040f742:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f745:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040f749:	49 39 f4             	cmp    %rsi,%r12
ffffffff8040f74c:	0f 84 3e 17 00 00    	je     ffffffff80410e90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x31c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f752:	4c 01 c1             	add    %r8,%rcx
ffffffff8040f755:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040f758:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040f75c:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040f75f:	0f 83 ca 17 00 00    	jae    ffffffff80410f2f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x325f>
ffffffff8040f765:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040f769:	4d 89 d5             	mov    %r10,%r13
ffffffff8040f76c:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040f770:	4d 29 c5             	sub    %r8,%r13
ffffffff8040f773:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f778:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040f77f:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040f784:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040f78b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f78d:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040f791:	49 39 c8             	cmp    %rcx,%r8
ffffffff8040f794:	75 e2                	jne    ffffffff8040f778 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1aa8>
    if (current_col_ == num_cols_) {
ffffffff8040f796:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040f799:	0f 84 a1 17 00 00    	je     ffffffff80410f40 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3270>
    current_col_ = i;
ffffffff8040f79f:	48 89 0d d2 e8 00 00 	mov    %rcx,0xe8d2(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f7a6:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040f7aa:	0f 84 b2 17 00 00    	je     ffffffff80410f62 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3292>
ffffffff8040f7b0:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f7b3:	74 0a                	je     ffffffff8040f7bf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1aef>
ffffffff8040f7b5:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040f7b9:	0f 86 51 1a 00 00    	jbe    ffffffff80411210 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3540>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f7bf:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f7c3:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f7c6:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040f7c9:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040f7cd:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040f7d0:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f7d3:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040f7d7:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040f7da:	48 85 c0             	test   %rax,%rax
ffffffff8040f7dd:	0f 85 1d ff ff ff    	jne    ffffffff8040f700 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1a30>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f7e3:	48 85 f6             	test   %rsi,%rsi
ffffffff8040f7e6:	74 5e                	je     ffffffff8040f846 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1b76>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f7e8:	48 8b 3d 79 e8 00 00 	mov    0xe879(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f7ef:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f7f6:	31 d2                	xor    %edx,%edx
ffffffff8040f7f8:	48 89 f8             	mov    %rdi,%rax
ffffffff8040f7fb:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040f7ff:	48 f7 d8             	neg    %rax
ffffffff8040f802:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040f809:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f80a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040f80f:	90                   	nop
ffffffff8040f810:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040f814:	48 85 ff             	test   %rdi,%rdi
ffffffff8040f817:	74 1e                	je     ffffffff8040f837 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1b67>
ffffffff8040f819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f820:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040f827:	f4 ff 
ffffffff8040f829:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f82d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f832:	49 39 c1             	cmp    %rax,%r9
ffffffff8040f835:	75 e9                	jne    ffffffff8040f820 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1b50>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f837:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f83b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040f83e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040f841:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040f844:	75 ca                	jne    ffffffff8040f810 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1b40>
    if (current_col_ != 0) {
ffffffff8040f846:	4d 85 c0             	test   %r8,%r8
ffffffff8040f849:	74 52                	je     ffffffff8040f89d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1bcd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f84b:	48 8b 0d 16 e8 00 00 	mov    0xe816(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f852:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f855:	74 46                	je     ffffffff8040f89d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1bcd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f857:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040f85a:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040f85e:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040f862:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040f866:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8040f86d:	00 
ffffffff8040f86e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040f875:	00 
ffffffff8040f876:	48 f7 da             	neg    %rdx
ffffffff8040f879:	48 01 c9             	add    %rcx,%rcx
ffffffff8040f87c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040f883:	80 
ffffffff8040f884:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040f888:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040f88f:	ff 
ffffffff8040f890:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f894:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f898:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040f89b:	75 eb                	jne    ffffffff8040f888 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1bb8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f89d:	48 c7 c7 4a b8 41 80 	mov    $0xffffffff8041b84a,%rdi
ffffffff8040f8a4:	e8 17 d9 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040f8a9:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040f8ab:	48 85 c0             	test   %rax,%rax
ffffffff8040f8ae:	0f 84 94 1e 00 00    	je     ffffffff80411748 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a78>
ffffffff8040f8b4:	4c 8b 25 a5 e7 00 00 	mov    0xe7a5(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f8bb:	4c 8b 0d a6 e7 00 00 	mov    0xe7a6(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f8c2:	49 c7 c2 4a b8 41 80 	mov    $0xffffffff8041b84a,%r10
ffffffff8040f8c9:	4c 8b 05 a8 e7 00 00 	mov    0xe7a8(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040f8d0:	48 8b 35 99 e7 00 00 	mov    0xe799(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040f8d7:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040f8dc:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f8df:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f8e3:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f8e7:	4c 01 ca             	add    %r9,%rdx
ffffffff8040f8ea:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040f8f1:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040f8f8:	80 
ffffffff8040f8f9:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f8fe:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f900:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040f903:	48 89 c1             	mov    %rax,%rcx
ffffffff8040f906:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040f909:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f90c:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f910:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f913:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f917:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f91a:	0f 84 60 18 00 00    	je     ffffffff80411180 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x34b0>
    size_t i = pos;
ffffffff8040f920:	31 d2                	xor    %edx,%edx
ffffffff8040f922:	eb 11                	jmp    ffffffff8040f935 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1c65>
ffffffff8040f924:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f928:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f92c:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040f92f:	0f 84 4b 18 00 00    	je     ffffffff80411180 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x34b0>
      if (str_[i] == c) {
ffffffff8040f935:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040f93a:	75 ec                	jne    ffffffff8040f928 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1c58>
ffffffff8040f93c:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f93f:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040f942:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f945:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040f949:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040f94c:	0f 84 7e 17 00 00    	je     ffffffff804110d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3400>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f952:	4c 01 c1             	add    %r8,%rcx
ffffffff8040f955:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040f958:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040f95c:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040f95f:	0f 86 09 18 00 00    	jbe    ffffffff8041116e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x349e>
ffffffff8040f965:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040f969:	4d 89 d5             	mov    %r10,%r13
ffffffff8040f96c:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040f970:	4d 29 c5             	sub    %r8,%r13
ffffffff8040f973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f978:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040f97f:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040f984:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040f98b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f98d:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040f991:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040f994:	75 e2                	jne    ffffffff8040f978 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1ca8>
    if (current_col_ == num_cols_) {
ffffffff8040f996:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040f999:	0f 84 b1 14 00 00    	je     ffffffff80410e50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3180>
    current_col_ = i;
ffffffff8040f99f:	48 89 0d d2 e6 00 00 	mov    %rcx,0xe6d2(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f9a6:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040f9aa:	0f 84 c2 14 00 00    	je     ffffffff80410e72 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x31a2>
ffffffff8040f9b0:	48 85 c9             	test   %rcx,%rcx
ffffffff8040f9b3:	74 0a                	je     ffffffff8040f9bf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1cef>
ffffffff8040f9b5:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040f9b9:	0f 86 b1 18 00 00    	jbe    ffffffff80411270 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x35a0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f9bf:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f9c3:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f9c6:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040f9c9:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040f9cd:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040f9d0:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040f9d3:	48 0f 47 f8          	cmova  %rax,%rdi
ffffffff8040f9d7:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040f9da:	48 85 c0             	test   %rax,%rax
ffffffff8040f9dd:	0f 85 1d ff ff ff    	jne    ffffffff8040f900 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1c30>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f9e3:	48 85 f6             	test   %rsi,%rsi
ffffffff8040f9e6:	74 5e                	je     ffffffff8040fa46 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1d76>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f9e8:	48 8b 3d 79 e6 00 00 	mov    0xe679(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f9ef:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f9f6:	31 d2                	xor    %edx,%edx
ffffffff8040f9f8:	48 89 f8             	mov    %rdi,%rax
ffffffff8040f9fb:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040f9ff:	48 f7 d8             	neg    %rax
ffffffff8040fa02:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040fa09:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fa0a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040fa0f:	90                   	nop
ffffffff8040fa10:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040fa14:	48 85 ff             	test   %rdi,%rdi
ffffffff8040fa17:	74 1e                	je     ffffffff8040fa37 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1d67>
ffffffff8040fa19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040fa20:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040fa27:	f4 ff 
ffffffff8040fa29:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040fa2d:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fa32:	49 39 c1             	cmp    %rax,%r9
ffffffff8040fa35:	75 e9                	jne    ffffffff8040fa20 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1d50>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fa37:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fa3b:	4c 89 c8             	mov    %r9,%rax
ffffffff8040fa3e:	4c 01 d9             	add    %r11,%rcx
ffffffff8040fa41:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040fa44:	75 ca                	jne    ffffffff8040fa10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1d40>
    if (current_col_ != 0) {
ffffffff8040fa46:	4d 85 c0             	test   %r8,%r8
ffffffff8040fa49:	74 52                	je     ffffffff8040fa9d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1dcd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fa4b:	48 8b 0d 16 e6 00 00 	mov    0xe616(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fa52:	48 85 c9             	test   %rcx,%rcx
ffffffff8040fa55:	74 46                	je     ffffffff8040fa9d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1dcd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040fa57:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040fa5a:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040fa5e:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040fa62:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040fa66:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8040fa6d:	00 
ffffffff8040fa6e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040fa75:	00 
ffffffff8040fa76:	48 f7 da             	neg    %rdx
ffffffff8040fa79:	48 01 c9             	add    %rcx,%rcx
ffffffff8040fa7c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040fa83:	80 
ffffffff8040fa84:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040fa88:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040fa8f:	ff 
ffffffff8040fa90:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040fa94:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fa98:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040fa9b:	75 eb                	jne    ffffffff8040fa88 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1db8>
  vga_output << " ss : " << args->ss << "\n";
ffffffff8040fa9d:	48 8b 04 24          	mov    (%rsp),%rax
  size_t num_len = 0;
ffffffff8040faa1:	31 d2                	xor    %edx,%edx
ffffffff8040faa3:	48 8b 40 20          	mov    0x20(%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040faa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040faae:	00 00 
    buffer[i] = num % base;
ffffffff8040fab0:	48 89 c1             	mov    %rax,%rcx
    num_len++;
ffffffff8040fab3:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff8040fab7:	83 e1 0f             	and    $0xf,%ecx
ffffffff8040faba:	88 4c 14 3b          	mov    %cl,0x3b(%rsp,%rdx,1)
ffffffff8040fabe:	48 89 c1             	mov    %rax,%rcx
    num /= base;
ffffffff8040fac1:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040fac5:	48 83 f9 0f          	cmp    $0xf,%rcx
ffffffff8040fac9:	76 06                	jbe    ffffffff8040fad1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1e01>
  for (size_t i = 0; i < size; i++) {
ffffffff8040facb:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8040facf:	75 df                	jne    ffffffff8040fab0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1de0>
  if (num != 0) {
ffffffff8040fad1:	48 85 c0             	test   %rax,%rax
ffffffff8040fad4:	0f 85 66 1b 00 00    	jne    ffffffff80411640 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3970>
    str[offset++] = '0';
ffffffff8040fada:	41 bf 30 78 00 00    	mov    $0x7830,%r15d
ffffffff8040fae0:	48 8d 7c 24 3c       	lea    0x3c(%rsp),%rdi
ffffffff8040fae5:	48 8d 74 14 3b       	lea    0x3b(%rsp,%rdx,1),%rsi
ffffffff8040faea:	66 44 89 7c 24 28    	mov    %r15w,0x28(%rsp)
ffffffff8040faf0:	48 8d 4c 24 2a       	lea    0x2a(%rsp),%rcx
ffffffff8040faf5:	eb 1f                	jmp    ffffffff8040fb16 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1e46>
ffffffff8040faf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040fafe:	00 00 
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040fb00:	83 c0 37             	add    $0x37,%eax
ffffffff8040fb03:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040fb07:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040fb0a:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040fb0e:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8040fb11:	74 1d                	je     ffffffff8040fb30 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1e60>
ffffffff8040fb13:	48 89 c6             	mov    %rax,%rsi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040fb16:	0f b6 06             	movzbl (%rsi),%eax
ffffffff8040fb19:	3c 09                	cmp    $0x9,%al
ffffffff8040fb1b:	7f e3                	jg     ffffffff8040fb00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1e30>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040fb1d:	83 c0 30             	add    $0x30,%eax
ffffffff8040fb20:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8040fb24:	88 41 ff             	mov    %al,-0x1(%rcx)
ffffffff8040fb27:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040fb2b:	48 39 f7             	cmp    %rsi,%rdi
ffffffff8040fb2e:	75 e3                	jne    ffffffff8040fb13 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1e43>
  str[num_len + offset] = 0;
ffffffff8040fb30:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040fb35:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff8040fb3a:	e8 81 d6 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040fb3f:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040fb41:	48 85 c0             	test   %rax,%rax
ffffffff8040fb44:	0f 84 2e 1c 00 00    	je     ffffffff80411778 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3aa8>
ffffffff8040fb4a:	4c 8b 25 0f e5 00 00 	mov    0xe50f(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040fb51:	4c 8b 15 10 e5 00 00 	mov    0xe510(%rip),%r10        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fb58:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
ffffffff8040fb5d:	4c 8b 0d 14 e5 00 00 	mov    0xe514(%rip),%r9        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040fb64:	48 8b 3d 05 e5 00 00 	mov    0xe505(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040fb6b:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040fb70:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040fb73:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040fb77:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040fb7b:	4c 01 d2             	add    %r10,%rdx
ffffffff8040fb7e:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040fb85:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040fb8c:	80 
ffffffff8040fb8d:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff8040fb92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040fb98:	4d 89 d0             	mov    %r10,%r8
ffffffff8040fb9b:	48 89 c1             	mov    %rax,%rcx
ffffffff8040fb9e:	4d 29 c8             	sub    %r9,%r8
ffffffff8040fba1:	49 39 c0             	cmp    %rax,%r8
ffffffff8040fba4:	4c 0f 47 c0          	cmova  %rax,%r8
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040fba8:	49 39 c0             	cmp    %rax,%r8
ffffffff8040fbab:	49 0f 46 c8          	cmovbe %r8,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040fbaf:	48 85 c9             	test   %rcx,%rcx
ffffffff8040fbb2:	0f 84 28 19 00 00    	je     ffffffff804114e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3810>
    size_t i = pos;
ffffffff8040fbb8:	31 d2                	xor    %edx,%edx
ffffffff8040fbba:	eb 11                	jmp    ffffffff8040fbcd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1efd>
ffffffff8040fbbc:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040fbc0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fbc4:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8040fbc7:	0f 84 13 19 00 00    	je     ffffffff804114e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3810>
      if (str_[i] == c) {
ffffffff8040fbcd:	80 3c 16 0a          	cmpb   $0xa,(%rsi,%rdx,1)
ffffffff8040fbd1:	75 ed                	jne    ffffffff8040fbc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1ef0>
ffffffff8040fbd3:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040fbd6:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040fbd9:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040fbdc:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040fbe0:	4c 39 e7             	cmp    %r12,%rdi
ffffffff8040fbe3:	0f 84 47 18 00 00    	je     ffffffff80411430 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3760>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040fbe9:	4c 01 c9             	add    %r9,%rcx
ffffffff8040fbec:	4c 39 d1             	cmp    %r10,%rcx
ffffffff8040fbef:	49 0f 47 ca          	cmova  %r10,%rcx
ffffffff8040fbf3:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040fbf6:	0f 86 d3 18 00 00    	jbe    ffffffff804114cf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x37ff>
ffffffff8040fbfc:	4c 8d 1c bf          	lea    (%rdi,%rdi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040fc00:	49 89 f5             	mov    %rsi,%r13
ffffffff8040fc03:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040fc07:	4d 29 cd             	sub    %r9,%r13
ffffffff8040fc0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040fc10:	66 43 0f be 6c 0d 00 	movsbw 0x0(%r13,%r9,1),%bp
ffffffff8040fc17:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040fc1c:	66 43 89 ac 4b 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r9,2)
ffffffff8040fc23:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040fc25:	49 83 c1 01          	add    $0x1,%r9
ffffffff8040fc29:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040fc2c:	75 e2                	jne    ffffffff8040fc10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f40>
    if (current_col_ == num_cols_) {
ffffffff8040fc2e:	49 39 ca             	cmp    %rcx,%r10
ffffffff8040fc31:	0f 84 b9 17 00 00    	je     ffffffff804113f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3720>
    current_col_ = i;
ffffffff8040fc37:	48 89 0d 3a e4 00 00 	mov    %rcx,0xe43a(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040fc3e:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040fc42:	0f 84 ca 17 00 00    	je     ffffffff80411412 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3742>
ffffffff8040fc48:	48 85 c9             	test   %rcx,%rcx
ffffffff8040fc4b:	74 0a                	je     ffffffff8040fc57 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f87>
ffffffff8040fc4d:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff8040fc51:	0f 86 19 19 00 00    	jbe    ffffffff80411570 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x38a0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040fc57:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fc5b:	49 89 c9             	mov    %rcx,%r9
ffffffff8040fc5e:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040fc61:	4c 0f 46 c2          	cmovbe %rdx,%r8
    str_ += n;
ffffffff8040fc65:	4c 01 c6             	add    %r8,%rsi
    size_ -= min(n, size_);
ffffffff8040fc68:	49 39 c0             	cmp    %rax,%r8
ffffffff8040fc6b:	4c 0f 47 c0          	cmova  %rax,%r8
ffffffff8040fc6f:	4c 29 c0             	sub    %r8,%rax
    while (!s.empty()) {
ffffffff8040fc72:	48 85 c0             	test   %rax,%rax
ffffffff8040fc75:	0f 85 1d ff ff ff    	jne    ffffffff8040fb98 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1ec8>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fc7b:	48 85 ff             	test   %rdi,%rdi
ffffffff8040fc7e:	74 66                	je     ffffffff8040fce6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2016>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fc80:	48 8b 35 e1 e3 00 00 	mov    0xe3e1(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fc87:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fc8e:	31 d2                	xor    %edx,%edx
ffffffff8040fc90:	48 89 f0             	mov    %rsi,%rax
ffffffff8040fc93:	48 8d 1c 36          	lea    (%rsi,%rsi,1),%rbx
ffffffff8040fc97:	48 f7 d8             	neg    %rax
ffffffff8040fc9a:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040fca1:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fca2:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040fca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040fcae:	00 00 
ffffffff8040fcb0:	4c 8d 04 03          	lea    (%rbx,%rax,1),%r8
ffffffff8040fcb4:	48 85 f6             	test   %rsi,%rsi
ffffffff8040fcb7:	74 1e                	je     ffffffff8040fcd7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2007>
ffffffff8040fcb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040fcc0:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040fcc7:	f4 ff 
ffffffff8040fcc9:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040fccd:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fcd2:	49 39 c0             	cmp    %rax,%r8
ffffffff8040fcd5:	75 e9                	jne    ffffffff8040fcc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1ff0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fcd7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fcdb:	4c 89 c0             	mov    %r8,%rax
ffffffff8040fcde:	4c 01 d9             	add    %r11,%rcx
ffffffff8040fce1:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040fce4:	75 ca                	jne    ffffffff8040fcb0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1fe0>
    if (current_col_ != 0) {
ffffffff8040fce6:	4d 85 c9             	test   %r9,%r9
ffffffff8040fce9:	74 52                	je     ffffffff8040fd3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x206d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fceb:	48 8b 0d 76 e3 00 00 	mov    0xe376(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fcf2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040fcf5:	74 46                	je     ffffffff8040fd3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x206d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040fcf7:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040fcfa:	48 8d 34 bf          	lea    (%rdi,%rdi,4),%rsi
ffffffff8040fcfe:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8040fd02:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040fd06:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8040fd0d:	00 
ffffffff8040fd0e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040fd15:	00 
ffffffff8040fd16:	48 f7 da             	neg    %rdx
ffffffff8040fd19:	48 01 c9             	add    %rcx,%rcx
ffffffff8040fd1c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040fd23:	80 
ffffffff8040fd24:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040fd28:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040fd2f:	ff 
ffffffff8040fd30:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040fd34:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fd38:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040fd3b:	75 eb                	jne    ffffffff8040fd28 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2058>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040fd3d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040fd44:	e8 77 d4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8040fd49:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8040fd4b:	48 85 c0             	test   %rax,%rax
ffffffff8040fd4e:	0f 84 0c 1a 00 00    	je     ffffffff80411760 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3a90>
ffffffff8040fd54:	4c 8b 25 05 e3 00 00 	mov    0xe305(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040fd5b:	4c 8b 0d 06 e3 00 00 	mov    0xe306(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fd62:	49 c7 c2 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r10
ffffffff8040fd69:	4c 8b 05 08 e3 00 00 	mov    0xe308(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040fd70:	48 8b 35 f9 e2 00 00 	mov    0xe2f9(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8040fd77:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8040fd7c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040fd7f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040fd83:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040fd87:	4c 01 ca             	add    %r9,%rdx
ffffffff8040fd8a:	48 8d 99 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rbx
ffffffff8040fd91:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff8040fd98:	80 
ffffffff8040fd99:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff8040fd9e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040fda0:	4c 89 cf             	mov    %r9,%rdi
ffffffff8040fda3:	48 89 c1             	mov    %rax,%rcx
ffffffff8040fda6:	4c 29 c7             	sub    %r8,%rdi
ffffffff8040fda9:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040fdac:	48 0f 47 f8          	cmova  %rax,%rdi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040fdb0:	48 39 c7             	cmp    %rax,%rdi
ffffffff8040fdb3:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040fdb7:	48 85 c9             	test   %rcx,%rcx
ffffffff8040fdba:	0f 84 00 16 00 00    	je     ffffffff804113c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x36f0>
    size_t i = pos;
ffffffff8040fdc0:	31 d2                	xor    %edx,%edx
ffffffff8040fdc2:	eb 11                	jmp    ffffffff8040fdd5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2105>
ffffffff8040fdc4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8040fdc8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fdcc:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8040fdcf:	0f 84 eb 15 00 00    	je     ffffffff804113c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x36f0>
      if (str_[i] == c) {
ffffffff8040fdd5:	41 80 3c 12 0a       	cmpb   $0xa,(%r10,%rdx,1)
ffffffff8040fdda:	75 ec                	jne    ffffffff8040fdc8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x20f8>
ffffffff8040fddc:	48 89 d3             	mov    %rdx,%rbx
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040fddf:	48 39 d0             	cmp    %rdx,%rax
ffffffff8040fde2:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040fde5:	48 0f 46 c8          	cmovbe %rax,%rcx
    if (current_row_ == num_rows_) {
ffffffff8040fde9:	4c 39 e6             	cmp    %r12,%rsi
ffffffff8040fdec:	0f 84 1e 15 00 00    	je     ffffffff80411310 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3640>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040fdf2:	4c 01 c1             	add    %r8,%rcx
ffffffff8040fdf5:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8040fdf8:	49 0f 47 c9          	cmova  %r9,%rcx
ffffffff8040fdfc:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040fdff:	0f 86 a9 15 00 00    	jbe    ffffffff804113ae <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x36de>
ffffffff8040fe05:	4c 8d 1c b6          	lea    (%rsi,%rsi,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8040fe09:	4d 89 d5             	mov    %r10,%r13
ffffffff8040fe0c:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff8040fe10:	4d 29 c5             	sub    %r8,%r13
ffffffff8040fe13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040fe18:	66 43 0f be 6c 05 00 	movsbw 0x0(%r13,%r8,1),%bp
ffffffff8040fe1f:	66 81 cd 00 0f       	or     $0xf00,%bp
ffffffff8040fe24:	66 43 89 ac 43 80 e0 	mov    %bp,-0x7fbe1f80(%r11,%r8,2)
ffffffff8040fe2b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040fe2d:	49 83 c0 01          	add    $0x1,%r8
ffffffff8040fe31:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8040fe34:	75 e2                	jne    ffffffff8040fe18 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2148>
    if (current_col_ == num_cols_) {
ffffffff8040fe36:	49 39 c9             	cmp    %rcx,%r9
ffffffff8040fe39:	0f 84 91 14 00 00    	je     ffffffff804112d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3600>
    current_col_ = i;
ffffffff8040fe3f:	48 89 0d 32 e2 00 00 	mov    %rcx,0xe232(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040fe46:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040fe4a:	0f 84 a2 14 00 00    	je     ffffffff804112f2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3622>
ffffffff8040fe50:	48 85 c9             	test   %rcx,%rcx
ffffffff8040fe53:	74 0a                	je     ffffffff8040fe5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x218f>
ffffffff8040fe55:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff8040fe59:	0f 86 b1 16 00 00    	jbe    ffffffff80411510 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3840>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040fe5f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fe63:	49 89 c8             	mov    %rcx,%r8
ffffffff8040fe66:	48 39 fa             	cmp    %rdi,%rdx
ffffffff8040fe69:	48 0f 46 fa          	cmovbe %rdx,%rdi
    str_ += n;
ffffffff8040fe6d:	49 01 fa             	add    %rdi,%r10
    size_ -= min(n, size_);
ffffffff8040fe70:	48 39 f8             	cmp    %rdi,%rax
ffffffff8040fe73:	48 0f 46 f8          	cmovbe %rax,%rdi
ffffffff8040fe77:	48 29 f8             	sub    %rdi,%rax
    while (!s.empty()) {
ffffffff8040fe7a:	48 85 c0             	test   %rax,%rax
ffffffff8040fe7d:	0f 85 1d ff ff ff    	jne    ffffffff8040fda0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x20d0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fe83:	48 85 f6             	test   %rsi,%rsi
ffffffff8040fe86:	74 5e                	je     ffffffff8040fee6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2216>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fe88:	48 8b 3d d9 e1 00 00 	mov    0xe1d9(%rip),%rdi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fe8f:	48 c7 c1 60 e0 41 80 	mov    $0xffffffff8041e060,%rcx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fe96:	31 d2                	xor    %edx,%edx
ffffffff8040fe98:	48 89 f8             	mov    %rdi,%rax
ffffffff8040fe9b:	48 8d 1c 3f          	lea    (%rdi,%rdi,1),%rbx
ffffffff8040fe9f:	48 f7 d8             	neg    %rax
ffffffff8040fea2:	4c 8d 9c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r11
ffffffff8040fea9:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040feaa:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8040feaf:	90                   	nop
ffffffff8040feb0:	4c 8d 0c 03          	lea    (%rbx,%rax,1),%r9
ffffffff8040feb4:	48 85 ff             	test   %rdi,%rdi
ffffffff8040feb7:	74 1e                	je     ffffffff8040fed7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2207>
ffffffff8040feb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040fec0:	44 0f b7 94 01 20 80 	movzwl -0xb7fe0(%rcx,%rax,1),%r10d
ffffffff8040fec7:	f4 ff 
ffffffff8040fec9:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040fecd:	66 44 89 50 fe       	mov    %r10w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fed2:	49 39 c1             	cmp    %rax,%r9
ffffffff8040fed5:	75 e9                	jne    ffffffff8040fec0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x21f0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fed7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fedb:	4c 89 c8             	mov    %r9,%rax
ffffffff8040fede:	4c 01 d9             	add    %r11,%rcx
ffffffff8040fee1:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040fee4:	75 ca                	jne    ffffffff8040feb0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x21e0>
    if (current_col_ != 0) {
ffffffff8040fee6:	4d 85 c0             	test   %r8,%r8
ffffffff8040fee9:	74 52                	je     ffffffff8040ff3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x226d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040feeb:	48 8b 0d 76 e1 00 00 	mov    0xe176(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fef2:	48 85 c9             	test   %rcx,%rcx
ffffffff8040fef5:	74 46                	je     ffffffff8040ff3d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x226d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040fef7:	48 89 ca             	mov    %rcx,%rdx
ffffffff8040fefa:	48 0f af d6          	imul   %rsi,%rdx
ffffffff8040fefe:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8040ff02:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8040ff06:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8040ff0d:	00 
ffffffff8040ff0e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff8040ff15:	00 
ffffffff8040ff16:	48 f7 da             	neg    %rdx
ffffffff8040ff19:	48 01 c9             	add    %rcx,%rcx
ffffffff8040ff1c:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff8040ff23:	80 
ffffffff8040ff24:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040ff28:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8040ff2f:	ff 
ffffffff8040ff30:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040ff34:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040ff38:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040ff3b:	75 eb                	jne    ffffffff8040ff28 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2258>
}
ffffffff8040ff3d:	48 83 c4 58          	add    $0x58,%rsp
ffffffff8040ff41:	5b                   	pop    %rbx
ffffffff8040ff42:	5d                   	pop    %rbp
ffffffff8040ff43:	41 5c                	pop    %r12
ffffffff8040ff45:	41 5d                	pop    %r13
ffffffff8040ff47:	41 5e                	pop    %r14
ffffffff8040ff49:	41 5f                	pop    %r15
ffffffff8040ff4b:	c3                   	retq   
ffffffff8040ff4c:	0f 1f 40 00          	nopl   0x0(%rax)
      current_col_ = 0;
      current_row_++;
ffffffff8040ff50:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ff54:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff8040ff56:	48 c7 05 17 e1 00 00 	movq   $0x0,0xe117(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8040ff5d:	00 00 00 00 
      current_row_++;
ffffffff8040ff61:	48 89 35 08 e1 00 00 	mov    %rsi,0xe108(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ff68:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8040ff6c:	0f 85 9d e0 ff ff    	jne    ffffffff8040e00f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x33f>
ffffffff8040ff72:	48 39 d7             	cmp    %rdx,%rdi
ffffffff8040ff75:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ff78:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff8040ff7c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff8040ff7f:	48 39 c2             	cmp    %rax,%rdx
ffffffff8040ff82:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff8040ff86:	48 29 d0             	sub    %rdx,%rax
ffffffff8040ff89:	e9 9c e0 ff ff       	jmpq   ffffffff8040e02a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x35a>
ffffffff8040ff8e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8040ff90:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff8040ff94:	76 5a                	jbe    ffffffff8040fff0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2320>
ffffffff8040ff96:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8040ff9b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff8040ffa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ffa8:	45 31 db             	xor    %r11d,%r11d
ffffffff8040ffab:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff8040ffb2:	4d 85 c9             	test   %r9,%r9
ffffffff8040ffb5:	74 29                	je     ffffffff8040ffe0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2310>
ffffffff8040ffb7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8040ffbc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff8040ffc0:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff8040ffc7:	41 80 
ffffffff8040ffc9:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff8040ffd0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ffd2:	49 83 c3 01          	add    $0x1,%r11
ffffffff8040ffd6:	4d 39 cb             	cmp    %r9,%r11
ffffffff8040ffd9:	75 e5                	jne    ffffffff8040ffc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x22f0>
ffffffff8040ffdb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8040ffe0:	49 83 c5 01          	add    $0x1,%r13
ffffffff8040ffe4:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8040ffeb:	49 39 f5             	cmp    %rsi,%r13
ffffffff8040ffee:	75 b8                	jne    ffffffff8040ffa8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x22d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fff0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
ffffffff8040fff5:	4d 85 c9             	test   %r9,%r9
ffffffff8040fff8:	74 16                	je     ffffffff80410010 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2340>
ffffffff8040fffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410000:	31 ed                	xor    %ebp,%ebp
ffffffff80410002:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410006:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041000b:	4d 39 df             	cmp    %r11,%r15
ffffffff8041000e:	75 f0                	jne    ffffffff80410000 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2330>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410010:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410013:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410017:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041001a:	48 89 35 4f e0 00 00 	mov    %rsi,0xe04f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410021:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410025:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410028:	0f 82 87 df ff ff    	jb     ffffffff8040dfb5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2e5>
ffffffff8041002e:	4c 89 c1             	mov    %r8,%rcx
ffffffff80410031:	e9 b0 df ff ff       	jmpq   ffffffff8040dfe6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x316>
ffffffff80410036:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041003d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80410040:	48 89 fa             	mov    %rdi,%rdx
ffffffff80410043:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff8041004a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff8041004e:	0f 85 3b df ff ff    	jne    ffffffff8040df8f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff80410054:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff8041005b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410062:	48 89 c1             	mov    %rax,%rcx
ffffffff80410065:	e9 2f df ff ff       	jmpq   ffffffff8040df99 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2c9>
ffffffff8041006a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80410070:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410074:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80410076:	48 c7 05 f7 df 00 00 	movq   $0x0,0xdff7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041007d:	00 00 00 00 
      current_row_++;
ffffffff80410081:	48 89 35 e8 df 00 00 	mov    %rsi,0xdfe8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410088:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8041008c:	0f 85 7d dd ff ff    	jne    ffffffff8040de0f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13f>
ffffffff80410092:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80410095:	49 89 c8             	mov    %rcx,%r8
ffffffff80410098:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff8041009c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff8041009f:	48 39 c2             	cmp    %rax,%rdx
ffffffff804100a2:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff804100a6:	48 29 d0             	sub    %rdx,%rax
ffffffff804100a9:	e9 7c dd ff ff       	jmpq   ffffffff8040de2a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x15a>
ffffffff804100ae:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804100b0:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff804100b4:	76 5a                	jbe    ffffffff80410110 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2440>
ffffffff804100b6:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff804100bb:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff804100c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804100c8:	45 31 db             	xor    %r11d,%r11d
ffffffff804100cb:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff804100d2:	4d 85 c9             	test   %r9,%r9
ffffffff804100d5:	74 29                	je     ffffffff80410100 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2430>
ffffffff804100d7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff804100dc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804100e0:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff804100e7:	41 80 
ffffffff804100e9:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff804100f0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804100f2:	49 83 c3 01          	add    $0x1,%r11
ffffffff804100f6:	4d 39 cb             	cmp    %r9,%r11
ffffffff804100f9:	75 e5                	jne    ffffffff804100e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2410>
ffffffff804100fb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410100:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410104:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041010b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041010e:	75 b8                	jne    ffffffff804100c8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x23f8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410110:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
ffffffff80410115:	4d 85 c9             	test   %r9,%r9
ffffffff80410118:	74 17                	je     ffffffff80410131 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2461>
ffffffff8041011a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410120:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410123:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410127:	66 45 89 73 1e       	mov    %r14w,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041012c:	4d 39 fb             	cmp    %r15,%r11
ffffffff8041012f:	75 ef                	jne    ffffffff80410120 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2450>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410131:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410134:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410138:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041013b:	48 89 35 2e df 00 00 	mov    %rsi,0xdf2e(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410142:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410146:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410149:	0f 82 66 dc ff ff    	jb     ffffffff8040ddb5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xe5>
ffffffff8041014f:	4c 89 c1             	mov    %r8,%rcx
ffffffff80410152:	e9 8f dc ff ff       	jmpq   ffffffff8040dde6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x116>
ffffffff80410157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041015e:	00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80410160:	48 89 fa             	mov    %rdi,%rdx
ffffffff80410163:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff8041016a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff8041016e:	0f 85 1b dc ff ff    	jne    ffffffff8040dd8f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xbf>
ffffffff80410174:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff8041017b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410182:	48 89 c1             	mov    %rax,%rcx
ffffffff80410185:	e9 0f dc ff ff       	jmpq   ffffffff8040dd99 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xc9>
ffffffff8041018a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410190:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410193:	76 34                	jbe    ffffffff804101c9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x24f9>
ffffffff80410195:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410199:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041019d:	4c 01 c1             	add    %r8,%rcx
ffffffff804101a0:	4d 01 c8             	add    %r9,%r8
ffffffff804101a3:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff804101aa:	80 
ffffffff804101ab:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff804101b2:	80 
ffffffff804101b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804101b8:	45 31 ed             	xor    %r13d,%r13d
ffffffff804101bb:	48 83 c1 02          	add    $0x2,%rcx
ffffffff804101bf:	66 44 89 69 1e       	mov    %r13w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804101c4:	4c 39 c1             	cmp    %r8,%rcx
ffffffff804101c7:	75 ef                	jne    ffffffff804101b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x24e8>
        current_row_++;
ffffffff804101c9:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804101cd:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff804101cf:	48 c7 05 9e de 00 00 	movq   $0x0,0xde9e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804101d6:	00 00 00 00 
        current_row_++;
ffffffff804101da:	48 89 35 8f de 00 00 	mov    %rsi,0xde8f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804101e1:	e9 29 dc ff ff       	jmpq   ffffffff8040de0f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13f>
ffffffff804101e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804101ed:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804101f0:	49 39 c9             	cmp    %rcx,%r9
ffffffff804101f3:	76 34                	jbe    ffffffff80410229 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2559>
ffffffff804101f5:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff804101f9:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff804101fd:	4c 01 c1             	add    %r8,%rcx
ffffffff80410200:	4d 01 c8             	add    %r9,%r8
ffffffff80410203:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041020a:	80 
ffffffff8041020b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410212:	80 
ffffffff80410213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410218:	45 31 f6             	xor    %r14d,%r14d
ffffffff8041021b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041021f:	66 44 89 71 1e       	mov    %r14w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410224:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410227:	75 ef                	jne    ffffffff80410218 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2548>
        current_row_++;
ffffffff80410229:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041022d:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff8041022f:	48 c7 05 3e de 00 00 	movq   $0x0,0xde3e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410236:	00 00 00 00 
        current_row_++;
ffffffff8041023a:	48 89 35 2f de 00 00 	mov    %rsi,0xde2f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410241:	e9 c9 dd ff ff       	jmpq   ffffffff8040e00f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x33f>
ffffffff80410246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041024d:	00 00 00 
      current_row_++;
ffffffff80410250:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410254:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80410256:	48 c7 05 17 de 00 00 	movq   $0x0,0xde17(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041025d:	00 00 00 00 
      current_row_++;
ffffffff80410261:	48 89 35 08 de 00 00 	mov    %rsi,0xde08(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410268:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8041026c:	0f 85 25 e0 ff ff    	jne    ffffffff8040e297 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x5c7>
ffffffff80410272:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80410275:	49 89 c8             	mov    %rcx,%r8
ffffffff80410278:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff8041027c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff8041027f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410282:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410286:	48 29 d0             	sub    %rdx,%rax
ffffffff80410289:	e9 24 e0 ff ff       	jmpq   ffffffff8040e2b2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x5e2>
ffffffff8041028e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410290:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80410294:	76 5a                	jbe    ffffffff804102f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2620>
ffffffff80410296:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8041029b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff804102a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804102a8:	45 31 db             	xor    %r11d,%r11d
ffffffff804102ab:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff804102b2:	4d 85 c9             	test   %r9,%r9
ffffffff804102b5:	74 29                	je     ffffffff804102e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2610>
ffffffff804102b7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff804102bc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804102c0:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff804102c7:	41 80 
ffffffff804102c9:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff804102d0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804102d2:	49 83 c3 01          	add    $0x1,%r11
ffffffff804102d6:	4d 39 cb             	cmp    %r9,%r11
ffffffff804102d9:	75 e5                	jne    ffffffff804102c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x25f0>
ffffffff804102db:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804102e0:	49 83 c5 01          	add    $0x1,%r13
ffffffff804102e4:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff804102eb:	4d 39 e5             	cmp    %r12,%r13
ffffffff804102ee:	75 b8                	jne    ffffffff804102a8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x25d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804102f0:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
ffffffff804102f5:	4d 85 c9             	test   %r9,%r9
ffffffff804102f8:	74 16                	je     ffffffff80410310 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2640>
ffffffff804102fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410300:	31 ed                	xor    %ebp,%ebp
ffffffff80410302:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410306:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041030b:	4d 39 fb             	cmp    %r15,%r11
ffffffff8041030e:	75 f0                	jne    ffffffff80410300 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2630>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410310:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410313:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410317:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041031a:	48 89 35 4f dd 00 00 	mov    %rsi,0xdd4f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410321:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410325:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410328:	0f 82 0f df ff ff    	jb     ffffffff8040e23d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x56d>
ffffffff8041032e:	4c 89 c1             	mov    %r8,%rcx
ffffffff80410331:	e9 38 df ff ff       	jmpq   ffffffff8040e26e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x59e>
ffffffff80410336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041033d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80410340:	48 89 fa             	mov    %rdi,%rdx
ffffffff80410343:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff8041034a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff8041034e:	0f 85 c3 de ff ff    	jne    ffffffff8040e217 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x547>
ffffffff80410354:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff8041035b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410362:	48 89 c1             	mov    %rax,%rcx
ffffffff80410365:	e9 b7 de ff ff       	jmpq   ffffffff8040e221 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x551>
ffffffff8041036a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410370:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410373:	76 34                	jbe    ffffffff804103a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x26d9>
ffffffff80410375:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410379:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041037d:	4c 01 c1             	add    %r8,%rcx
ffffffff80410380:	4d 01 c8             	add    %r9,%r8
ffffffff80410383:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041038a:	80 
ffffffff8041038b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410392:	80 
ffffffff80410393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410398:	45 31 db             	xor    %r11d,%r11d
ffffffff8041039b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041039f:	66 44 89 59 1e       	mov    %r11w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804103a4:	4c 39 c1             	cmp    %r8,%rcx
ffffffff804103a7:	75 ef                	jne    ffffffff80410398 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x26c8>
        current_row_++;
ffffffff804103a9:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804103ad:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff804103af:	48 c7 05 be dc 00 00 	movq   $0x0,0xdcbe(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804103b6:	00 00 00 00 
        current_row_++;
ffffffff804103ba:	48 89 35 af dc 00 00 	mov    %rsi,0xdcaf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804103c1:	e9 d1 de ff ff       	jmpq   ffffffff8040e297 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x5c7>
ffffffff804103c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804103cd:	00 00 00 
      current_row_++;
ffffffff804103d0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804103d4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804103d6:	48 c7 05 97 dc 00 00 	movq   $0x0,0xdc97(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804103dd:	00 00 00 00 
      current_row_++;
ffffffff804103e1:	48 89 35 88 dc 00 00 	mov    %rsi,0xdc88(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804103e8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff804103ec:	0f 85 c5 e3 ff ff    	jne    ffffffff8040e7b7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xae7>
ffffffff804103f2:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff804103f5:	49 89 c8             	mov    %rcx,%r8
ffffffff804103f8:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff804103fc:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff804103ff:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410402:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410406:	48 29 d0             	sub    %rdx,%rax
ffffffff80410409:	e9 c4 e3 ff ff       	jmpq   ffffffff8040e7d2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xb02>
ffffffff8041040e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410410:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80410414:	76 5a                	jbe    ffffffff80410470 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x27a0>
ffffffff80410416:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8041041b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410428:	45 31 db             	xor    %r11d,%r11d
ffffffff8041042b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410432:	4d 85 c9             	test   %r9,%r9
ffffffff80410435:	74 29                	je     ffffffff80410460 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2790>
ffffffff80410437:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041043c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410440:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410447:	41 80 
ffffffff80410449:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410450:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410452:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410456:	4d 39 cb             	cmp    %r9,%r11
ffffffff80410459:	75 e5                	jne    ffffffff80410440 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2770>
ffffffff8041045b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410460:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410464:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041046b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041046e:	75 b8                	jne    ffffffff80410428 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410470:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410475:	4d 85 c9             	test   %r9,%r9
ffffffff80410478:	74 16                	je     ffffffff80410490 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x27c0>
ffffffff8041047a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410480:	31 ed                	xor    %ebp,%ebp
ffffffff80410482:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410486:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041048b:	4d 39 fb             	cmp    %r15,%r11
ffffffff8041048e:	75 f0                	jne    ffffffff80410480 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x27b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410490:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410493:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410497:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041049a:	48 89 35 cf db 00 00 	mov    %rsi,0xdbcf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804104a1:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804104a5:	4c 39 c1             	cmp    %r8,%rcx
ffffffff804104a8:	0f 87 af e2 ff ff    	ja     ffffffff8040e75d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xa8d>
ffffffff804104ae:	4c 89 c1             	mov    %r8,%rcx
ffffffff804104b1:	e9 d8 e2 ff ff       	jmpq   ffffffff8040e78e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xabe>
ffffffff804104b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804104bd:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804104c0:	48 89 fa             	mov    %rdi,%rdx
ffffffff804104c3:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff804104ca:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff804104ce:	0f 85 63 e2 ff ff    	jne    ffffffff8040e737 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xa67>
ffffffff804104d4:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff804104db:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804104e2:	48 89 c1             	mov    %rax,%rcx
ffffffff804104e5:	e9 57 e2 ff ff       	jmpq   ffffffff8040e741 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xa71>
ffffffff804104ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff804104f0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804104f4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804104f6:	48 c7 05 77 db 00 00 	movq   $0x0,0xdb77(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804104fd:	00 00 00 00 
      current_row_++;
ffffffff80410501:	48 89 35 68 db 00 00 	mov    %rsi,0xdb68(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410508:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8041050c:	0f 85 75 e0 ff ff    	jne    ffffffff8040e587 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x8b7>
ffffffff80410512:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80410515:	49 89 c8             	mov    %rcx,%r8
ffffffff80410518:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff8041051c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff8041051f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410522:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410526:	48 29 d0             	sub    %rdx,%rax
ffffffff80410529:	e9 74 e0 ff ff       	jmpq   ffffffff8040e5a2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x8d2>
ffffffff8041052e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410530:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80410534:	76 5a                	jbe    ffffffff80410590 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x28c0>
ffffffff80410536:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8041053b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410541:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410548:	45 31 db             	xor    %r11d,%r11d
ffffffff8041054b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410552:	4d 85 c9             	test   %r9,%r9
ffffffff80410555:	74 29                	je     ffffffff80410580 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x28b0>
ffffffff80410557:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041055c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410560:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410567:	41 80 
ffffffff80410569:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410570:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410572:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410576:	4d 39 cb             	cmp    %r9,%r11
ffffffff80410579:	75 e5                	jne    ffffffff80410560 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2890>
ffffffff8041057b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410580:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410584:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041058b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041058e:	75 b8                	jne    ffffffff80410548 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2878>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410590:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410595:	4d 85 c9             	test   %r9,%r9
ffffffff80410598:	74 17                	je     ffffffff804105b1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x28e1>
ffffffff8041059a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804105a0:	45 31 f6             	xor    %r14d,%r14d
ffffffff804105a3:	49 83 c3 02          	add    $0x2,%r11
ffffffff804105a7:	66 45 89 73 1e       	mov    %r14w,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804105ac:	4d 39 df             	cmp    %r11,%r15
ffffffff804105af:	75 ef                	jne    ffffffff804105a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x28d0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804105b1:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff804105b4:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff804105b8:	4c 39 c9             	cmp    %r9,%rcx
ffffffff804105bb:	48 89 35 ae da 00 00 	mov    %rsi,0xdaae(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804105c2:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804105c6:	49 39 c8             	cmp    %rcx,%r8
ffffffff804105c9:	0f 82 5e df ff ff    	jb     ffffffff8040e52d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x85d>
ffffffff804105cf:	4c 89 c1             	mov    %r8,%rcx
ffffffff804105d2:	e9 87 df ff ff       	jmpq   ffffffff8040e55e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x88e>
ffffffff804105d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804105de:	00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804105e0:	48 89 fa             	mov    %rdi,%rdx
ffffffff804105e3:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff804105ea:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff804105ee:	0f 85 13 df ff ff    	jne    ffffffff8040e507 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff804105f4:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff804105fb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410602:	48 89 c1             	mov    %rax,%rcx
ffffffff80410605:	e9 07 df ff ff       	jmpq   ffffffff8040e511 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x841>
ffffffff8041060a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410610:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410613:	76 34                	jbe    ffffffff80410649 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2979>
ffffffff80410615:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410619:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041061d:	4c 01 c1             	add    %r8,%rcx
ffffffff80410620:	4d 01 c8             	add    %r9,%r8
ffffffff80410623:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041062a:	80 
ffffffff8041062b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410632:	80 
ffffffff80410633:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410638:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041063b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041063f:	66 44 89 69 1e       	mov    %r13w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410644:	4c 39 c1             	cmp    %r8,%rcx
ffffffff80410647:	75 ef                	jne    ffffffff80410638 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2968>
        current_row_++;
ffffffff80410649:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041064d:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff8041064f:	48 c7 05 1e da 00 00 	movq   $0x0,0xda1e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410656:	00 00 00 00 
        current_row_++;
ffffffff8041065a:	48 89 35 0f da 00 00 	mov    %rsi,0xda0f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410661:	e9 21 df ff ff       	jmpq   ffffffff8040e587 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x8b7>
ffffffff80410666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041066d:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410670:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410673:	76 34                	jbe    ffffffff804106a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x29d9>
ffffffff80410675:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410679:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041067d:	4c 01 c1             	add    %r8,%rcx
ffffffff80410680:	4d 01 c8             	add    %r9,%r8
ffffffff80410683:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041068a:	80 
ffffffff8041068b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410692:	80 
ffffffff80410693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410698:	45 31 db             	xor    %r11d,%r11d
ffffffff8041069b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041069f:	66 44 89 59 1e       	mov    %r11w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804106a4:	49 39 c8             	cmp    %rcx,%r8
ffffffff804106a7:	75 ef                	jne    ffffffff80410698 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x29c8>
        current_row_++;
ffffffff804106a9:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804106ad:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff804106af:	48 c7 05 be d9 00 00 	movq   $0x0,0xd9be(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804106b6:	00 00 00 00 
        current_row_++;
ffffffff804106ba:	48 89 35 af d9 00 00 	mov    %rsi,0xd9af(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804106c1:	e9 f1 e0 ff ff       	jmpq   ffffffff8040e7b7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xae7>
ffffffff804106c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804106cd:	00 00 00 
      current_row_++;
ffffffff804106d0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804106d4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804106d6:	48 c7 05 97 d9 00 00 	movq   $0x0,0xd997(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804106dd:	00 00 00 00 
      current_row_++;
ffffffff804106e1:	48 89 35 88 d9 00 00 	mov    %rsi,0xd988(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804106e8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff804106ec:	0f 85 6d e5 ff ff    	jne    ffffffff8040ec5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf8f>
ffffffff804106f2:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff804106f5:	49 89 c8             	mov    %rcx,%r8
ffffffff804106f8:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff804106fc:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff804106ff:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410702:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410706:	48 29 d0             	sub    %rdx,%rax
ffffffff80410709:	e9 6c e5 ff ff       	jmpq   ffffffff8040ec7a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xfaa>
ffffffff8041070e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410710:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80410714:	76 5a                	jbe    ffffffff80410770 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2aa0>
ffffffff80410716:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8041071b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410728:	45 31 db             	xor    %r11d,%r11d
ffffffff8041072b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410732:	4d 85 c9             	test   %r9,%r9
ffffffff80410735:	74 29                	je     ffffffff80410760 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2a90>
ffffffff80410737:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041073c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410740:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410747:	41 80 
ffffffff80410749:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410750:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410752:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410756:	4d 39 cb             	cmp    %r9,%r11
ffffffff80410759:	75 e5                	jne    ffffffff80410740 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2a70>
ffffffff8041075b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410760:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410764:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041076b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041076e:	75 b8                	jne    ffffffff80410728 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2a58>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410770:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410775:	4d 85 c9             	test   %r9,%r9
ffffffff80410778:	74 16                	je     ffffffff80410790 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ac0>
ffffffff8041077a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410780:	31 ed                	xor    %ebp,%ebp
ffffffff80410782:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410786:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041078b:	4d 39 df             	cmp    %r11,%r15
ffffffff8041078e:	75 f0                	jne    ffffffff80410780 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ab0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410790:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410793:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410797:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041079a:	48 89 35 cf d8 00 00 	mov    %rsi,0xd8cf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804107a1:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804107a5:	49 39 c8             	cmp    %rcx,%r8
ffffffff804107a8:	0f 82 57 e4 ff ff    	jb     ffffffff8040ec05 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf35>
ffffffff804107ae:	4c 89 c1             	mov    %r8,%rcx
ffffffff804107b1:	e9 80 e4 ff ff       	jmpq   ffffffff8040ec36 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf66>
ffffffff804107b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804107bd:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804107c0:	48 89 fa             	mov    %rdi,%rdx
ffffffff804107c3:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff804107ca:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff804107ce:	0f 85 0b e4 ff ff    	jne    ffffffff8040ebdf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf0f>
ffffffff804107d4:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff804107db:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804107e2:	48 89 c1             	mov    %rax,%rcx
ffffffff804107e5:	e9 ff e3 ff ff       	jmpq   ffffffff8040ebe9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf19>
ffffffff804107ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff804107f0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804107f4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804107f6:	48 c7 05 77 d8 00 00 	movq   $0x0,0xd877(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804107fd:	00 00 00 00 
      current_row_++;
ffffffff80410801:	48 89 35 68 d8 00 00 	mov    %rsi,0xd868(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410808:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8041080c:	0f 85 45 e2 ff ff    	jne    ffffffff8040ea57 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd87>
ffffffff80410812:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80410815:	49 89 c8             	mov    %rcx,%r8
ffffffff80410818:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff8041081c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff8041081f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410822:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410826:	48 29 d0             	sub    %rdx,%rax
ffffffff80410829:	e9 44 e2 ff ff       	jmpq   ffffffff8040ea72 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xda2>
ffffffff8041082e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410830:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80410834:	76 5a                	jbe    ffffffff80410890 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2bc0>
ffffffff80410836:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8041083b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410848:	45 31 db             	xor    %r11d,%r11d
ffffffff8041084b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410852:	4d 85 c9             	test   %r9,%r9
ffffffff80410855:	74 29                	je     ffffffff80410880 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2bb0>
ffffffff80410857:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041085c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410860:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410867:	41 80 
ffffffff80410869:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410870:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410872:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410876:	4d 39 cb             	cmp    %r9,%r11
ffffffff80410879:	75 e5                	jne    ffffffff80410860 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2b90>
ffffffff8041087b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410880:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410884:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041088b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041088e:	75 b8                	jne    ffffffff80410848 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2b78>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410890:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410895:	4d 85 c9             	test   %r9,%r9
ffffffff80410898:	74 17                	je     ffffffff804108b1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2be1>
ffffffff8041089a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804108a0:	45 31 f6             	xor    %r14d,%r14d
ffffffff804108a3:	49 83 c3 02          	add    $0x2,%r11
ffffffff804108a7:	66 45 89 73 1e       	mov    %r14w,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804108ac:	4d 39 df             	cmp    %r11,%r15
ffffffff804108af:	75 ef                	jne    ffffffff804108a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2bd0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804108b1:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff804108b4:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff804108b8:	4c 39 c9             	cmp    %r9,%rcx
ffffffff804108bb:	48 89 35 ae d7 00 00 	mov    %rsi,0xd7ae(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804108c2:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804108c6:	49 39 c8             	cmp    %rcx,%r8
ffffffff804108c9:	0f 82 2e e1 ff ff    	jb     ffffffff8040e9fd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd2d>
ffffffff804108cf:	4c 89 c1             	mov    %r8,%rcx
ffffffff804108d2:	e9 57 e1 ff ff       	jmpq   ffffffff8040ea2e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd5e>
ffffffff804108d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804108de:	00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804108e0:	48 89 fa             	mov    %rdi,%rdx
ffffffff804108e3:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff804108ea:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff804108ee:	0f 85 e3 e0 ff ff    	jne    ffffffff8040e9d7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd07>
ffffffff804108f4:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff804108fb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410902:	48 89 c1             	mov    %rax,%rcx
ffffffff80410905:	e9 d7 e0 ff ff       	jmpq   ffffffff8040e9e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd11>
ffffffff8041090a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410910:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410913:	76 34                	jbe    ffffffff80410949 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2c79>
ffffffff80410915:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410919:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041091d:	4c 01 c1             	add    %r8,%rcx
ffffffff80410920:	4d 01 c8             	add    %r9,%r8
ffffffff80410923:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041092a:	80 
ffffffff8041092b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410932:	80 
ffffffff80410933:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410938:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041093b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041093f:	66 44 89 69 1e       	mov    %r13w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410944:	4c 39 c1             	cmp    %r8,%rcx
ffffffff80410947:	75 ef                	jne    ffffffff80410938 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2c68>
        current_row_++;
ffffffff80410949:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041094d:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff8041094f:	48 c7 05 1e d7 00 00 	movq   $0x0,0xd71e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410956:	00 00 00 00 
        current_row_++;
ffffffff8041095a:	48 89 35 0f d7 00 00 	mov    %rsi,0xd70f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410961:	e9 f1 e0 ff ff       	jmpq   ffffffff8040ea57 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xd87>
ffffffff80410966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041096d:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410970:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410973:	76 34                	jbe    ffffffff804109a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2cd9>
ffffffff80410975:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410979:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041097d:	4c 01 c1             	add    %r8,%rcx
ffffffff80410980:	4d 01 c8             	add    %r9,%r8
ffffffff80410983:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041098a:	80 
ffffffff8041098b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410992:	80 
ffffffff80410993:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410998:	45 31 f6             	xor    %r14d,%r14d
ffffffff8041099b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041099f:	66 44 89 71 1e       	mov    %r14w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804109a4:	49 39 c8             	cmp    %rcx,%r8
ffffffff804109a7:	75 ef                	jne    ffffffff80410998 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2cc8>
        current_row_++;
ffffffff804109a9:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804109ad:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff804109af:	48 c7 05 be d6 00 00 	movq   $0x0,0xd6be(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804109b6:	00 00 00 00 
        current_row_++;
ffffffff804109ba:	48 89 35 af d6 00 00 	mov    %rsi,0xd6af(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804109c1:	e9 99 e2 ff ff       	jmpq   ffffffff8040ec5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xf8f>
ffffffff804109c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804109cd:	00 00 00 
      current_row_++;
ffffffff804109d0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804109d4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804109d6:	48 c7 05 97 d6 00 00 	movq   $0x0,0xd697(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804109dd:	00 00 00 00 
      current_row_++;
ffffffff804109e1:	48 89 35 88 d6 00 00 	mov    %rsi,0xd688(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804109e8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff804109ec:	0f 85 2d e9 ff ff    	jne    ffffffff8040f31f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x164f>
ffffffff804109f2:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff804109f5:	49 89 c8             	mov    %rcx,%r8
ffffffff804109f8:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff804109fc:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff804109ff:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410a02:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410a06:	48 29 d0             	sub    %rdx,%rax
ffffffff80410a09:	e9 2c e9 ff ff       	jmpq   ffffffff8040f33a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x166a>
ffffffff80410a0e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410a10:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80410a14:	76 5a                	jbe    ffffffff80410a70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2da0>
ffffffff80410a16:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff80410a1b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410a21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410a28:	45 31 db             	xor    %r11d,%r11d
ffffffff80410a2b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410a32:	4d 85 c9             	test   %r9,%r9
ffffffff80410a35:	74 29                	je     ffffffff80410a60 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2d90>
ffffffff80410a37:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80410a3c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410a40:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410a47:	41 80 
ffffffff80410a49:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410a50:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410a52:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410a56:	4d 39 d9             	cmp    %r11,%r9
ffffffff80410a59:	75 e5                	jne    ffffffff80410a40 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2d70>
ffffffff80410a5b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410a60:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410a64:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff80410a6b:	4d 39 e5             	cmp    %r12,%r13
ffffffff80410a6e:	75 b8                	jne    ffffffff80410a28 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2d58>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410a70:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410a75:	4d 85 c9             	test   %r9,%r9
ffffffff80410a78:	74 17                	je     ffffffff80410a91 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2dc1>
ffffffff80410a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410a80:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410a83:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410a87:	66 45 89 73 1e       	mov    %r14w,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410a8c:	4d 39 df             	cmp    %r11,%r15
ffffffff80410a8f:	75 ef                	jne    ffffffff80410a80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2db0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410a91:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410a94:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410a98:	4c 39 c9             	cmp    %r9,%rcx
ffffffff80410a9b:	48 89 35 ce d5 00 00 	mov    %rsi,0xd5ce(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410aa2:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410aa6:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410aa9:	0f 82 16 e6 ff ff    	jb     ffffffff8040f0c5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13f5>
ffffffff80410aaf:	4c 89 c1             	mov    %r8,%rcx
    if (current_col_ == num_cols_) {
ffffffff80410ab2:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410ab5:	0f 85 44 e6 ff ff    	jne    ffffffff8040f0ff <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x142f>
ffffffff80410abb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80410ac0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410ac4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80410ac6:	48 c7 05 a7 d5 00 00 	movq   $0x0,0xd5a7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410acd:	00 00 00 00 
      current_row_++;
ffffffff80410ad1:	48 89 35 98 d5 00 00 	mov    %rsi,0xd598(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410ad8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff80410adc:	0f 85 3d e6 ff ff    	jne    ffffffff8040f11f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x144f>
ffffffff80410ae2:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80410ae5:	49 89 c8             	mov    %rcx,%r8
ffffffff80410ae8:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff80410aec:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff80410aef:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410af2:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410af6:	48 29 d0             	sub    %rdx,%rax
ffffffff80410af9:	e9 3c e6 ff ff       	jmpq   ffffffff8040f13a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x146a>
ffffffff80410afe:	66 90                	xchg   %ax,%ax
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80410b00:	48 89 fa             	mov    %rdi,%rdx
ffffffff80410b03:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff80410b0a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff80410b0e:	0f 85 8b e5 ff ff    	jne    ffffffff8040f09f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13cf>
ffffffff80410b14:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff80410b1b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410b22:	48 89 c1             	mov    %rax,%rcx
ffffffff80410b25:	e9 7f e5 ff ff       	jmpq   ffffffff8040f0a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x13d9>
ffffffff80410b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80410b30:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410b34:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80410b36:	48 c7 05 37 d5 00 00 	movq   $0x0,0xd537(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410b3d:	00 00 00 00 
      current_row_++;
ffffffff80410b41:	48 89 35 28 d5 00 00 	mov    %rsi,0xd528(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410b48:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff80410b4c:	0f 85 c5 e3 ff ff    	jne    ffffffff8040ef17 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1247>
ffffffff80410b52:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80410b55:	49 89 c8             	mov    %rcx,%r8
ffffffff80410b58:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff80410b5c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff80410b5f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410b62:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410b66:	48 29 d0             	sub    %rdx,%rax
ffffffff80410b69:	e9 c4 e3 ff ff       	jmpq   ffffffff8040ef32 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1262>
ffffffff80410b6e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410b70:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80410b74:	76 5a                	jbe    ffffffff80410bd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f00>
ffffffff80410b76:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff80410b7b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410b88:	45 31 db             	xor    %r11d,%r11d
ffffffff80410b8b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410b92:	4d 85 c9             	test   %r9,%r9
ffffffff80410b95:	74 29                	je     ffffffff80410bc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ef0>
ffffffff80410b97:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80410b9c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410ba0:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410ba7:	41 80 
ffffffff80410ba9:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410bb0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410bb2:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410bb6:	4d 39 d9             	cmp    %r11,%r9
ffffffff80410bb9:	75 e5                	jne    ffffffff80410ba0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ed0>
ffffffff80410bbb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410bc0:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410bc4:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff80410bcb:	49 39 f5             	cmp    %rsi,%r13
ffffffff80410bce:	75 b8                	jne    ffffffff80410b88 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2eb8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410bd0:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410bd5:	4d 85 c9             	test   %r9,%r9
ffffffff80410bd8:	74 16                	je     ffffffff80410bf0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f20>
ffffffff80410bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410be0:	31 ed                	xor    %ebp,%ebp
ffffffff80410be2:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410be6:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410beb:	4d 39 df             	cmp    %r11,%r15
ffffffff80410bee:	75 f0                	jne    ffffffff80410be0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f10>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410bf0:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410bf3:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410bf7:	4c 39 c9             	cmp    %r9,%rcx
ffffffff80410bfa:	48 89 35 6f d4 00 00 	mov    %rsi,0xd46f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410c01:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410c05:	4c 39 c1             	cmp    %r8,%rcx
ffffffff80410c08:	0f 87 af e2 ff ff    	ja     ffffffff8040eebd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x11ed>
ffffffff80410c0e:	4c 89 c1             	mov    %r8,%rcx
ffffffff80410c11:	e9 d8 e2 ff ff       	jmpq   ffffffff8040eeee <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x121e>
ffffffff80410c16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80410c1d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80410c20:	48 89 fa             	mov    %rdi,%rdx
ffffffff80410c23:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff80410c2a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff80410c2e:	0f 85 63 e2 ff ff    	jne    ffffffff8040ee97 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x11c7>
ffffffff80410c34:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff80410c3b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410c42:	48 89 c1             	mov    %rax,%rcx
ffffffff80410c45:	e9 57 e2 ff ff       	jmpq   ffffffff8040eea1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x11d1>
ffffffff80410c4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410c50:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80410c54:	76 5a                	jbe    ffffffff80410cb0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2fe0>
ffffffff80410c56:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff80410c5b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410c61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410c68:	45 31 db             	xor    %r11d,%r11d
ffffffff80410c6b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410c72:	4d 85 c9             	test   %r9,%r9
ffffffff80410c75:	74 29                	je     ffffffff80410ca0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2fd0>
ffffffff80410c77:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80410c7c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410c80:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410c87:	41 80 
ffffffff80410c89:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410c90:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410c92:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410c96:	4d 39 cb             	cmp    %r9,%r11
ffffffff80410c99:	75 e5                	jne    ffffffff80410c80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2fb0>
ffffffff80410c9b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410ca0:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410ca4:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff80410cab:	49 39 f5             	cmp    %rsi,%r13
ffffffff80410cae:	75 b8                	jne    ffffffff80410c68 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2f98>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410cb0:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410cb5:	4d 85 c9             	test   %r9,%r9
ffffffff80410cb8:	74 16                	je     ffffffff80410cd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3000>
ffffffff80410cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410cc0:	31 ed                	xor    %ebp,%ebp
ffffffff80410cc2:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410cc6:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410ccb:	4d 39 fb             	cmp    %r15,%r11
ffffffff80410cce:	75 f0                	jne    ffffffff80410cc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2ff0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410cd0:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410cd3:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410cd7:	4c 39 c9             	cmp    %r9,%rcx
ffffffff80410cda:	48 89 35 8f d3 00 00 	mov    %rsi,0xd38f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410ce1:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410ce5:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410ce8:	0f 82 d7 e5 ff ff    	jb     ffffffff8040f2c5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x15f5>
ffffffff80410cee:	4c 89 c1             	mov    %r8,%rcx
ffffffff80410cf1:	e9 00 e6 ff ff       	jmpq   ffffffff8040f2f6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1626>
ffffffff80410cf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80410cfd:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80410d00:	48 89 fa             	mov    %rdi,%rdx
ffffffff80410d03:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff80410d0a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff80410d0e:	0f 85 8b e5 ff ff    	jne    ffffffff8040f29f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x15cf>
ffffffff80410d14:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff80410d1b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410d22:	48 89 c1             	mov    %rax,%rcx
ffffffff80410d25:	e9 7f e5 ff ff       	jmpq   ffffffff8040f2a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x15d9>
ffffffff80410d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410d30:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410d33:	76 34                	jbe    ffffffff80410d69 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3099>
ffffffff80410d35:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410d39:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80410d3d:	4c 01 c1             	add    %r8,%rcx
ffffffff80410d40:	4d 01 c8             	add    %r9,%r8
ffffffff80410d43:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff80410d4a:	80 
ffffffff80410d4b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410d52:	80 
ffffffff80410d53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410d58:	45 31 db             	xor    %r11d,%r11d
ffffffff80410d5b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80410d5f:	66 44 89 59 1e       	mov    %r11w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410d64:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410d67:	75 ef                	jne    ffffffff80410d58 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3088>
        current_row_++;
ffffffff80410d69:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80410d6d:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff80410d6f:	48 c7 05 fe d2 00 00 	movq   $0x0,0xd2fe(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410d76:	00 00 00 00 
        current_row_++;
ffffffff80410d7a:	48 89 35 ef d2 00 00 	mov    %rsi,0xd2ef(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410d81:	e9 91 e1 ff ff       	jmpq   ffffffff8040ef17 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1247>
ffffffff80410d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80410d8d:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410d90:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410d93:	76 34                	jbe    ffffffff80410dc9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x30f9>
ffffffff80410d95:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410d99:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80410d9d:	4c 01 c1             	add    %r8,%rcx
ffffffff80410da0:	4d 01 c8             	add    %r9,%r8
ffffffff80410da3:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff80410daa:	80 
ffffffff80410dab:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410db2:	80 
ffffffff80410db3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410db8:	45 31 ed             	xor    %r13d,%r13d
ffffffff80410dbb:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80410dbf:	66 44 89 69 1e       	mov    %r13w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410dc4:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410dc7:	75 ef                	jne    ffffffff80410db8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x30e8>
        current_row_++;
ffffffff80410dc9:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80410dcd:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff80410dcf:	48 c7 05 9e d2 00 00 	movq   $0x0,0xd29e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410dd6:	00 00 00 00 
        current_row_++;
ffffffff80410dda:	48 89 35 8f d2 00 00 	mov    %rsi,0xd28f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410de1:	e9 39 e3 ff ff       	jmpq   ffffffff8040f11f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x144f>
ffffffff80410de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80410ded:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410df0:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410df3:	76 34                	jbe    ffffffff80410e29 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3159>
ffffffff80410df5:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80410df9:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80410dfd:	4c 01 c1             	add    %r8,%rcx
ffffffff80410e00:	4d 01 c8             	add    %r9,%r8
ffffffff80410e03:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff80410e0a:	80 
ffffffff80410e0b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410e12:	80 
ffffffff80410e13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410e18:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410e1b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80410e1f:	66 44 89 71 1e       	mov    %r14w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410e24:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410e27:	75 ef                	jne    ffffffff80410e18 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3148>
        current_row_++;
ffffffff80410e29:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80410e2d:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff80410e2f:	48 c7 05 3e d2 00 00 	movq   $0x0,0xd23e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410e36:	00 00 00 00 
        current_row_++;
ffffffff80410e3a:	48 89 35 2f d2 00 00 	mov    %rsi,0xd22f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410e41:	e9 d9 e4 ff ff       	jmpq   ffffffff8040f31f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x164f>
ffffffff80410e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80410e4d:	00 00 00 
      current_row_++;
ffffffff80410e50:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410e54:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80410e56:	48 c7 05 17 d2 00 00 	movq   $0x0,0xd217(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410e5d:	00 00 00 00 
      current_row_++;
ffffffff80410e61:	48 89 35 08 d2 00 00 	mov    %rsi,0xd208(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410e68:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff80410e6c:	0f 85 4d eb ff ff    	jne    ffffffff8040f9bf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1cef>
ffffffff80410e72:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80410e75:	49 89 c8             	mov    %rcx,%r8
ffffffff80410e78:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff80410e7c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff80410e7f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410e82:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410e86:	48 29 d0             	sub    %rdx,%rax
ffffffff80410e89:	e9 4c eb ff ff       	jmpq   ffffffff8040f9da <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1d0a>
ffffffff80410e8e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410e90:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80410e94:	76 5a                	jbe    ffffffff80410ef0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3220>
ffffffff80410e96:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff80410e9b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80410ea1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410ea8:	45 31 db             	xor    %r11d,%r11d
ffffffff80410eab:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80410eb2:	4d 85 c9             	test   %r9,%r9
ffffffff80410eb5:	74 29                	je     ffffffff80410ee0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3210>
ffffffff80410eb7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80410ebc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410ec0:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80410ec7:	41 80 
ffffffff80410ec9:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80410ed0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410ed2:	49 83 c3 01          	add    $0x1,%r11
ffffffff80410ed6:	4d 39 cb             	cmp    %r9,%r11
ffffffff80410ed9:	75 e5                	jne    ffffffff80410ec0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x31f0>
ffffffff80410edb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410ee0:	49 83 c5 01          	add    $0x1,%r13
ffffffff80410ee4:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff80410eeb:	49 39 f5             	cmp    %rsi,%r13
ffffffff80410eee:	75 b8                	jne    ffffffff80410ea8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x31d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410ef0:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80410ef5:	4d 85 c9             	test   %r9,%r9
ffffffff80410ef8:	74 17                	je     ffffffff80410f11 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3241>
ffffffff80410efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410f00:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410f03:	49 83 c3 02          	add    $0x2,%r11
ffffffff80410f07:	66 45 89 73 1e       	mov    %r14w,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410f0c:	4d 39 df             	cmp    %r11,%r15
ffffffff80410f0f:	75 ef                	jne    ffffffff80410f00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3230>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410f11:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80410f14:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80410f18:	4c 39 c9             	cmp    %r9,%rcx
ffffffff80410f1b:	48 89 35 4e d1 00 00 	mov    %rsi,0xd14e(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80410f22:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410f26:	49 39 c8             	cmp    %rcx,%r8
ffffffff80410f29:	0f 82 36 e8 ff ff    	jb     ffffffff8040f765 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1a95>
ffffffff80410f2f:	4c 89 c1             	mov    %r8,%rcx
    if (current_col_ == num_cols_) {
ffffffff80410f32:	49 39 c9             	cmp    %rcx,%r9
ffffffff80410f35:	0f 85 64 e8 ff ff    	jne    ffffffff8040f79f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1acf>
ffffffff80410f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80410f40:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410f44:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80410f46:	48 c7 05 27 d1 00 00 	movq   $0x0,0xd127(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410f4d:	00 00 00 00 
      current_row_++;
ffffffff80410f51:	48 89 35 18 d1 00 00 	mov    %rsi,0xd118(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410f58:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff80410f5c:	0f 85 5d e8 ff ff    	jne    ffffffff8040f7bf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1aef>
ffffffff80410f62:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80410f65:	49 89 c8             	mov    %rcx,%r8
ffffffff80410f68:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff80410f6c:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff80410f6f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80410f72:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80410f76:	48 29 d0             	sub    %rdx,%rax
ffffffff80410f79:	e9 5c e8 ff ff       	jmpq   ffffffff8040f7da <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1b0a>
ffffffff80410f7e:	66 90                	xchg   %ax,%ax
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80410f80:	48 89 fa             	mov    %rdi,%rdx
ffffffff80410f83:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff80410f8a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff80410f8e:	0f 85 ab e7 ff ff    	jne    ffffffff8040f73f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1a6f>
ffffffff80410f94:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff80410f9b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80410fa2:	48 89 c1             	mov    %rax,%rcx
ffffffff80410fa5:	e9 9f e7 ff ff       	jmpq   ffffffff8040f749 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1a79>
ffffffff80410faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80410fb0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410fb4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80410fb6:	48 c7 05 b7 d0 00 00 	movq   $0x0,0xd0b7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80410fbd:	00 00 00 00 
      current_row_++;
ffffffff80410fc1:	48 89 35 a8 d0 00 00 	mov    %rsi,0xd0a8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410fc8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff80410fcc:	0f 85 e5 e5 ff ff    	jne    ffffffff8040f5b7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x18e7>
ffffffff80410fd2:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80410fd5:	49 89 c8             	mov    %rcx,%r8
ffffffff80410fd8:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff80410fdc:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff80410fdf:	48 39 d0             	cmp    %rdx,%rax
ffffffff80410fe2:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff80410fe6:	48 29 d0             	sub    %rdx,%rax
ffffffff80410fe9:	e9 e4 e5 ff ff       	jmpq   ffffffff8040f5d2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1902>
ffffffff80410fee:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410ff0:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80410ff4:	76 5a                	jbe    ffffffff80411050 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3380>
ffffffff80410ff6:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff80410ffb:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80411001:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411008:	45 31 db             	xor    %r11d,%r11d
ffffffff8041100b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80411012:	4d 85 c9             	test   %r9,%r9
ffffffff80411015:	74 29                	je     ffffffff80411040 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3370>
ffffffff80411017:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041101c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411020:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80411027:	41 80 
ffffffff80411029:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80411030:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411032:	49 83 c3 01          	add    $0x1,%r11
ffffffff80411036:	4d 39 d9             	cmp    %r11,%r9
ffffffff80411039:	75 e5                	jne    ffffffff80411020 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3350>
ffffffff8041103b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411040:	49 83 c5 01          	add    $0x1,%r13
ffffffff80411044:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041104b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041104e:	75 b8                	jne    ffffffff80411008 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3338>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411050:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80411055:	4d 85 c9             	test   %r9,%r9
ffffffff80411058:	74 16                	je     ffffffff80411070 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x33a0>
ffffffff8041105a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80411060:	31 ed                	xor    %ebp,%ebp
ffffffff80411062:	49 83 c3 02          	add    $0x2,%r11
ffffffff80411066:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041106b:	4d 39 df             	cmp    %r11,%r15
ffffffff8041106e:	75 f0                	jne    ffffffff80411060 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3390>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411070:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80411073:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80411077:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041107a:	48 89 35 ef cf 00 00 	mov    %rsi,0xcfef(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411081:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411085:	49 39 c8             	cmp    %rcx,%r8
ffffffff80411088:	0f 82 cf e4 ff ff    	jb     ffffffff8040f55d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x188d>
ffffffff8041108e:	4c 89 c1             	mov    %r8,%rcx
ffffffff80411091:	e9 f8 e4 ff ff       	jmpq   ffffffff8040f58e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x18be>
ffffffff80411096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041109d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804110a0:	48 89 fa             	mov    %rdi,%rdx
ffffffff804110a3:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff804110aa:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff804110ae:	0f 85 83 e4 ff ff    	jne    ffffffff8040f537 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1867>
ffffffff804110b4:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff804110bb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804110c2:	48 89 c1             	mov    %rax,%rcx
ffffffff804110c5:	e9 77 e4 ff ff       	jmpq   ffffffff8040f541 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1871>
ffffffff804110ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804110d0:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff804110d4:	76 5a                	jbe    ffffffff80411130 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3460>
ffffffff804110d6:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff804110db:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff804110e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804110e8:	45 31 db             	xor    %r11d,%r11d
ffffffff804110eb:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff804110f2:	4d 85 c9             	test   %r9,%r9
ffffffff804110f5:	74 29                	je     ffffffff80411120 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3450>
ffffffff804110f7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff804110fc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411100:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80411107:	41 80 
ffffffff80411109:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80411110:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411112:	49 83 c3 01          	add    $0x1,%r11
ffffffff80411116:	4d 39 cb             	cmp    %r9,%r11
ffffffff80411119:	75 e5                	jne    ffffffff80411100 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3430>
ffffffff8041111b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411120:	49 83 c5 01          	add    $0x1,%r13
ffffffff80411124:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041112b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041112e:	75 b8                	jne    ffffffff804110e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3418>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411130:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80411135:	4d 85 c9             	test   %r9,%r9
ffffffff80411138:	74 16                	je     ffffffff80411150 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3480>
ffffffff8041113a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80411140:	31 ed                	xor    %ebp,%ebp
ffffffff80411142:	49 83 c3 02          	add    $0x2,%r11
ffffffff80411146:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041114b:	4d 39 df             	cmp    %r11,%r15
ffffffff8041114e:	75 f0                	jne    ffffffff80411140 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3470>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411150:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80411153:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80411157:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041115a:	48 89 35 0f cf 00 00 	mov    %rsi,0xcf0f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411161:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411165:	4c 39 c1             	cmp    %r8,%rcx
ffffffff80411168:	0f 87 f7 e7 ff ff    	ja     ffffffff8040f965 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1c95>
ffffffff8041116e:	4c 89 c1             	mov    %r8,%rcx
ffffffff80411171:	e9 20 e8 ff ff       	jmpq   ffffffff8040f996 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1cc6>
ffffffff80411176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041117d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80411180:	48 89 fa             	mov    %rdi,%rdx
ffffffff80411183:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff8041118a:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff8041118e:	0f 85 ab e7 ff ff    	jne    ffffffff8040f93f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1c6f>
ffffffff80411194:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff8041119b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804111a2:	48 89 c1             	mov    %rax,%rcx
ffffffff804111a5:	e9 9f e7 ff ff       	jmpq   ffffffff8040f949 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1c79>
ffffffff804111aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804111b0:	49 39 c9             	cmp    %rcx,%r9
ffffffff804111b3:	76 34                	jbe    ffffffff804111e9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3519>
ffffffff804111b5:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff804111b9:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff804111bd:	4c 01 c1             	add    %r8,%rcx
ffffffff804111c0:	4d 01 c8             	add    %r9,%r8
ffffffff804111c3:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff804111ca:	80 
ffffffff804111cb:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff804111d2:	80 
ffffffff804111d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804111d8:	45 31 db             	xor    %r11d,%r11d
ffffffff804111db:	48 83 c1 02          	add    $0x2,%rcx
ffffffff804111df:	66 44 89 59 1e       	mov    %r11w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804111e4:	49 39 c8             	cmp    %rcx,%r8
ffffffff804111e7:	75 ef                	jne    ffffffff804111d8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3508>
        current_row_++;
ffffffff804111e9:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804111ed:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff804111ef:	48 c7 05 7e ce 00 00 	movq   $0x0,0xce7e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804111f6:	00 00 00 00 
        current_row_++;
ffffffff804111fa:	48 89 35 6f ce 00 00 	mov    %rsi,0xce6f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411201:	e9 b1 e3 ff ff       	jmpq   ffffffff8040f5b7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x18e7>
ffffffff80411206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041120d:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411210:	49 39 c9             	cmp    %rcx,%r9
ffffffff80411213:	76 34                	jbe    ffffffff80411249 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3579>
ffffffff80411215:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80411219:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041121d:	4c 01 c1             	add    %r8,%rcx
ffffffff80411220:	4d 01 c8             	add    %r9,%r8
ffffffff80411223:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041122a:	80 
ffffffff8041122b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80411232:	80 
ffffffff80411233:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80411238:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041123b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041123f:	66 44 89 69 1e       	mov    %r13w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411244:	49 39 c8             	cmp    %rcx,%r8
ffffffff80411247:	75 ef                	jne    ffffffff80411238 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3568>
        current_row_++;
ffffffff80411249:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041124d:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff8041124f:	48 c7 05 1e ce 00 00 	movq   $0x0,0xce1e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411256:	00 00 00 00 
        current_row_++;
ffffffff8041125a:	48 89 35 0f ce 00 00 	mov    %rsi,0xce0f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411261:	e9 59 e5 ff ff       	jmpq   ffffffff8040f7bf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1aef>
ffffffff80411266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041126d:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411270:	49 39 c9             	cmp    %rcx,%r9
ffffffff80411273:	76 34                	jbe    ffffffff804112a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x35d9>
ffffffff80411275:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80411279:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041127d:	4c 01 c1             	add    %r8,%rcx
ffffffff80411280:	4d 01 c8             	add    %r9,%r8
ffffffff80411283:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041128a:	80 
ffffffff8041128b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80411292:	80 
ffffffff80411293:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80411298:	45 31 db             	xor    %r11d,%r11d
ffffffff8041129b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041129f:	66 44 89 59 1e       	mov    %r11w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804112a4:	49 39 c8             	cmp    %rcx,%r8
ffffffff804112a7:	75 ef                	jne    ffffffff80411298 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x35c8>
        current_row_++;
ffffffff804112a9:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804112ad:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff804112af:	48 c7 05 be cd 00 00 	movq   $0x0,0xcdbe(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804112b6:	00 00 00 00 
        current_row_++;
ffffffff804112ba:	48 89 35 af cd 00 00 	mov    %rsi,0xcdaf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804112c1:	e9 f9 e6 ff ff       	jmpq   ffffffff8040f9bf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1cef>
ffffffff804112c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804112cd:	00 00 00 
      current_row_++;
ffffffff804112d0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804112d4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804112d6:	48 c7 05 97 cd 00 00 	movq   $0x0,0xcd97(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804112dd:	00 00 00 00 
      current_row_++;
ffffffff804112e1:	48 89 35 88 cd 00 00 	mov    %rsi,0xcd88(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804112e8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff804112ec:	0f 85 6d eb ff ff    	jne    ffffffff8040fe5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x218f>
ffffffff804112f2:	48 39 d7             	cmp    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff804112f5:	49 89 c8             	mov    %rcx,%r8
ffffffff804112f8:	48 0f 46 d7          	cmovbe %rdi,%rdx
    str_ += n;
ffffffff804112fc:	49 01 d2             	add    %rdx,%r10
    size_ -= min(n, size_);
ffffffff804112ff:	48 39 c2             	cmp    %rax,%rdx
ffffffff80411302:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80411306:	48 29 d0             	sub    %rdx,%rax
ffffffff80411309:	e9 6c eb ff ff       	jmpq   ffffffff8040fe7a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x21aa>
ffffffff8041130e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411310:	48 83 fe 01          	cmp    $0x1,%rsi
ffffffff80411314:	76 59                	jbe    ffffffff8041136f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x369f>
ffffffff80411316:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8041131b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80411321:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411328:	45 31 db             	xor    %r11d,%r11d
ffffffff8041132b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80411332:	4d 85 c9             	test   %r9,%r9
ffffffff80411335:	74 28                	je     ffffffff8041135f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x368f>
ffffffff80411337:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8041133b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411340:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80411347:	41 80 
ffffffff80411349:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80411350:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411352:	49 83 c3 01          	add    $0x1,%r11
ffffffff80411356:	4d 39 cb             	cmp    %r9,%r11
ffffffff80411359:	75 e5                	jne    ffffffff80411340 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3670>
ffffffff8041135b:	48 8b 04 24          	mov    (%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041135f:	49 83 c5 01          	add    $0x1,%r13
ffffffff80411363:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041136a:	4d 39 ec             	cmp    %r13,%r12
ffffffff8041136d:	75 b9                	jne    ffffffff80411328 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3658>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041136f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
ffffffff80411374:	4d 85 c9             	test   %r9,%r9
ffffffff80411377:	74 17                	je     ffffffff80411390 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x36c0>
ffffffff80411379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80411380:	31 ed                	xor    %ebp,%ebp
ffffffff80411382:	49 83 c3 02          	add    $0x2,%r11
ffffffff80411386:	66 41 89 6b 1e       	mov    %bp,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041138b:	4d 39 df             	cmp    %r11,%r15
ffffffff8041138e:	75 f0                	jne    ffffffff80411380 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x36b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411390:	4c 01 c1             	add    %r8,%rcx
      current_row_--;
ffffffff80411393:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80411397:	4c 39 c9             	cmp    %r9,%rcx
ffffffff8041139a:	48 89 35 cf cc 00 00 	mov    %rsi,0xcccf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804113a1:	49 0f 47 c9          	cmova  %r9,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804113a5:	4c 39 c1             	cmp    %r8,%rcx
ffffffff804113a8:	0f 87 57 ea ff ff    	ja     ffffffff8040fe05 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2135>
ffffffff804113ae:	4c 89 c1             	mov    %r8,%rcx
ffffffff804113b1:	e9 80 ea ff ff       	jmpq   ffffffff8040fe36 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2166>
ffffffff804113b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804113bd:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804113c0:	48 89 fa             	mov    %rdi,%rdx
ffffffff804113c3:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff804113ca:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
ffffffff804113ce:	0f 85 0b ea ff ff    	jne    ffffffff8040fddf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x210f>
ffffffff804113d4:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff804113db:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804113e2:	48 89 c1             	mov    %rax,%rcx
ffffffff804113e5:	e9 ff e9 ff ff       	jmpq   ffffffff8040fde9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x2119>
ffffffff804113ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff804113f0:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804113f4:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804113f6:	48 c7 05 77 cc 00 00 	movq   $0x0,0xcc77(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804113fd:	00 00 00 00 
      current_row_++;
ffffffff80411401:	48 89 3d 68 cc 00 00 	mov    %rdi,0xcc68(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80411408:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
ffffffff8041140c:	0f 85 45 e8 ff ff    	jne    ffffffff8040fc57 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f87>
ffffffff80411412:	49 39 d0             	cmp    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80411415:	49 89 c9             	mov    %rcx,%r9
ffffffff80411418:	49 0f 46 d0          	cmovbe %r8,%rdx
    str_ += n;
ffffffff8041141c:	48 01 d6             	add    %rdx,%rsi
    size_ -= min(n, size_);
ffffffff8041141f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80411422:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80411426:	48 29 d0             	sub    %rdx,%rax
ffffffff80411429:	e9 44 e8 ff ff       	jmpq   ffffffff8040fc72 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1fa2>
ffffffff8041142e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411430:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80411434:	76 59                	jbe    ffffffff8041148f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x37bf>
ffffffff80411436:	bd a0 00 00 00       	mov    $0xa0,%ebp
ffffffff8041143b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80411441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411448:	45 31 db             	xor    %r11d,%r11d
ffffffff8041144b:	4c 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%r14
ffffffff80411452:	4d 85 d2             	test   %r10,%r10
ffffffff80411455:	74 28                	je     ffffffff8041147f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x37af>
ffffffff80411457:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8041145b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411460:	42 0f b7 84 5d 80 e0 	movzwl -0x7fbe1f80(%rbp,%r11,2),%eax
ffffffff80411467:	41 80 
ffffffff80411469:	66 43 89 84 5e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r11,2)
ffffffff80411470:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411472:	49 83 c3 01          	add    $0x1,%r11
ffffffff80411476:	4d 39 da             	cmp    %r11,%r10
ffffffff80411479:	75 e5                	jne    ffffffff80411460 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3790>
ffffffff8041147b:	48 8b 04 24          	mov    (%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041147f:	49 83 c5 01          	add    $0x1,%r13
ffffffff80411483:	48 81 c5 a0 00 00 00 	add    $0xa0,%rbp
ffffffff8041148a:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041148d:	75 b9                	jne    ffffffff80411448 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3778>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041148f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
ffffffff80411494:	4d 85 d2             	test   %r10,%r10
ffffffff80411497:	74 18                	je     ffffffff804114b1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x37e1>
ffffffff80411499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804114a0:	45 31 f6             	xor    %r14d,%r14d
ffffffff804114a3:	49 83 c3 02          	add    $0x2,%r11
ffffffff804114a7:	66 45 89 73 1e       	mov    %r14w,0x1e(%r11)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804114ac:	4d 39 df             	cmp    %r11,%r15
ffffffff804114af:	75 ef                	jne    ffffffff804114a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x37d0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804114b1:	4c 01 c9             	add    %r9,%rcx
      current_row_--;
ffffffff804114b4:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff804114b8:	4c 39 d1             	cmp    %r10,%rcx
ffffffff804114bb:	48 89 3d ae cb 00 00 	mov    %rdi,0xcbae(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804114c2:	49 0f 47 ca          	cmova  %r10,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804114c6:	4c 39 c9             	cmp    %r9,%rcx
ffffffff804114c9:	0f 87 2d e7 ff ff    	ja     ffffffff8040fbfc <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f2c>
ffffffff804114cf:	4c 89 c9             	mov    %r9,%rcx
ffffffff804114d2:	e9 57 e7 ff ff       	jmpq   ffffffff8040fc2e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f5e>
ffffffff804114d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804114de:	00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804114e0:	4c 89 c2             	mov    %r8,%rdx
ffffffff804114e3:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    if (count == npos) {
ffffffff804114ea:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
ffffffff804114ee:	0f 85 e2 e6 ff ff    	jne    ffffffff8040fbd6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f06>
ffffffff804114f4:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
ffffffff804114fb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80411502:	48 89 c1             	mov    %rax,%rcx
ffffffff80411505:	e9 d6 e6 ff ff       	jmpq   ffffffff8040fbe0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f10>
ffffffff8041150a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411510:	49 39 c9             	cmp    %rcx,%r9
ffffffff80411513:	76 34                	jbe    ffffffff80411549 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3879>
ffffffff80411515:	4c 8d 04 b6          	lea    (%rsi,%rsi,4),%r8
ffffffff80411519:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff8041151d:	4c 01 c1             	add    %r8,%rcx
ffffffff80411520:	4d 01 c8             	add    %r9,%r8
ffffffff80411523:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041152a:	80 
ffffffff8041152b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80411532:	80 
ffffffff80411533:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80411538:	45 31 db             	xor    %r11d,%r11d
ffffffff8041153b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041153f:	66 44 89 59 1e       	mov    %r11w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411544:	49 39 c8             	cmp    %rcx,%r8
ffffffff80411547:	75 ef                	jne    ffffffff80411538 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x3868>
        current_row_++;
ffffffff80411549:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041154d:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff8041154f:	48 c7 05 1e cb 00 00 	movq   $0x0,0xcb1e(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411556:	00 00 00 00 
        current_row_++;
ffffffff8041155a:	48 89 35 0f cb 00 00 	mov    %rsi,0xcb0f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411561:	e9 f9 e8 ff ff       	jmpq   ffffffff8040fe5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x218f>
ffffffff80411566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041156d:	00 00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411570:	49 39 ca             	cmp    %rcx,%r10
ffffffff80411573:	76 34                	jbe    ffffffff804115a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x38d9>
ffffffff80411575:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
ffffffff80411579:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff8041157d:	4c 01 c9             	add    %r9,%rcx
ffffffff80411580:	4d 01 d1             	add    %r10,%r9
ffffffff80411583:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff8041158a:	80 
ffffffff8041158b:	4f 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%r9
ffffffff80411592:	80 
ffffffff80411593:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80411598:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041159b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041159f:	66 44 89 69 1e       	mov    %r13w,0x1e(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804115a4:	49 39 c9             	cmp    %rcx,%r9
ffffffff804115a7:	75 ef                	jne    ffffffff80411598 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x38c8>
        current_row_++;
ffffffff804115a9:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804115ad:	31 c9                	xor    %ecx,%ecx
        current_col_ = 0;
ffffffff804115af:	48 c7 05 be ca 00 00 	movq   $0x0,0xcabe(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804115b6:	00 00 00 00 
        current_row_++;
ffffffff804115ba:	48 89 3d af ca 00 00 	mov    %rdi,0xcaaf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804115c1:	e9 91 e6 ff ff       	jmpq   ffffffff8040fc57 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1f87>
ffffffff804115c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804115cd:	00 00 00 
    str[0] = 'E';
ffffffff804115d0:	41 bd 45 00 00 00    	mov    $0x45,%r13d
ffffffff804115d6:	66 44 89 6c 24 28    	mov    %r13w,0x28(%rsp)
ffffffff804115dc:	e9 94 cb ff ff       	jmpq   ffffffff8040e175 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x4a5>
ffffffff804115e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff804115e8:	41 bd 45 00 00 00    	mov    $0x45,%r13d
ffffffff804115ee:	66 44 89 6c 24 28    	mov    %r13w,0x28(%rsp)
ffffffff804115f4:	e9 fc d7 ff ff       	jmpq   ffffffff8040edf5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1125>
ffffffff804115f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80411600:	41 bd 45 00 00 00    	mov    $0x45,%r13d
ffffffff80411606:	66 44 89 6c 24 28    	mov    %r13w,0x28(%rsp)
ffffffff8041160c:	e9 84 de ff ff       	jmpq   ffffffff8040f495 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x17c5>
ffffffff80411611:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80411618:	b8 45 00 00 00       	mov    $0x45,%eax
ffffffff8041161d:	66 89 44 24 28       	mov    %ax,0x28(%rsp)
ffffffff80411622:	e9 0e d3 ff ff       	jmpq   ffffffff8040e935 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xc65>
ffffffff80411627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041162e:	00 00 
ffffffff80411630:	b8 45 00 00 00       	mov    $0x45,%eax
ffffffff80411635:	66 89 44 24 28       	mov    %ax,0x28(%rsp)
ffffffff8041163a:	e9 26 ce ff ff       	jmpq   ffffffff8040e465 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x795>
ffffffff8041163f:	90                   	nop
ffffffff80411640:	b8 45 00 00 00       	mov    $0x45,%eax
ffffffff80411645:	66 89 44 24 28       	mov    %ax,0x28(%rsp)
ffffffff8041164a:	e9 e6 e4 ff ff       	jmpq   ffffffff8040fb35 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1e65>
ffffffff8041164f:	90                   	nop
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80411650:	48 c7 c7 51 b8 41 80 	mov    $0xffffffff8041b851,%rdi
ffffffff80411657:	e8 64 bb ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(s);
ffffffff8041165c:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff80411661:	48 c7 c6 51 b8 41 80 	mov    $0xffffffff8041b851,%rsi
ffffffff80411668:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8041166f:	89 c2                	mov    %eax,%edx
ffffffff80411671:	e8 3a 8f 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
    vga_output << " [" << kCPUExceptionErrorMessages[int_num] << "]";
ffffffff80411676:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8041167b:	48 8b 2c c5 20 b0 41 	mov    -0x7fbe4fe0(,%rax,8),%rbp
ffffffff80411682:	80 
ffffffff80411683:	48 89 ef             	mov    %rbp,%rdi
ffffffff80411686:	e8 35 bb ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8041168b:	48 89 ee             	mov    %rbp,%rsi
ffffffff8041168e:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff80411693:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8041169a:	89 c2                	mov    %eax,%edx
ffffffff8041169c:	e8 0f 8f 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff804116a1:	48 c7 c7 11 ba 41 80 	mov    $0xffffffff8041ba11,%rdi
ffffffff804116a8:	e8 13 bb ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804116ad:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff804116b2:	48 c7 c6 11 ba 41 80 	mov    $0xffffffff8041ba11,%rsi
ffffffff804116b9:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff804116c0:	89 c2                	mov    %eax,%edx
ffffffff804116c2:	e8 e9 8e 00 00       	callq  ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff804116c7:	e9 bd cc ff ff       	jmpq   ffffffff8040e389 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x6b9>
ffffffff804116cc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804116d0:	4c 8b 05 a1 c9 00 00 	mov    0xc9a1(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804116d7:	48 8b 35 92 c9 00 00 	mov    0xc992(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804116de:	e9 f8 d0 ff ff       	jmpq   ffffffff8040e7db <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xb0b>
ffffffff804116e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804116e8:	4c 8b 05 89 c9 00 00 	mov    0xc989(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804116ef:	48 8b 35 7a c9 00 00 	mov    0xc97a(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804116f6:	e9 80 d3 ff ff       	jmpq   ffffffff8040ea7b <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xdab>
ffffffff804116fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411700:	48 8b 35 69 c9 00 00 	mov    0xc969(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411707:	4c 8b 05 6a c9 00 00 	mov    0xc96a(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041170e:	e9 30 dc ff ff       	jmpq   ffffffff8040f343 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1673>
ffffffff80411713:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411718:	4c 8b 05 59 c9 00 00 	mov    0xc959(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041171f:	48 8b 35 4a c9 00 00 	mov    0xc94a(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411726:	e9 b0 de ff ff       	jmpq   ffffffff8040f5db <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x190b>
ffffffff8041172b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411730:	4c 8b 05 41 c9 00 00 	mov    0xc941(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411737:	48 8b 35 32 c9 00 00 	mov    0xc932(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041173e:	e9 a0 e0 ff ff       	jmpq   ffffffff8040f7e3 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1b13>
ffffffff80411743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411748:	48 8b 35 21 c9 00 00 	mov    0xc921(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041174f:	4c 8b 05 22 c9 00 00 	mov    0xc922(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411756:	e9 88 e2 ff ff       	jmpq   ffffffff8040f9e3 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1d13>
ffffffff8041175b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411760:	48 8b 35 09 c9 00 00 	mov    0xc909(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411767:	4c 8b 05 0a c9 00 00 	mov    0xc90a(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041176e:	e9 10 e7 ff ff       	jmpq   ffffffff8040fe83 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x21b3>
ffffffff80411773:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411778:	48 8b 3d f1 c8 00 00 	mov    0xc8f1(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041177f:	4c 8b 0d f2 c8 00 00 	mov    0xc8f2(%rip),%r9        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411786:	e9 f0 e4 ff ff       	jmpq   ffffffff8040fc7b <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1fab>
ffffffff8041178b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411790:	4c 8b 05 e1 c8 00 00 	mov    0xc8e1(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411797:	48 8b 35 d2 c8 00 00 	mov    0xc8d2(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041179e:	e9 08 ce ff ff       	jmpq   ffffffff8040e5ab <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x8db>
ffffffff804117a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804117a8:	4c 8b 05 c9 c8 00 00 	mov    0xc8c9(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804117af:	48 8b 35 ba c8 00 00 	mov    0xc8ba(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804117b6:	e9 c8 d4 ff ff       	jmpq   ffffffff8040ec83 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0xfb3>
ffffffff804117bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804117c0:	4c 8b 05 b1 c8 00 00 	mov    0xc8b1(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804117c7:	48 8b 35 a2 c8 00 00 	mov    0xc8a2(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804117ce:	e9 70 d9 ff ff       	jmpq   ffffffff8040f143 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x1473>
ffffffff804117d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804117d8:	48 8b 35 91 c8 00 00 	mov    0xc891(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804117df:	4c 8b 05 92 c8 00 00 	mov    0xc892(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804117e6:	e9 50 d7 ff ff       	jmpq   ffffffff8040ef3b <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x126b>
ffffffff804117eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804117f0:	48 8b 35 79 c8 00 00 	mov    0xc879(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804117f7:	4c 8b 05 7a c8 00 00 	mov    0xc87a(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804117fe:	e9 b8 ca ff ff       	jmpq   ffffffff8040e2bb <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x5eb>
ffffffff80411803:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411808:	4c 8b 05 69 c8 00 00 	mov    0xc869(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041180f:	48 8b 35 5a c8 00 00 	mov    0xc85a(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411816:	e9 18 c6 ff ff       	jmpq   ffffffff8040de33 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x163>
ffffffff8041181b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411820:	4c 8b 05 51 c8 00 00 	mov    0xc851(%rip),%r8        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411827:	48 8b 35 42 c8 00 00 	mov    0xc842(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041182e:	e9 00 c8 ff ff       	jmpq   ffffffff8040e033 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm+0x363>
ffffffff80411833:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041183a:	00 00 00 00 
ffffffff8041183e:	66 90                	xchg   %ax,%ax

ffffffff80411840 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi0EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411840:	41 53                	push   %r11
ffffffff80411842:	41 52                	push   %r10
ffffffff80411844:	41 51                	push   %r9
ffffffff80411846:	41 50                	push   %r8
ffffffff80411848:	57                   	push   %rdi
ffffffff80411849:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff8041184a:	31 f6                	xor    %esi,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff8041184c:	51                   	push   %rcx
ffffffff8041184d:	52                   	push   %rdx
ffffffff8041184e:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff8041184f:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411854:	fc                   	cld    
ffffffff80411855:	e8 76 c4 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff8041185a:	58                   	pop    %rax
ffffffff8041185b:	5a                   	pop    %rdx
ffffffff8041185c:	59                   	pop    %rcx
ffffffff8041185d:	5e                   	pop    %rsi
ffffffff8041185e:	5f                   	pop    %rdi
ffffffff8041185f:	41 58                	pop    %r8
ffffffff80411861:	41 59                	pop    %r9
ffffffff80411863:	41 5a                	pop    %r10
ffffffff80411865:	41 5b                	pop    %r11
ffffffff80411867:	48 cf                	iretq  
ffffffff80411869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80411870 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi1EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411870:	41 53                	push   %r11
ffffffff80411872:	41 52                	push   %r10
ffffffff80411874:	41 51                	push   %r9
ffffffff80411876:	41 50                	push   %r8
ffffffff80411878:	57                   	push   %rdi
ffffffff80411879:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff8041187a:	be 01 00 00 00       	mov    $0x1,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff8041187f:	51                   	push   %rcx
ffffffff80411880:	52                   	push   %rdx
ffffffff80411881:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411882:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411887:	fc                   	cld    
ffffffff80411888:	e8 43 c4 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff8041188d:	58                   	pop    %rax
ffffffff8041188e:	5a                   	pop    %rdx
ffffffff8041188f:	59                   	pop    %rcx
ffffffff80411890:	5e                   	pop    %rsi
ffffffff80411891:	5f                   	pop    %rdi
ffffffff80411892:	41 58                	pop    %r8
ffffffff80411894:	41 59                	pop    %r9
ffffffff80411896:	41 5a                	pop    %r10
ffffffff80411898:	41 5b                	pop    %r11
ffffffff8041189a:	48 cf                	iretq  
ffffffff8041189c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804118a0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi2EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804118a0:	41 53                	push   %r11
ffffffff804118a2:	41 52                	push   %r10
ffffffff804118a4:	41 51                	push   %r9
ffffffff804118a6:	41 50                	push   %r8
ffffffff804118a8:	57                   	push   %rdi
ffffffff804118a9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804118aa:	be 02 00 00 00       	mov    $0x2,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804118af:	51                   	push   %rcx
ffffffff804118b0:	52                   	push   %rdx
ffffffff804118b1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804118b2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff804118b7:	fc                   	cld    
ffffffff804118b8:	e8 13 c4 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff804118bd:	58                   	pop    %rax
ffffffff804118be:	5a                   	pop    %rdx
ffffffff804118bf:	59                   	pop    %rcx
ffffffff804118c0:	5e                   	pop    %rsi
ffffffff804118c1:	5f                   	pop    %rdi
ffffffff804118c2:	41 58                	pop    %r8
ffffffff804118c4:	41 59                	pop    %r9
ffffffff804118c6:	41 5a                	pop    %r10
ffffffff804118c8:	41 5b                	pop    %r11
ffffffff804118ca:	48 cf                	iretq  
ffffffff804118cc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804118d0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi3EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804118d0:	41 53                	push   %r11
ffffffff804118d2:	41 52                	push   %r10
ffffffff804118d4:	41 51                	push   %r9
ffffffff804118d6:	41 50                	push   %r8
ffffffff804118d8:	57                   	push   %rdi
ffffffff804118d9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804118da:	be 03 00 00 00       	mov    $0x3,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804118df:	51                   	push   %rcx
ffffffff804118e0:	52                   	push   %rdx
ffffffff804118e1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804118e2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff804118e7:	fc                   	cld    
ffffffff804118e8:	e8 e3 c3 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff804118ed:	58                   	pop    %rax
ffffffff804118ee:	5a                   	pop    %rdx
ffffffff804118ef:	59                   	pop    %rcx
ffffffff804118f0:	5e                   	pop    %rsi
ffffffff804118f1:	5f                   	pop    %rdi
ffffffff804118f2:	41 58                	pop    %r8
ffffffff804118f4:	41 59                	pop    %r9
ffffffff804118f6:	41 5a                	pop    %r10
ffffffff804118f8:	41 5b                	pop    %r11
ffffffff804118fa:	48 cf                	iretq  
ffffffff804118fc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411900 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi4EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411900:	41 53                	push   %r11
ffffffff80411902:	41 52                	push   %r10
ffffffff80411904:	41 51                	push   %r9
ffffffff80411906:	41 50                	push   %r8
ffffffff80411908:	57                   	push   %rdi
ffffffff80411909:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff8041190a:	be 04 00 00 00       	mov    $0x4,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff8041190f:	51                   	push   %rcx
ffffffff80411910:	52                   	push   %rdx
ffffffff80411911:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411912:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411917:	fc                   	cld    
ffffffff80411918:	e8 b3 c3 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff8041191d:	58                   	pop    %rax
ffffffff8041191e:	5a                   	pop    %rdx
ffffffff8041191f:	59                   	pop    %rcx
ffffffff80411920:	5e                   	pop    %rsi
ffffffff80411921:	5f                   	pop    %rdi
ffffffff80411922:	41 58                	pop    %r8
ffffffff80411924:	41 59                	pop    %r9
ffffffff80411926:	41 5a                	pop    %r10
ffffffff80411928:	41 5b                	pop    %r11
ffffffff8041192a:	48 cf                	iretq  
ffffffff8041192c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411930 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi5EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411930:	41 53                	push   %r11
ffffffff80411932:	41 52                	push   %r10
ffffffff80411934:	41 51                	push   %r9
ffffffff80411936:	41 50                	push   %r8
ffffffff80411938:	57                   	push   %rdi
ffffffff80411939:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff8041193a:	be 05 00 00 00       	mov    $0x5,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff8041193f:	51                   	push   %rcx
ffffffff80411940:	52                   	push   %rdx
ffffffff80411941:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411942:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411947:	fc                   	cld    
ffffffff80411948:	e8 83 c3 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff8041194d:	58                   	pop    %rax
ffffffff8041194e:	5a                   	pop    %rdx
ffffffff8041194f:	59                   	pop    %rcx
ffffffff80411950:	5e                   	pop    %rsi
ffffffff80411951:	5f                   	pop    %rdi
ffffffff80411952:	41 58                	pop    %r8
ffffffff80411954:	41 59                	pop    %r9
ffffffff80411956:	41 5a                	pop    %r10
ffffffff80411958:	41 5b                	pop    %r11
ffffffff8041195a:	48 cf                	iretq  
ffffffff8041195c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411960 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi6EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411960:	41 53                	push   %r11
ffffffff80411962:	41 52                	push   %r10
ffffffff80411964:	41 51                	push   %r9
ffffffff80411966:	41 50                	push   %r8
ffffffff80411968:	57                   	push   %rdi
ffffffff80411969:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff8041196a:	be 06 00 00 00       	mov    $0x6,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff8041196f:	51                   	push   %rcx
ffffffff80411970:	52                   	push   %rdx
ffffffff80411971:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411972:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411977:	fc                   	cld    
ffffffff80411978:	e8 53 c3 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff8041197d:	58                   	pop    %rax
ffffffff8041197e:	5a                   	pop    %rdx
ffffffff8041197f:	59                   	pop    %rcx
ffffffff80411980:	5e                   	pop    %rsi
ffffffff80411981:	5f                   	pop    %rdi
ffffffff80411982:	41 58                	pop    %r8
ffffffff80411984:	41 59                	pop    %r9
ffffffff80411986:	41 5a                	pop    %r10
ffffffff80411988:	41 5b                	pop    %r11
ffffffff8041198a:	48 cf                	iretq  
ffffffff8041198c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411990 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi7EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411990:	41 53                	push   %r11
ffffffff80411992:	41 52                	push   %r10
ffffffff80411994:	41 51                	push   %r9
ffffffff80411996:	41 50                	push   %r8
ffffffff80411998:	57                   	push   %rdi
ffffffff80411999:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff8041199a:	be 07 00 00 00       	mov    $0x7,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff8041199f:	51                   	push   %rcx
ffffffff804119a0:	52                   	push   %rdx
ffffffff804119a1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804119a2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff804119a7:	fc                   	cld    
ffffffff804119a8:	e8 23 c3 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff804119ad:	58                   	pop    %rax
ffffffff804119ae:	5a                   	pop    %rdx
ffffffff804119af:	59                   	pop    %rcx
ffffffff804119b0:	5e                   	pop    %rsi
ffffffff804119b1:	5f                   	pop    %rdi
ffffffff804119b2:	41 58                	pop    %r8
ffffffff804119b4:	41 59                	pop    %r9
ffffffff804119b6:	41 5a                	pop    %r10
ffffffff804119b8:	41 5b                	pop    %r11
ffffffff804119ba:	48 cf                	iretq  
ffffffff804119bc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804119c0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi9EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804119c0:	41 53                	push   %r11
ffffffff804119c2:	41 52                	push   %r10
ffffffff804119c4:	41 51                	push   %r9
ffffffff804119c6:	41 50                	push   %r8
ffffffff804119c8:	57                   	push   %rdi
ffffffff804119c9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804119ca:	be 09 00 00 00       	mov    $0x9,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804119cf:	51                   	push   %rcx
ffffffff804119d0:	52                   	push   %rdx
ffffffff804119d1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804119d2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff804119d7:	fc                   	cld    
ffffffff804119d8:	e8 f3 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff804119dd:	58                   	pop    %rax
ffffffff804119de:	5a                   	pop    %rdx
ffffffff804119df:	59                   	pop    %rcx
ffffffff804119e0:	5e                   	pop    %rsi
ffffffff804119e1:	5f                   	pop    %rdi
ffffffff804119e2:	41 58                	pop    %r8
ffffffff804119e4:	41 59                	pop    %r9
ffffffff804119e6:	41 5a                	pop    %r10
ffffffff804119e8:	41 5b                	pop    %r11
ffffffff804119ea:	48 cf                	iretq  
ffffffff804119ec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804119f0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi15EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804119f0:	41 53                	push   %r11
ffffffff804119f2:	41 52                	push   %r10
ffffffff804119f4:	41 51                	push   %r9
ffffffff804119f6:	41 50                	push   %r8
ffffffff804119f8:	57                   	push   %rdi
ffffffff804119f9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804119fa:	be 0f 00 00 00       	mov    $0xf,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff804119ff:	51                   	push   %rcx
ffffffff80411a00:	52                   	push   %rdx
ffffffff80411a01:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a02:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411a07:	fc                   	cld    
ffffffff80411a08:	e8 c3 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411a0d:	58                   	pop    %rax
ffffffff80411a0e:	5a                   	pop    %rdx
ffffffff80411a0f:	59                   	pop    %rcx
ffffffff80411a10:	5e                   	pop    %rsi
ffffffff80411a11:	5f                   	pop    %rdi
ffffffff80411a12:	41 58                	pop    %r8
ffffffff80411a14:	41 59                	pop    %r9
ffffffff80411a16:	41 5a                	pop    %r10
ffffffff80411a18:	41 5b                	pop    %r11
ffffffff80411a1a:	48 cf                	iretq  
ffffffff80411a1c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411a20 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi16EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a20:	41 53                	push   %r11
ffffffff80411a22:	41 52                	push   %r10
ffffffff80411a24:	41 51                	push   %r9
ffffffff80411a26:	41 50                	push   %r8
ffffffff80411a28:	57                   	push   %rdi
ffffffff80411a29:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a2a:	be 10 00 00 00       	mov    $0x10,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a2f:	51                   	push   %rcx
ffffffff80411a30:	52                   	push   %rdx
ffffffff80411a31:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a32:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411a37:	fc                   	cld    
ffffffff80411a38:	e8 93 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411a3d:	58                   	pop    %rax
ffffffff80411a3e:	5a                   	pop    %rdx
ffffffff80411a3f:	59                   	pop    %rcx
ffffffff80411a40:	5e                   	pop    %rsi
ffffffff80411a41:	5f                   	pop    %rdi
ffffffff80411a42:	41 58                	pop    %r8
ffffffff80411a44:	41 59                	pop    %r9
ffffffff80411a46:	41 5a                	pop    %r10
ffffffff80411a48:	41 5b                	pop    %r11
ffffffff80411a4a:	48 cf                	iretq  
ffffffff80411a4c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411a50 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi18EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a50:	41 53                	push   %r11
ffffffff80411a52:	41 52                	push   %r10
ffffffff80411a54:	41 51                	push   %r9
ffffffff80411a56:	41 50                	push   %r8
ffffffff80411a58:	57                   	push   %rdi
ffffffff80411a59:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a5a:	be 12 00 00 00       	mov    $0x12,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a5f:	51                   	push   %rcx
ffffffff80411a60:	52                   	push   %rdx
ffffffff80411a61:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a62:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411a67:	fc                   	cld    
ffffffff80411a68:	e8 63 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411a6d:	58                   	pop    %rax
ffffffff80411a6e:	5a                   	pop    %rdx
ffffffff80411a6f:	59                   	pop    %rcx
ffffffff80411a70:	5e                   	pop    %rsi
ffffffff80411a71:	5f                   	pop    %rdi
ffffffff80411a72:	41 58                	pop    %r8
ffffffff80411a74:	41 59                	pop    %r9
ffffffff80411a76:	41 5a                	pop    %r10
ffffffff80411a78:	41 5b                	pop    %r11
ffffffff80411a7a:	48 cf                	iretq  
ffffffff80411a7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411a80 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi19EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a80:	41 53                	push   %r11
ffffffff80411a82:	41 52                	push   %r10
ffffffff80411a84:	41 51                	push   %r9
ffffffff80411a86:	41 50                	push   %r8
ffffffff80411a88:	57                   	push   %rdi
ffffffff80411a89:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a8a:	be 13 00 00 00       	mov    $0x13,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a8f:	51                   	push   %rcx
ffffffff80411a90:	52                   	push   %rdx
ffffffff80411a91:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a92:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411a97:	fc                   	cld    
ffffffff80411a98:	e8 33 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411a9d:	58                   	pop    %rax
ffffffff80411a9e:	5a                   	pop    %rdx
ffffffff80411a9f:	59                   	pop    %rcx
ffffffff80411aa0:	5e                   	pop    %rsi
ffffffff80411aa1:	5f                   	pop    %rdi
ffffffff80411aa2:	41 58                	pop    %r8
ffffffff80411aa4:	41 59                	pop    %r9
ffffffff80411aa6:	41 5a                	pop    %r10
ffffffff80411aa8:	41 5b                	pop    %r11
ffffffff80411aaa:	48 cf                	iretq  
ffffffff80411aac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411ab0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi20EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ab0:	41 53                	push   %r11
ffffffff80411ab2:	41 52                	push   %r10
ffffffff80411ab4:	41 51                	push   %r9
ffffffff80411ab6:	41 50                	push   %r8
ffffffff80411ab8:	57                   	push   %rdi
ffffffff80411ab9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411aba:	be 14 00 00 00       	mov    $0x14,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411abf:	51                   	push   %rcx
ffffffff80411ac0:	52                   	push   %rdx
ffffffff80411ac1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411ac2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411ac7:	fc                   	cld    
ffffffff80411ac8:	e8 03 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411acd:	58                   	pop    %rax
ffffffff80411ace:	5a                   	pop    %rdx
ffffffff80411acf:	59                   	pop    %rcx
ffffffff80411ad0:	5e                   	pop    %rsi
ffffffff80411ad1:	5f                   	pop    %rdi
ffffffff80411ad2:	41 58                	pop    %r8
ffffffff80411ad4:	41 59                	pop    %r9
ffffffff80411ad6:	41 5a                	pop    %r10
ffffffff80411ad8:	41 5b                	pop    %r11
ffffffff80411ada:	48 cf                	iretq  
ffffffff80411adc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411ae0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi21EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ae0:	41 53                	push   %r11
ffffffff80411ae2:	41 52                	push   %r10
ffffffff80411ae4:	41 51                	push   %r9
ffffffff80411ae6:	41 50                	push   %r8
ffffffff80411ae8:	57                   	push   %rdi
ffffffff80411ae9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411aea:	be 15 00 00 00       	mov    $0x15,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411aef:	51                   	push   %rcx
ffffffff80411af0:	52                   	push   %rdx
ffffffff80411af1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411af2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411af7:	fc                   	cld    
ffffffff80411af8:	e8 d3 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411afd:	58                   	pop    %rax
ffffffff80411afe:	5a                   	pop    %rdx
ffffffff80411aff:	59                   	pop    %rcx
ffffffff80411b00:	5e                   	pop    %rsi
ffffffff80411b01:	5f                   	pop    %rdi
ffffffff80411b02:	41 58                	pop    %r8
ffffffff80411b04:	41 59                	pop    %r9
ffffffff80411b06:	41 5a                	pop    %r10
ffffffff80411b08:	41 5b                	pop    %r11
ffffffff80411b0a:	48 cf                	iretq  
ffffffff80411b0c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411b10 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi22EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b10:	41 53                	push   %r11
ffffffff80411b12:	41 52                	push   %r10
ffffffff80411b14:	41 51                	push   %r9
ffffffff80411b16:	41 50                	push   %r8
ffffffff80411b18:	57                   	push   %rdi
ffffffff80411b19:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b1a:	be 16 00 00 00       	mov    $0x16,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b1f:	51                   	push   %rcx
ffffffff80411b20:	52                   	push   %rdx
ffffffff80411b21:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b22:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411b27:	fc                   	cld    
ffffffff80411b28:	e8 a3 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411b2d:	58                   	pop    %rax
ffffffff80411b2e:	5a                   	pop    %rdx
ffffffff80411b2f:	59                   	pop    %rcx
ffffffff80411b30:	5e                   	pop    %rsi
ffffffff80411b31:	5f                   	pop    %rdi
ffffffff80411b32:	41 58                	pop    %r8
ffffffff80411b34:	41 59                	pop    %r9
ffffffff80411b36:	41 5a                	pop    %r10
ffffffff80411b38:	41 5b                	pop    %r11
ffffffff80411b3a:	48 cf                	iretq  
ffffffff80411b3c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411b40 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi23EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b40:	41 53                	push   %r11
ffffffff80411b42:	41 52                	push   %r10
ffffffff80411b44:	41 51                	push   %r9
ffffffff80411b46:	41 50                	push   %r8
ffffffff80411b48:	57                   	push   %rdi
ffffffff80411b49:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b4a:	be 17 00 00 00       	mov    $0x17,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b4f:	51                   	push   %rcx
ffffffff80411b50:	52                   	push   %rdx
ffffffff80411b51:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b52:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411b57:	fc                   	cld    
ffffffff80411b58:	e8 73 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411b5d:	58                   	pop    %rax
ffffffff80411b5e:	5a                   	pop    %rdx
ffffffff80411b5f:	59                   	pop    %rcx
ffffffff80411b60:	5e                   	pop    %rsi
ffffffff80411b61:	5f                   	pop    %rdi
ffffffff80411b62:	41 58                	pop    %r8
ffffffff80411b64:	41 59                	pop    %r9
ffffffff80411b66:	41 5a                	pop    %r10
ffffffff80411b68:	41 5b                	pop    %r11
ffffffff80411b6a:	48 cf                	iretq  
ffffffff80411b6c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411b70 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi24EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b70:	41 53                	push   %r11
ffffffff80411b72:	41 52                	push   %r10
ffffffff80411b74:	41 51                	push   %r9
ffffffff80411b76:	41 50                	push   %r8
ffffffff80411b78:	57                   	push   %rdi
ffffffff80411b79:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b7a:	be 18 00 00 00       	mov    $0x18,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b7f:	51                   	push   %rcx
ffffffff80411b80:	52                   	push   %rdx
ffffffff80411b81:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b82:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411b87:	fc                   	cld    
ffffffff80411b88:	e8 43 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411b8d:	58                   	pop    %rax
ffffffff80411b8e:	5a                   	pop    %rdx
ffffffff80411b8f:	59                   	pop    %rcx
ffffffff80411b90:	5e                   	pop    %rsi
ffffffff80411b91:	5f                   	pop    %rdi
ffffffff80411b92:	41 58                	pop    %r8
ffffffff80411b94:	41 59                	pop    %r9
ffffffff80411b96:	41 5a                	pop    %r10
ffffffff80411b98:	41 5b                	pop    %r11
ffffffff80411b9a:	48 cf                	iretq  
ffffffff80411b9c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411ba0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi25EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ba0:	41 53                	push   %r11
ffffffff80411ba2:	41 52                	push   %r10
ffffffff80411ba4:	41 51                	push   %r9
ffffffff80411ba6:	41 50                	push   %r8
ffffffff80411ba8:	57                   	push   %rdi
ffffffff80411ba9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411baa:	be 19 00 00 00       	mov    $0x19,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411baf:	51                   	push   %rcx
ffffffff80411bb0:	52                   	push   %rdx
ffffffff80411bb1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411bb2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411bb7:	fc                   	cld    
ffffffff80411bb8:	e8 13 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411bbd:	58                   	pop    %rax
ffffffff80411bbe:	5a                   	pop    %rdx
ffffffff80411bbf:	59                   	pop    %rcx
ffffffff80411bc0:	5e                   	pop    %rsi
ffffffff80411bc1:	5f                   	pop    %rdi
ffffffff80411bc2:	41 58                	pop    %r8
ffffffff80411bc4:	41 59                	pop    %r9
ffffffff80411bc6:	41 5a                	pop    %r10
ffffffff80411bc8:	41 5b                	pop    %r11
ffffffff80411bca:	48 cf                	iretq  
ffffffff80411bcc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411bd0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi26EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411bd0:	41 53                	push   %r11
ffffffff80411bd2:	41 52                	push   %r10
ffffffff80411bd4:	41 51                	push   %r9
ffffffff80411bd6:	41 50                	push   %r8
ffffffff80411bd8:	57                   	push   %rdi
ffffffff80411bd9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411bda:	be 1a 00 00 00       	mov    $0x1a,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411bdf:	51                   	push   %rcx
ffffffff80411be0:	52                   	push   %rdx
ffffffff80411be1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411be2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411be7:	fc                   	cld    
ffffffff80411be8:	e8 e3 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411bed:	58                   	pop    %rax
ffffffff80411bee:	5a                   	pop    %rdx
ffffffff80411bef:	59                   	pop    %rcx
ffffffff80411bf0:	5e                   	pop    %rsi
ffffffff80411bf1:	5f                   	pop    %rdi
ffffffff80411bf2:	41 58                	pop    %r8
ffffffff80411bf4:	41 59                	pop    %r9
ffffffff80411bf6:	41 5a                	pop    %r10
ffffffff80411bf8:	41 5b                	pop    %r11
ffffffff80411bfa:	48 cf                	iretq  
ffffffff80411bfc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411c00 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi27EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c00:	41 53                	push   %r11
ffffffff80411c02:	41 52                	push   %r10
ffffffff80411c04:	41 51                	push   %r9
ffffffff80411c06:	41 50                	push   %r8
ffffffff80411c08:	57                   	push   %rdi
ffffffff80411c09:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c0a:	be 1b 00 00 00       	mov    $0x1b,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c0f:	51                   	push   %rcx
ffffffff80411c10:	52                   	push   %rdx
ffffffff80411c11:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c12:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411c17:	fc                   	cld    
ffffffff80411c18:	e8 b3 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411c1d:	58                   	pop    %rax
ffffffff80411c1e:	5a                   	pop    %rdx
ffffffff80411c1f:	59                   	pop    %rcx
ffffffff80411c20:	5e                   	pop    %rsi
ffffffff80411c21:	5f                   	pop    %rdi
ffffffff80411c22:	41 58                	pop    %r8
ffffffff80411c24:	41 59                	pop    %r9
ffffffff80411c26:	41 5a                	pop    %r10
ffffffff80411c28:	41 5b                	pop    %r11
ffffffff80411c2a:	48 cf                	iretq  
ffffffff80411c2c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411c30 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi28EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c30:	41 53                	push   %r11
ffffffff80411c32:	41 52                	push   %r10
ffffffff80411c34:	41 51                	push   %r9
ffffffff80411c36:	41 50                	push   %r8
ffffffff80411c38:	57                   	push   %rdi
ffffffff80411c39:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c3a:	be 1c 00 00 00       	mov    $0x1c,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c3f:	51                   	push   %rcx
ffffffff80411c40:	52                   	push   %rdx
ffffffff80411c41:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c42:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411c47:	fc                   	cld    
ffffffff80411c48:	e8 83 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411c4d:	58                   	pop    %rax
ffffffff80411c4e:	5a                   	pop    %rdx
ffffffff80411c4f:	59                   	pop    %rcx
ffffffff80411c50:	5e                   	pop    %rsi
ffffffff80411c51:	5f                   	pop    %rdi
ffffffff80411c52:	41 58                	pop    %r8
ffffffff80411c54:	41 59                	pop    %r9
ffffffff80411c56:	41 5a                	pop    %r10
ffffffff80411c58:	41 5b                	pop    %r11
ffffffff80411c5a:	48 cf                	iretq  
ffffffff80411c5c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411c60 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi29EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c60:	41 53                	push   %r11
ffffffff80411c62:	41 52                	push   %r10
ffffffff80411c64:	41 51                	push   %r9
ffffffff80411c66:	41 50                	push   %r8
ffffffff80411c68:	57                   	push   %rdi
ffffffff80411c69:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c6a:	be 1d 00 00 00       	mov    $0x1d,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c6f:	51                   	push   %rcx
ffffffff80411c70:	52                   	push   %rdx
ffffffff80411c71:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c72:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411c77:	fc                   	cld    
ffffffff80411c78:	e8 53 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411c7d:	58                   	pop    %rax
ffffffff80411c7e:	5a                   	pop    %rdx
ffffffff80411c7f:	59                   	pop    %rcx
ffffffff80411c80:	5e                   	pop    %rsi
ffffffff80411c81:	5f                   	pop    %rdi
ffffffff80411c82:	41 58                	pop    %r8
ffffffff80411c84:	41 59                	pop    %r9
ffffffff80411c86:	41 5a                	pop    %r10
ffffffff80411c88:	41 5b                	pop    %r11
ffffffff80411c8a:	48 cf                	iretq  
ffffffff80411c8c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411c90 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi30EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c90:	41 53                	push   %r11
ffffffff80411c92:	41 52                	push   %r10
ffffffff80411c94:	41 51                	push   %r9
ffffffff80411c96:	41 50                	push   %r8
ffffffff80411c98:	57                   	push   %rdi
ffffffff80411c99:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c9a:	be 1e 00 00 00       	mov    $0x1e,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c9f:	51                   	push   %rcx
ffffffff80411ca0:	52                   	push   %rdx
ffffffff80411ca1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411ca2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411ca7:	fc                   	cld    
ffffffff80411ca8:	e8 23 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411cad:	58                   	pop    %rax
ffffffff80411cae:	5a                   	pop    %rdx
ffffffff80411caf:	59                   	pop    %rcx
ffffffff80411cb0:	5e                   	pop    %rsi
ffffffff80411cb1:	5f                   	pop    %rdi
ffffffff80411cb2:	41 58                	pop    %r8
ffffffff80411cb4:	41 59                	pop    %r9
ffffffff80411cb6:	41 5a                	pop    %r10
ffffffff80411cb8:	41 5b                	pop    %r11
ffffffff80411cba:	48 cf                	iretq  
ffffffff80411cbc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411cc0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi31EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411cc0:	41 53                	push   %r11
ffffffff80411cc2:	41 52                	push   %r10
ffffffff80411cc4:	41 51                	push   %r9
ffffffff80411cc6:	41 50                	push   %r8
ffffffff80411cc8:	57                   	push   %rdi
ffffffff80411cc9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411cca:	be 1f 00 00 00       	mov    $0x1f,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ccf:	51                   	push   %rcx
ffffffff80411cd0:	52                   	push   %rdx
ffffffff80411cd1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411cd2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411cd7:	fc                   	cld    
ffffffff80411cd8:	e8 f3 bf ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
}
ffffffff80411cdd:	58                   	pop    %rax
ffffffff80411cde:	5a                   	pop    %rdx
ffffffff80411cdf:	59                   	pop    %rcx
ffffffff80411ce0:	5e                   	pop    %rsi
ffffffff80411ce1:	5f                   	pop    %rdi
ffffffff80411ce2:	41 58                	pop    %r8
ffffffff80411ce4:	41 59                	pop    %r9
ffffffff80411ce6:	41 5a                	pop    %r10
ffffffff80411ce8:	41 5b                	pop    %r11
ffffffff80411cea:	48 cf                	iretq  
ffffffff80411cec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411cf0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80411cf0:	41 57                	push   %r15
ffffffff80411cf2:	41 56                	push   %r14
ffffffff80411cf4:	41 55                	push   %r13
ffffffff80411cf6:	41 54                	push   %r12
ffffffff80411cf8:	41 53                	push   %r11
ffffffff80411cfa:	41 52                	push   %r10
ffffffff80411cfc:	41 51                	push   %r9
ffffffff80411cfe:	41 50                	push   %r8
ffffffff80411d00:	55                   	push   %rbp
ffffffff80411d01:	57                   	push   %rdi
ffffffff80411d02:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d03:	be 08 00 00 00       	mov    $0x8,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80411d08:	53                   	push   %rbx
ffffffff80411d09:	51                   	push   %rcx
ffffffff80411d0a:	52                   	push   %rdx
ffffffff80411d0b:	50                   	push   %rax
ffffffff80411d0c:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80411d10:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
ffffffff80411d17:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d18:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
ffffffff80411d1f:	00 
ffffffff80411d20:	fc                   	cld    
ffffffff80411d21:	e8 aa bf ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
ffffffff80411d26:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff80411d2d:	e8 8e b4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80411d32:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80411d34:	48 85 c0             	test   %rax,%rax
ffffffff80411d37:	0f 84 2b 0b 00 00    	je     ffffffff80412868 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb78>
ffffffff80411d3d:	4c 8b 2d 1c c3 00 00 	mov    0xc31c(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80411d44:	4c 8b 05 1d c3 00 00 	mov    0xc31d(%rip),%r8        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411d4b:	49 c7 c1 66 b8 41 80 	mov    $0xffffffff8041b866,%r9
ffffffff80411d52:	48 8b 2d 1f c3 00 00 	mov    0xc31f(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411d59:	48 8b 3d 10 c3 00 00 	mov    0xc310(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411d60:	4b 8d 54 ad fb       	lea    -0x5(%r13,%r13,4),%rdx
ffffffff80411d65:	48 89 d6             	mov    %rdx,%rsi
ffffffff80411d68:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80411d6c:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80411d70:	4c 01 c2             	add    %r8,%rdx
ffffffff80411d73:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80411d7a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80411d7f:	48 8d 8c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rcx
ffffffff80411d86:	80 
ffffffff80411d87:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff80411d8c:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80411d90:	4c 89 c1             	mov    %r8,%rcx
ffffffff80411d93:	48 29 e9             	sub    %rbp,%rcx
ffffffff80411d96:	48 39 c1             	cmp    %rax,%rcx
ffffffff80411d99:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80411d9d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80411da0:	48 89 ce             	mov    %rcx,%rsi
ffffffff80411da3:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80411da7:	48 85 f6             	test   %rsi,%rsi
ffffffff80411daa:	0f 84 10 07 00 00    	je     ffffffff804124c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
    size_t i = pos;
ffffffff80411db0:	31 d2                	xor    %edx,%edx
ffffffff80411db2:	eb 11                	jmp    ffffffff80411dc5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xd5>
ffffffff80411db4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80411db8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80411dbc:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80411dbf:	0f 84 fb 06 00 00    	je     ffffffff804124c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
      if (str_[i] == c) {
ffffffff80411dc5:	41 80 3c 11 0a       	cmpb   $0xa,(%r9,%rdx,1)
ffffffff80411dca:	75 ec                	jne    ffffffff80411db8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xc8>
ffffffff80411dcc:	49 89 d3             	mov    %rdx,%r11
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80411dcf:	48 39 d0             	cmp    %rdx,%rax
ffffffff80411dd2:	48 89 d6             	mov    %rdx,%rsi
ffffffff80411dd5:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80411dd9:	4c 39 ef             	cmp    %r13,%rdi
ffffffff80411ddc:	0f 84 2e 06 00 00    	je     ffffffff80412410 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411de2:	48 01 ee             	add    %rbp,%rsi
ffffffff80411de5:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80411de8:	49 0f 47 f0          	cmova  %r8,%rsi
ffffffff80411dec:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80411def:	0f 83 bb 06 00 00    	jae    ffffffff804124b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c0>
ffffffff80411df5:	4c 8d 14 bf          	lea    (%rdi,%rdi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80411df9:	4d 89 ce             	mov    %r9,%r14
ffffffff80411dfc:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff80411e00:	49 29 ee             	sub    %rbp,%r14
ffffffff80411e03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80411e08:	66 45 0f be 24 2e    	movsbw (%r14,%rbp,1),%r12w
ffffffff80411e0e:	66 41 81 cc 00 0f    	or     $0xf00,%r12w
ffffffff80411e14:	66 45 89 a4 6a 80 e0 	mov    %r12w,-0x7fbe1f80(%r10,%rbp,2)
ffffffff80411e1b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411e1d:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80411e21:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80411e24:	75 e2                	jne    ffffffff80411e08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x118>
    if (current_col_ == num_cols_) {
ffffffff80411e26:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80411e29:	0f 84 a1 05 00 00    	je     ffffffff804123d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e0>
    current_col_ = i;
ffffffff80411e2f:	48 89 35 42 c2 00 00 	mov    %rsi,0xc242(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80411e36:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff80411e3a:	0f 84 b2 05 00 00    	je     ffffffff804123f2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x702>
ffffffff80411e40:	48 85 f6             	test   %rsi,%rsi
ffffffff80411e43:	74 0a                	je     ffffffff80411e4f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80411e45:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80411e49:	0f 86 a1 06 00 00    	jbe    ffffffff804124f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x800>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80411e4f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80411e53:	48 89 f5             	mov    %rsi,%rbp
ffffffff80411e56:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80411e59:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80411e5d:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff80411e60:	48 39 c8             	cmp    %rcx,%rax
ffffffff80411e63:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80411e67:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80411e6a:	48 85 c0             	test   %rax,%rax
ffffffff80411e6d:	0f 85 1d ff ff ff    	jne    ffffffff80411d90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80411e73:	48 85 ff             	test   %rdi,%rdi
ffffffff80411e76:	74 5e                	je     ffffffff80411ed6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1e6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411e78:	48 8b 0d e9 c1 00 00 	mov    0xc1e9(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411e7f:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80411e86:	31 d2                	xor    %edx,%edx
ffffffff80411e88:	48 89 c8             	mov    %rcx,%rax
ffffffff80411e8b:	4c 8d 1c 09          	lea    (%rcx,%rcx,1),%r11
ffffffff80411e8f:	48 f7 d8             	neg    %rax
ffffffff80411e92:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff80411e99:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411e9a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80411e9f:	90                   	nop
ffffffff80411ea0:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
ffffffff80411ea4:	48 85 c9             	test   %rcx,%rcx
ffffffff80411ea7:	74 1e                	je     ffffffff80411ec7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d7>
ffffffff80411ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80411eb0:	44 0f b7 8c 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r9d
ffffffff80411eb7:	f4 ff 
ffffffff80411eb9:	48 83 c0 02          	add    $0x2,%rax
ffffffff80411ebd:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411ec2:	4c 39 c0             	cmp    %r8,%rax
ffffffff80411ec5:	75 e9                	jne    ffffffff80411eb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80411ec7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80411ecb:	4c 89 c0             	mov    %r8,%rax
ffffffff80411ece:	4c 01 d6             	add    %r10,%rsi
ffffffff80411ed1:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80411ed4:	75 ca                	jne    ffffffff80411ea0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1b0>
    if (current_col_ != 0) {
ffffffff80411ed6:	48 85 ed             	test   %rbp,%rbp
ffffffff80411ed9:	74 52                	je     ffffffff80411f2d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411edb:	48 8b 35 86 c1 00 00 	mov    0xc186(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411ee2:	48 85 f6             	test   %rsi,%rsi
ffffffff80411ee5:	74 46                	je     ffffffff80411f2d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80411ee7:	48 89 fa             	mov    %rdi,%rdx
ffffffff80411eea:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80411eee:	48 0f af d6          	imul   %rsi,%rdx
ffffffff80411ef2:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80411ef6:	48 8d b4 32 00 c0 05 	lea    0x5c000(%rdx,%rsi,1),%rsi
ffffffff80411efd:	00 
ffffffff80411efe:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80411f05:	00 
ffffffff80411f06:	48 f7 da             	neg    %rdx
ffffffff80411f09:	48 01 f6             	add    %rsi,%rsi
ffffffff80411f0c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80411f13:	80 
ffffffff80411f14:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80411f18:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80411f1f:	ff 
ffffffff80411f20:	48 83 c0 02          	add    $0x2,%rax
ffffffff80411f24:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411f28:	48 39 f0             	cmp    %rsi,%rax
ffffffff80411f2b:	75 eb                	jne    ffffffff80411f18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x228>
  size_t num_len = 0;
ffffffff80411f2d:	31 d2                	xor    %edx,%edx
ffffffff80411f2f:	90                   	nop
    buffer[i] = num % base;
ffffffff80411f30:	48 89 d8             	mov    %rbx,%rax
    num_len++;
ffffffff80411f33:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff80411f37:	83 e0 0f             	and    $0xf,%eax
ffffffff80411f3a:	88 44 14 3b          	mov    %al,0x3b(%rsp,%rdx,1)
ffffffff80411f3e:	48 89 d8             	mov    %rbx,%rax
    num /= base;
ffffffff80411f41:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80411f45:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff80411f49:	76 06                	jbe    ffffffff80411f51 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x261>
  for (size_t i = 0; i < size; i++) {
ffffffff80411f4b:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff80411f4f:	75 df                	jne    ffffffff80411f30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
  if (num != 0) {
ffffffff80411f51:	48 85 db             	test   %rbx,%rbx
ffffffff80411f54:	0f 85 e6 08 00 00    	jne    ffffffff80412840 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb50>
    str[offset++] = '0';
ffffffff80411f5a:	66 c7 44 24 28 30 78 	movw   $0x7830,0x28(%rsp)
ffffffff80411f61:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
ffffffff80411f66:	48 8d 7c 14 3b       	lea    0x3b(%rsp,%rdx,1),%rdi
ffffffff80411f6b:	48 8d 74 24 2a       	lea    0x2a(%rsp),%rsi
ffffffff80411f70:	eb 1c                	jmp    ffffffff80411f8e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x29e>
ffffffff80411f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80411f78:	83 c0 37             	add    $0x37,%eax
ffffffff80411f7b:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80411f7f:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80411f82:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80411f86:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80411f89:	74 1d                	je     ffffffff80411fa8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b8>
ffffffff80411f8b:	48 89 c7             	mov    %rax,%rdi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80411f8e:	0f b6 07             	movzbl (%rdi),%eax
ffffffff80411f91:	3c 09                	cmp    $0x9,%al
ffffffff80411f93:	7f e3                	jg     ffffffff80411f78 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80411f95:	83 c0 30             	add    $0x30,%eax
ffffffff80411f98:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80411f9c:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80411f9f:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80411fa3:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80411fa6:	75 e3                	jne    ffffffff80411f8b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x29b>
  str[num_len + offset] = 0;
ffffffff80411fa8:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80411fad:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff80411fb2:	e8 09 b2 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80411fb7:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80411fb9:	48 85 c0             	test   %rax,%rax
ffffffff80411fbc:	0f 84 8e 08 00 00    	je     ffffffff80412850 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
ffffffff80411fc2:	4c 8b 25 97 c0 00 00 	mov    0xc097(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80411fc9:	48 8b 2d 98 c0 00 00 	mov    0xc098(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411fd0:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
ffffffff80411fd5:	48 8b 1d 9c c0 00 00 	mov    0xc09c(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80411fdc:	48 8b 3d 8d c0 00 00 	mov    0xc08d(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80411fe3:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80411fe8:	48 89 d6             	mov    %rdx,%rsi
ffffffff80411feb:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80411fef:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80411ff3:	48 01 ea             	add    %rbp,%rdx
ffffffff80411ff6:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80411ffd:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80412004:	80 
ffffffff80412005:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041200a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412010:	48 89 e9             	mov    %rbp,%rcx
ffffffff80412013:	48 29 d9             	sub    %rbx,%rcx
ffffffff80412016:	48 39 c1             	cmp    %rax,%rcx
ffffffff80412019:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041201d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80412020:	48 89 ce             	mov    %rcx,%rsi
ffffffff80412023:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80412027:	48 85 f6             	test   %rsi,%rsi
ffffffff8041202a:	0f 84 30 07 00 00    	je     ffffffff80412760 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
    size_t i = pos;
ffffffff80412030:	31 d2                	xor    %edx,%edx
ffffffff80412032:	eb 11                	jmp    ffffffff80412045 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x355>
ffffffff80412034:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80412038:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041203c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041203f:	0f 84 1b 07 00 00    	je     ffffffff80412760 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
      if (str_[i] == c) {
ffffffff80412045:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff8041204a:	75 ec                	jne    ffffffff80412038 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x348>
ffffffff8041204c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041204f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80412052:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412055:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80412059:	4c 39 e7             	cmp    %r12,%rdi
ffffffff8041205c:	0f 84 4e 06 00 00    	je     ffffffff804126b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412062:	48 01 de             	add    %rbx,%rsi
ffffffff80412065:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80412068:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff8041206c:	48 39 f3             	cmp    %rsi,%rbx
ffffffff8041206f:	0f 83 d9 06 00 00    	jae    ffffffff8041274e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa5e>
ffffffff80412075:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80412079:	4d 89 c5             	mov    %r8,%r13
ffffffff8041207c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80412080:	49 29 dd             	sub    %rbx,%r13
ffffffff80412083:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412088:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff8041208f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80412095:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff8041209c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041209e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff804120a2:	48 39 de             	cmp    %rbx,%rsi
ffffffff804120a5:	75 e1                	jne    ffffffff80412088 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x398>
    if (current_col_ == num_cols_) {
ffffffff804120a7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804120aa:	0f 84 c0 05 00 00    	je     ffffffff80412670 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x980>
    current_col_ = i;
ffffffff804120b0:	48 89 35 c1 bf 00 00 	mov    %rsi,0xbfc1(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804120b7:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff804120bb:	0f 84 d1 05 00 00    	je     ffffffff80412692 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a2>
ffffffff804120c1:	48 85 f6             	test   %rsi,%rsi
ffffffff804120c4:	74 0a                	je     ffffffff804120d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff804120c6:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804120ca:	0f 86 18 07 00 00    	jbe    ffffffff804127e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xaf8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804120d0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804120d4:	48 89 f3             	mov    %rsi,%rbx
ffffffff804120d7:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804120da:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804120de:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff804120e1:	48 39 c8             	cmp    %rcx,%rax
ffffffff804120e4:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff804120e8:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff804120eb:	48 85 c0             	test   %rax,%rax
ffffffff804120ee:	0f 85 1c ff ff ff    	jne    ffffffff80412010 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x320>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804120f4:	48 85 ff             	test   %rdi,%rdi
ffffffff804120f7:	74 5d                	je     ffffffff80412156 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x466>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804120f9:	48 8b 0d 68 bf 00 00 	mov    0xbf68(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412100:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412107:	31 d2                	xor    %edx,%edx
ffffffff80412109:	48 89 c8             	mov    %rcx,%rax
ffffffff8041210c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80412110:	48 f7 d8             	neg    %rax
ffffffff80412113:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff8041211a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041211b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80412120:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80412124:	48 85 c9             	test   %rcx,%rcx
ffffffff80412127:	74 1e                	je     ffffffff80412147 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x457>
ffffffff80412129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412130:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80412137:	f4 ff 
ffffffff80412139:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041213d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412142:	48 39 c5             	cmp    %rax,%rbp
ffffffff80412145:	75 e9                	jne    ffffffff80412130 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x440>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412147:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041214b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041214e:	4c 01 ce             	add    %r9,%rsi
ffffffff80412151:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80412154:	75 ca                	jne    ffffffff80412120 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x430>
    if (current_col_ != 0) {
ffffffff80412156:	48 85 db             	test   %rbx,%rbx
ffffffff80412159:	74 52                	je     ffffffff804121ad <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041215b:	48 8b 35 06 bf 00 00 	mov    0xbf06(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412162:	48 85 f6             	test   %rsi,%rsi
ffffffff80412165:	74 46                	je     ffffffff804121ad <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80412167:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041216a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041216e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80412172:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80412176:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041217d:	00 
ffffffff8041217e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80412185:	00 
ffffffff80412186:	48 f7 da             	neg    %rdx
ffffffff80412189:	48 01 f6             	add    %rsi,%rsi
ffffffff8041218c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80412193:	80 
ffffffff80412194:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80412198:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041219f:	ff 
ffffffff804121a0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804121a4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804121a8:	48 39 f0             	cmp    %rsi,%rax
ffffffff804121ab:	75 eb                	jne    ffffffff80412198 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x4a8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804121ad:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff804121b4:	e8 07 b0 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804121b9:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff804121bb:	48 85 c0             	test   %rax,%rax
ffffffff804121be:	0f 84 bc 06 00 00    	je     ffffffff80412880 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb90>
ffffffff804121c4:	4c 8b 25 95 be 00 00 	mov    0xbe95(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804121cb:	48 8b 2d 96 be 00 00 	mov    0xbe96(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804121d2:	49 c7 c0 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r8
ffffffff804121d9:	48 8b 1d 98 be 00 00 	mov    0xbe98(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804121e0:	48 8b 3d 89 be 00 00 	mov    0xbe89(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804121e7:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff804121ec:	48 89 d6             	mov    %rdx,%rsi
ffffffff804121ef:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804121f3:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804121f7:	48 01 ea             	add    %rbp,%rdx
ffffffff804121fa:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80412201:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80412208:	80 
ffffffff80412209:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041220e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412210:	48 89 e9             	mov    %rbp,%rcx
ffffffff80412213:	48 89 c6             	mov    %rax,%rsi
ffffffff80412216:	48 29 d9             	sub    %rbx,%rcx
ffffffff80412219:	48 39 c1             	cmp    %rax,%rcx
ffffffff8041221c:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80412220:	48 39 c1             	cmp    %rax,%rcx
ffffffff80412223:	48 0f 46 f1          	cmovbe %rcx,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80412227:	48 85 f6             	test   %rsi,%rsi
ffffffff8041222a:	0f 84 10 04 00 00    	je     ffffffff80412640 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
    size_t i = pos;
ffffffff80412230:	31 d2                	xor    %edx,%edx
ffffffff80412232:	eb 11                	jmp    ffffffff80412245 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x555>
ffffffff80412234:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80412238:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041223c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041223f:	0f 84 fb 03 00 00    	je     ffffffff80412640 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
      if (str_[i] == c) {
ffffffff80412245:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff8041224a:	75 ec                	jne    ffffffff80412238 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x548>
ffffffff8041224c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041224f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80412252:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412255:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80412259:	49 39 fc             	cmp    %rdi,%r12
ffffffff8041225c:	0f 84 2e 03 00 00    	je     ffffffff80412590 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412262:	48 01 de             	add    %rbx,%rsi
ffffffff80412265:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80412268:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff8041226c:	48 39 de             	cmp    %rbx,%rsi
ffffffff8041226f:	0f 86 b9 03 00 00    	jbe    ffffffff8041262e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x93e>
ffffffff80412275:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80412279:	4d 89 c5             	mov    %r8,%r13
ffffffff8041227c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80412280:	49 29 dd             	sub    %rbx,%r13
ffffffff80412283:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412288:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff8041228f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80412295:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff8041229c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041229e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff804122a2:	48 39 de             	cmp    %rbx,%rsi
ffffffff804122a5:	75 e1                	jne    ffffffff80412288 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x598>
    if (current_col_ == num_cols_) {
ffffffff804122a7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804122aa:	0f 84 98 02 00 00    	je     ffffffff80412548 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x858>
    current_col_ = i;
ffffffff804122b0:	48 89 35 c1 bd 00 00 	mov    %rsi,0xbdc1(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804122b7:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff804122bb:	0f 84 a9 02 00 00    	je     ffffffff8041256a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x87a>
ffffffff804122c1:	48 85 f6             	test   %rsi,%rsi
ffffffff804122c4:	74 0a                	je     ffffffff804122d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff804122c6:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804122ca:	0f 86 c0 04 00 00    	jbe    ffffffff80412790 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804122d0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804122d4:	48 89 f3             	mov    %rsi,%rbx
ffffffff804122d7:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804122da:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804122de:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff804122e1:	48 39 c1             	cmp    %rax,%rcx
ffffffff804122e4:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff804122e8:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff804122eb:	48 85 c0             	test   %rax,%rax
ffffffff804122ee:	0f 85 1c ff ff ff    	jne    ffffffff80412210 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804122f4:	48 85 ff             	test   %rdi,%rdi
ffffffff804122f7:	74 5d                	je     ffffffff80412356 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x666>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804122f9:	48 8b 0d 68 bd 00 00 	mov    0xbd68(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412300:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412307:	31 d2                	xor    %edx,%edx
ffffffff80412309:	48 89 c8             	mov    %rcx,%rax
ffffffff8041230c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80412310:	48 f7 d8             	neg    %rax
ffffffff80412313:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff8041231a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041231b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80412320:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80412324:	48 85 c9             	test   %rcx,%rcx
ffffffff80412327:	74 1e                	je     ffffffff80412347 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x657>
ffffffff80412329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412330:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80412337:	f4 ff 
ffffffff80412339:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041233d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412342:	48 39 c5             	cmp    %rax,%rbp
ffffffff80412345:	75 e9                	jne    ffffffff80412330 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x640>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412347:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041234b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041234e:	4c 01 ce             	add    %r9,%rsi
ffffffff80412351:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80412354:	75 ca                	jne    ffffffff80412320 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x630>
    if (current_col_ != 0) {
ffffffff80412356:	48 85 db             	test   %rbx,%rbx
ffffffff80412359:	74 52                	je     ffffffff804123ad <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041235b:	48 8b 35 06 bd 00 00 	mov    0xbd06(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412362:	48 85 f6             	test   %rsi,%rsi
ffffffff80412365:	74 46                	je     ffffffff804123ad <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80412367:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041236a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041236e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80412372:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80412376:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041237d:	00 
ffffffff8041237e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80412385:	00 
ffffffff80412386:	48 f7 da             	neg    %rdx
ffffffff80412389:	48 01 f6             	add    %rsi,%rsi
ffffffff8041238c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80412393:	80 
ffffffff80412394:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80412398:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041239f:	ff 
ffffffff804123a0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804123a4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804123a8:	48 39 c6             	cmp    %rax,%rsi
ffffffff804123ab:	75 eb                	jne    ffffffff80412398 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a8>
}
ffffffff804123ad:	48 83 c4 58          	add    $0x58,%rsp
ffffffff804123b1:	58                   	pop    %rax
ffffffff804123b2:	5a                   	pop    %rdx
ffffffff804123b3:	59                   	pop    %rcx
ffffffff804123b4:	5b                   	pop    %rbx
ffffffff804123b5:	5e                   	pop    %rsi
ffffffff804123b6:	5f                   	pop    %rdi
ffffffff804123b7:	5d                   	pop    %rbp
ffffffff804123b8:	41 58                	pop    %r8
ffffffff804123ba:	41 59                	pop    %r9
ffffffff804123bc:	41 5a                	pop    %r10
ffffffff804123be:	41 5b                	pop    %r11
ffffffff804123c0:	41 5c                	pop    %r12
ffffffff804123c2:	41 5d                	pop    %r13
ffffffff804123c4:	41 5e                	pop    %r14
ffffffff804123c6:	41 5f                	pop    %r15
ffffffff804123c8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff804123cc:	48 cf                	iretq  
ffffffff804123ce:	66 90                	xchg   %ax,%ax
      current_row_++;
ffffffff804123d0:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804123d4:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff804123d6:	48 c7 05 97 bc 00 00 	movq   $0x0,0xbc97(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804123dd:	00 00 00 00 
      current_row_++;
ffffffff804123e1:	48 89 3d 88 bc 00 00 	mov    %rdi,0xbc88(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804123e8:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff804123ec:	0f 85 5d fa ff ff    	jne    ffffffff80411e4f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff804123f2:	48 39 d1             	cmp    %rdx,%rcx
ffffffff804123f5:	48 89 f5             	mov    %rsi,%rbp
ffffffff804123f8:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff804123fc:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff804123ff:	48 39 c2             	cmp    %rax,%rdx
ffffffff80412402:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80412406:	48 29 d0             	sub    %rdx,%rax
ffffffff80412409:	e9 5c fa ff ff       	jmpq   ffffffff80411e6a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x17a>
ffffffff8041240e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412410:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80412414:	76 5a                	jbe    ffffffff80412470 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x780>
ffffffff80412416:	41 bc a0 00 00 00    	mov    $0xa0,%r12d
ffffffff8041241c:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80412422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412428:	45 31 d2             	xor    %r10d,%r10d
ffffffff8041242b:	4d 8d bc 24 60 ff ff 	lea    -0xa0(%r12),%r15
ffffffff80412432:	ff 
ffffffff80412433:	4d 85 c0             	test   %r8,%r8
ffffffff80412436:	74 28                	je     ffffffff80412460 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80412438:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041243d:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80412440:	43 0f b7 84 54 80 e0 	movzwl -0x7fbe1f80(%r12,%r10,2),%eax
ffffffff80412447:	41 80 
ffffffff80412449:	66 43 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%r10,2)
ffffffff80412450:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412452:	49 83 c2 01          	add    $0x1,%r10
ffffffff80412456:	4d 39 c2             	cmp    %r8,%r10
ffffffff80412459:	75 e5                	jne    ffffffff80412440 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x750>
ffffffff8041245b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412460:	49 83 c6 01          	add    $0x1,%r14
ffffffff80412464:	49 81 c4 a0 00 00 00 	add    $0xa0,%r12
ffffffff8041246b:	4d 39 ee             	cmp    %r13,%r14
ffffffff8041246e:	75 b8                	jne    ffffffff80412428 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x738>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412470:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80412475:	4d 85 c0             	test   %r8,%r8
ffffffff80412478:	74 18                	je     ffffffff80412492 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a2>
ffffffff8041247a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80412480:	66 41 c7 42 20 00 00 	movw   $0x0,0x20(%r10)
ffffffff80412487:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041248b:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff80412490:	75 ee                	jne    ffffffff80412480 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x790>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412492:	48 01 ee             	add    %rbp,%rsi
      current_row_--;
ffffffff80412495:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80412499:	4c 39 c6             	cmp    %r8,%rsi
ffffffff8041249c:	48 89 3d cd bb 00 00 	mov    %rdi,0xbbcd(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804124a3:	49 0f 47 f0          	cmova  %r8,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804124a7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804124aa:	0f 82 45 f9 ff ff    	jb     ffffffff80411df5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x105>
ffffffff804124b0:	48 89 ee             	mov    %rbp,%rsi
ffffffff804124b3:	e9 6e f9 ff ff       	jmpq   ffffffff80411e26 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x136>
ffffffff804124b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804124bf:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804124c0:	48 89 ca             	mov    %rcx,%rdx
ffffffff804124c3:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    if (count == npos) {
ffffffff804124ca:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff804124ce:	0f 85 fb f8 ff ff    	jne    ffffffff80411dcf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xdf>
ffffffff804124d4:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
ffffffff804124db:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804124e2:	48 89 c6             	mov    %rax,%rsi
ffffffff804124e5:	e9 ef f8 ff ff       	jmpq   ffffffff80411dd9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xe9>
ffffffff804124ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804124f0:	4c 39 c6             	cmp    %r8,%rsi
ffffffff804124f3:	73 32                	jae    ffffffff80412527 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff804124f5:	48 8d 2c bf          	lea    (%rdi,%rdi,4),%rbp
ffffffff804124f9:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804124fd:	48 01 ee             	add    %rbp,%rsi
ffffffff80412500:	4c 01 c5             	add    %r8,%rbp
ffffffff80412503:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff8041250a:	80 
ffffffff8041250b:	48 8d ac 2d 60 e0 41 	lea    -0x7fbe1fa0(%rbp,%rbp,1),%rbp
ffffffff80412512:	80 
ffffffff80412513:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80412518:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff8041251e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80412522:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80412525:	75 f1                	jne    ffffffff80412518 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x828>
        current_row_++;
ffffffff80412527:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8041252b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff8041252d:	48 c7 05 40 bb 00 00 	movq   $0x0,0xbb40(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80412534:	00 00 00 00 
        current_row_++;
ffffffff80412538:	48 89 3d 31 bb 00 00 	mov    %rdi,0xbb31(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041253f:	e9 0b f9 ff ff       	jmpq   ffffffff80411e4f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80412544:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80412548:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041254c:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff8041254e:	48 c7 05 1f bb 00 00 	movq   $0x0,0xbb1f(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80412555:	00 00 00 00 
      current_row_++;
ffffffff80412559:	48 89 3d 10 bb 00 00 	mov    %rdi,0xbb10(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412560:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80412564:	0f 85 66 fd ff ff    	jne    ffffffff804122d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff8041256a:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff8041256d:	48 89 f3             	mov    %rsi,%rbx
ffffffff80412570:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80412574:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80412577:	48 39 c2             	cmp    %rax,%rdx
ffffffff8041257a:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff8041257e:	48 29 d0             	sub    %rdx,%rax
ffffffff80412581:	e9 65 fd ff ff       	jmpq   ffffffff804122eb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5fb>
ffffffff80412586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041258d:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412590:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80412594:	76 5a                	jbe    ffffffff804125f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x900>
ffffffff80412596:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff8041259c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff804125a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804125a8:	45 31 c9             	xor    %r9d,%r9d
ffffffff804125ab:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff804125b2:	48 85 ed             	test   %rbp,%rbp
ffffffff804125b5:	74 29                	je     ffffffff804125e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8f0>
ffffffff804125b7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff804125bc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804125c0:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff804125c7:	41 80 
ffffffff804125c9:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff804125d0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804125d2:	49 83 c1 01          	add    $0x1,%r9
ffffffff804125d6:	4c 39 cd             	cmp    %r9,%rbp
ffffffff804125d9:	75 e5                	jne    ffffffff804125c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8d0>
ffffffff804125db:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804125e0:	49 83 c5 01          	add    $0x1,%r13
ffffffff804125e4:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff804125eb:	49 39 fd             	cmp    %rdi,%r13
ffffffff804125ee:	75 b8                	jne    ffffffff804125a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804125f0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff804125f5:	48 85 ed             	test   %rbp,%rbp
ffffffff804125f8:	74 16                	je     ffffffff80412610 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
ffffffff804125fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80412600:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80412607:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041260b:	4d 39 cf             	cmp    %r9,%r15
ffffffff8041260e:	75 f0                	jne    ffffffff80412600 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412610:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80412613:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80412617:	48 39 ee             	cmp    %rbp,%rsi
ffffffff8041261a:	48 89 3d 4f ba 00 00 	mov    %rdi,0xba4f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412621:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412625:	48 39 de             	cmp    %rbx,%rsi
ffffffff80412628:	0f 87 47 fc ff ff    	ja     ffffffff80412275 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x585>
ffffffff8041262e:	48 89 de             	mov    %rbx,%rsi
ffffffff80412631:	e9 71 fc ff ff       	jmpq   ffffffff804122a7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b7>
ffffffff80412636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041263d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80412640:	48 89 ca             	mov    %rcx,%rdx
ffffffff80412643:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff8041264a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041264e:	0f 85 fb fb ff ff    	jne    ffffffff8041224f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x55f>
ffffffff80412654:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff8041265b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80412662:	48 89 c6             	mov    %rax,%rsi
ffffffff80412665:	e9 ef fb ff ff       	jmpq   ffffffff80412259 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x569>
ffffffff8041266a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80412670:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412674:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80412676:	48 c7 05 f7 b9 00 00 	movq   $0x0,0xb9f7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041267d:	00 00 00 00 
      current_row_++;
ffffffff80412681:	48 89 3d e8 b9 00 00 	mov    %rdi,0xb9e8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412688:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041268c:	0f 85 3e fa ff ff    	jne    ffffffff804120d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80412692:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80412695:	48 89 f3             	mov    %rsi,%rbx
ffffffff80412698:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff8041269c:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff8041269f:	48 39 d0             	cmp    %rdx,%rax
ffffffff804126a2:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff804126a6:	48 29 d0             	sub    %rdx,%rax
ffffffff804126a9:	e9 3d fa ff ff       	jmpq   ffffffff804120eb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3fb>
ffffffff804126ae:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804126b0:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff804126b4:	76 5a                	jbe    ffffffff80412710 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa20>
ffffffff804126b6:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff804126bc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff804126c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804126c8:	45 31 c9             	xor    %r9d,%r9d
ffffffff804126cb:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff804126d2:	48 85 ed             	test   %rbp,%rbp
ffffffff804126d5:	74 29                	je     ffffffff80412700 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff804126d7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff804126dc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804126e0:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff804126e7:	41 80 
ffffffff804126e9:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff804126f0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804126f2:	49 83 c1 01          	add    $0x1,%r9
ffffffff804126f6:	49 39 e9             	cmp    %rbp,%r9
ffffffff804126f9:	75 e5                	jne    ffffffff804126e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
ffffffff804126fb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412700:	49 83 c5 01          	add    $0x1,%r13
ffffffff80412704:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff8041270b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041270e:	75 b8                	jne    ffffffff804126c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412710:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80412715:	48 85 ed             	test   %rbp,%rbp
ffffffff80412718:	74 16                	je     ffffffff80412730 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa40>
ffffffff8041271a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80412720:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80412727:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041272b:	4d 39 f9             	cmp    %r15,%r9
ffffffff8041272e:	75 f0                	jne    ffffffff80412720 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa30>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412730:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80412733:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80412737:	48 39 ee             	cmp    %rbp,%rsi
ffffffff8041273a:	48 89 3d 2f b9 00 00 	mov    %rdi,0xb92f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412741:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412745:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80412748:	0f 82 27 f9 ff ff    	jb     ffffffff80412075 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x385>
ffffffff8041274e:	48 89 de             	mov    %rbx,%rsi
ffffffff80412751:	e9 51 f9 ff ff       	jmpq   ffffffff804120a7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff80412756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041275d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80412760:	48 89 ca             	mov    %rcx,%rdx
ffffffff80412763:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff8041276a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041276e:	0f 85 db f8 ff ff    	jne    ffffffff8041204f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x35f>
ffffffff80412774:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff8041277b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80412782:	48 89 c6             	mov    %rax,%rsi
ffffffff80412785:	e9 cf f8 ff ff       	jmpq   ffffffff80412059 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x369>
ffffffff8041278a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80412790:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80412793:	76 32                	jbe    ffffffff804127c7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xad7>
ffffffff80412795:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80412799:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8041279d:	48 01 de             	add    %rbx,%rsi
ffffffff804127a0:	48 01 eb             	add    %rbp,%rbx
ffffffff804127a3:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff804127aa:	80 
ffffffff804127ab:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff804127b2:	80 
ffffffff804127b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804127b8:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff804127be:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804127c2:	48 39 f3             	cmp    %rsi,%rbx
ffffffff804127c5:	75 f1                	jne    ffffffff804127b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xac8>
        current_row_++;
ffffffff804127c7:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804127cb:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff804127cd:	48 c7 05 a0 b8 00 00 	movq   $0x0,0xb8a0(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804127d4:	00 00 00 00 
        current_row_++;
ffffffff804127d8:	48 89 3d 91 b8 00 00 	mov    %rdi,0xb891(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804127df:	e9 ec fa ff ff       	jmpq   ffffffff804122d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff804127e4:	0f 1f 40 00          	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804127e8:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804127eb:	76 32                	jbe    ffffffff8041281f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb2f>
ffffffff804127ed:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff804127f1:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff804127f5:	48 01 de             	add    %rbx,%rsi
ffffffff804127f8:	48 01 eb             	add    %rbp,%rbx
ffffffff804127fb:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80412802:	80 
ffffffff80412803:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff8041280a:	80 
ffffffff8041280b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80412810:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80412816:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041281a:	48 39 de             	cmp    %rbx,%rsi
ffffffff8041281d:	75 f1                	jne    ffffffff80412810 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb20>
        current_row_++;
ffffffff8041281f:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80412823:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80412825:	48 c7 05 48 b8 00 00 	movq   $0x0,0xb848(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041282c:	00 00 00 00 
        current_row_++;
ffffffff80412830:	48 89 3d 39 b8 00 00 	mov    %rdi,0xb839(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412837:	e9 94 f8 ff ff       	jmpq   ffffffff804120d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff8041283c:	0f 1f 40 00          	nopl   0x0(%rax)
    str[0] = 'E';
ffffffff80412840:	66 c7 44 24 28 45 00 	movw   $0x45,0x28(%rsp)
ffffffff80412847:	e9 61 f7 ff ff       	jmpq   ffffffff80411fad <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bd>
ffffffff8041284c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80412850:	48 8b 1d 21 b8 00 00 	mov    0xb821(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80412857:	48 8b 3d 12 b8 00 00 	mov    0xb812(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041285e:	e9 91 f8 ff ff       	jmpq   ffffffff804120f4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x404>
ffffffff80412863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80412868:	48 8b 2d 09 b8 00 00 	mov    0xb809(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041286f:	48 8b 3d fa b7 00 00 	mov    0xb7fa(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412876:	e9 f8 f5 ff ff       	jmpq   ffffffff80411e73 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x183>
ffffffff8041287b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80412880:	48 8b 3d e9 b7 00 00 	mov    0xb7e9(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412887:	48 8b 1d ea b7 00 00 	mov    0xb7ea(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041288e:	e9 61 fa ff ff       	jmpq   ffffffff804122f4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x604>
ffffffff80412893:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041289a:	00 00 00 00 
ffffffff8041289e:	66 90                	xchg   %ax,%ax

ffffffff804128a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff804128a0:	41 57                	push   %r15
ffffffff804128a2:	41 56                	push   %r14
ffffffff804128a4:	41 55                	push   %r13
ffffffff804128a6:	41 54                	push   %r12
ffffffff804128a8:	41 53                	push   %r11
ffffffff804128aa:	41 52                	push   %r10
ffffffff804128ac:	41 51                	push   %r9
ffffffff804128ae:	41 50                	push   %r8
ffffffff804128b0:	55                   	push   %rbp
ffffffff804128b1:	57                   	push   %rdi
ffffffff804128b2:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804128b3:	be 0a 00 00 00       	mov    $0xa,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff804128b8:	53                   	push   %rbx
ffffffff804128b9:	51                   	push   %rcx
ffffffff804128ba:	52                   	push   %rdx
ffffffff804128bb:	50                   	push   %rax
ffffffff804128bc:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff804128c0:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
ffffffff804128c7:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804128c8:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
ffffffff804128cf:	00 
ffffffff804128d0:	fc                   	cld    
ffffffff804128d1:	e8 fa b3 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804128d6:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff804128dd:	e8 de a8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804128e2:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff804128e4:	48 85 c0             	test   %rax,%rax
ffffffff804128e7:	0f 84 2b 0b 00 00    	je     ffffffff80413418 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb78>
ffffffff804128ed:	4c 8b 2d 6c b7 00 00 	mov    0xb76c(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804128f4:	4c 8b 05 6d b7 00 00 	mov    0xb76d(%rip),%r8        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804128fb:	49 c7 c1 66 b8 41 80 	mov    $0xffffffff8041b866,%r9
ffffffff80412902:	48 8b 2d 6f b7 00 00 	mov    0xb76f(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80412909:	48 8b 3d 60 b7 00 00 	mov    0xb760(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412910:	4b 8d 54 ad fb       	lea    -0x5(%r13,%r13,4),%rdx
ffffffff80412915:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412918:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041291c:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80412920:	4c 01 c2             	add    %r8,%rdx
ffffffff80412923:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff8041292a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041292f:	48 8d 8c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rcx
ffffffff80412936:	80 
ffffffff80412937:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8041293c:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412940:	4c 89 c1             	mov    %r8,%rcx
ffffffff80412943:	48 29 e9             	sub    %rbp,%rcx
ffffffff80412946:	48 39 c1             	cmp    %rax,%rcx
ffffffff80412949:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041294d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80412950:	48 89 ce             	mov    %rcx,%rsi
ffffffff80412953:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80412957:	48 85 f6             	test   %rsi,%rsi
ffffffff8041295a:	0f 84 10 07 00 00    	je     ffffffff80413070 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
    size_t i = pos;
ffffffff80412960:	31 d2                	xor    %edx,%edx
ffffffff80412962:	eb 11                	jmp    ffffffff80412975 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xd5>
ffffffff80412964:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80412968:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041296c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041296f:	0f 84 fb 06 00 00    	je     ffffffff80413070 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
      if (str_[i] == c) {
ffffffff80412975:	41 80 3c 11 0a       	cmpb   $0xa,(%r9,%rdx,1)
ffffffff8041297a:	75 ec                	jne    ffffffff80412968 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xc8>
ffffffff8041297c:	49 89 d3             	mov    %rdx,%r11
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041297f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80412982:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412985:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80412989:	4c 39 ef             	cmp    %r13,%rdi
ffffffff8041298c:	0f 84 2e 06 00 00    	je     ffffffff80412fc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412992:	48 01 ee             	add    %rbp,%rsi
ffffffff80412995:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80412998:	49 0f 47 f0          	cmova  %r8,%rsi
ffffffff8041299c:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041299f:	0f 83 bb 06 00 00    	jae    ffffffff80413060 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c0>
ffffffff804129a5:	4c 8d 14 bf          	lea    (%rdi,%rdi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff804129a9:	4d 89 ce             	mov    %r9,%r14
ffffffff804129ac:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff804129b0:	49 29 ee             	sub    %rbp,%r14
ffffffff804129b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804129b8:	66 45 0f be 24 2e    	movsbw (%r14,%rbp,1),%r12w
ffffffff804129be:	66 41 81 cc 00 0f    	or     $0xf00,%r12w
ffffffff804129c4:	66 45 89 a4 6a 80 e0 	mov    %r12w,-0x7fbe1f80(%r10,%rbp,2)
ffffffff804129cb:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804129cd:	48 83 c5 01          	add    $0x1,%rbp
ffffffff804129d1:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804129d4:	75 e2                	jne    ffffffff804129b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x118>
    if (current_col_ == num_cols_) {
ffffffff804129d6:	4c 39 c6             	cmp    %r8,%rsi
ffffffff804129d9:	0f 84 a1 05 00 00    	je     ffffffff80412f80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e0>
    current_col_ = i;
ffffffff804129df:	48 89 35 92 b6 00 00 	mov    %rsi,0xb692(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804129e6:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff804129ea:	0f 84 b2 05 00 00    	je     ffffffff80412fa2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x702>
ffffffff804129f0:	48 85 f6             	test   %rsi,%rsi
ffffffff804129f3:	74 0a                	je     ffffffff804129ff <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff804129f5:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804129f9:	0f 86 a1 06 00 00    	jbe    ffffffff804130a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x800>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804129ff:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412a03:	48 89 f5             	mov    %rsi,%rbp
ffffffff80412a06:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80412a09:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80412a0d:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff80412a10:	48 39 c8             	cmp    %rcx,%rax
ffffffff80412a13:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80412a17:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80412a1a:	48 85 c0             	test   %rax,%rax
ffffffff80412a1d:	0f 85 1d ff ff ff    	jne    ffffffff80412940 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412a23:	48 85 ff             	test   %rdi,%rdi
ffffffff80412a26:	74 5e                	je     ffffffff80412a86 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1e6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412a28:	48 8b 0d 39 b6 00 00 	mov    0xb639(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412a2f:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412a36:	31 d2                	xor    %edx,%edx
ffffffff80412a38:	48 89 c8             	mov    %rcx,%rax
ffffffff80412a3b:	4c 8d 1c 09          	lea    (%rcx,%rcx,1),%r11
ffffffff80412a3f:	48 f7 d8             	neg    %rax
ffffffff80412a42:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff80412a49:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412a4a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80412a4f:	90                   	nop
ffffffff80412a50:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
ffffffff80412a54:	48 85 c9             	test   %rcx,%rcx
ffffffff80412a57:	74 1e                	je     ffffffff80412a77 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d7>
ffffffff80412a59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412a60:	44 0f b7 8c 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r9d
ffffffff80412a67:	f4 ff 
ffffffff80412a69:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412a6d:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412a72:	4c 39 c0             	cmp    %r8,%rax
ffffffff80412a75:	75 e9                	jne    ffffffff80412a60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412a77:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412a7b:	4c 89 c0             	mov    %r8,%rax
ffffffff80412a7e:	4c 01 d6             	add    %r10,%rsi
ffffffff80412a81:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80412a84:	75 ca                	jne    ffffffff80412a50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1b0>
    if (current_col_ != 0) {
ffffffff80412a86:	48 85 ed             	test   %rbp,%rbp
ffffffff80412a89:	74 52                	je     ffffffff80412add <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412a8b:	48 8b 35 d6 b5 00 00 	mov    0xb5d6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412a92:	48 85 f6             	test   %rsi,%rsi
ffffffff80412a95:	74 46                	je     ffffffff80412add <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80412a97:	48 89 fa             	mov    %rdi,%rdx
ffffffff80412a9a:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80412a9e:	48 0f af d6          	imul   %rsi,%rdx
ffffffff80412aa2:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80412aa6:	48 8d b4 32 00 c0 05 	lea    0x5c000(%rdx,%rsi,1),%rsi
ffffffff80412aad:	00 
ffffffff80412aae:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80412ab5:	00 
ffffffff80412ab6:	48 f7 da             	neg    %rdx
ffffffff80412ab9:	48 01 f6             	add    %rsi,%rsi
ffffffff80412abc:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80412ac3:	80 
ffffffff80412ac4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80412ac8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80412acf:	ff 
ffffffff80412ad0:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412ad4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412ad8:	48 39 f0             	cmp    %rsi,%rax
ffffffff80412adb:	75 eb                	jne    ffffffff80412ac8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x228>
  size_t num_len = 0;
ffffffff80412add:	31 d2                	xor    %edx,%edx
ffffffff80412adf:	90                   	nop
    buffer[i] = num % base;
ffffffff80412ae0:	48 89 d8             	mov    %rbx,%rax
    num_len++;
ffffffff80412ae3:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff80412ae7:	83 e0 0f             	and    $0xf,%eax
ffffffff80412aea:	88 44 14 3b          	mov    %al,0x3b(%rsp,%rdx,1)
ffffffff80412aee:	48 89 d8             	mov    %rbx,%rax
    num /= base;
ffffffff80412af1:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80412af5:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff80412af9:	76 06                	jbe    ffffffff80412b01 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x261>
  for (size_t i = 0; i < size; i++) {
ffffffff80412afb:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff80412aff:	75 df                	jne    ffffffff80412ae0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
  if (num != 0) {
ffffffff80412b01:	48 85 db             	test   %rbx,%rbx
ffffffff80412b04:	0f 85 e6 08 00 00    	jne    ffffffff804133f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb50>
    str[offset++] = '0';
ffffffff80412b0a:	66 c7 44 24 28 30 78 	movw   $0x7830,0x28(%rsp)
ffffffff80412b11:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
ffffffff80412b16:	48 8d 7c 14 3b       	lea    0x3b(%rsp,%rdx,1),%rdi
ffffffff80412b1b:	48 8d 74 24 2a       	lea    0x2a(%rsp),%rsi
ffffffff80412b20:	eb 1c                	jmp    ffffffff80412b3e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x29e>
ffffffff80412b22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80412b28:	83 c0 37             	add    $0x37,%eax
ffffffff80412b2b:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80412b2f:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80412b32:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80412b36:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80412b39:	74 1d                	je     ffffffff80412b58 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b8>
ffffffff80412b3b:	48 89 c7             	mov    %rax,%rdi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80412b3e:	0f b6 07             	movzbl (%rdi),%eax
ffffffff80412b41:	3c 09                	cmp    $0x9,%al
ffffffff80412b43:	7f e3                	jg     ffffffff80412b28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80412b45:	83 c0 30             	add    $0x30,%eax
ffffffff80412b48:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80412b4c:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80412b4f:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80412b53:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80412b56:	75 e3                	jne    ffffffff80412b3b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x29b>
  str[num_len + offset] = 0;
ffffffff80412b58:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80412b5d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff80412b62:	e8 59 a6 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80412b67:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80412b69:	48 85 c0             	test   %rax,%rax
ffffffff80412b6c:	0f 84 8e 08 00 00    	je     ffffffff80413400 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
ffffffff80412b72:	4c 8b 25 e7 b4 00 00 	mov    0xb4e7(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80412b79:	48 8b 2d e8 b4 00 00 	mov    0xb4e8(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412b80:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
ffffffff80412b85:	48 8b 1d ec b4 00 00 	mov    0xb4ec(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80412b8c:	48 8b 3d dd b4 00 00 	mov    0xb4dd(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412b93:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80412b98:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412b9b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80412b9f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80412ba3:	48 01 ea             	add    %rbp,%rdx
ffffffff80412ba6:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80412bad:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80412bb4:	80 
ffffffff80412bb5:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80412bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412bc0:	48 89 e9             	mov    %rbp,%rcx
ffffffff80412bc3:	48 29 d9             	sub    %rbx,%rcx
ffffffff80412bc6:	48 39 c1             	cmp    %rax,%rcx
ffffffff80412bc9:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80412bcd:	48 39 c8             	cmp    %rcx,%rax
ffffffff80412bd0:	48 89 ce             	mov    %rcx,%rsi
ffffffff80412bd3:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80412bd7:	48 85 f6             	test   %rsi,%rsi
ffffffff80412bda:	0f 84 30 07 00 00    	je     ffffffff80413310 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
    size_t i = pos;
ffffffff80412be0:	31 d2                	xor    %edx,%edx
ffffffff80412be2:	eb 11                	jmp    ffffffff80412bf5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x355>
ffffffff80412be4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80412be8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412bec:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80412bef:	0f 84 1b 07 00 00    	je     ffffffff80413310 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
      if (str_[i] == c) {
ffffffff80412bf5:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff80412bfa:	75 ec                	jne    ffffffff80412be8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x348>
ffffffff80412bfc:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80412bff:	48 39 d0             	cmp    %rdx,%rax
ffffffff80412c02:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412c05:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80412c09:	4c 39 e7             	cmp    %r12,%rdi
ffffffff80412c0c:	0f 84 4e 06 00 00    	je     ffffffff80413260 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412c12:	48 01 de             	add    %rbx,%rsi
ffffffff80412c15:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80412c18:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff80412c1c:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80412c1f:	0f 83 d9 06 00 00    	jae    ffffffff804132fe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa5e>
ffffffff80412c25:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80412c29:	4d 89 c5             	mov    %r8,%r13
ffffffff80412c2c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80412c30:	49 29 dd             	sub    %rbx,%r13
ffffffff80412c33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412c38:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff80412c3f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80412c45:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff80412c4c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412c4e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80412c52:	48 39 de             	cmp    %rbx,%rsi
ffffffff80412c55:	75 e1                	jne    ffffffff80412c38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x398>
    if (current_col_ == num_cols_) {
ffffffff80412c57:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80412c5a:	0f 84 c0 05 00 00    	je     ffffffff80413220 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x980>
    current_col_ = i;
ffffffff80412c60:	48 89 35 11 b4 00 00 	mov    %rsi,0xb411(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412c67:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80412c6b:	0f 84 d1 05 00 00    	je     ffffffff80413242 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a2>
ffffffff80412c71:	48 85 f6             	test   %rsi,%rsi
ffffffff80412c74:	74 0a                	je     ffffffff80412c80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80412c76:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80412c7a:	0f 86 18 07 00 00    	jbe    ffffffff80413398 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xaf8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80412c80:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412c84:	48 89 f3             	mov    %rsi,%rbx
ffffffff80412c87:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80412c8a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80412c8e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80412c91:	48 39 c8             	cmp    %rcx,%rax
ffffffff80412c94:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80412c98:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80412c9b:	48 85 c0             	test   %rax,%rax
ffffffff80412c9e:	0f 85 1c ff ff ff    	jne    ffffffff80412bc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x320>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412ca4:	48 85 ff             	test   %rdi,%rdi
ffffffff80412ca7:	74 5d                	je     ffffffff80412d06 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x466>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412ca9:	48 8b 0d b8 b3 00 00 	mov    0xb3b8(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412cb0:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412cb7:	31 d2                	xor    %edx,%edx
ffffffff80412cb9:	48 89 c8             	mov    %rcx,%rax
ffffffff80412cbc:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80412cc0:	48 f7 d8             	neg    %rax
ffffffff80412cc3:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff80412cca:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412ccb:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80412cd0:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80412cd4:	48 85 c9             	test   %rcx,%rcx
ffffffff80412cd7:	74 1e                	je     ffffffff80412cf7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x457>
ffffffff80412cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412ce0:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80412ce7:	f4 ff 
ffffffff80412ce9:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412ced:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412cf2:	48 39 c5             	cmp    %rax,%rbp
ffffffff80412cf5:	75 e9                	jne    ffffffff80412ce0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x440>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412cf7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412cfb:	48 89 e8             	mov    %rbp,%rax
ffffffff80412cfe:	4c 01 ce             	add    %r9,%rsi
ffffffff80412d01:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80412d04:	75 ca                	jne    ffffffff80412cd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x430>
    if (current_col_ != 0) {
ffffffff80412d06:	48 85 db             	test   %rbx,%rbx
ffffffff80412d09:	74 52                	je     ffffffff80412d5d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412d0b:	48 8b 35 56 b3 00 00 	mov    0xb356(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412d12:	48 85 f6             	test   %rsi,%rsi
ffffffff80412d15:	74 46                	je     ffffffff80412d5d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80412d17:	48 89 f2             	mov    %rsi,%rdx
ffffffff80412d1a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff80412d1e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80412d22:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80412d26:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff80412d2d:	00 
ffffffff80412d2e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80412d35:	00 
ffffffff80412d36:	48 f7 da             	neg    %rdx
ffffffff80412d39:	48 01 f6             	add    %rsi,%rsi
ffffffff80412d3c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80412d43:	80 
ffffffff80412d44:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80412d48:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80412d4f:	ff 
ffffffff80412d50:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412d54:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412d58:	48 39 f0             	cmp    %rsi,%rax
ffffffff80412d5b:	75 eb                	jne    ffffffff80412d48 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x4a8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80412d5d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80412d64:	e8 57 a4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80412d69:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80412d6b:	48 85 c0             	test   %rax,%rax
ffffffff80412d6e:	0f 84 bc 06 00 00    	je     ffffffff80413430 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb90>
ffffffff80412d74:	4c 8b 25 e5 b2 00 00 	mov    0xb2e5(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80412d7b:	48 8b 2d e6 b2 00 00 	mov    0xb2e6(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412d82:	49 c7 c0 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r8
ffffffff80412d89:	48 8b 1d e8 b2 00 00 	mov    0xb2e8(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80412d90:	48 8b 3d d9 b2 00 00 	mov    0xb2d9(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80412d97:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80412d9c:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412d9f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80412da3:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80412da7:	48 01 ea             	add    %rbp,%rdx
ffffffff80412daa:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80412db1:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80412db8:	80 
ffffffff80412db9:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80412dbe:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412dc0:	48 89 e9             	mov    %rbp,%rcx
ffffffff80412dc3:	48 89 c6             	mov    %rax,%rsi
ffffffff80412dc6:	48 29 d9             	sub    %rbx,%rcx
ffffffff80412dc9:	48 39 c1             	cmp    %rax,%rcx
ffffffff80412dcc:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80412dd0:	48 39 c1             	cmp    %rax,%rcx
ffffffff80412dd3:	48 0f 46 f1          	cmovbe %rcx,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80412dd7:	48 85 f6             	test   %rsi,%rsi
ffffffff80412dda:	0f 84 10 04 00 00    	je     ffffffff804131f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
    size_t i = pos;
ffffffff80412de0:	31 d2                	xor    %edx,%edx
ffffffff80412de2:	eb 11                	jmp    ffffffff80412df5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x555>
ffffffff80412de4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80412de8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412dec:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80412def:	0f 84 fb 03 00 00    	je     ffffffff804131f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
      if (str_[i] == c) {
ffffffff80412df5:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff80412dfa:	75 ec                	jne    ffffffff80412de8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x548>
ffffffff80412dfc:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80412dff:	48 39 d0             	cmp    %rdx,%rax
ffffffff80412e02:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412e05:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80412e09:	49 39 fc             	cmp    %rdi,%r12
ffffffff80412e0c:	0f 84 2e 03 00 00    	je     ffffffff80413140 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412e12:	48 01 de             	add    %rbx,%rsi
ffffffff80412e15:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80412e18:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff80412e1c:	48 39 de             	cmp    %rbx,%rsi
ffffffff80412e1f:	0f 86 b9 03 00 00    	jbe    ffffffff804131de <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x93e>
ffffffff80412e25:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80412e29:	4d 89 c5             	mov    %r8,%r13
ffffffff80412e2c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80412e30:	49 29 dd             	sub    %rbx,%r13
ffffffff80412e33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412e38:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff80412e3f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80412e45:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff80412e4c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412e4e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80412e52:	48 39 de             	cmp    %rbx,%rsi
ffffffff80412e55:	75 e1                	jne    ffffffff80412e38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x598>
    if (current_col_ == num_cols_) {
ffffffff80412e57:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80412e5a:	0f 84 98 02 00 00    	je     ffffffff804130f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x858>
    current_col_ = i;
ffffffff80412e60:	48 89 35 11 b2 00 00 	mov    %rsi,0xb211(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412e67:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80412e6b:	0f 84 a9 02 00 00    	je     ffffffff8041311a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x87a>
ffffffff80412e71:	48 85 f6             	test   %rsi,%rsi
ffffffff80412e74:	74 0a                	je     ffffffff80412e80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80412e76:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80412e7a:	0f 86 c0 04 00 00    	jbe    ffffffff80413340 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80412e80:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412e84:	48 89 f3             	mov    %rsi,%rbx
ffffffff80412e87:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80412e8a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80412e8e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80412e91:	48 39 c1             	cmp    %rax,%rcx
ffffffff80412e94:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff80412e98:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80412e9b:	48 85 c0             	test   %rax,%rax
ffffffff80412e9e:	0f 85 1c ff ff ff    	jne    ffffffff80412dc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412ea4:	48 85 ff             	test   %rdi,%rdi
ffffffff80412ea7:	74 5d                	je     ffffffff80412f06 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x666>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412ea9:	48 8b 0d b8 b1 00 00 	mov    0xb1b8(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412eb0:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412eb7:	31 d2                	xor    %edx,%edx
ffffffff80412eb9:	48 89 c8             	mov    %rcx,%rax
ffffffff80412ebc:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80412ec0:	48 f7 d8             	neg    %rax
ffffffff80412ec3:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff80412eca:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412ecb:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80412ed0:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80412ed4:	48 85 c9             	test   %rcx,%rcx
ffffffff80412ed7:	74 1e                	je     ffffffff80412ef7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x657>
ffffffff80412ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412ee0:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80412ee7:	f4 ff 
ffffffff80412ee9:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412eed:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412ef2:	48 39 c5             	cmp    %rax,%rbp
ffffffff80412ef5:	75 e9                	jne    ffffffff80412ee0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x640>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412ef7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412efb:	48 89 e8             	mov    %rbp,%rax
ffffffff80412efe:	4c 01 ce             	add    %r9,%rsi
ffffffff80412f01:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80412f04:	75 ca                	jne    ffffffff80412ed0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x630>
    if (current_col_ != 0) {
ffffffff80412f06:	48 85 db             	test   %rbx,%rbx
ffffffff80412f09:	74 52                	je     ffffffff80412f5d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412f0b:	48 8b 35 56 b1 00 00 	mov    0xb156(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412f12:	48 85 f6             	test   %rsi,%rsi
ffffffff80412f15:	74 46                	je     ffffffff80412f5d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80412f17:	48 89 f2             	mov    %rsi,%rdx
ffffffff80412f1a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff80412f1e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80412f22:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80412f26:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff80412f2d:	00 
ffffffff80412f2e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80412f35:	00 
ffffffff80412f36:	48 f7 da             	neg    %rdx
ffffffff80412f39:	48 01 f6             	add    %rsi,%rsi
ffffffff80412f3c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80412f43:	80 
ffffffff80412f44:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80412f48:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80412f4f:	ff 
ffffffff80412f50:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412f54:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412f58:	48 39 c6             	cmp    %rax,%rsi
ffffffff80412f5b:	75 eb                	jne    ffffffff80412f48 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a8>
}
ffffffff80412f5d:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80412f61:	58                   	pop    %rax
ffffffff80412f62:	5a                   	pop    %rdx
ffffffff80412f63:	59                   	pop    %rcx
ffffffff80412f64:	5b                   	pop    %rbx
ffffffff80412f65:	5e                   	pop    %rsi
ffffffff80412f66:	5f                   	pop    %rdi
ffffffff80412f67:	5d                   	pop    %rbp
ffffffff80412f68:	41 58                	pop    %r8
ffffffff80412f6a:	41 59                	pop    %r9
ffffffff80412f6c:	41 5a                	pop    %r10
ffffffff80412f6e:	41 5b                	pop    %r11
ffffffff80412f70:	41 5c                	pop    %r12
ffffffff80412f72:	41 5d                	pop    %r13
ffffffff80412f74:	41 5e                	pop    %r14
ffffffff80412f76:	41 5f                	pop    %r15
ffffffff80412f78:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80412f7c:	48 cf                	iretq  
ffffffff80412f7e:	66 90                	xchg   %ax,%ax
      current_row_++;
ffffffff80412f80:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412f84:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80412f86:	48 c7 05 e7 b0 00 00 	movq   $0x0,0xb0e7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80412f8d:	00 00 00 00 
      current_row_++;
ffffffff80412f91:	48 89 3d d8 b0 00 00 	mov    %rdi,0xb0d8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412f98:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff80412f9c:	0f 85 5d fa ff ff    	jne    ffffffff804129ff <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80412fa2:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80412fa5:	48 89 f5             	mov    %rsi,%rbp
ffffffff80412fa8:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80412fac:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff80412faf:	48 39 c2             	cmp    %rax,%rdx
ffffffff80412fb2:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80412fb6:	48 29 d0             	sub    %rdx,%rax
ffffffff80412fb9:	e9 5c fa ff ff       	jmpq   ffffffff80412a1a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x17a>
ffffffff80412fbe:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412fc0:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80412fc4:	76 5a                	jbe    ffffffff80413020 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x780>
ffffffff80412fc6:	41 bc a0 00 00 00    	mov    $0xa0,%r12d
ffffffff80412fcc:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80412fd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412fd8:	45 31 d2             	xor    %r10d,%r10d
ffffffff80412fdb:	4d 8d bc 24 60 ff ff 	lea    -0xa0(%r12),%r15
ffffffff80412fe2:	ff 
ffffffff80412fe3:	4d 85 c0             	test   %r8,%r8
ffffffff80412fe6:	74 28                	je     ffffffff80413010 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80412fe8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80412fed:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80412ff0:	43 0f b7 84 54 80 e0 	movzwl -0x7fbe1f80(%r12,%r10,2),%eax
ffffffff80412ff7:	41 80 
ffffffff80412ff9:	66 43 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%r10,2)
ffffffff80413000:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413002:	49 83 c2 01          	add    $0x1,%r10
ffffffff80413006:	4d 39 c2             	cmp    %r8,%r10
ffffffff80413009:	75 e5                	jne    ffffffff80412ff0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x750>
ffffffff8041300b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413010:	49 83 c6 01          	add    $0x1,%r14
ffffffff80413014:	49 81 c4 a0 00 00 00 	add    $0xa0,%r12
ffffffff8041301b:	4d 39 ee             	cmp    %r13,%r14
ffffffff8041301e:	75 b8                	jne    ffffffff80412fd8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x738>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413020:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80413025:	4d 85 c0             	test   %r8,%r8
ffffffff80413028:	74 18                	je     ffffffff80413042 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a2>
ffffffff8041302a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80413030:	66 41 c7 42 20 00 00 	movw   $0x0,0x20(%r10)
ffffffff80413037:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041303b:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff80413040:	75 ee                	jne    ffffffff80413030 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x790>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413042:	48 01 ee             	add    %rbp,%rsi
      current_row_--;
ffffffff80413045:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80413049:	4c 39 c6             	cmp    %r8,%rsi
ffffffff8041304c:	48 89 3d 1d b0 00 00 	mov    %rdi,0xb01d(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413053:	49 0f 47 f0          	cmova  %r8,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413057:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041305a:	0f 82 45 f9 ff ff    	jb     ffffffff804129a5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x105>
ffffffff80413060:	48 89 ee             	mov    %rbp,%rsi
ffffffff80413063:	e9 6e f9 ff ff       	jmpq   ffffffff804129d6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x136>
ffffffff80413068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041306f:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413070:	48 89 ca             	mov    %rcx,%rdx
ffffffff80413073:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    if (count == npos) {
ffffffff8041307a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041307e:	0f 85 fb f8 ff ff    	jne    ffffffff8041297f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xdf>
ffffffff80413084:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
ffffffff8041308b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80413092:	48 89 c6             	mov    %rax,%rsi
ffffffff80413095:	e9 ef f8 ff ff       	jmpq   ffffffff80412989 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xe9>
ffffffff8041309a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804130a0:	4c 39 c6             	cmp    %r8,%rsi
ffffffff804130a3:	73 32                	jae    ffffffff804130d7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff804130a5:	48 8d 2c bf          	lea    (%rdi,%rdi,4),%rbp
ffffffff804130a9:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804130ad:	48 01 ee             	add    %rbp,%rsi
ffffffff804130b0:	4c 01 c5             	add    %r8,%rbp
ffffffff804130b3:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff804130ba:	80 
ffffffff804130bb:	48 8d ac 2d 60 e0 41 	lea    -0x7fbe1fa0(%rbp,%rbp,1),%rbp
ffffffff804130c2:	80 
ffffffff804130c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804130c8:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff804130ce:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804130d2:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804130d5:	75 f1                	jne    ffffffff804130c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x828>
        current_row_++;
ffffffff804130d7:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804130db:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff804130dd:	48 c7 05 90 af 00 00 	movq   $0x0,0xaf90(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804130e4:	00 00 00 00 
        current_row_++;
ffffffff804130e8:	48 89 3d 81 af 00 00 	mov    %rdi,0xaf81(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804130ef:	e9 0b f9 ff ff       	jmpq   ffffffff804129ff <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff804130f4:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff804130f8:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804130fc:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff804130fe:	48 c7 05 6f af 00 00 	movq   $0x0,0xaf6f(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413105:	00 00 00 00 
      current_row_++;
ffffffff80413109:	48 89 3d 60 af 00 00 	mov    %rdi,0xaf60(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413110:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80413114:	0f 85 66 fd ff ff    	jne    ffffffff80412e80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff8041311a:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff8041311d:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413120:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80413124:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80413127:	48 39 c2             	cmp    %rax,%rdx
ffffffff8041312a:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff8041312e:	48 29 d0             	sub    %rdx,%rax
ffffffff80413131:	e9 65 fd ff ff       	jmpq   ffffffff80412e9b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5fb>
ffffffff80413136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041313d:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413140:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80413144:	76 5a                	jbe    ffffffff804131a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x900>
ffffffff80413146:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff8041314c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80413152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413158:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041315b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80413162:	48 85 ed             	test   %rbp,%rbp
ffffffff80413165:	74 29                	je     ffffffff80413190 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8f0>
ffffffff80413167:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041316c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413170:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80413177:	41 80 
ffffffff80413179:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80413180:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413182:	49 83 c1 01          	add    $0x1,%r9
ffffffff80413186:	4c 39 cd             	cmp    %r9,%rbp
ffffffff80413189:	75 e5                	jne    ffffffff80413170 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8d0>
ffffffff8041318b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413190:	49 83 c5 01          	add    $0x1,%r13
ffffffff80413194:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff8041319b:	49 39 fd             	cmp    %rdi,%r13
ffffffff8041319e:	75 b8                	jne    ffffffff80413158 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804131a0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff804131a5:	48 85 ed             	test   %rbp,%rbp
ffffffff804131a8:	74 16                	je     ffffffff804131c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
ffffffff804131aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804131b0:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff804131b7:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804131bb:	4d 39 cf             	cmp    %r9,%r15
ffffffff804131be:	75 f0                	jne    ffffffff804131b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804131c0:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff804131c3:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff804131c7:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804131ca:	48 89 3d 9f ae 00 00 	mov    %rdi,0xae9f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804131d1:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804131d5:	48 39 de             	cmp    %rbx,%rsi
ffffffff804131d8:	0f 87 47 fc ff ff    	ja     ffffffff80412e25 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x585>
ffffffff804131de:	48 89 de             	mov    %rbx,%rsi
ffffffff804131e1:	e9 71 fc ff ff       	jmpq   ffffffff80412e57 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b7>
ffffffff804131e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804131ed:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804131f0:	48 89 ca             	mov    %rcx,%rdx
ffffffff804131f3:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff804131fa:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff804131fe:	0f 85 fb fb ff ff    	jne    ffffffff80412dff <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x55f>
ffffffff80413204:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff8041320b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80413212:	48 89 c6             	mov    %rax,%rsi
ffffffff80413215:	e9 ef fb ff ff       	jmpq   ffffffff80412e09 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x569>
ffffffff8041321a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80413220:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413224:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80413226:	48 c7 05 47 ae 00 00 	movq   $0x0,0xae47(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041322d:	00 00 00 00 
      current_row_++;
ffffffff80413231:	48 89 3d 38 ae 00 00 	mov    %rdi,0xae38(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413238:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041323c:	0f 85 3e fa ff ff    	jne    ffffffff80412c80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80413242:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80413245:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413248:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff8041324c:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff8041324f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80413252:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff80413256:	48 29 d0             	sub    %rdx,%rax
ffffffff80413259:	e9 3d fa ff ff       	jmpq   ffffffff80412c9b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3fb>
ffffffff8041325e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413260:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80413264:	76 5a                	jbe    ffffffff804132c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa20>
ffffffff80413266:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff8041326c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80413272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413278:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041327b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80413282:	48 85 ed             	test   %rbp,%rbp
ffffffff80413285:	74 29                	je     ffffffff804132b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff80413287:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041328c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413290:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80413297:	41 80 
ffffffff80413299:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff804132a0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804132a2:	49 83 c1 01          	add    $0x1,%r9
ffffffff804132a6:	49 39 e9             	cmp    %rbp,%r9
ffffffff804132a9:	75 e5                	jne    ffffffff80413290 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
ffffffff804132ab:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804132b0:	49 83 c5 01          	add    $0x1,%r13
ffffffff804132b4:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff804132bb:	4d 39 e5             	cmp    %r12,%r13
ffffffff804132be:	75 b8                	jne    ffffffff80413278 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804132c0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff804132c5:	48 85 ed             	test   %rbp,%rbp
ffffffff804132c8:	74 16                	je     ffffffff804132e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa40>
ffffffff804132ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804132d0:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff804132d7:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804132db:	4d 39 f9             	cmp    %r15,%r9
ffffffff804132de:	75 f0                	jne    ffffffff804132d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa30>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804132e0:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff804132e3:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff804132e7:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804132ea:	48 89 3d 7f ad 00 00 	mov    %rdi,0xad7f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804132f1:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804132f5:	48 39 f3             	cmp    %rsi,%rbx
ffffffff804132f8:	0f 82 27 f9 ff ff    	jb     ffffffff80412c25 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x385>
ffffffff804132fe:	48 89 de             	mov    %rbx,%rsi
ffffffff80413301:	e9 51 f9 ff ff       	jmpq   ffffffff80412c57 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff80413306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041330d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413310:	48 89 ca             	mov    %rcx,%rdx
ffffffff80413313:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff8041331a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041331e:	0f 85 db f8 ff ff    	jne    ffffffff80412bff <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x35f>
ffffffff80413324:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff8041332b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80413332:	48 89 c6             	mov    %rax,%rsi
ffffffff80413335:	e9 cf f8 ff ff       	jmpq   ffffffff80412c09 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x369>
ffffffff8041333a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413340:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80413343:	76 32                	jbe    ffffffff80413377 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xad7>
ffffffff80413345:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80413349:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8041334d:	48 01 de             	add    %rbx,%rsi
ffffffff80413350:	48 01 eb             	add    %rbp,%rbx
ffffffff80413353:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff8041335a:	80 
ffffffff8041335b:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80413362:	80 
ffffffff80413363:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80413368:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff8041336e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413372:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80413375:	75 f1                	jne    ffffffff80413368 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xac8>
        current_row_++;
ffffffff80413377:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8041337b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff8041337d:	48 c7 05 f0 ac 00 00 	movq   $0x0,0xacf0(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413384:	00 00 00 00 
        current_row_++;
ffffffff80413388:	48 89 3d e1 ac 00 00 	mov    %rdi,0xace1(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041338f:	e9 ec fa ff ff       	jmpq   ffffffff80412e80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80413394:	0f 1f 40 00          	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413398:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041339b:	76 32                	jbe    ffffffff804133cf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb2f>
ffffffff8041339d:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff804133a1:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff804133a5:	48 01 de             	add    %rbx,%rsi
ffffffff804133a8:	48 01 eb             	add    %rbp,%rbx
ffffffff804133ab:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff804133b2:	80 
ffffffff804133b3:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff804133ba:	80 
ffffffff804133bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804133c0:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff804133c6:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804133ca:	48 39 de             	cmp    %rbx,%rsi
ffffffff804133cd:	75 f1                	jne    ffffffff804133c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb20>
        current_row_++;
ffffffff804133cf:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804133d3:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff804133d5:	48 c7 05 98 ac 00 00 	movq   $0x0,0xac98(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804133dc:	00 00 00 00 
        current_row_++;
ffffffff804133e0:	48 89 3d 89 ac 00 00 	mov    %rdi,0xac89(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804133e7:	e9 94 f8 ff ff       	jmpq   ffffffff80412c80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff804133ec:	0f 1f 40 00          	nopl   0x0(%rax)
    str[0] = 'E';
ffffffff804133f0:	66 c7 44 24 28 45 00 	movw   $0x45,0x28(%rsp)
ffffffff804133f7:	e9 61 f7 ff ff       	jmpq   ffffffff80412b5d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bd>
ffffffff804133fc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80413400:	48 8b 1d 71 ac 00 00 	mov    0xac71(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413407:	48 8b 3d 62 ac 00 00 	mov    0xac62(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041340e:	e9 91 f8 ff ff       	jmpq   ffffffff80412ca4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x404>
ffffffff80413413:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80413418:	48 8b 2d 59 ac 00 00 	mov    0xac59(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041341f:	48 8b 3d 4a ac 00 00 	mov    0xac4a(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413426:	e9 f8 f5 ff ff       	jmpq   ffffffff80412a23 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x183>
ffffffff8041342b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80413430:	48 8b 3d 39 ac 00 00 	mov    0xac39(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413437:	48 8b 1d 3a ac 00 00 	mov    0xac3a(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041343e:	e9 61 fa ff ff       	jmpq   ffffffff80412ea4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x604>
ffffffff80413443:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041344a:	00 00 00 00 
ffffffff8041344e:	66 90                	xchg   %ax,%ax

ffffffff80413450 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80413450:	41 57                	push   %r15
ffffffff80413452:	41 56                	push   %r14
ffffffff80413454:	41 55                	push   %r13
ffffffff80413456:	41 54                	push   %r12
ffffffff80413458:	41 53                	push   %r11
ffffffff8041345a:	41 52                	push   %r10
ffffffff8041345c:	41 51                	push   %r9
ffffffff8041345e:	41 50                	push   %r8
ffffffff80413460:	55                   	push   %rbp
ffffffff80413461:	57                   	push   %rdi
ffffffff80413462:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80413463:	be 0b 00 00 00       	mov    $0xb,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80413468:	53                   	push   %rbx
ffffffff80413469:	51                   	push   %rcx
ffffffff8041346a:	52                   	push   %rdx
ffffffff8041346b:	50                   	push   %rax
ffffffff8041346c:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80413470:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
ffffffff80413477:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80413478:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
ffffffff8041347f:	00 
ffffffff80413480:	fc                   	cld    
ffffffff80413481:	e8 4a a8 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80413486:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff8041348d:	e8 2e 9d ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80413492:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80413494:	48 85 c0             	test   %rax,%rax
ffffffff80413497:	0f 84 2b 0b 00 00    	je     ffffffff80413fc8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb78>
ffffffff8041349d:	4c 8b 2d bc ab 00 00 	mov    0xabbc(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804134a4:	4c 8b 05 bd ab 00 00 	mov    0xabbd(%rip),%r8        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804134ab:	49 c7 c1 66 b8 41 80 	mov    $0xffffffff8041b866,%r9
ffffffff804134b2:	48 8b 2d bf ab 00 00 	mov    0xabbf(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804134b9:	48 8b 3d b0 ab 00 00 	mov    0xabb0(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804134c0:	4b 8d 54 ad fb       	lea    -0x5(%r13,%r13,4),%rdx
ffffffff804134c5:	48 89 d6             	mov    %rdx,%rsi
ffffffff804134c8:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804134cc:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804134d0:	4c 01 c2             	add    %r8,%rdx
ffffffff804134d3:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff804134da:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff804134df:	48 8d 8c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rcx
ffffffff804134e6:	80 
ffffffff804134e7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff804134ec:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804134f0:	4c 89 c1             	mov    %r8,%rcx
ffffffff804134f3:	48 29 e9             	sub    %rbp,%rcx
ffffffff804134f6:	48 39 c1             	cmp    %rax,%rcx
ffffffff804134f9:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804134fd:	48 39 c8             	cmp    %rcx,%rax
ffffffff80413500:	48 89 ce             	mov    %rcx,%rsi
ffffffff80413503:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80413507:	48 85 f6             	test   %rsi,%rsi
ffffffff8041350a:	0f 84 10 07 00 00    	je     ffffffff80413c20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
    size_t i = pos;
ffffffff80413510:	31 d2                	xor    %edx,%edx
ffffffff80413512:	eb 11                	jmp    ffffffff80413525 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xd5>
ffffffff80413514:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80413518:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041351c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041351f:	0f 84 fb 06 00 00    	je     ffffffff80413c20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
      if (str_[i] == c) {
ffffffff80413525:	41 80 3c 11 0a       	cmpb   $0xa,(%r9,%rdx,1)
ffffffff8041352a:	75 ec                	jne    ffffffff80413518 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xc8>
ffffffff8041352c:	49 89 d3             	mov    %rdx,%r11
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041352f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80413532:	48 89 d6             	mov    %rdx,%rsi
ffffffff80413535:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80413539:	4c 39 ef             	cmp    %r13,%rdi
ffffffff8041353c:	0f 84 2e 06 00 00    	je     ffffffff80413b70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413542:	48 01 ee             	add    %rbp,%rsi
ffffffff80413545:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80413548:	49 0f 47 f0          	cmova  %r8,%rsi
ffffffff8041354c:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041354f:	0f 83 bb 06 00 00    	jae    ffffffff80413c10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c0>
ffffffff80413555:	4c 8d 14 bf          	lea    (%rdi,%rdi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80413559:	4d 89 ce             	mov    %r9,%r14
ffffffff8041355c:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff80413560:	49 29 ee             	sub    %rbp,%r14
ffffffff80413563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80413568:	66 45 0f be 24 2e    	movsbw (%r14,%rbp,1),%r12w
ffffffff8041356e:	66 41 81 cc 00 0f    	or     $0xf00,%r12w
ffffffff80413574:	66 45 89 a4 6a 80 e0 	mov    %r12w,-0x7fbe1f80(%r10,%rbp,2)
ffffffff8041357b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041357d:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80413581:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80413584:	75 e2                	jne    ffffffff80413568 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x118>
    if (current_col_ == num_cols_) {
ffffffff80413586:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80413589:	0f 84 a1 05 00 00    	je     ffffffff80413b30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e0>
    current_col_ = i;
ffffffff8041358f:	48 89 35 e2 aa 00 00 	mov    %rsi,0xaae2(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413596:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff8041359a:	0f 84 b2 05 00 00    	je     ffffffff80413b52 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x702>
ffffffff804135a0:	48 85 f6             	test   %rsi,%rsi
ffffffff804135a3:	74 0a                	je     ffffffff804135af <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff804135a5:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804135a9:	0f 86 a1 06 00 00    	jbe    ffffffff80413c50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x800>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804135af:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804135b3:	48 89 f5             	mov    %rsi,%rbp
ffffffff804135b6:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804135b9:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804135bd:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff804135c0:	48 39 c8             	cmp    %rcx,%rax
ffffffff804135c3:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff804135c7:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff804135ca:	48 85 c0             	test   %rax,%rax
ffffffff804135cd:	0f 85 1d ff ff ff    	jne    ffffffff804134f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804135d3:	48 85 ff             	test   %rdi,%rdi
ffffffff804135d6:	74 5e                	je     ffffffff80413636 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1e6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804135d8:	48 8b 0d 89 aa 00 00 	mov    0xaa89(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804135df:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804135e6:	31 d2                	xor    %edx,%edx
ffffffff804135e8:	48 89 c8             	mov    %rcx,%rax
ffffffff804135eb:	4c 8d 1c 09          	lea    (%rcx,%rcx,1),%r11
ffffffff804135ef:	48 f7 d8             	neg    %rax
ffffffff804135f2:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff804135f9:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804135fa:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff804135ff:	90                   	nop
ffffffff80413600:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
ffffffff80413604:	48 85 c9             	test   %rcx,%rcx
ffffffff80413607:	74 1e                	je     ffffffff80413627 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d7>
ffffffff80413609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80413610:	44 0f b7 8c 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r9d
ffffffff80413617:	f4 ff 
ffffffff80413619:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041361d:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413622:	4c 39 c0             	cmp    %r8,%rax
ffffffff80413625:	75 e9                	jne    ffffffff80413610 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413627:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041362b:	4c 89 c0             	mov    %r8,%rax
ffffffff8041362e:	4c 01 d6             	add    %r10,%rsi
ffffffff80413631:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80413634:	75 ca                	jne    ffffffff80413600 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1b0>
    if (current_col_ != 0) {
ffffffff80413636:	48 85 ed             	test   %rbp,%rbp
ffffffff80413639:	74 52                	je     ffffffff8041368d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041363b:	48 8b 35 26 aa 00 00 	mov    0xaa26(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413642:	48 85 f6             	test   %rsi,%rsi
ffffffff80413645:	74 46                	je     ffffffff8041368d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80413647:	48 89 fa             	mov    %rdi,%rdx
ffffffff8041364a:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff8041364e:	48 0f af d6          	imul   %rsi,%rdx
ffffffff80413652:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80413656:	48 8d b4 32 00 c0 05 	lea    0x5c000(%rdx,%rsi,1),%rsi
ffffffff8041365d:	00 
ffffffff8041365e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80413665:	00 
ffffffff80413666:	48 f7 da             	neg    %rdx
ffffffff80413669:	48 01 f6             	add    %rsi,%rsi
ffffffff8041366c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80413673:	80 
ffffffff80413674:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80413678:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041367f:	ff 
ffffffff80413680:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413684:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413688:	48 39 f0             	cmp    %rsi,%rax
ffffffff8041368b:	75 eb                	jne    ffffffff80413678 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x228>
  size_t num_len = 0;
ffffffff8041368d:	31 d2                	xor    %edx,%edx
ffffffff8041368f:	90                   	nop
    buffer[i] = num % base;
ffffffff80413690:	48 89 d8             	mov    %rbx,%rax
    num_len++;
ffffffff80413693:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff80413697:	83 e0 0f             	and    $0xf,%eax
ffffffff8041369a:	88 44 14 3b          	mov    %al,0x3b(%rsp,%rdx,1)
ffffffff8041369e:	48 89 d8             	mov    %rbx,%rax
    num /= base;
ffffffff804136a1:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff804136a5:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff804136a9:	76 06                	jbe    ffffffff804136b1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x261>
  for (size_t i = 0; i < size; i++) {
ffffffff804136ab:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff804136af:	75 df                	jne    ffffffff80413690 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
  if (num != 0) {
ffffffff804136b1:	48 85 db             	test   %rbx,%rbx
ffffffff804136b4:	0f 85 e6 08 00 00    	jne    ffffffff80413fa0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb50>
    str[offset++] = '0';
ffffffff804136ba:	66 c7 44 24 28 30 78 	movw   $0x7830,0x28(%rsp)
ffffffff804136c1:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
ffffffff804136c6:	48 8d 7c 14 3b       	lea    0x3b(%rsp,%rdx,1),%rdi
ffffffff804136cb:	48 8d 74 24 2a       	lea    0x2a(%rsp),%rsi
ffffffff804136d0:	eb 1c                	jmp    ffffffff804136ee <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x29e>
ffffffff804136d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff804136d8:	83 c0 37             	add    $0x37,%eax
ffffffff804136db:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804136df:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff804136e2:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff804136e6:	48 39 f9             	cmp    %rdi,%rcx
ffffffff804136e9:	74 1d                	je     ffffffff80413708 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b8>
ffffffff804136eb:	48 89 c7             	mov    %rax,%rdi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff804136ee:	0f b6 07             	movzbl (%rdi),%eax
ffffffff804136f1:	3c 09                	cmp    $0x9,%al
ffffffff804136f3:	7f e3                	jg     ffffffff804136d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff804136f5:	83 c0 30             	add    $0x30,%eax
ffffffff804136f8:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804136fc:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff804136ff:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80413703:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80413706:	75 e3                	jne    ffffffff804136eb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x29b>
  str[num_len + offset] = 0;
ffffffff80413708:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041370d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff80413712:	e8 a9 9a ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80413717:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80413719:	48 85 c0             	test   %rax,%rax
ffffffff8041371c:	0f 84 8e 08 00 00    	je     ffffffff80413fb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
ffffffff80413722:	4c 8b 25 37 a9 00 00 	mov    0xa937(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80413729:	48 8b 2d 38 a9 00 00 	mov    0xa938(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413730:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
ffffffff80413735:	48 8b 1d 3c a9 00 00 	mov    0xa93c(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041373c:	48 8b 3d 2d a9 00 00 	mov    0xa92d(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413743:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80413748:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041374b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041374f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80413753:	48 01 ea             	add    %rbp,%rdx
ffffffff80413756:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff8041375d:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80413764:	80 
ffffffff80413765:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041376a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80413770:	48 89 e9             	mov    %rbp,%rcx
ffffffff80413773:	48 29 d9             	sub    %rbx,%rcx
ffffffff80413776:	48 39 c1             	cmp    %rax,%rcx
ffffffff80413779:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041377d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80413780:	48 89 ce             	mov    %rcx,%rsi
ffffffff80413783:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80413787:	48 85 f6             	test   %rsi,%rsi
ffffffff8041378a:	0f 84 30 07 00 00    	je     ffffffff80413ec0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
    size_t i = pos;
ffffffff80413790:	31 d2                	xor    %edx,%edx
ffffffff80413792:	eb 11                	jmp    ffffffff804137a5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x355>
ffffffff80413794:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80413798:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041379c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041379f:	0f 84 1b 07 00 00    	je     ffffffff80413ec0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
      if (str_[i] == c) {
ffffffff804137a5:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff804137aa:	75 ec                	jne    ffffffff80413798 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x348>
ffffffff804137ac:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804137af:	48 39 d0             	cmp    %rdx,%rax
ffffffff804137b2:	48 89 d6             	mov    %rdx,%rsi
ffffffff804137b5:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff804137b9:	4c 39 e7             	cmp    %r12,%rdi
ffffffff804137bc:	0f 84 4e 06 00 00    	je     ffffffff80413e10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804137c2:	48 01 de             	add    %rbx,%rsi
ffffffff804137c5:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804137c8:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff804137cc:	48 39 f3             	cmp    %rsi,%rbx
ffffffff804137cf:	0f 83 d9 06 00 00    	jae    ffffffff80413eae <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa5e>
ffffffff804137d5:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff804137d9:	4d 89 c5             	mov    %r8,%r13
ffffffff804137dc:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff804137e0:	49 29 dd             	sub    %rbx,%r13
ffffffff804137e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804137e8:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff804137ef:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff804137f5:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff804137fc:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804137fe:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80413802:	48 39 de             	cmp    %rbx,%rsi
ffffffff80413805:	75 e1                	jne    ffffffff804137e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x398>
    if (current_col_ == num_cols_) {
ffffffff80413807:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041380a:	0f 84 c0 05 00 00    	je     ffffffff80413dd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x980>
    current_col_ = i;
ffffffff80413810:	48 89 35 61 a8 00 00 	mov    %rsi,0xa861(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413817:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041381b:	0f 84 d1 05 00 00    	je     ffffffff80413df2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a2>
ffffffff80413821:	48 85 f6             	test   %rsi,%rsi
ffffffff80413824:	74 0a                	je     ffffffff80413830 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80413826:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff8041382a:	0f 86 18 07 00 00    	jbe    ffffffff80413f48 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xaf8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80413830:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80413834:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413837:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8041383a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff8041383e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80413841:	48 39 c8             	cmp    %rcx,%rax
ffffffff80413844:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80413848:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff8041384b:	48 85 c0             	test   %rax,%rax
ffffffff8041384e:	0f 85 1c ff ff ff    	jne    ffffffff80413770 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x320>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413854:	48 85 ff             	test   %rdi,%rdi
ffffffff80413857:	74 5d                	je     ffffffff804138b6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x466>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413859:	48 8b 0d 08 a8 00 00 	mov    0xa808(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413860:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413867:	31 d2                	xor    %edx,%edx
ffffffff80413869:	48 89 c8             	mov    %rcx,%rax
ffffffff8041386c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80413870:	48 f7 d8             	neg    %rax
ffffffff80413873:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff8041387a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041387b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80413880:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80413884:	48 85 c9             	test   %rcx,%rcx
ffffffff80413887:	74 1e                	je     ffffffff804138a7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x457>
ffffffff80413889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80413890:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80413897:	f4 ff 
ffffffff80413899:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041389d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804138a2:	48 39 c5             	cmp    %rax,%rbp
ffffffff804138a5:	75 e9                	jne    ffffffff80413890 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x440>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804138a7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804138ab:	48 89 e8             	mov    %rbp,%rax
ffffffff804138ae:	4c 01 ce             	add    %r9,%rsi
ffffffff804138b1:	48 39 d7             	cmp    %rdx,%rdi
ffffffff804138b4:	75 ca                	jne    ffffffff80413880 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x430>
    if (current_col_ != 0) {
ffffffff804138b6:	48 85 db             	test   %rbx,%rbx
ffffffff804138b9:	74 52                	je     ffffffff8041390d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804138bb:	48 8b 35 a6 a7 00 00 	mov    0xa7a6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804138c2:	48 85 f6             	test   %rsi,%rsi
ffffffff804138c5:	74 46                	je     ffffffff8041390d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804138c7:	48 89 f2             	mov    %rsi,%rdx
ffffffff804138ca:	48 0f af d7          	imul   %rdi,%rdx
ffffffff804138ce:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff804138d2:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff804138d6:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff804138dd:	00 
ffffffff804138de:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff804138e5:	00 
ffffffff804138e6:	48 f7 da             	neg    %rdx
ffffffff804138e9:	48 01 f6             	add    %rsi,%rsi
ffffffff804138ec:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff804138f3:	80 
ffffffff804138f4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804138f8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff804138ff:	ff 
ffffffff80413900:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413904:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413908:	48 39 f0             	cmp    %rsi,%rax
ffffffff8041390b:	75 eb                	jne    ffffffff804138f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x4a8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041390d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80413914:	e8 a7 98 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80413919:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8041391b:	48 85 c0             	test   %rax,%rax
ffffffff8041391e:	0f 84 bc 06 00 00    	je     ffffffff80413fe0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb90>
ffffffff80413924:	4c 8b 25 35 a7 00 00 	mov    0xa735(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041392b:	48 8b 2d 36 a7 00 00 	mov    0xa736(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413932:	49 c7 c0 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r8
ffffffff80413939:	48 8b 1d 38 a7 00 00 	mov    0xa738(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413940:	48 8b 3d 29 a7 00 00 	mov    0xa729(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413947:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8041394c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041394f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80413953:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80413957:	48 01 ea             	add    %rbp,%rdx
ffffffff8041395a:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80413961:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80413968:	80 
ffffffff80413969:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041396e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80413970:	48 89 e9             	mov    %rbp,%rcx
ffffffff80413973:	48 89 c6             	mov    %rax,%rsi
ffffffff80413976:	48 29 d9             	sub    %rbx,%rcx
ffffffff80413979:	48 39 c1             	cmp    %rax,%rcx
ffffffff8041397c:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80413980:	48 39 c1             	cmp    %rax,%rcx
ffffffff80413983:	48 0f 46 f1          	cmovbe %rcx,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80413987:	48 85 f6             	test   %rsi,%rsi
ffffffff8041398a:	0f 84 10 04 00 00    	je     ffffffff80413da0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
    size_t i = pos;
ffffffff80413990:	31 d2                	xor    %edx,%edx
ffffffff80413992:	eb 11                	jmp    ffffffff804139a5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x555>
ffffffff80413994:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80413998:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041399c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041399f:	0f 84 fb 03 00 00    	je     ffffffff80413da0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
      if (str_[i] == c) {
ffffffff804139a5:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff804139aa:	75 ec                	jne    ffffffff80413998 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x548>
ffffffff804139ac:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804139af:	48 39 d0             	cmp    %rdx,%rax
ffffffff804139b2:	48 89 d6             	mov    %rdx,%rsi
ffffffff804139b5:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff804139b9:	49 39 fc             	cmp    %rdi,%r12
ffffffff804139bc:	0f 84 2e 03 00 00    	je     ffffffff80413cf0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804139c2:	48 01 de             	add    %rbx,%rsi
ffffffff804139c5:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804139c8:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff804139cc:	48 39 de             	cmp    %rbx,%rsi
ffffffff804139cf:	0f 86 b9 03 00 00    	jbe    ffffffff80413d8e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x93e>
ffffffff804139d5:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff804139d9:	4d 89 c5             	mov    %r8,%r13
ffffffff804139dc:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff804139e0:	49 29 dd             	sub    %rbx,%r13
ffffffff804139e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804139e8:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff804139ef:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff804139f5:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff804139fc:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804139fe:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80413a02:	48 39 de             	cmp    %rbx,%rsi
ffffffff80413a05:	75 e1                	jne    ffffffff804139e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x598>
    if (current_col_ == num_cols_) {
ffffffff80413a07:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80413a0a:	0f 84 98 02 00 00    	je     ffffffff80413ca8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x858>
    current_col_ = i;
ffffffff80413a10:	48 89 35 61 a6 00 00 	mov    %rsi,0xa661(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413a17:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80413a1b:	0f 84 a9 02 00 00    	je     ffffffff80413cca <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x87a>
ffffffff80413a21:	48 85 f6             	test   %rsi,%rsi
ffffffff80413a24:	74 0a                	je     ffffffff80413a30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80413a26:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80413a2a:	0f 86 c0 04 00 00    	jbe    ffffffff80413ef0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80413a30:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80413a34:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413a37:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80413a3a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80413a3e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80413a41:	48 39 c1             	cmp    %rax,%rcx
ffffffff80413a44:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff80413a48:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80413a4b:	48 85 c0             	test   %rax,%rax
ffffffff80413a4e:	0f 85 1c ff ff ff    	jne    ffffffff80413970 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413a54:	48 85 ff             	test   %rdi,%rdi
ffffffff80413a57:	74 5d                	je     ffffffff80413ab6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x666>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413a59:	48 8b 0d 08 a6 00 00 	mov    0xa608(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413a60:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413a67:	31 d2                	xor    %edx,%edx
ffffffff80413a69:	48 89 c8             	mov    %rcx,%rax
ffffffff80413a6c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80413a70:	48 f7 d8             	neg    %rax
ffffffff80413a73:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff80413a7a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413a7b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80413a80:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80413a84:	48 85 c9             	test   %rcx,%rcx
ffffffff80413a87:	74 1e                	je     ffffffff80413aa7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x657>
ffffffff80413a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80413a90:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80413a97:	f4 ff 
ffffffff80413a99:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413a9d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413aa2:	48 39 c5             	cmp    %rax,%rbp
ffffffff80413aa5:	75 e9                	jne    ffffffff80413a90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x640>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413aa7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80413aab:	48 89 e8             	mov    %rbp,%rax
ffffffff80413aae:	4c 01 ce             	add    %r9,%rsi
ffffffff80413ab1:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80413ab4:	75 ca                	jne    ffffffff80413a80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x630>
    if (current_col_ != 0) {
ffffffff80413ab6:	48 85 db             	test   %rbx,%rbx
ffffffff80413ab9:	74 52                	je     ffffffff80413b0d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413abb:	48 8b 35 a6 a5 00 00 	mov    0xa5a6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413ac2:	48 85 f6             	test   %rsi,%rsi
ffffffff80413ac5:	74 46                	je     ffffffff80413b0d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80413ac7:	48 89 f2             	mov    %rsi,%rdx
ffffffff80413aca:	48 0f af d7          	imul   %rdi,%rdx
ffffffff80413ace:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80413ad2:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80413ad6:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff80413add:	00 
ffffffff80413ade:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80413ae5:	00 
ffffffff80413ae6:	48 f7 da             	neg    %rdx
ffffffff80413ae9:	48 01 f6             	add    %rsi,%rsi
ffffffff80413aec:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80413af3:	80 
ffffffff80413af4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80413af8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80413aff:	ff 
ffffffff80413b00:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413b04:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413b08:	48 39 c6             	cmp    %rax,%rsi
ffffffff80413b0b:	75 eb                	jne    ffffffff80413af8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a8>
}
ffffffff80413b0d:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80413b11:	58                   	pop    %rax
ffffffff80413b12:	5a                   	pop    %rdx
ffffffff80413b13:	59                   	pop    %rcx
ffffffff80413b14:	5b                   	pop    %rbx
ffffffff80413b15:	5e                   	pop    %rsi
ffffffff80413b16:	5f                   	pop    %rdi
ffffffff80413b17:	5d                   	pop    %rbp
ffffffff80413b18:	41 58                	pop    %r8
ffffffff80413b1a:	41 59                	pop    %r9
ffffffff80413b1c:	41 5a                	pop    %r10
ffffffff80413b1e:	41 5b                	pop    %r11
ffffffff80413b20:	41 5c                	pop    %r12
ffffffff80413b22:	41 5d                	pop    %r13
ffffffff80413b24:	41 5e                	pop    %r14
ffffffff80413b26:	41 5f                	pop    %r15
ffffffff80413b28:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80413b2c:	48 cf                	iretq  
ffffffff80413b2e:	66 90                	xchg   %ax,%ax
      current_row_++;
ffffffff80413b30:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413b34:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80413b36:	48 c7 05 37 a5 00 00 	movq   $0x0,0xa537(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413b3d:	00 00 00 00 
      current_row_++;
ffffffff80413b41:	48 89 3d 28 a5 00 00 	mov    %rdi,0xa528(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413b48:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff80413b4c:	0f 85 5d fa ff ff    	jne    ffffffff804135af <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80413b52:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80413b55:	48 89 f5             	mov    %rsi,%rbp
ffffffff80413b58:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80413b5c:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff80413b5f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80413b62:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80413b66:	48 29 d0             	sub    %rdx,%rax
ffffffff80413b69:	e9 5c fa ff ff       	jmpq   ffffffff804135ca <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x17a>
ffffffff80413b6e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413b70:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80413b74:	76 5a                	jbe    ffffffff80413bd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x780>
ffffffff80413b76:	41 bc a0 00 00 00    	mov    $0xa0,%r12d
ffffffff80413b7c:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80413b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413b88:	45 31 d2             	xor    %r10d,%r10d
ffffffff80413b8b:	4d 8d bc 24 60 ff ff 	lea    -0xa0(%r12),%r15
ffffffff80413b92:	ff 
ffffffff80413b93:	4d 85 c0             	test   %r8,%r8
ffffffff80413b96:	74 28                	je     ffffffff80413bc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80413b98:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80413b9d:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413ba0:	43 0f b7 84 54 80 e0 	movzwl -0x7fbe1f80(%r12,%r10,2),%eax
ffffffff80413ba7:	41 80 
ffffffff80413ba9:	66 43 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%r10,2)
ffffffff80413bb0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413bb2:	49 83 c2 01          	add    $0x1,%r10
ffffffff80413bb6:	4d 39 c2             	cmp    %r8,%r10
ffffffff80413bb9:	75 e5                	jne    ffffffff80413ba0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x750>
ffffffff80413bbb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413bc0:	49 83 c6 01          	add    $0x1,%r14
ffffffff80413bc4:	49 81 c4 a0 00 00 00 	add    $0xa0,%r12
ffffffff80413bcb:	4d 39 ee             	cmp    %r13,%r14
ffffffff80413bce:	75 b8                	jne    ffffffff80413b88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x738>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413bd0:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80413bd5:	4d 85 c0             	test   %r8,%r8
ffffffff80413bd8:	74 18                	je     ffffffff80413bf2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a2>
ffffffff80413bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80413be0:	66 41 c7 42 20 00 00 	movw   $0x0,0x20(%r10)
ffffffff80413be7:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413beb:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff80413bf0:	75 ee                	jne    ffffffff80413be0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x790>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413bf2:	48 01 ee             	add    %rbp,%rsi
      current_row_--;
ffffffff80413bf5:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80413bf9:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80413bfc:	48 89 3d 6d a4 00 00 	mov    %rdi,0xa46d(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413c03:	49 0f 47 f0          	cmova  %r8,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413c07:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80413c0a:	0f 82 45 f9 ff ff    	jb     ffffffff80413555 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x105>
ffffffff80413c10:	48 89 ee             	mov    %rbp,%rsi
ffffffff80413c13:	e9 6e f9 ff ff       	jmpq   ffffffff80413586 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x136>
ffffffff80413c18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80413c1f:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413c20:	48 89 ca             	mov    %rcx,%rdx
ffffffff80413c23:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    if (count == npos) {
ffffffff80413c2a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80413c2e:	0f 85 fb f8 ff ff    	jne    ffffffff8041352f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xdf>
ffffffff80413c34:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
ffffffff80413c3b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80413c42:	48 89 c6             	mov    %rax,%rsi
ffffffff80413c45:	e9 ef f8 ff ff       	jmpq   ffffffff80413539 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xe9>
ffffffff80413c4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413c50:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80413c53:	73 32                	jae    ffffffff80413c87 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff80413c55:	48 8d 2c bf          	lea    (%rdi,%rdi,4),%rbp
ffffffff80413c59:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80413c5d:	48 01 ee             	add    %rbp,%rsi
ffffffff80413c60:	4c 01 c5             	add    %r8,%rbp
ffffffff80413c63:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80413c6a:	80 
ffffffff80413c6b:	48 8d ac 2d 60 e0 41 	lea    -0x7fbe1fa0(%rbp,%rbp,1),%rbp
ffffffff80413c72:	80 
ffffffff80413c73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80413c78:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80413c7e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413c82:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80413c85:	75 f1                	jne    ffffffff80413c78 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x828>
        current_row_++;
ffffffff80413c87:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80413c8b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80413c8d:	48 c7 05 e0 a3 00 00 	movq   $0x0,0xa3e0(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413c94:	00 00 00 00 
        current_row_++;
ffffffff80413c98:	48 89 3d d1 a3 00 00 	mov    %rdi,0xa3d1(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413c9f:	e9 0b f9 ff ff       	jmpq   ffffffff804135af <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80413ca4:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80413ca8:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413cac:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80413cae:	48 c7 05 bf a3 00 00 	movq   $0x0,0xa3bf(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413cb5:	00 00 00 00 
      current_row_++;
ffffffff80413cb9:	48 89 3d b0 a3 00 00 	mov    %rdi,0xa3b0(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413cc0:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80413cc4:	0f 85 66 fd ff ff    	jne    ffffffff80413a30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80413cca:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80413ccd:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413cd0:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80413cd4:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80413cd7:	48 39 c2             	cmp    %rax,%rdx
ffffffff80413cda:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80413cde:	48 29 d0             	sub    %rdx,%rax
ffffffff80413ce1:	e9 65 fd ff ff       	jmpq   ffffffff80413a4b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5fb>
ffffffff80413ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80413ced:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413cf0:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80413cf4:	76 5a                	jbe    ffffffff80413d50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x900>
ffffffff80413cf6:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80413cfc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80413d02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413d08:	45 31 c9             	xor    %r9d,%r9d
ffffffff80413d0b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80413d12:	48 85 ed             	test   %rbp,%rbp
ffffffff80413d15:	74 29                	je     ffffffff80413d40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8f0>
ffffffff80413d17:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80413d1c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413d20:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80413d27:	41 80 
ffffffff80413d29:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80413d30:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413d32:	49 83 c1 01          	add    $0x1,%r9
ffffffff80413d36:	4c 39 cd             	cmp    %r9,%rbp
ffffffff80413d39:	75 e5                	jne    ffffffff80413d20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8d0>
ffffffff80413d3b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413d40:	49 83 c5 01          	add    $0x1,%r13
ffffffff80413d44:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff80413d4b:	49 39 fd             	cmp    %rdi,%r13
ffffffff80413d4e:	75 b8                	jne    ffffffff80413d08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413d50:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80413d55:	48 85 ed             	test   %rbp,%rbp
ffffffff80413d58:	74 16                	je     ffffffff80413d70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
ffffffff80413d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80413d60:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80413d67:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413d6b:	4d 39 cf             	cmp    %r9,%r15
ffffffff80413d6e:	75 f0                	jne    ffffffff80413d60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413d70:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80413d73:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80413d77:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80413d7a:	48 89 3d ef a2 00 00 	mov    %rdi,0xa2ef(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413d81:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413d85:	48 39 de             	cmp    %rbx,%rsi
ffffffff80413d88:	0f 87 47 fc ff ff    	ja     ffffffff804139d5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x585>
ffffffff80413d8e:	48 89 de             	mov    %rbx,%rsi
ffffffff80413d91:	e9 71 fc ff ff       	jmpq   ffffffff80413a07 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b7>
ffffffff80413d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80413d9d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413da0:	48 89 ca             	mov    %rcx,%rdx
ffffffff80413da3:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff80413daa:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80413dae:	0f 85 fb fb ff ff    	jne    ffffffff804139af <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x55f>
ffffffff80413db4:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff80413dbb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80413dc2:	48 89 c6             	mov    %rax,%rsi
ffffffff80413dc5:	e9 ef fb ff ff       	jmpq   ffffffff804139b9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x569>
ffffffff80413dca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80413dd0:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413dd4:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80413dd6:	48 c7 05 97 a2 00 00 	movq   $0x0,0xa297(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413ddd:	00 00 00 00 
      current_row_++;
ffffffff80413de1:	48 89 3d 88 a2 00 00 	mov    %rdi,0xa288(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413de8:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80413dec:	0f 85 3e fa ff ff    	jne    ffffffff80413830 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80413df2:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80413df5:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413df8:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80413dfc:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80413dff:	48 39 d0             	cmp    %rdx,%rax
ffffffff80413e02:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff80413e06:	48 29 d0             	sub    %rdx,%rax
ffffffff80413e09:	e9 3d fa ff ff       	jmpq   ffffffff8041384b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3fb>
ffffffff80413e0e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413e10:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80413e14:	76 5a                	jbe    ffffffff80413e70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa20>
ffffffff80413e16:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80413e1c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80413e22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413e28:	45 31 c9             	xor    %r9d,%r9d
ffffffff80413e2b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80413e32:	48 85 ed             	test   %rbp,%rbp
ffffffff80413e35:	74 29                	je     ffffffff80413e60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff80413e37:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80413e3c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413e40:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80413e47:	41 80 
ffffffff80413e49:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80413e50:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413e52:	49 83 c1 01          	add    $0x1,%r9
ffffffff80413e56:	49 39 e9             	cmp    %rbp,%r9
ffffffff80413e59:	75 e5                	jne    ffffffff80413e40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
ffffffff80413e5b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413e60:	49 83 c5 01          	add    $0x1,%r13
ffffffff80413e64:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff80413e6b:	4d 39 e5             	cmp    %r12,%r13
ffffffff80413e6e:	75 b8                	jne    ffffffff80413e28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413e70:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80413e75:	48 85 ed             	test   %rbp,%rbp
ffffffff80413e78:	74 16                	je     ffffffff80413e90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa40>
ffffffff80413e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80413e80:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80413e87:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413e8b:	4d 39 f9             	cmp    %r15,%r9
ffffffff80413e8e:	75 f0                	jne    ffffffff80413e80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa30>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413e90:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80413e93:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80413e97:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80413e9a:	48 89 3d cf a1 00 00 	mov    %rdi,0xa1cf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413ea1:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413ea5:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80413ea8:	0f 82 27 f9 ff ff    	jb     ffffffff804137d5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x385>
ffffffff80413eae:	48 89 de             	mov    %rbx,%rsi
ffffffff80413eb1:	e9 51 f9 ff ff       	jmpq   ffffffff80413807 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff80413eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80413ebd:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413ec0:	48 89 ca             	mov    %rcx,%rdx
ffffffff80413ec3:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff80413eca:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80413ece:	0f 85 db f8 ff ff    	jne    ffffffff804137af <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x35f>
ffffffff80413ed4:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff80413edb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80413ee2:	48 89 c6             	mov    %rax,%rsi
ffffffff80413ee5:	e9 cf f8 ff ff       	jmpq   ffffffff804137b9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x369>
ffffffff80413eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413ef0:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80413ef3:	76 32                	jbe    ffffffff80413f27 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xad7>
ffffffff80413ef5:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80413ef9:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80413efd:	48 01 de             	add    %rbx,%rsi
ffffffff80413f00:	48 01 eb             	add    %rbp,%rbx
ffffffff80413f03:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80413f0a:	80 
ffffffff80413f0b:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80413f12:	80 
ffffffff80413f13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80413f18:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80413f1e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413f22:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80413f25:	75 f1                	jne    ffffffff80413f18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xac8>
        current_row_++;
ffffffff80413f27:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80413f2b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80413f2d:	48 c7 05 40 a1 00 00 	movq   $0x0,0xa140(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413f34:	00 00 00 00 
        current_row_++;
ffffffff80413f38:	48 89 3d 31 a1 00 00 	mov    %rdi,0xa131(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413f3f:	e9 ec fa ff ff       	jmpq   ffffffff80413a30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80413f44:	0f 1f 40 00          	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413f48:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80413f4b:	76 32                	jbe    ffffffff80413f7f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb2f>
ffffffff80413f4d:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80413f51:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80413f55:	48 01 de             	add    %rbx,%rsi
ffffffff80413f58:	48 01 eb             	add    %rbp,%rbx
ffffffff80413f5b:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80413f62:	80 
ffffffff80413f63:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80413f6a:	80 
ffffffff80413f6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80413f70:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80413f76:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413f7a:	48 39 de             	cmp    %rbx,%rsi
ffffffff80413f7d:	75 f1                	jne    ffffffff80413f70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb20>
        current_row_++;
ffffffff80413f7f:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80413f83:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80413f85:	48 c7 05 e8 a0 00 00 	movq   $0x0,0xa0e8(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413f8c:	00 00 00 00 
        current_row_++;
ffffffff80413f90:	48 89 3d d9 a0 00 00 	mov    %rdi,0xa0d9(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413f97:	e9 94 f8 ff ff       	jmpq   ffffffff80413830 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80413f9c:	0f 1f 40 00          	nopl   0x0(%rax)
    str[0] = 'E';
ffffffff80413fa0:	66 c7 44 24 28 45 00 	movw   $0x45,0x28(%rsp)
ffffffff80413fa7:	e9 61 f7 ff ff       	jmpq   ffffffff8041370d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bd>
ffffffff80413fac:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80413fb0:	48 8b 1d c1 a0 00 00 	mov    0xa0c1(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413fb7:	48 8b 3d b2 a0 00 00 	mov    0xa0b2(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413fbe:	e9 91 f8 ff ff       	jmpq   ffffffff80413854 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x404>
ffffffff80413fc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80413fc8:	48 8b 2d a9 a0 00 00 	mov    0xa0a9(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413fcf:	48 8b 3d 9a a0 00 00 	mov    0xa09a(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413fd6:	e9 f8 f5 ff ff       	jmpq   ffffffff804135d3 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x183>
ffffffff80413fdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80413fe0:	48 8b 3d 89 a0 00 00 	mov    0xa089(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80413fe7:	48 8b 1d 8a a0 00 00 	mov    0xa08a(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80413fee:	e9 61 fa ff ff       	jmpq   ffffffff80413a54 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x604>
ffffffff80413ff3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80413ffa:	00 00 00 00 
ffffffff80413ffe:	66 90                	xchg   %ax,%ax

ffffffff80414000 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414000:	41 57                	push   %r15
ffffffff80414002:	41 56                	push   %r14
ffffffff80414004:	41 55                	push   %r13
ffffffff80414006:	41 54                	push   %r12
ffffffff80414008:	41 53                	push   %r11
ffffffff8041400a:	41 52                	push   %r10
ffffffff8041400c:	41 51                	push   %r9
ffffffff8041400e:	41 50                	push   %r8
ffffffff80414010:	55                   	push   %rbp
ffffffff80414011:	57                   	push   %rdi
ffffffff80414012:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414013:	be 0c 00 00 00       	mov    $0xc,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414018:	53                   	push   %rbx
ffffffff80414019:	51                   	push   %rcx
ffffffff8041401a:	52                   	push   %rdx
ffffffff8041401b:	50                   	push   %rax
ffffffff8041401c:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80414020:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
ffffffff80414027:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414028:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
ffffffff8041402f:	00 
ffffffff80414030:	fc                   	cld    
ffffffff80414031:	e8 9a 9c ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80414036:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff8041403d:	e8 7e 91 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80414042:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80414044:	48 85 c0             	test   %rax,%rax
ffffffff80414047:	0f 84 2b 0b 00 00    	je     ffffffff80414b78 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb78>
ffffffff8041404d:	4c 8b 2d 0c a0 00 00 	mov    0xa00c(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80414054:	4c 8b 05 0d a0 00 00 	mov    0xa00d(%rip),%r8        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041405b:	49 c7 c1 66 b8 41 80 	mov    $0xffffffff8041b866,%r9
ffffffff80414062:	48 8b 2d 0f a0 00 00 	mov    0xa00f(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414069:	48 8b 3d 00 a0 00 00 	mov    0xa000(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414070:	4b 8d 54 ad fb       	lea    -0x5(%r13,%r13,4),%rdx
ffffffff80414075:	48 89 d6             	mov    %rdx,%rsi
ffffffff80414078:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041407c:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80414080:	4c 01 c2             	add    %r8,%rdx
ffffffff80414083:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff8041408a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041408f:	48 8d 8c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rcx
ffffffff80414096:	80 
ffffffff80414097:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8041409c:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804140a0:	4c 89 c1             	mov    %r8,%rcx
ffffffff804140a3:	48 29 e9             	sub    %rbp,%rcx
ffffffff804140a6:	48 39 c1             	cmp    %rax,%rcx
ffffffff804140a9:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804140ad:	48 39 c8             	cmp    %rcx,%rax
ffffffff804140b0:	48 89 ce             	mov    %rcx,%rsi
ffffffff804140b3:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff804140b7:	48 85 f6             	test   %rsi,%rsi
ffffffff804140ba:	0f 84 10 07 00 00    	je     ffffffff804147d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
    size_t i = pos;
ffffffff804140c0:	31 d2                	xor    %edx,%edx
ffffffff804140c2:	eb 11                	jmp    ffffffff804140d5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xd5>
ffffffff804140c4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff804140c8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804140cc:	48 39 f2             	cmp    %rsi,%rdx
ffffffff804140cf:	0f 84 fb 06 00 00    	je     ffffffff804147d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
      if (str_[i] == c) {
ffffffff804140d5:	41 80 3c 11 0a       	cmpb   $0xa,(%r9,%rdx,1)
ffffffff804140da:	75 ec                	jne    ffffffff804140c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xc8>
ffffffff804140dc:	49 89 d3             	mov    %rdx,%r11
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804140df:	48 39 d0             	cmp    %rdx,%rax
ffffffff804140e2:	48 89 d6             	mov    %rdx,%rsi
ffffffff804140e5:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff804140e9:	4c 39 ef             	cmp    %r13,%rdi
ffffffff804140ec:	0f 84 2e 06 00 00    	je     ffffffff80414720 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804140f2:	48 01 ee             	add    %rbp,%rsi
ffffffff804140f5:	4c 39 c6             	cmp    %r8,%rsi
ffffffff804140f8:	49 0f 47 f0          	cmova  %r8,%rsi
ffffffff804140fc:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804140ff:	0f 83 bb 06 00 00    	jae    ffffffff804147c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c0>
ffffffff80414105:	4c 8d 14 bf          	lea    (%rdi,%rdi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80414109:	4d 89 ce             	mov    %r9,%r14
ffffffff8041410c:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff80414110:	49 29 ee             	sub    %rbp,%r14
ffffffff80414113:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80414118:	66 45 0f be 24 2e    	movsbw (%r14,%rbp,1),%r12w
ffffffff8041411e:	66 41 81 cc 00 0f    	or     $0xf00,%r12w
ffffffff80414124:	66 45 89 a4 6a 80 e0 	mov    %r12w,-0x7fbe1f80(%r10,%rbp,2)
ffffffff8041412b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041412d:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80414131:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80414134:	75 e2                	jne    ffffffff80414118 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x118>
    if (current_col_ == num_cols_) {
ffffffff80414136:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80414139:	0f 84 a1 05 00 00    	je     ffffffff804146e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e0>
    current_col_ = i;
ffffffff8041413f:	48 89 35 32 9f 00 00 	mov    %rsi,0x9f32(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414146:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff8041414a:	0f 84 b2 05 00 00    	je     ffffffff80414702 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x702>
ffffffff80414150:	48 85 f6             	test   %rsi,%rsi
ffffffff80414153:	74 0a                	je     ffffffff8041415f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80414155:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80414159:	0f 86 a1 06 00 00    	jbe    ffffffff80414800 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x800>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041415f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414163:	48 89 f5             	mov    %rsi,%rbp
ffffffff80414166:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80414169:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff8041416d:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff80414170:	48 39 c8             	cmp    %rcx,%rax
ffffffff80414173:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80414177:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff8041417a:	48 85 c0             	test   %rax,%rax
ffffffff8041417d:	0f 85 1d ff ff ff    	jne    ffffffff804140a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414183:	48 85 ff             	test   %rdi,%rdi
ffffffff80414186:	74 5e                	je     ffffffff804141e6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1e6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414188:	48 8b 0d d9 9e 00 00 	mov    0x9ed9(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041418f:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414196:	31 d2                	xor    %edx,%edx
ffffffff80414198:	48 89 c8             	mov    %rcx,%rax
ffffffff8041419b:	4c 8d 1c 09          	lea    (%rcx,%rcx,1),%r11
ffffffff8041419f:	48 f7 d8             	neg    %rax
ffffffff804141a2:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff804141a9:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804141aa:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff804141af:	90                   	nop
ffffffff804141b0:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
ffffffff804141b4:	48 85 c9             	test   %rcx,%rcx
ffffffff804141b7:	74 1e                	je     ffffffff804141d7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d7>
ffffffff804141b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804141c0:	44 0f b7 8c 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r9d
ffffffff804141c7:	f4 ff 
ffffffff804141c9:	48 83 c0 02          	add    $0x2,%rax
ffffffff804141cd:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804141d2:	4c 39 c0             	cmp    %r8,%rax
ffffffff804141d5:	75 e9                	jne    ffffffff804141c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804141d7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804141db:	4c 89 c0             	mov    %r8,%rax
ffffffff804141de:	4c 01 d6             	add    %r10,%rsi
ffffffff804141e1:	48 39 fa             	cmp    %rdi,%rdx
ffffffff804141e4:	75 ca                	jne    ffffffff804141b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1b0>
    if (current_col_ != 0) {
ffffffff804141e6:	48 85 ed             	test   %rbp,%rbp
ffffffff804141e9:	74 52                	je     ffffffff8041423d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804141eb:	48 8b 35 76 9e 00 00 	mov    0x9e76(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804141f2:	48 85 f6             	test   %rsi,%rsi
ffffffff804141f5:	74 46                	je     ffffffff8041423d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804141f7:	48 89 fa             	mov    %rdi,%rdx
ffffffff804141fa:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff804141fe:	48 0f af d6          	imul   %rsi,%rdx
ffffffff80414202:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80414206:	48 8d b4 32 00 c0 05 	lea    0x5c000(%rdx,%rsi,1),%rsi
ffffffff8041420d:	00 
ffffffff8041420e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80414215:	00 
ffffffff80414216:	48 f7 da             	neg    %rdx
ffffffff80414219:	48 01 f6             	add    %rsi,%rsi
ffffffff8041421c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80414223:	80 
ffffffff80414224:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414228:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041422f:	ff 
ffffffff80414230:	48 83 c0 02          	add    $0x2,%rax
ffffffff80414234:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414238:	48 39 f0             	cmp    %rsi,%rax
ffffffff8041423b:	75 eb                	jne    ffffffff80414228 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x228>
  size_t num_len = 0;
ffffffff8041423d:	31 d2                	xor    %edx,%edx
ffffffff8041423f:	90                   	nop
    buffer[i] = num % base;
ffffffff80414240:	48 89 d8             	mov    %rbx,%rax
    num_len++;
ffffffff80414243:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff80414247:	83 e0 0f             	and    $0xf,%eax
ffffffff8041424a:	88 44 14 3b          	mov    %al,0x3b(%rsp,%rdx,1)
ffffffff8041424e:	48 89 d8             	mov    %rbx,%rax
    num /= base;
ffffffff80414251:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80414255:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff80414259:	76 06                	jbe    ffffffff80414261 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x261>
  for (size_t i = 0; i < size; i++) {
ffffffff8041425b:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8041425f:	75 df                	jne    ffffffff80414240 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
  if (num != 0) {
ffffffff80414261:	48 85 db             	test   %rbx,%rbx
ffffffff80414264:	0f 85 e6 08 00 00    	jne    ffffffff80414b50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb50>
    str[offset++] = '0';
ffffffff8041426a:	66 c7 44 24 28 30 78 	movw   $0x7830,0x28(%rsp)
ffffffff80414271:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
ffffffff80414276:	48 8d 7c 14 3b       	lea    0x3b(%rsp,%rdx,1),%rdi
ffffffff8041427b:	48 8d 74 24 2a       	lea    0x2a(%rsp),%rsi
ffffffff80414280:	eb 1c                	jmp    ffffffff8041429e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x29e>
ffffffff80414282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80414288:	83 c0 37             	add    $0x37,%eax
ffffffff8041428b:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041428f:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80414292:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80414296:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80414299:	74 1d                	je     ffffffff804142b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b8>
ffffffff8041429b:	48 89 c7             	mov    %rax,%rdi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8041429e:	0f b6 07             	movzbl (%rdi),%eax
ffffffff804142a1:	3c 09                	cmp    $0x9,%al
ffffffff804142a3:	7f e3                	jg     ffffffff80414288 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff804142a5:	83 c0 30             	add    $0x30,%eax
ffffffff804142a8:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804142ac:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff804142af:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff804142b3:	48 39 f9             	cmp    %rdi,%rcx
ffffffff804142b6:	75 e3                	jne    ffffffff8041429b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x29b>
  str[num_len + offset] = 0;
ffffffff804142b8:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804142bd:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff804142c2:	e8 f9 8e ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804142c7:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff804142c9:	48 85 c0             	test   %rax,%rax
ffffffff804142cc:	0f 84 8e 08 00 00    	je     ffffffff80414b60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
ffffffff804142d2:	4c 8b 25 87 9d 00 00 	mov    0x9d87(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804142d9:	48 8b 2d 88 9d 00 00 	mov    0x9d88(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804142e0:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
ffffffff804142e5:	48 8b 1d 8c 9d 00 00 	mov    0x9d8c(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804142ec:	48 8b 3d 7d 9d 00 00 	mov    0x9d7d(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804142f3:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff804142f8:	48 89 d6             	mov    %rdx,%rsi
ffffffff804142fb:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804142ff:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80414303:	48 01 ea             	add    %rbp,%rdx
ffffffff80414306:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff8041430d:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80414314:	80 
ffffffff80414315:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041431a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80414320:	48 89 e9             	mov    %rbp,%rcx
ffffffff80414323:	48 29 d9             	sub    %rbx,%rcx
ffffffff80414326:	48 39 c1             	cmp    %rax,%rcx
ffffffff80414329:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041432d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80414330:	48 89 ce             	mov    %rcx,%rsi
ffffffff80414333:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80414337:	48 85 f6             	test   %rsi,%rsi
ffffffff8041433a:	0f 84 30 07 00 00    	je     ffffffff80414a70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
    size_t i = pos;
ffffffff80414340:	31 d2                	xor    %edx,%edx
ffffffff80414342:	eb 11                	jmp    ffffffff80414355 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x355>
ffffffff80414344:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80414348:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041434c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041434f:	0f 84 1b 07 00 00    	je     ffffffff80414a70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
      if (str_[i] == c) {
ffffffff80414355:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff8041435a:	75 ec                	jne    ffffffff80414348 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x348>
ffffffff8041435c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041435f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80414362:	48 89 d6             	mov    %rdx,%rsi
ffffffff80414365:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80414369:	4c 39 e7             	cmp    %r12,%rdi
ffffffff8041436c:	0f 84 4e 06 00 00    	je     ffffffff804149c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414372:	48 01 de             	add    %rbx,%rsi
ffffffff80414375:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80414378:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff8041437c:	48 39 f3             	cmp    %rsi,%rbx
ffffffff8041437f:	0f 83 d9 06 00 00    	jae    ffffffff80414a5e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa5e>
ffffffff80414385:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80414389:	4d 89 c5             	mov    %r8,%r13
ffffffff8041438c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80414390:	49 29 dd             	sub    %rbx,%r13
ffffffff80414393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80414398:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff8041439f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff804143a5:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff804143ac:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804143ae:	48 83 c3 01          	add    $0x1,%rbx
ffffffff804143b2:	48 39 de             	cmp    %rbx,%rsi
ffffffff804143b5:	75 e1                	jne    ffffffff80414398 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x398>
    if (current_col_ == num_cols_) {
ffffffff804143b7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804143ba:	0f 84 c0 05 00 00    	je     ffffffff80414980 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x980>
    current_col_ = i;
ffffffff804143c0:	48 89 35 b1 9c 00 00 	mov    %rsi,0x9cb1(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804143c7:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff804143cb:	0f 84 d1 05 00 00    	je     ffffffff804149a2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a2>
ffffffff804143d1:	48 85 f6             	test   %rsi,%rsi
ffffffff804143d4:	74 0a                	je     ffffffff804143e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff804143d6:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804143da:	0f 86 18 07 00 00    	jbe    ffffffff80414af8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xaf8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804143e0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804143e4:	48 89 f3             	mov    %rsi,%rbx
ffffffff804143e7:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804143ea:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804143ee:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff804143f1:	48 39 c8             	cmp    %rcx,%rax
ffffffff804143f4:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff804143f8:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff804143fb:	48 85 c0             	test   %rax,%rax
ffffffff804143fe:	0f 85 1c ff ff ff    	jne    ffffffff80414320 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x320>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414404:	48 85 ff             	test   %rdi,%rdi
ffffffff80414407:	74 5d                	je     ffffffff80414466 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x466>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414409:	48 8b 0d 58 9c 00 00 	mov    0x9c58(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414410:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414417:	31 d2                	xor    %edx,%edx
ffffffff80414419:	48 89 c8             	mov    %rcx,%rax
ffffffff8041441c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80414420:	48 f7 d8             	neg    %rax
ffffffff80414423:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff8041442a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041442b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80414430:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80414434:	48 85 c9             	test   %rcx,%rcx
ffffffff80414437:	74 1e                	je     ffffffff80414457 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x457>
ffffffff80414439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80414440:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80414447:	f4 ff 
ffffffff80414449:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041444d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414452:	48 39 c5             	cmp    %rax,%rbp
ffffffff80414455:	75 e9                	jne    ffffffff80414440 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x440>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414457:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041445b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041445e:	4c 01 ce             	add    %r9,%rsi
ffffffff80414461:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80414464:	75 ca                	jne    ffffffff80414430 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x430>
    if (current_col_ != 0) {
ffffffff80414466:	48 85 db             	test   %rbx,%rbx
ffffffff80414469:	74 52                	je     ffffffff804144bd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041446b:	48 8b 35 f6 9b 00 00 	mov    0x9bf6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414472:	48 85 f6             	test   %rsi,%rsi
ffffffff80414475:	74 46                	je     ffffffff804144bd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80414477:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041447a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041447e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80414482:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80414486:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041448d:	00 
ffffffff8041448e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80414495:	00 
ffffffff80414496:	48 f7 da             	neg    %rdx
ffffffff80414499:	48 01 f6             	add    %rsi,%rsi
ffffffff8041449c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff804144a3:	80 
ffffffff804144a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804144a8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff804144af:	ff 
ffffffff804144b0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804144b4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804144b8:	48 39 f0             	cmp    %rsi,%rax
ffffffff804144bb:	75 eb                	jne    ffffffff804144a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x4a8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804144bd:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff804144c4:	e8 f7 8c ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804144c9:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff804144cb:	48 85 c0             	test   %rax,%rax
ffffffff804144ce:	0f 84 bc 06 00 00    	je     ffffffff80414b90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb90>
ffffffff804144d4:	4c 8b 25 85 9b 00 00 	mov    0x9b85(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804144db:	48 8b 2d 86 9b 00 00 	mov    0x9b86(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804144e2:	49 c7 c0 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r8
ffffffff804144e9:	48 8b 1d 88 9b 00 00 	mov    0x9b88(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804144f0:	48 8b 3d 79 9b 00 00 	mov    0x9b79(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804144f7:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff804144fc:	48 89 d6             	mov    %rdx,%rsi
ffffffff804144ff:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80414503:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80414507:	48 01 ea             	add    %rbp,%rdx
ffffffff8041450a:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80414511:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80414518:	80 
ffffffff80414519:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041451e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80414520:	48 89 e9             	mov    %rbp,%rcx
ffffffff80414523:	48 89 c6             	mov    %rax,%rsi
ffffffff80414526:	48 29 d9             	sub    %rbx,%rcx
ffffffff80414529:	48 39 c1             	cmp    %rax,%rcx
ffffffff8041452c:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80414530:	48 39 c1             	cmp    %rax,%rcx
ffffffff80414533:	48 0f 46 f1          	cmovbe %rcx,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80414537:	48 85 f6             	test   %rsi,%rsi
ffffffff8041453a:	0f 84 10 04 00 00    	je     ffffffff80414950 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
    size_t i = pos;
ffffffff80414540:	31 d2                	xor    %edx,%edx
ffffffff80414542:	eb 11                	jmp    ffffffff80414555 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x555>
ffffffff80414544:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80414548:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041454c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041454f:	0f 84 fb 03 00 00    	je     ffffffff80414950 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
      if (str_[i] == c) {
ffffffff80414555:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff8041455a:	75 ec                	jne    ffffffff80414548 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x548>
ffffffff8041455c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041455f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80414562:	48 89 d6             	mov    %rdx,%rsi
ffffffff80414565:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80414569:	49 39 fc             	cmp    %rdi,%r12
ffffffff8041456c:	0f 84 2e 03 00 00    	je     ffffffff804148a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414572:	48 01 de             	add    %rbx,%rsi
ffffffff80414575:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80414578:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff8041457c:	48 39 de             	cmp    %rbx,%rsi
ffffffff8041457f:	0f 86 b9 03 00 00    	jbe    ffffffff8041493e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x93e>
ffffffff80414585:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80414589:	4d 89 c5             	mov    %r8,%r13
ffffffff8041458c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80414590:	49 29 dd             	sub    %rbx,%r13
ffffffff80414593:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80414598:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff8041459f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff804145a5:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff804145ac:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804145ae:	48 83 c3 01          	add    $0x1,%rbx
ffffffff804145b2:	48 39 de             	cmp    %rbx,%rsi
ffffffff804145b5:	75 e1                	jne    ffffffff80414598 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x598>
    if (current_col_ == num_cols_) {
ffffffff804145b7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804145ba:	0f 84 98 02 00 00    	je     ffffffff80414858 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x858>
    current_col_ = i;
ffffffff804145c0:	48 89 35 b1 9a 00 00 	mov    %rsi,0x9ab1(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804145c7:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff804145cb:	0f 84 a9 02 00 00    	je     ffffffff8041487a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x87a>
ffffffff804145d1:	48 85 f6             	test   %rsi,%rsi
ffffffff804145d4:	74 0a                	je     ffffffff804145e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff804145d6:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804145da:	0f 86 c0 04 00 00    	jbe    ffffffff80414aa0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804145e0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804145e4:	48 89 f3             	mov    %rsi,%rbx
ffffffff804145e7:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804145ea:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804145ee:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff804145f1:	48 39 c1             	cmp    %rax,%rcx
ffffffff804145f4:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff804145f8:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff804145fb:	48 85 c0             	test   %rax,%rax
ffffffff804145fe:	0f 85 1c ff ff ff    	jne    ffffffff80414520 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414604:	48 85 ff             	test   %rdi,%rdi
ffffffff80414607:	74 5d                	je     ffffffff80414666 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x666>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414609:	48 8b 0d 58 9a 00 00 	mov    0x9a58(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414610:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414617:	31 d2                	xor    %edx,%edx
ffffffff80414619:	48 89 c8             	mov    %rcx,%rax
ffffffff8041461c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80414620:	48 f7 d8             	neg    %rax
ffffffff80414623:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff8041462a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041462b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80414630:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80414634:	48 85 c9             	test   %rcx,%rcx
ffffffff80414637:	74 1e                	je     ffffffff80414657 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x657>
ffffffff80414639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80414640:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80414647:	f4 ff 
ffffffff80414649:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041464d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414652:	48 39 c5             	cmp    %rax,%rbp
ffffffff80414655:	75 e9                	jne    ffffffff80414640 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x640>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414657:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041465b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041465e:	4c 01 ce             	add    %r9,%rsi
ffffffff80414661:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80414664:	75 ca                	jne    ffffffff80414630 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x630>
    if (current_col_ != 0) {
ffffffff80414666:	48 85 db             	test   %rbx,%rbx
ffffffff80414669:	74 52                	je     ffffffff804146bd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041466b:	48 8b 35 f6 99 00 00 	mov    0x99f6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414672:	48 85 f6             	test   %rsi,%rsi
ffffffff80414675:	74 46                	je     ffffffff804146bd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80414677:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041467a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041467e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80414682:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80414686:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041468d:	00 
ffffffff8041468e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80414695:	00 
ffffffff80414696:	48 f7 da             	neg    %rdx
ffffffff80414699:	48 01 f6             	add    %rsi,%rsi
ffffffff8041469c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff804146a3:	80 
ffffffff804146a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804146a8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff804146af:	ff 
ffffffff804146b0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804146b4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804146b8:	48 39 c6             	cmp    %rax,%rsi
ffffffff804146bb:	75 eb                	jne    ffffffff804146a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a8>
}
ffffffff804146bd:	48 83 c4 58          	add    $0x58,%rsp
ffffffff804146c1:	58                   	pop    %rax
ffffffff804146c2:	5a                   	pop    %rdx
ffffffff804146c3:	59                   	pop    %rcx
ffffffff804146c4:	5b                   	pop    %rbx
ffffffff804146c5:	5e                   	pop    %rsi
ffffffff804146c6:	5f                   	pop    %rdi
ffffffff804146c7:	5d                   	pop    %rbp
ffffffff804146c8:	41 58                	pop    %r8
ffffffff804146ca:	41 59                	pop    %r9
ffffffff804146cc:	41 5a                	pop    %r10
ffffffff804146ce:	41 5b                	pop    %r11
ffffffff804146d0:	41 5c                	pop    %r12
ffffffff804146d2:	41 5d                	pop    %r13
ffffffff804146d4:	41 5e                	pop    %r14
ffffffff804146d6:	41 5f                	pop    %r15
ffffffff804146d8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff804146dc:	48 cf                	iretq  
ffffffff804146de:	66 90                	xchg   %ax,%ax
      current_row_++;
ffffffff804146e0:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804146e4:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff804146e6:	48 c7 05 87 99 00 00 	movq   $0x0,0x9987(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804146ed:	00 00 00 00 
      current_row_++;
ffffffff804146f1:	48 89 3d 78 99 00 00 	mov    %rdi,0x9978(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804146f8:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff804146fc:	0f 85 5d fa ff ff    	jne    ffffffff8041415f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80414702:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80414705:	48 89 f5             	mov    %rsi,%rbp
ffffffff80414708:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff8041470c:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff8041470f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80414712:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80414716:	48 29 d0             	sub    %rdx,%rax
ffffffff80414719:	e9 5c fa ff ff       	jmpq   ffffffff8041417a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x17a>
ffffffff8041471e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414720:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80414724:	76 5a                	jbe    ffffffff80414780 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x780>
ffffffff80414726:	41 bc a0 00 00 00    	mov    $0xa0,%r12d
ffffffff8041472c:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80414732:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414738:	45 31 d2             	xor    %r10d,%r10d
ffffffff8041473b:	4d 8d bc 24 60 ff ff 	lea    -0xa0(%r12),%r15
ffffffff80414742:	ff 
ffffffff80414743:	4d 85 c0             	test   %r8,%r8
ffffffff80414746:	74 28                	je     ffffffff80414770 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80414748:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041474d:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80414750:	43 0f b7 84 54 80 e0 	movzwl -0x7fbe1f80(%r12,%r10,2),%eax
ffffffff80414757:	41 80 
ffffffff80414759:	66 43 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%r10,2)
ffffffff80414760:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414762:	49 83 c2 01          	add    $0x1,%r10
ffffffff80414766:	4d 39 c2             	cmp    %r8,%r10
ffffffff80414769:	75 e5                	jne    ffffffff80414750 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x750>
ffffffff8041476b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414770:	49 83 c6 01          	add    $0x1,%r14
ffffffff80414774:	49 81 c4 a0 00 00 00 	add    $0xa0,%r12
ffffffff8041477b:	4d 39 ee             	cmp    %r13,%r14
ffffffff8041477e:	75 b8                	jne    ffffffff80414738 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x738>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414780:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80414785:	4d 85 c0             	test   %r8,%r8
ffffffff80414788:	74 18                	je     ffffffff804147a2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a2>
ffffffff8041478a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80414790:	66 41 c7 42 20 00 00 	movw   $0x0,0x20(%r10)
ffffffff80414797:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041479b:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff804147a0:	75 ee                	jne    ffffffff80414790 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x790>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804147a2:	48 01 ee             	add    %rbp,%rsi
      current_row_--;
ffffffff804147a5:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff804147a9:	4c 39 c6             	cmp    %r8,%rsi
ffffffff804147ac:	48 89 3d bd 98 00 00 	mov    %rdi,0x98bd(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804147b3:	49 0f 47 f0          	cmova  %r8,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804147b7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804147ba:	0f 82 45 f9 ff ff    	jb     ffffffff80414105 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x105>
ffffffff804147c0:	48 89 ee             	mov    %rbp,%rsi
ffffffff804147c3:	e9 6e f9 ff ff       	jmpq   ffffffff80414136 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x136>
ffffffff804147c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804147cf:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804147d0:	48 89 ca             	mov    %rcx,%rdx
ffffffff804147d3:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    if (count == npos) {
ffffffff804147da:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff804147de:	0f 85 fb f8 ff ff    	jne    ffffffff804140df <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xdf>
ffffffff804147e4:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
ffffffff804147eb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804147f2:	48 89 c6             	mov    %rax,%rsi
ffffffff804147f5:	e9 ef f8 ff ff       	jmpq   ffffffff804140e9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xe9>
ffffffff804147fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414800:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80414803:	73 32                	jae    ffffffff80414837 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff80414805:	48 8d 2c bf          	lea    (%rdi,%rdi,4),%rbp
ffffffff80414809:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff8041480d:	48 01 ee             	add    %rbp,%rsi
ffffffff80414810:	4c 01 c5             	add    %r8,%rbp
ffffffff80414813:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff8041481a:	80 
ffffffff8041481b:	48 8d ac 2d 60 e0 41 	lea    -0x7fbe1fa0(%rbp,%rbp,1),%rbp
ffffffff80414822:	80 
ffffffff80414823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80414828:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff8041482e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414832:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80414835:	75 f1                	jne    ffffffff80414828 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x828>
        current_row_++;
ffffffff80414837:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8041483b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff8041483d:	48 c7 05 30 98 00 00 	movq   $0x0,0x9830(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414844:	00 00 00 00 
        current_row_++;
ffffffff80414848:	48 89 3d 21 98 00 00 	mov    %rdi,0x9821(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041484f:	e9 0b f9 ff ff       	jmpq   ffffffff8041415f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80414854:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80414858:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041485c:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff8041485e:	48 c7 05 0f 98 00 00 	movq   $0x0,0x980f(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414865:	00 00 00 00 
      current_row_++;
ffffffff80414869:	48 89 3d 00 98 00 00 	mov    %rdi,0x9800(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414870:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80414874:	0f 85 66 fd ff ff    	jne    ffffffff804145e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff8041487a:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff8041487d:	48 89 f3             	mov    %rsi,%rbx
ffffffff80414880:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80414884:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80414887:	48 39 c2             	cmp    %rax,%rdx
ffffffff8041488a:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff8041488e:	48 29 d0             	sub    %rdx,%rax
ffffffff80414891:	e9 65 fd ff ff       	jmpq   ffffffff804145fb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5fb>
ffffffff80414896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041489d:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804148a0:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff804148a4:	76 5a                	jbe    ffffffff80414900 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x900>
ffffffff804148a6:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff804148ac:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff804148b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804148b8:	45 31 c9             	xor    %r9d,%r9d
ffffffff804148bb:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff804148c2:	48 85 ed             	test   %rbp,%rbp
ffffffff804148c5:	74 29                	je     ffffffff804148f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8f0>
ffffffff804148c7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff804148cc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804148d0:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff804148d7:	41 80 
ffffffff804148d9:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff804148e0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804148e2:	49 83 c1 01          	add    $0x1,%r9
ffffffff804148e6:	4c 39 cd             	cmp    %r9,%rbp
ffffffff804148e9:	75 e5                	jne    ffffffff804148d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8d0>
ffffffff804148eb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804148f0:	49 83 c5 01          	add    $0x1,%r13
ffffffff804148f4:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff804148fb:	49 39 fd             	cmp    %rdi,%r13
ffffffff804148fe:	75 b8                	jne    ffffffff804148b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414900:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80414905:	48 85 ed             	test   %rbp,%rbp
ffffffff80414908:	74 16                	je     ffffffff80414920 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
ffffffff8041490a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80414910:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80414917:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041491b:	4d 39 cf             	cmp    %r9,%r15
ffffffff8041491e:	75 f0                	jne    ffffffff80414910 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414920:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80414923:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80414927:	48 39 ee             	cmp    %rbp,%rsi
ffffffff8041492a:	48 89 3d 3f 97 00 00 	mov    %rdi,0x973f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414931:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414935:	48 39 de             	cmp    %rbx,%rsi
ffffffff80414938:	0f 87 47 fc ff ff    	ja     ffffffff80414585 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x585>
ffffffff8041493e:	48 89 de             	mov    %rbx,%rsi
ffffffff80414941:	e9 71 fc ff ff       	jmpq   ffffffff804145b7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b7>
ffffffff80414946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041494d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80414950:	48 89 ca             	mov    %rcx,%rdx
ffffffff80414953:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff8041495a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041495e:	0f 85 fb fb ff ff    	jne    ffffffff8041455f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x55f>
ffffffff80414964:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff8041496b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80414972:	48 89 c6             	mov    %rax,%rsi
ffffffff80414975:	e9 ef fb ff ff       	jmpq   ffffffff80414569 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x569>
ffffffff8041497a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80414980:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414984:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80414986:	48 c7 05 e7 96 00 00 	movq   $0x0,0x96e7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041498d:	00 00 00 00 
      current_row_++;
ffffffff80414991:	48 89 3d d8 96 00 00 	mov    %rdi,0x96d8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414998:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041499c:	0f 85 3e fa ff ff    	jne    ffffffff804143e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff804149a2:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff804149a5:	48 89 f3             	mov    %rsi,%rbx
ffffffff804149a8:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff804149ac:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff804149af:	48 39 d0             	cmp    %rdx,%rax
ffffffff804149b2:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff804149b6:	48 29 d0             	sub    %rdx,%rax
ffffffff804149b9:	e9 3d fa ff ff       	jmpq   ffffffff804143fb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3fb>
ffffffff804149be:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804149c0:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff804149c4:	76 5a                	jbe    ffffffff80414a20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa20>
ffffffff804149c6:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff804149cc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff804149d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804149d8:	45 31 c9             	xor    %r9d,%r9d
ffffffff804149db:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff804149e2:	48 85 ed             	test   %rbp,%rbp
ffffffff804149e5:	74 29                	je     ffffffff80414a10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff804149e7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff804149ec:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804149f0:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff804149f7:	41 80 
ffffffff804149f9:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80414a00:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414a02:	49 83 c1 01          	add    $0x1,%r9
ffffffff80414a06:	49 39 e9             	cmp    %rbp,%r9
ffffffff80414a09:	75 e5                	jne    ffffffff804149f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
ffffffff80414a0b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414a10:	49 83 c5 01          	add    $0x1,%r13
ffffffff80414a14:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff80414a1b:	4d 39 e5             	cmp    %r12,%r13
ffffffff80414a1e:	75 b8                	jne    ffffffff804149d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414a20:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80414a25:	48 85 ed             	test   %rbp,%rbp
ffffffff80414a28:	74 16                	je     ffffffff80414a40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa40>
ffffffff80414a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80414a30:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80414a37:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414a3b:	4d 39 f9             	cmp    %r15,%r9
ffffffff80414a3e:	75 f0                	jne    ffffffff80414a30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa30>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414a40:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80414a43:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80414a47:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80414a4a:	48 89 3d 1f 96 00 00 	mov    %rdi,0x961f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414a51:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414a55:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80414a58:	0f 82 27 f9 ff ff    	jb     ffffffff80414385 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x385>
ffffffff80414a5e:	48 89 de             	mov    %rbx,%rsi
ffffffff80414a61:	e9 51 f9 ff ff       	jmpq   ffffffff804143b7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff80414a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80414a6d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80414a70:	48 89 ca             	mov    %rcx,%rdx
ffffffff80414a73:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff80414a7a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80414a7e:	0f 85 db f8 ff ff    	jne    ffffffff8041435f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x35f>
ffffffff80414a84:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff80414a8b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80414a92:	48 89 c6             	mov    %rax,%rsi
ffffffff80414a95:	e9 cf f8 ff ff       	jmpq   ffffffff80414369 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x369>
ffffffff80414a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414aa0:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80414aa3:	76 32                	jbe    ffffffff80414ad7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xad7>
ffffffff80414aa5:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80414aa9:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80414aad:	48 01 de             	add    %rbx,%rsi
ffffffff80414ab0:	48 01 eb             	add    %rbp,%rbx
ffffffff80414ab3:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80414aba:	80 
ffffffff80414abb:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80414ac2:	80 
ffffffff80414ac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80414ac8:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80414ace:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414ad2:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80414ad5:	75 f1                	jne    ffffffff80414ac8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xac8>
        current_row_++;
ffffffff80414ad7:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80414adb:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80414add:	48 c7 05 90 95 00 00 	movq   $0x0,0x9590(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414ae4:	00 00 00 00 
        current_row_++;
ffffffff80414ae8:	48 89 3d 81 95 00 00 	mov    %rdi,0x9581(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414aef:	e9 ec fa ff ff       	jmpq   ffffffff804145e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80414af4:	0f 1f 40 00          	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414af8:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80414afb:	76 32                	jbe    ffffffff80414b2f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb2f>
ffffffff80414afd:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80414b01:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80414b05:	48 01 de             	add    %rbx,%rsi
ffffffff80414b08:	48 01 eb             	add    %rbp,%rbx
ffffffff80414b0b:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80414b12:	80 
ffffffff80414b13:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80414b1a:	80 
ffffffff80414b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80414b20:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80414b26:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414b2a:	48 39 de             	cmp    %rbx,%rsi
ffffffff80414b2d:	75 f1                	jne    ffffffff80414b20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb20>
        current_row_++;
ffffffff80414b2f:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80414b33:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80414b35:	48 c7 05 38 95 00 00 	movq   $0x0,0x9538(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414b3c:	00 00 00 00 
        current_row_++;
ffffffff80414b40:	48 89 3d 29 95 00 00 	mov    %rdi,0x9529(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414b47:	e9 94 f8 ff ff       	jmpq   ffffffff804143e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80414b4c:	0f 1f 40 00          	nopl   0x0(%rax)
    str[0] = 'E';
ffffffff80414b50:	66 c7 44 24 28 45 00 	movw   $0x45,0x28(%rsp)
ffffffff80414b57:	e9 61 f7 ff ff       	jmpq   ffffffff804142bd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bd>
ffffffff80414b5c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414b60:	48 8b 1d 11 95 00 00 	mov    0x9511(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414b67:	48 8b 3d 02 95 00 00 	mov    0x9502(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414b6e:	e9 91 f8 ff ff       	jmpq   ffffffff80414404 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x404>
ffffffff80414b73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80414b78:	48 8b 2d f9 94 00 00 	mov    0x94f9(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414b7f:	48 8b 3d ea 94 00 00 	mov    0x94ea(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414b86:	e9 f8 f5 ff ff       	jmpq   ffffffff80414183 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x183>
ffffffff80414b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80414b90:	48 8b 3d d9 94 00 00 	mov    0x94d9(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414b97:	48 8b 1d da 94 00 00 	mov    0x94da(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414b9e:	e9 61 fa ff ff       	jmpq   ffffffff80414604 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x604>
ffffffff80414ba3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80414baa:	00 00 00 00 
ffffffff80414bae:	66 90                	xchg   %ax,%ax

ffffffff80414bb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414bb0:	41 57                	push   %r15
ffffffff80414bb2:	41 56                	push   %r14
ffffffff80414bb4:	41 55                	push   %r13
ffffffff80414bb6:	41 54                	push   %r12
ffffffff80414bb8:	41 53                	push   %r11
ffffffff80414bba:	41 52                	push   %r10
ffffffff80414bbc:	41 51                	push   %r9
ffffffff80414bbe:	41 50                	push   %r8
ffffffff80414bc0:	55                   	push   %rbp
ffffffff80414bc1:	57                   	push   %rdi
ffffffff80414bc2:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414bc3:	be 0d 00 00 00       	mov    $0xd,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414bc8:	53                   	push   %rbx
ffffffff80414bc9:	51                   	push   %rcx
ffffffff80414bca:	52                   	push   %rdx
ffffffff80414bcb:	50                   	push   %rax
ffffffff80414bcc:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80414bd0:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
ffffffff80414bd7:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414bd8:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
ffffffff80414bdf:	00 
ffffffff80414be0:	fc                   	cld    
ffffffff80414be1:	e8 ea 90 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80414be6:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff80414bed:	e8 ce 85 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80414bf2:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80414bf4:	48 85 c0             	test   %rax,%rax
ffffffff80414bf7:	0f 84 2b 0b 00 00    	je     ffffffff80415728 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb78>
ffffffff80414bfd:	4c 8b 2d 5c 94 00 00 	mov    0x945c(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80414c04:	4c 8b 05 5d 94 00 00 	mov    0x945d(%rip),%r8        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414c0b:	49 c7 c1 66 b8 41 80 	mov    $0xffffffff8041b866,%r9
ffffffff80414c12:	48 8b 2d 5f 94 00 00 	mov    0x945f(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414c19:	48 8b 3d 50 94 00 00 	mov    0x9450(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414c20:	4b 8d 54 ad fb       	lea    -0x5(%r13,%r13,4),%rdx
ffffffff80414c25:	48 89 d6             	mov    %rdx,%rsi
ffffffff80414c28:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80414c2c:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80414c30:	4c 01 c2             	add    %r8,%rdx
ffffffff80414c33:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80414c3a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80414c3f:	48 8d 8c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rcx
ffffffff80414c46:	80 
ffffffff80414c47:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff80414c4c:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80414c50:	4c 89 c1             	mov    %r8,%rcx
ffffffff80414c53:	48 29 e9             	sub    %rbp,%rcx
ffffffff80414c56:	48 39 c1             	cmp    %rax,%rcx
ffffffff80414c59:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80414c5d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80414c60:	48 89 ce             	mov    %rcx,%rsi
ffffffff80414c63:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80414c67:	48 85 f6             	test   %rsi,%rsi
ffffffff80414c6a:	0f 84 10 07 00 00    	je     ffffffff80415380 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
    size_t i = pos;
ffffffff80414c70:	31 d2                	xor    %edx,%edx
ffffffff80414c72:	eb 11                	jmp    ffffffff80414c85 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xd5>
ffffffff80414c74:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80414c78:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414c7c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80414c7f:	0f 84 fb 06 00 00    	je     ffffffff80415380 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
      if (str_[i] == c) {
ffffffff80414c85:	41 80 3c 11 0a       	cmpb   $0xa,(%r9,%rdx,1)
ffffffff80414c8a:	75 ec                	jne    ffffffff80414c78 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xc8>
ffffffff80414c8c:	49 89 d3             	mov    %rdx,%r11
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80414c8f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80414c92:	48 89 d6             	mov    %rdx,%rsi
ffffffff80414c95:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80414c99:	4c 39 ef             	cmp    %r13,%rdi
ffffffff80414c9c:	0f 84 2e 06 00 00    	je     ffffffff804152d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414ca2:	48 01 ee             	add    %rbp,%rsi
ffffffff80414ca5:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80414ca8:	49 0f 47 f0          	cmova  %r8,%rsi
ffffffff80414cac:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80414caf:	0f 83 bb 06 00 00    	jae    ffffffff80415370 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c0>
ffffffff80414cb5:	4c 8d 14 bf          	lea    (%rdi,%rdi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80414cb9:	4d 89 ce             	mov    %r9,%r14
ffffffff80414cbc:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff80414cc0:	49 29 ee             	sub    %rbp,%r14
ffffffff80414cc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80414cc8:	66 45 0f be 24 2e    	movsbw (%r14,%rbp,1),%r12w
ffffffff80414cce:	66 41 81 cc 00 0f    	or     $0xf00,%r12w
ffffffff80414cd4:	66 45 89 a4 6a 80 e0 	mov    %r12w,-0x7fbe1f80(%r10,%rbp,2)
ffffffff80414cdb:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414cdd:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80414ce1:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80414ce4:	75 e2                	jne    ffffffff80414cc8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x118>
    if (current_col_ == num_cols_) {
ffffffff80414ce6:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80414ce9:	0f 84 a1 05 00 00    	je     ffffffff80415290 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e0>
    current_col_ = i;
ffffffff80414cef:	48 89 35 82 93 00 00 	mov    %rsi,0x9382(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414cf6:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff80414cfa:	0f 84 b2 05 00 00    	je     ffffffff804152b2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x702>
ffffffff80414d00:	48 85 f6             	test   %rsi,%rsi
ffffffff80414d03:	74 0a                	je     ffffffff80414d0f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80414d05:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80414d09:	0f 86 a1 06 00 00    	jbe    ffffffff804153b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x800>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80414d0f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414d13:	48 89 f5             	mov    %rsi,%rbp
ffffffff80414d16:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80414d19:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80414d1d:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff80414d20:	48 39 c8             	cmp    %rcx,%rax
ffffffff80414d23:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80414d27:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80414d2a:	48 85 c0             	test   %rax,%rax
ffffffff80414d2d:	0f 85 1d ff ff ff    	jne    ffffffff80414c50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414d33:	48 85 ff             	test   %rdi,%rdi
ffffffff80414d36:	74 5e                	je     ffffffff80414d96 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1e6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414d38:	48 8b 0d 29 93 00 00 	mov    0x9329(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414d3f:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414d46:	31 d2                	xor    %edx,%edx
ffffffff80414d48:	48 89 c8             	mov    %rcx,%rax
ffffffff80414d4b:	4c 8d 1c 09          	lea    (%rcx,%rcx,1),%r11
ffffffff80414d4f:	48 f7 d8             	neg    %rax
ffffffff80414d52:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff80414d59:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414d5a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80414d5f:	90                   	nop
ffffffff80414d60:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
ffffffff80414d64:	48 85 c9             	test   %rcx,%rcx
ffffffff80414d67:	74 1e                	je     ffffffff80414d87 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d7>
ffffffff80414d69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80414d70:	44 0f b7 8c 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r9d
ffffffff80414d77:	f4 ff 
ffffffff80414d79:	48 83 c0 02          	add    $0x2,%rax
ffffffff80414d7d:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414d82:	4c 39 c0             	cmp    %r8,%rax
ffffffff80414d85:	75 e9                	jne    ffffffff80414d70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414d87:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414d8b:	4c 89 c0             	mov    %r8,%rax
ffffffff80414d8e:	4c 01 d6             	add    %r10,%rsi
ffffffff80414d91:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80414d94:	75 ca                	jne    ffffffff80414d60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1b0>
    if (current_col_ != 0) {
ffffffff80414d96:	48 85 ed             	test   %rbp,%rbp
ffffffff80414d99:	74 52                	je     ffffffff80414ded <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414d9b:	48 8b 35 c6 92 00 00 	mov    0x92c6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414da2:	48 85 f6             	test   %rsi,%rsi
ffffffff80414da5:	74 46                	je     ffffffff80414ded <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80414da7:	48 89 fa             	mov    %rdi,%rdx
ffffffff80414daa:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80414dae:	48 0f af d6          	imul   %rsi,%rdx
ffffffff80414db2:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80414db6:	48 8d b4 32 00 c0 05 	lea    0x5c000(%rdx,%rsi,1),%rsi
ffffffff80414dbd:	00 
ffffffff80414dbe:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80414dc5:	00 
ffffffff80414dc6:	48 f7 da             	neg    %rdx
ffffffff80414dc9:	48 01 f6             	add    %rsi,%rsi
ffffffff80414dcc:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80414dd3:	80 
ffffffff80414dd4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414dd8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80414ddf:	ff 
ffffffff80414de0:	48 83 c0 02          	add    $0x2,%rax
ffffffff80414de4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414de8:	48 39 f0             	cmp    %rsi,%rax
ffffffff80414deb:	75 eb                	jne    ffffffff80414dd8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x228>
  size_t num_len = 0;
ffffffff80414ded:	31 d2                	xor    %edx,%edx
ffffffff80414def:	90                   	nop
    buffer[i] = num % base;
ffffffff80414df0:	48 89 d8             	mov    %rbx,%rax
    num_len++;
ffffffff80414df3:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff80414df7:	83 e0 0f             	and    $0xf,%eax
ffffffff80414dfa:	88 44 14 3b          	mov    %al,0x3b(%rsp,%rdx,1)
ffffffff80414dfe:	48 89 d8             	mov    %rbx,%rax
    num /= base;
ffffffff80414e01:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80414e05:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff80414e09:	76 06                	jbe    ffffffff80414e11 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x261>
  for (size_t i = 0; i < size; i++) {
ffffffff80414e0b:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff80414e0f:	75 df                	jne    ffffffff80414df0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
  if (num != 0) {
ffffffff80414e11:	48 85 db             	test   %rbx,%rbx
ffffffff80414e14:	0f 85 e6 08 00 00    	jne    ffffffff80415700 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb50>
    str[offset++] = '0';
ffffffff80414e1a:	66 c7 44 24 28 30 78 	movw   $0x7830,0x28(%rsp)
ffffffff80414e21:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
ffffffff80414e26:	48 8d 7c 14 3b       	lea    0x3b(%rsp,%rdx,1),%rdi
ffffffff80414e2b:	48 8d 74 24 2a       	lea    0x2a(%rsp),%rsi
ffffffff80414e30:	eb 1c                	jmp    ffffffff80414e4e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x29e>
ffffffff80414e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80414e38:	83 c0 37             	add    $0x37,%eax
ffffffff80414e3b:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80414e3f:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80414e42:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80414e46:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80414e49:	74 1d                	je     ffffffff80414e68 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b8>
ffffffff80414e4b:	48 89 c7             	mov    %rax,%rdi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80414e4e:	0f b6 07             	movzbl (%rdi),%eax
ffffffff80414e51:	3c 09                	cmp    $0x9,%al
ffffffff80414e53:	7f e3                	jg     ffffffff80414e38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80414e55:	83 c0 30             	add    $0x30,%eax
ffffffff80414e58:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80414e5c:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80414e5f:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80414e63:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80414e66:	75 e3                	jne    ffffffff80414e4b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x29b>
  str[num_len + offset] = 0;
ffffffff80414e68:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80414e6d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff80414e72:	e8 49 83 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80414e77:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80414e79:	48 85 c0             	test   %rax,%rax
ffffffff80414e7c:	0f 84 8e 08 00 00    	je     ffffffff80415710 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
ffffffff80414e82:	4c 8b 25 d7 91 00 00 	mov    0x91d7(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80414e89:	48 8b 2d d8 91 00 00 	mov    0x91d8(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414e90:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
ffffffff80414e95:	48 8b 1d dc 91 00 00 	mov    0x91dc(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80414e9c:	48 8b 3d cd 91 00 00 	mov    0x91cd(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80414ea3:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80414ea8:	48 89 d6             	mov    %rdx,%rsi
ffffffff80414eab:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80414eaf:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80414eb3:	48 01 ea             	add    %rbp,%rdx
ffffffff80414eb6:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80414ebd:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80414ec4:	80 
ffffffff80414ec5:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80414eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80414ed0:	48 89 e9             	mov    %rbp,%rcx
ffffffff80414ed3:	48 29 d9             	sub    %rbx,%rcx
ffffffff80414ed6:	48 39 c1             	cmp    %rax,%rcx
ffffffff80414ed9:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80414edd:	48 39 c8             	cmp    %rcx,%rax
ffffffff80414ee0:	48 89 ce             	mov    %rcx,%rsi
ffffffff80414ee3:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80414ee7:	48 85 f6             	test   %rsi,%rsi
ffffffff80414eea:	0f 84 30 07 00 00    	je     ffffffff80415620 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
    size_t i = pos;
ffffffff80414ef0:	31 d2                	xor    %edx,%edx
ffffffff80414ef2:	eb 11                	jmp    ffffffff80414f05 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x355>
ffffffff80414ef4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80414ef8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414efc:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80414eff:	0f 84 1b 07 00 00    	je     ffffffff80415620 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
      if (str_[i] == c) {
ffffffff80414f05:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff80414f0a:	75 ec                	jne    ffffffff80414ef8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x348>
ffffffff80414f0c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80414f0f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80414f12:	48 89 d6             	mov    %rdx,%rsi
ffffffff80414f15:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80414f19:	4c 39 e7             	cmp    %r12,%rdi
ffffffff80414f1c:	0f 84 4e 06 00 00    	je     ffffffff80415570 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414f22:	48 01 de             	add    %rbx,%rsi
ffffffff80414f25:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80414f28:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff80414f2c:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80414f2f:	0f 83 d9 06 00 00    	jae    ffffffff8041560e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa5e>
ffffffff80414f35:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80414f39:	4d 89 c5             	mov    %r8,%r13
ffffffff80414f3c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80414f40:	49 29 dd             	sub    %rbx,%r13
ffffffff80414f43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80414f48:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff80414f4f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80414f55:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff80414f5c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414f5e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80414f62:	48 39 de             	cmp    %rbx,%rsi
ffffffff80414f65:	75 e1                	jne    ffffffff80414f48 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x398>
    if (current_col_ == num_cols_) {
ffffffff80414f67:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80414f6a:	0f 84 c0 05 00 00    	je     ffffffff80415530 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x980>
    current_col_ = i;
ffffffff80414f70:	48 89 35 01 91 00 00 	mov    %rsi,0x9101(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414f77:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80414f7b:	0f 84 d1 05 00 00    	je     ffffffff80415552 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a2>
ffffffff80414f81:	48 85 f6             	test   %rsi,%rsi
ffffffff80414f84:	74 0a                	je     ffffffff80414f90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80414f86:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80414f8a:	0f 86 18 07 00 00    	jbe    ffffffff804156a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xaf8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80414f90:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414f94:	48 89 f3             	mov    %rsi,%rbx
ffffffff80414f97:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80414f9a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80414f9e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80414fa1:	48 39 c8             	cmp    %rcx,%rax
ffffffff80414fa4:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80414fa8:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80414fab:	48 85 c0             	test   %rax,%rax
ffffffff80414fae:	0f 85 1c ff ff ff    	jne    ffffffff80414ed0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x320>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414fb4:	48 85 ff             	test   %rdi,%rdi
ffffffff80414fb7:	74 5d                	je     ffffffff80415016 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x466>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414fb9:	48 8b 0d a8 90 00 00 	mov    0x90a8(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414fc0:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414fc7:	31 d2                	xor    %edx,%edx
ffffffff80414fc9:	48 89 c8             	mov    %rcx,%rax
ffffffff80414fcc:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80414fd0:	48 f7 d8             	neg    %rax
ffffffff80414fd3:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff80414fda:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414fdb:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80414fe0:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80414fe4:	48 85 c9             	test   %rcx,%rcx
ffffffff80414fe7:	74 1e                	je     ffffffff80415007 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x457>
ffffffff80414fe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80414ff0:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80414ff7:	f4 ff 
ffffffff80414ff9:	48 83 c0 02          	add    $0x2,%rax
ffffffff80414ffd:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415002:	48 39 c5             	cmp    %rax,%rbp
ffffffff80415005:	75 e9                	jne    ffffffff80414ff0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x440>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415007:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041500b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041500e:	4c 01 ce             	add    %r9,%rsi
ffffffff80415011:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80415014:	75 ca                	jne    ffffffff80414fe0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x430>
    if (current_col_ != 0) {
ffffffff80415016:	48 85 db             	test   %rbx,%rbx
ffffffff80415019:	74 52                	je     ffffffff8041506d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041501b:	48 8b 35 46 90 00 00 	mov    0x9046(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415022:	48 85 f6             	test   %rsi,%rsi
ffffffff80415025:	74 46                	je     ffffffff8041506d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415027:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041502a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041502e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80415032:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80415036:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041503d:	00 
ffffffff8041503e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80415045:	00 
ffffffff80415046:	48 f7 da             	neg    %rdx
ffffffff80415049:	48 01 f6             	add    %rsi,%rsi
ffffffff8041504c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80415053:	80 
ffffffff80415054:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415058:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041505f:	ff 
ffffffff80415060:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415064:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415068:	48 39 f0             	cmp    %rsi,%rax
ffffffff8041506b:	75 eb                	jne    ffffffff80415058 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x4a8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041506d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80415074:	e8 47 81 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80415079:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff8041507b:	48 85 c0             	test   %rax,%rax
ffffffff8041507e:	0f 84 bc 06 00 00    	je     ffffffff80415740 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb90>
ffffffff80415084:	4c 8b 25 d5 8f 00 00 	mov    0x8fd5(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041508b:	48 8b 2d d6 8f 00 00 	mov    0x8fd6(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415092:	49 c7 c0 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r8
ffffffff80415099:	48 8b 1d d8 8f 00 00 	mov    0x8fd8(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804150a0:	48 8b 3d c9 8f 00 00 	mov    0x8fc9(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804150a7:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff804150ac:	48 89 d6             	mov    %rdx,%rsi
ffffffff804150af:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804150b3:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804150b7:	48 01 ea             	add    %rbp,%rdx
ffffffff804150ba:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff804150c1:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff804150c8:	80 
ffffffff804150c9:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff804150ce:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804150d0:	48 89 e9             	mov    %rbp,%rcx
ffffffff804150d3:	48 89 c6             	mov    %rax,%rsi
ffffffff804150d6:	48 29 d9             	sub    %rbx,%rcx
ffffffff804150d9:	48 39 c1             	cmp    %rax,%rcx
ffffffff804150dc:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804150e0:	48 39 c1             	cmp    %rax,%rcx
ffffffff804150e3:	48 0f 46 f1          	cmovbe %rcx,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff804150e7:	48 85 f6             	test   %rsi,%rsi
ffffffff804150ea:	0f 84 10 04 00 00    	je     ffffffff80415500 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
    size_t i = pos;
ffffffff804150f0:	31 d2                	xor    %edx,%edx
ffffffff804150f2:	eb 11                	jmp    ffffffff80415105 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x555>
ffffffff804150f4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff804150f8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804150fc:	48 39 f2             	cmp    %rsi,%rdx
ffffffff804150ff:	0f 84 fb 03 00 00    	je     ffffffff80415500 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
      if (str_[i] == c) {
ffffffff80415105:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff8041510a:	75 ec                	jne    ffffffff804150f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x548>
ffffffff8041510c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041510f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80415112:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415115:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80415119:	49 39 fc             	cmp    %rdi,%r12
ffffffff8041511c:	0f 84 2e 03 00 00    	je     ffffffff80415450 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415122:	48 01 de             	add    %rbx,%rsi
ffffffff80415125:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80415128:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff8041512c:	48 39 de             	cmp    %rbx,%rsi
ffffffff8041512f:	0f 86 b9 03 00 00    	jbe    ffffffff804154ee <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x93e>
ffffffff80415135:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80415139:	4d 89 c5             	mov    %r8,%r13
ffffffff8041513c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80415140:	49 29 dd             	sub    %rbx,%r13
ffffffff80415143:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80415148:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff8041514f:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80415155:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff8041515c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041515e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80415162:	48 39 de             	cmp    %rbx,%rsi
ffffffff80415165:	75 e1                	jne    ffffffff80415148 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x598>
    if (current_col_ == num_cols_) {
ffffffff80415167:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041516a:	0f 84 98 02 00 00    	je     ffffffff80415408 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x858>
    current_col_ = i;
ffffffff80415170:	48 89 35 01 8f 00 00 	mov    %rsi,0x8f01(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415177:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041517b:	0f 84 a9 02 00 00    	je     ffffffff8041542a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x87a>
ffffffff80415181:	48 85 f6             	test   %rsi,%rsi
ffffffff80415184:	74 0a                	je     ffffffff80415190 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80415186:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff8041518a:	0f 86 c0 04 00 00    	jbe    ffffffff80415650 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80415190:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415194:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415197:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8041519a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff8041519e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff804151a1:	48 39 c1             	cmp    %rax,%rcx
ffffffff804151a4:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff804151a8:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff804151ab:	48 85 c0             	test   %rax,%rax
ffffffff804151ae:	0f 85 1c ff ff ff    	jne    ffffffff804150d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804151b4:	48 85 ff             	test   %rdi,%rdi
ffffffff804151b7:	74 5d                	je     ffffffff80415216 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x666>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804151b9:	48 8b 0d a8 8e 00 00 	mov    0x8ea8(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804151c0:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804151c7:	31 d2                	xor    %edx,%edx
ffffffff804151c9:	48 89 c8             	mov    %rcx,%rax
ffffffff804151cc:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff804151d0:	48 f7 d8             	neg    %rax
ffffffff804151d3:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff804151da:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804151db:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff804151e0:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff804151e4:	48 85 c9             	test   %rcx,%rcx
ffffffff804151e7:	74 1e                	je     ffffffff80415207 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x657>
ffffffff804151e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804151f0:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff804151f7:	f4 ff 
ffffffff804151f9:	48 83 c0 02          	add    $0x2,%rax
ffffffff804151fd:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415202:	48 39 c5             	cmp    %rax,%rbp
ffffffff80415205:	75 e9                	jne    ffffffff804151f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x640>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415207:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041520b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041520e:	4c 01 ce             	add    %r9,%rsi
ffffffff80415211:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80415214:	75 ca                	jne    ffffffff804151e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x630>
    if (current_col_ != 0) {
ffffffff80415216:	48 85 db             	test   %rbx,%rbx
ffffffff80415219:	74 52                	je     ffffffff8041526d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041521b:	48 8b 35 46 8e 00 00 	mov    0x8e46(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415222:	48 85 f6             	test   %rsi,%rsi
ffffffff80415225:	74 46                	je     ffffffff8041526d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415227:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041522a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041522e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80415232:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80415236:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041523d:	00 
ffffffff8041523e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80415245:	00 
ffffffff80415246:	48 f7 da             	neg    %rdx
ffffffff80415249:	48 01 f6             	add    %rsi,%rsi
ffffffff8041524c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80415253:	80 
ffffffff80415254:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415258:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041525f:	ff 
ffffffff80415260:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415264:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415268:	48 39 c6             	cmp    %rax,%rsi
ffffffff8041526b:	75 eb                	jne    ffffffff80415258 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a8>
}
ffffffff8041526d:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80415271:	58                   	pop    %rax
ffffffff80415272:	5a                   	pop    %rdx
ffffffff80415273:	59                   	pop    %rcx
ffffffff80415274:	5b                   	pop    %rbx
ffffffff80415275:	5e                   	pop    %rsi
ffffffff80415276:	5f                   	pop    %rdi
ffffffff80415277:	5d                   	pop    %rbp
ffffffff80415278:	41 58                	pop    %r8
ffffffff8041527a:	41 59                	pop    %r9
ffffffff8041527c:	41 5a                	pop    %r10
ffffffff8041527e:	41 5b                	pop    %r11
ffffffff80415280:	41 5c                	pop    %r12
ffffffff80415282:	41 5d                	pop    %r13
ffffffff80415284:	41 5e                	pop    %r14
ffffffff80415286:	41 5f                	pop    %r15
ffffffff80415288:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041528c:	48 cf                	iretq  
ffffffff8041528e:	66 90                	xchg   %ax,%ax
      current_row_++;
ffffffff80415290:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415294:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80415296:	48 c7 05 d7 8d 00 00 	movq   $0x0,0x8dd7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041529d:	00 00 00 00 
      current_row_++;
ffffffff804152a1:	48 89 3d c8 8d 00 00 	mov    %rdi,0x8dc8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804152a8:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff804152ac:	0f 85 5d fa ff ff    	jne    ffffffff80414d0f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff804152b2:	48 39 d1             	cmp    %rdx,%rcx
ffffffff804152b5:	48 89 f5             	mov    %rsi,%rbp
ffffffff804152b8:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff804152bc:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff804152bf:	48 39 c2             	cmp    %rax,%rdx
ffffffff804152c2:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff804152c6:	48 29 d0             	sub    %rdx,%rax
ffffffff804152c9:	e9 5c fa ff ff       	jmpq   ffffffff80414d2a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x17a>
ffffffff804152ce:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804152d0:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff804152d4:	76 5a                	jbe    ffffffff80415330 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x780>
ffffffff804152d6:	41 bc a0 00 00 00    	mov    $0xa0,%r12d
ffffffff804152dc:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff804152e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804152e8:	45 31 d2             	xor    %r10d,%r10d
ffffffff804152eb:	4d 8d bc 24 60 ff ff 	lea    -0xa0(%r12),%r15
ffffffff804152f2:	ff 
ffffffff804152f3:	4d 85 c0             	test   %r8,%r8
ffffffff804152f6:	74 28                	je     ffffffff80415320 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff804152f8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff804152fd:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80415300:	43 0f b7 84 54 80 e0 	movzwl -0x7fbe1f80(%r12,%r10,2),%eax
ffffffff80415307:	41 80 
ffffffff80415309:	66 43 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%r10,2)
ffffffff80415310:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415312:	49 83 c2 01          	add    $0x1,%r10
ffffffff80415316:	4d 39 c2             	cmp    %r8,%r10
ffffffff80415319:	75 e5                	jne    ffffffff80415300 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x750>
ffffffff8041531b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80415320:	49 83 c6 01          	add    $0x1,%r14
ffffffff80415324:	49 81 c4 a0 00 00 00 	add    $0xa0,%r12
ffffffff8041532b:	4d 39 ee             	cmp    %r13,%r14
ffffffff8041532e:	75 b8                	jne    ffffffff804152e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x738>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415330:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80415335:	4d 85 c0             	test   %r8,%r8
ffffffff80415338:	74 18                	je     ffffffff80415352 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a2>
ffffffff8041533a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80415340:	66 41 c7 42 20 00 00 	movw   $0x0,0x20(%r10)
ffffffff80415347:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041534b:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff80415350:	75 ee                	jne    ffffffff80415340 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x790>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415352:	48 01 ee             	add    %rbp,%rsi
      current_row_--;
ffffffff80415355:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80415359:	4c 39 c6             	cmp    %r8,%rsi
ffffffff8041535c:	48 89 3d 0d 8d 00 00 	mov    %rdi,0x8d0d(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415363:	49 0f 47 f0          	cmova  %r8,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415367:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041536a:	0f 82 45 f9 ff ff    	jb     ffffffff80414cb5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x105>
ffffffff80415370:	48 89 ee             	mov    %rbp,%rsi
ffffffff80415373:	e9 6e f9 ff ff       	jmpq   ffffffff80414ce6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x136>
ffffffff80415378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041537f:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415380:	48 89 ca             	mov    %rcx,%rdx
ffffffff80415383:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    if (count == npos) {
ffffffff8041538a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041538e:	0f 85 fb f8 ff ff    	jne    ffffffff80414c8f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xdf>
ffffffff80415394:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
ffffffff8041539b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804153a2:	48 89 c6             	mov    %rax,%rsi
ffffffff804153a5:	e9 ef f8 ff ff       	jmpq   ffffffff80414c99 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xe9>
ffffffff804153aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804153b0:	4c 39 c6             	cmp    %r8,%rsi
ffffffff804153b3:	73 32                	jae    ffffffff804153e7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff804153b5:	48 8d 2c bf          	lea    (%rdi,%rdi,4),%rbp
ffffffff804153b9:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804153bd:	48 01 ee             	add    %rbp,%rsi
ffffffff804153c0:	4c 01 c5             	add    %r8,%rbp
ffffffff804153c3:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff804153ca:	80 
ffffffff804153cb:	48 8d ac 2d 60 e0 41 	lea    -0x7fbe1fa0(%rbp,%rbp,1),%rbp
ffffffff804153d2:	80 
ffffffff804153d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804153d8:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff804153de:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804153e2:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804153e5:	75 f1                	jne    ffffffff804153d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x828>
        current_row_++;
ffffffff804153e7:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804153eb:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff804153ed:	48 c7 05 80 8c 00 00 	movq   $0x0,0x8c80(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804153f4:	00 00 00 00 
        current_row_++;
ffffffff804153f8:	48 89 3d 71 8c 00 00 	mov    %rdi,0x8c71(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804153ff:	e9 0b f9 ff ff       	jmpq   ffffffff80414d0f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80415404:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80415408:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041540c:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff8041540e:	48 c7 05 5f 8c 00 00 	movq   $0x0,0x8c5f(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415415:	00 00 00 00 
      current_row_++;
ffffffff80415419:	48 89 3d 50 8c 00 00 	mov    %rdi,0x8c50(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415420:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80415424:	0f 85 66 fd ff ff    	jne    ffffffff80415190 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff8041542a:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff8041542d:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415430:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80415434:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80415437:	48 39 c2             	cmp    %rax,%rdx
ffffffff8041543a:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff8041543e:	48 29 d0             	sub    %rdx,%rax
ffffffff80415441:	e9 65 fd ff ff       	jmpq   ffffffff804151ab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5fb>
ffffffff80415446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041544d:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80415450:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80415454:	76 5a                	jbe    ffffffff804154b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x900>
ffffffff80415456:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff8041545c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80415462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415468:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041546b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80415472:	48 85 ed             	test   %rbp,%rbp
ffffffff80415475:	74 29                	je     ffffffff804154a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8f0>
ffffffff80415477:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041547c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80415480:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80415487:	41 80 
ffffffff80415489:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80415490:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415492:	49 83 c1 01          	add    $0x1,%r9
ffffffff80415496:	4c 39 cd             	cmp    %r9,%rbp
ffffffff80415499:	75 e5                	jne    ffffffff80415480 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8d0>
ffffffff8041549b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804154a0:	49 83 c5 01          	add    $0x1,%r13
ffffffff804154a4:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff804154ab:	49 39 fd             	cmp    %rdi,%r13
ffffffff804154ae:	75 b8                	jne    ffffffff80415468 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804154b0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff804154b5:	48 85 ed             	test   %rbp,%rbp
ffffffff804154b8:	74 16                	je     ffffffff804154d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
ffffffff804154ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804154c0:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff804154c7:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804154cb:	4d 39 cf             	cmp    %r9,%r15
ffffffff804154ce:	75 f0                	jne    ffffffff804154c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804154d0:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff804154d3:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff804154d7:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804154da:	48 89 3d 8f 8b 00 00 	mov    %rdi,0x8b8f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804154e1:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804154e5:	48 39 de             	cmp    %rbx,%rsi
ffffffff804154e8:	0f 87 47 fc ff ff    	ja     ffffffff80415135 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x585>
ffffffff804154ee:	48 89 de             	mov    %rbx,%rsi
ffffffff804154f1:	e9 71 fc ff ff       	jmpq   ffffffff80415167 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b7>
ffffffff804154f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804154fd:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415500:	48 89 ca             	mov    %rcx,%rdx
ffffffff80415503:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff8041550a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041550e:	0f 85 fb fb ff ff    	jne    ffffffff8041510f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x55f>
ffffffff80415514:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff8041551b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80415522:	48 89 c6             	mov    %rax,%rsi
ffffffff80415525:	e9 ef fb ff ff       	jmpq   ffffffff80415119 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x569>
ffffffff8041552a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80415530:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415534:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80415536:	48 c7 05 37 8b 00 00 	movq   $0x0,0x8b37(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041553d:	00 00 00 00 
      current_row_++;
ffffffff80415541:	48 89 3d 28 8b 00 00 	mov    %rdi,0x8b28(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415548:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041554c:	0f 85 3e fa ff ff    	jne    ffffffff80414f90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80415552:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80415555:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415558:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff8041555c:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff8041555f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80415562:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff80415566:	48 29 d0             	sub    %rdx,%rax
ffffffff80415569:	e9 3d fa ff ff       	jmpq   ffffffff80414fab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3fb>
ffffffff8041556e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80415570:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80415574:	76 5a                	jbe    ffffffff804155d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa20>
ffffffff80415576:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff8041557c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80415582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415588:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041558b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80415592:	48 85 ed             	test   %rbp,%rbp
ffffffff80415595:	74 29                	je     ffffffff804155c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff80415597:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041559c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804155a0:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff804155a7:	41 80 
ffffffff804155a9:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff804155b0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804155b2:	49 83 c1 01          	add    $0x1,%r9
ffffffff804155b6:	49 39 e9             	cmp    %rbp,%r9
ffffffff804155b9:	75 e5                	jne    ffffffff804155a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
ffffffff804155bb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804155c0:	49 83 c5 01          	add    $0x1,%r13
ffffffff804155c4:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff804155cb:	4d 39 e5             	cmp    %r12,%r13
ffffffff804155ce:	75 b8                	jne    ffffffff80415588 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804155d0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff804155d5:	48 85 ed             	test   %rbp,%rbp
ffffffff804155d8:	74 16                	je     ffffffff804155f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa40>
ffffffff804155da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804155e0:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff804155e7:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804155eb:	4d 39 f9             	cmp    %r15,%r9
ffffffff804155ee:	75 f0                	jne    ffffffff804155e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa30>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804155f0:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff804155f3:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff804155f7:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804155fa:	48 89 3d 6f 8a 00 00 	mov    %rdi,0x8a6f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415601:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415605:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80415608:	0f 82 27 f9 ff ff    	jb     ffffffff80414f35 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x385>
ffffffff8041560e:	48 89 de             	mov    %rbx,%rsi
ffffffff80415611:	e9 51 f9 ff ff       	jmpq   ffffffff80414f67 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff80415616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041561d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415620:	48 89 ca             	mov    %rcx,%rdx
ffffffff80415623:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff8041562a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff8041562e:	0f 85 db f8 ff ff    	jne    ffffffff80414f0f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x35f>
ffffffff80415634:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff8041563b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80415642:	48 89 c6             	mov    %rax,%rsi
ffffffff80415645:	e9 cf f8 ff ff       	jmpq   ffffffff80414f19 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x369>
ffffffff8041564a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415650:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80415653:	76 32                	jbe    ffffffff80415687 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xad7>
ffffffff80415655:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80415659:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8041565d:	48 01 de             	add    %rbx,%rsi
ffffffff80415660:	48 01 eb             	add    %rbp,%rbx
ffffffff80415663:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff8041566a:	80 
ffffffff8041566b:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80415672:	80 
ffffffff80415673:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80415678:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff8041567e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415682:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80415685:	75 f1                	jne    ffffffff80415678 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xac8>
        current_row_++;
ffffffff80415687:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8041568b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff8041568d:	48 c7 05 e0 89 00 00 	movq   $0x0,0x89e0(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415694:	00 00 00 00 
        current_row_++;
ffffffff80415698:	48 89 3d d1 89 00 00 	mov    %rdi,0x89d1(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041569f:	e9 ec fa ff ff       	jmpq   ffffffff80415190 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff804156a4:	0f 1f 40 00          	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804156a8:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804156ab:	76 32                	jbe    ffffffff804156df <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb2f>
ffffffff804156ad:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff804156b1:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff804156b5:	48 01 de             	add    %rbx,%rsi
ffffffff804156b8:	48 01 eb             	add    %rbp,%rbx
ffffffff804156bb:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff804156c2:	80 
ffffffff804156c3:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff804156ca:	80 
ffffffff804156cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804156d0:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff804156d6:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804156da:	48 39 de             	cmp    %rbx,%rsi
ffffffff804156dd:	75 f1                	jne    ffffffff804156d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb20>
        current_row_++;
ffffffff804156df:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804156e3:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff804156e5:	48 c7 05 88 89 00 00 	movq   $0x0,0x8988(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804156ec:	00 00 00 00 
        current_row_++;
ffffffff804156f0:	48 89 3d 79 89 00 00 	mov    %rdi,0x8979(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804156f7:	e9 94 f8 ff ff       	jmpq   ffffffff80414f90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff804156fc:	0f 1f 40 00          	nopl   0x0(%rax)
    str[0] = 'E';
ffffffff80415700:	66 c7 44 24 28 45 00 	movw   $0x45,0x28(%rsp)
ffffffff80415707:	e9 61 f7 ff ff       	jmpq   ffffffff80414e6d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bd>
ffffffff8041570c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415710:	48 8b 1d 61 89 00 00 	mov    0x8961(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415717:	48 8b 3d 52 89 00 00 	mov    0x8952(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041571e:	e9 91 f8 ff ff       	jmpq   ffffffff80414fb4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x404>
ffffffff80415723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80415728:	48 8b 2d 49 89 00 00 	mov    0x8949(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041572f:	48 8b 3d 3a 89 00 00 	mov    0x893a(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415736:	e9 f8 f5 ff ff       	jmpq   ffffffff80414d33 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x183>
ffffffff8041573b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80415740:	48 8b 3d 29 89 00 00 	mov    0x8929(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415747:	48 8b 1d 2a 89 00 00 	mov    0x892a(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041574e:	e9 61 fa ff ff       	jmpq   ffffffff804151b4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x604>
ffffffff80415753:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041575a:	00 00 00 00 
ffffffff8041575e:	66 90                	xchg   %ax,%ax

ffffffff80415760 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80415760:	41 57                	push   %r15
ffffffff80415762:	41 56                	push   %r14
ffffffff80415764:	41 55                	push   %r13
ffffffff80415766:	41 54                	push   %r12
ffffffff80415768:	41 53                	push   %r11
ffffffff8041576a:	41 52                	push   %r10
ffffffff8041576c:	41 51                	push   %r9
ffffffff8041576e:	41 50                	push   %r8
ffffffff80415770:	55                   	push   %rbp
ffffffff80415771:	57                   	push   %rdi
ffffffff80415772:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80415773:	be 0e 00 00 00       	mov    $0xe,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80415778:	53                   	push   %rbx
ffffffff80415779:	51                   	push   %rcx
ffffffff8041577a:	52                   	push   %rdx
ffffffff8041577b:	50                   	push   %rax
ffffffff8041577c:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80415780:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
ffffffff80415787:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80415788:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
ffffffff8041578f:	00 
ffffffff80415790:	fc                   	cld    
ffffffff80415791:	e8 3a 85 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80415796:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff8041579d:	e8 1e 7a ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804157a2:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff804157a4:	48 85 c0             	test   %rax,%rax
ffffffff804157a7:	0f 84 2b 0b 00 00    	je     ffffffff804162d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb78>
ffffffff804157ad:	4c 8b 2d ac 88 00 00 	mov    0x88ac(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804157b4:	4c 8b 05 ad 88 00 00 	mov    0x88ad(%rip),%r8        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804157bb:	49 c7 c1 66 b8 41 80 	mov    $0xffffffff8041b866,%r9
ffffffff804157c2:	48 8b 2d af 88 00 00 	mov    0x88af(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804157c9:	48 8b 3d a0 88 00 00 	mov    0x88a0(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804157d0:	4b 8d 54 ad fb       	lea    -0x5(%r13,%r13,4),%rdx
ffffffff804157d5:	48 89 d6             	mov    %rdx,%rsi
ffffffff804157d8:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804157dc:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804157e0:	4c 01 c2             	add    %r8,%rdx
ffffffff804157e3:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff804157ea:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff804157ef:	48 8d 8c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rcx
ffffffff804157f6:	80 
ffffffff804157f7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff804157fc:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80415800:	4c 89 c1             	mov    %r8,%rcx
ffffffff80415803:	48 29 e9             	sub    %rbp,%rcx
ffffffff80415806:	48 39 c1             	cmp    %rax,%rcx
ffffffff80415809:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041580d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80415810:	48 89 ce             	mov    %rcx,%rsi
ffffffff80415813:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80415817:	48 85 f6             	test   %rsi,%rsi
ffffffff8041581a:	0f 84 10 07 00 00    	je     ffffffff80415f30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
    size_t i = pos;
ffffffff80415820:	31 d2                	xor    %edx,%edx
ffffffff80415822:	eb 11                	jmp    ffffffff80415835 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xd5>
ffffffff80415824:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80415828:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041582c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041582f:	0f 84 fb 06 00 00    	je     ffffffff80415f30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
      if (str_[i] == c) {
ffffffff80415835:	41 80 3c 11 0a       	cmpb   $0xa,(%r9,%rdx,1)
ffffffff8041583a:	75 ec                	jne    ffffffff80415828 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xc8>
ffffffff8041583c:	49 89 d3             	mov    %rdx,%r11
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041583f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80415842:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415845:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80415849:	4c 39 ef             	cmp    %r13,%rdi
ffffffff8041584c:	0f 84 2e 06 00 00    	je     ffffffff80415e80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415852:	48 01 ee             	add    %rbp,%rsi
ffffffff80415855:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80415858:	49 0f 47 f0          	cmova  %r8,%rsi
ffffffff8041585c:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041585f:	0f 83 bb 06 00 00    	jae    ffffffff80415f20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c0>
ffffffff80415865:	4c 8d 14 bf          	lea    (%rdi,%rdi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80415869:	4d 89 ce             	mov    %r9,%r14
ffffffff8041586c:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff80415870:	49 29 ee             	sub    %rbp,%r14
ffffffff80415873:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80415878:	66 45 0f be 24 2e    	movsbw (%r14,%rbp,1),%r12w
ffffffff8041587e:	66 41 81 cc 00 0f    	or     $0xf00,%r12w
ffffffff80415884:	66 45 89 a4 6a 80 e0 	mov    %r12w,-0x7fbe1f80(%r10,%rbp,2)
ffffffff8041588b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041588d:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80415891:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80415894:	75 e2                	jne    ffffffff80415878 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x118>
    if (current_col_ == num_cols_) {
ffffffff80415896:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80415899:	0f 84 a1 05 00 00    	je     ffffffff80415e40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e0>
    current_col_ = i;
ffffffff8041589f:	48 89 35 d2 87 00 00 	mov    %rsi,0x87d2(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804158a6:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff804158aa:	0f 84 b2 05 00 00    	je     ffffffff80415e62 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x702>
ffffffff804158b0:	48 85 f6             	test   %rsi,%rsi
ffffffff804158b3:	74 0a                	je     ffffffff804158bf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff804158b5:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804158b9:	0f 86 a1 06 00 00    	jbe    ffffffff80415f60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x800>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804158bf:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804158c3:	48 89 f5             	mov    %rsi,%rbp
ffffffff804158c6:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804158c9:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804158cd:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff804158d0:	48 39 c8             	cmp    %rcx,%rax
ffffffff804158d3:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff804158d7:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff804158da:	48 85 c0             	test   %rax,%rax
ffffffff804158dd:	0f 85 1d ff ff ff    	jne    ffffffff80415800 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804158e3:	48 85 ff             	test   %rdi,%rdi
ffffffff804158e6:	74 5e                	je     ffffffff80415946 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1e6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804158e8:	48 8b 0d 79 87 00 00 	mov    0x8779(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804158ef:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804158f6:	31 d2                	xor    %edx,%edx
ffffffff804158f8:	48 89 c8             	mov    %rcx,%rax
ffffffff804158fb:	4c 8d 1c 09          	lea    (%rcx,%rcx,1),%r11
ffffffff804158ff:	48 f7 d8             	neg    %rax
ffffffff80415902:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff80415909:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041590a:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff8041590f:	90                   	nop
ffffffff80415910:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
ffffffff80415914:	48 85 c9             	test   %rcx,%rcx
ffffffff80415917:	74 1e                	je     ffffffff80415937 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d7>
ffffffff80415919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80415920:	44 0f b7 8c 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r9d
ffffffff80415927:	f4 ff 
ffffffff80415929:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041592d:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415932:	4c 39 c0             	cmp    %r8,%rax
ffffffff80415935:	75 e9                	jne    ffffffff80415920 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415937:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041593b:	4c 89 c0             	mov    %r8,%rax
ffffffff8041593e:	4c 01 d6             	add    %r10,%rsi
ffffffff80415941:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80415944:	75 ca                	jne    ffffffff80415910 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1b0>
    if (current_col_ != 0) {
ffffffff80415946:	48 85 ed             	test   %rbp,%rbp
ffffffff80415949:	74 52                	je     ffffffff8041599d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041594b:	48 8b 35 16 87 00 00 	mov    0x8716(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415952:	48 85 f6             	test   %rsi,%rsi
ffffffff80415955:	74 46                	je     ffffffff8041599d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415957:	48 89 fa             	mov    %rdi,%rdx
ffffffff8041595a:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff8041595e:	48 0f af d6          	imul   %rsi,%rdx
ffffffff80415962:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80415966:	48 8d b4 32 00 c0 05 	lea    0x5c000(%rdx,%rsi,1),%rsi
ffffffff8041596d:	00 
ffffffff8041596e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80415975:	00 
ffffffff80415976:	48 f7 da             	neg    %rdx
ffffffff80415979:	48 01 f6             	add    %rsi,%rsi
ffffffff8041597c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80415983:	80 
ffffffff80415984:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415988:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041598f:	ff 
ffffffff80415990:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415994:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415998:	48 39 f0             	cmp    %rsi,%rax
ffffffff8041599b:	75 eb                	jne    ffffffff80415988 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x228>
  size_t num_len = 0;
ffffffff8041599d:	31 d2                	xor    %edx,%edx
ffffffff8041599f:	90                   	nop
    buffer[i] = num % base;
ffffffff804159a0:	48 89 d8             	mov    %rbx,%rax
    num_len++;
ffffffff804159a3:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff804159a7:	83 e0 0f             	and    $0xf,%eax
ffffffff804159aa:	88 44 14 3b          	mov    %al,0x3b(%rsp,%rdx,1)
ffffffff804159ae:	48 89 d8             	mov    %rbx,%rax
    num /= base;
ffffffff804159b1:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff804159b5:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff804159b9:	76 06                	jbe    ffffffff804159c1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x261>
  for (size_t i = 0; i < size; i++) {
ffffffff804159bb:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff804159bf:	75 df                	jne    ffffffff804159a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
  if (num != 0) {
ffffffff804159c1:	48 85 db             	test   %rbx,%rbx
ffffffff804159c4:	0f 85 e6 08 00 00    	jne    ffffffff804162b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb50>
    str[offset++] = '0';
ffffffff804159ca:	66 c7 44 24 28 30 78 	movw   $0x7830,0x28(%rsp)
ffffffff804159d1:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
ffffffff804159d6:	48 8d 7c 14 3b       	lea    0x3b(%rsp,%rdx,1),%rdi
ffffffff804159db:	48 8d 74 24 2a       	lea    0x2a(%rsp),%rsi
ffffffff804159e0:	eb 1c                	jmp    ffffffff804159fe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x29e>
ffffffff804159e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff804159e8:	83 c0 37             	add    $0x37,%eax
ffffffff804159eb:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804159ef:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff804159f2:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff804159f6:	48 39 f9             	cmp    %rdi,%rcx
ffffffff804159f9:	74 1d                	je     ffffffff80415a18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b8>
ffffffff804159fb:	48 89 c7             	mov    %rax,%rdi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff804159fe:	0f b6 07             	movzbl (%rdi),%eax
ffffffff80415a01:	3c 09                	cmp    $0x9,%al
ffffffff80415a03:	7f e3                	jg     ffffffff804159e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80415a05:	83 c0 30             	add    $0x30,%eax
ffffffff80415a08:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80415a0c:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff80415a0f:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff80415a13:	48 39 f9             	cmp    %rdi,%rcx
ffffffff80415a16:	75 e3                	jne    ffffffff804159fb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x29b>
  str[num_len + offset] = 0;
ffffffff80415a18:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80415a1d:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff80415a22:	e8 99 77 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80415a27:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80415a29:	48 85 c0             	test   %rax,%rax
ffffffff80415a2c:	0f 84 8e 08 00 00    	je     ffffffff804162c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
ffffffff80415a32:	4c 8b 25 27 86 00 00 	mov    0x8627(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80415a39:	48 8b 2d 28 86 00 00 	mov    0x8628(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415a40:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
ffffffff80415a45:	48 8b 1d 2c 86 00 00 	mov    0x862c(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415a4c:	48 8b 3d 1d 86 00 00 	mov    0x861d(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415a53:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80415a58:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415a5b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80415a5f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80415a63:	48 01 ea             	add    %rbp,%rdx
ffffffff80415a66:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80415a6d:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80415a74:	80 
ffffffff80415a75:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80415a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80415a80:	48 89 e9             	mov    %rbp,%rcx
ffffffff80415a83:	48 29 d9             	sub    %rbx,%rcx
ffffffff80415a86:	48 39 c1             	cmp    %rax,%rcx
ffffffff80415a89:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80415a8d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80415a90:	48 89 ce             	mov    %rcx,%rsi
ffffffff80415a93:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80415a97:	48 85 f6             	test   %rsi,%rsi
ffffffff80415a9a:	0f 84 30 07 00 00    	je     ffffffff804161d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
    size_t i = pos;
ffffffff80415aa0:	31 d2                	xor    %edx,%edx
ffffffff80415aa2:	eb 11                	jmp    ffffffff80415ab5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x355>
ffffffff80415aa4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80415aa8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415aac:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80415aaf:	0f 84 1b 07 00 00    	je     ffffffff804161d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
      if (str_[i] == c) {
ffffffff80415ab5:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff80415aba:	75 ec                	jne    ffffffff80415aa8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x348>
ffffffff80415abc:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415abf:	48 39 d0             	cmp    %rdx,%rax
ffffffff80415ac2:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415ac5:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80415ac9:	4c 39 e7             	cmp    %r12,%rdi
ffffffff80415acc:	0f 84 4e 06 00 00    	je     ffffffff80416120 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415ad2:	48 01 de             	add    %rbx,%rsi
ffffffff80415ad5:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80415ad8:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff80415adc:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80415adf:	0f 83 d9 06 00 00    	jae    ffffffff804161be <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa5e>
ffffffff80415ae5:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80415ae9:	4d 89 c5             	mov    %r8,%r13
ffffffff80415aec:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80415af0:	49 29 dd             	sub    %rbx,%r13
ffffffff80415af3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80415af8:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff80415aff:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80415b05:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff80415b0c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415b0e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80415b12:	48 39 de             	cmp    %rbx,%rsi
ffffffff80415b15:	75 e1                	jne    ffffffff80415af8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x398>
    if (current_col_ == num_cols_) {
ffffffff80415b17:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80415b1a:	0f 84 c0 05 00 00    	je     ffffffff804160e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x980>
    current_col_ = i;
ffffffff80415b20:	48 89 35 51 85 00 00 	mov    %rsi,0x8551(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415b27:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80415b2b:	0f 84 d1 05 00 00    	je     ffffffff80416102 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a2>
ffffffff80415b31:	48 85 f6             	test   %rsi,%rsi
ffffffff80415b34:	74 0a                	je     ffffffff80415b40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80415b36:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80415b3a:	0f 86 18 07 00 00    	jbe    ffffffff80416258 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xaf8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80415b40:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415b44:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415b47:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80415b4a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80415b4e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80415b51:	48 39 c8             	cmp    %rcx,%rax
ffffffff80415b54:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80415b58:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80415b5b:	48 85 c0             	test   %rax,%rax
ffffffff80415b5e:	0f 85 1c ff ff ff    	jne    ffffffff80415a80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x320>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415b64:	48 85 ff             	test   %rdi,%rdi
ffffffff80415b67:	74 5d                	je     ffffffff80415bc6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x466>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415b69:	48 8b 0d f8 84 00 00 	mov    0x84f8(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415b70:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415b77:	31 d2                	xor    %edx,%edx
ffffffff80415b79:	48 89 c8             	mov    %rcx,%rax
ffffffff80415b7c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80415b80:	48 f7 d8             	neg    %rax
ffffffff80415b83:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff80415b8a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415b8b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80415b90:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80415b94:	48 85 c9             	test   %rcx,%rcx
ffffffff80415b97:	74 1e                	je     ffffffff80415bb7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x457>
ffffffff80415b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80415ba0:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80415ba7:	f4 ff 
ffffffff80415ba9:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415bad:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415bb2:	48 39 c5             	cmp    %rax,%rbp
ffffffff80415bb5:	75 e9                	jne    ffffffff80415ba0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x440>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415bb7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415bbb:	48 89 e8             	mov    %rbp,%rax
ffffffff80415bbe:	4c 01 ce             	add    %r9,%rsi
ffffffff80415bc1:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80415bc4:	75 ca                	jne    ffffffff80415b90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x430>
    if (current_col_ != 0) {
ffffffff80415bc6:	48 85 db             	test   %rbx,%rbx
ffffffff80415bc9:	74 52                	je     ffffffff80415c1d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415bcb:	48 8b 35 96 84 00 00 	mov    0x8496(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415bd2:	48 85 f6             	test   %rsi,%rsi
ffffffff80415bd5:	74 46                	je     ffffffff80415c1d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415bd7:	48 89 f2             	mov    %rsi,%rdx
ffffffff80415bda:	48 0f af d7          	imul   %rdi,%rdx
ffffffff80415bde:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80415be2:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80415be6:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff80415bed:	00 
ffffffff80415bee:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80415bf5:	00 
ffffffff80415bf6:	48 f7 da             	neg    %rdx
ffffffff80415bf9:	48 01 f6             	add    %rsi,%rsi
ffffffff80415bfc:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80415c03:	80 
ffffffff80415c04:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415c08:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80415c0f:	ff 
ffffffff80415c10:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415c14:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415c18:	48 39 f0             	cmp    %rsi,%rax
ffffffff80415c1b:	75 eb                	jne    ffffffff80415c08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x4a8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80415c1d:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80415c24:	e8 97 75 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80415c29:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80415c2b:	48 85 c0             	test   %rax,%rax
ffffffff80415c2e:	0f 84 bc 06 00 00    	je     ffffffff804162f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb90>
ffffffff80415c34:	4c 8b 25 25 84 00 00 	mov    0x8425(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80415c3b:	48 8b 2d 26 84 00 00 	mov    0x8426(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415c42:	49 c7 c0 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r8
ffffffff80415c49:	48 8b 1d 28 84 00 00 	mov    0x8428(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415c50:	48 8b 3d 19 84 00 00 	mov    0x8419(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415c57:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80415c5c:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415c5f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80415c63:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80415c67:	48 01 ea             	add    %rbp,%rdx
ffffffff80415c6a:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80415c71:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80415c78:	80 
ffffffff80415c79:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80415c7e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80415c80:	48 89 e9             	mov    %rbp,%rcx
ffffffff80415c83:	48 89 c6             	mov    %rax,%rsi
ffffffff80415c86:	48 29 d9             	sub    %rbx,%rcx
ffffffff80415c89:	48 39 c1             	cmp    %rax,%rcx
ffffffff80415c8c:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80415c90:	48 39 c1             	cmp    %rax,%rcx
ffffffff80415c93:	48 0f 46 f1          	cmovbe %rcx,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80415c97:	48 85 f6             	test   %rsi,%rsi
ffffffff80415c9a:	0f 84 10 04 00 00    	je     ffffffff804160b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
    size_t i = pos;
ffffffff80415ca0:	31 d2                	xor    %edx,%edx
ffffffff80415ca2:	eb 11                	jmp    ffffffff80415cb5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x555>
ffffffff80415ca4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80415ca8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415cac:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80415caf:	0f 84 fb 03 00 00    	je     ffffffff804160b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
      if (str_[i] == c) {
ffffffff80415cb5:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff80415cba:	75 ec                	jne    ffffffff80415ca8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x548>
ffffffff80415cbc:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415cbf:	48 39 d0             	cmp    %rdx,%rax
ffffffff80415cc2:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415cc5:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80415cc9:	49 39 fc             	cmp    %rdi,%r12
ffffffff80415ccc:	0f 84 2e 03 00 00    	je     ffffffff80416000 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415cd2:	48 01 de             	add    %rbx,%rsi
ffffffff80415cd5:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80415cd8:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff80415cdc:	48 39 de             	cmp    %rbx,%rsi
ffffffff80415cdf:	0f 86 b9 03 00 00    	jbe    ffffffff8041609e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x93e>
ffffffff80415ce5:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80415ce9:	4d 89 c5             	mov    %r8,%r13
ffffffff80415cec:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff80415cf0:	49 29 dd             	sub    %rbx,%r13
ffffffff80415cf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80415cf8:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff80415cff:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff80415d05:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff80415d0c:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415d0e:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80415d12:	48 39 de             	cmp    %rbx,%rsi
ffffffff80415d15:	75 e1                	jne    ffffffff80415cf8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x598>
    if (current_col_ == num_cols_) {
ffffffff80415d17:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80415d1a:	0f 84 98 02 00 00    	je     ffffffff80415fb8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x858>
    current_col_ = i;
ffffffff80415d20:	48 89 35 51 83 00 00 	mov    %rsi,0x8351(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415d27:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80415d2b:	0f 84 a9 02 00 00    	je     ffffffff80415fda <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x87a>
ffffffff80415d31:	48 85 f6             	test   %rsi,%rsi
ffffffff80415d34:	74 0a                	je     ffffffff80415d40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80415d36:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80415d3a:	0f 86 c0 04 00 00    	jbe    ffffffff80416200 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80415d40:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415d44:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415d47:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80415d4a:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff80415d4e:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80415d51:	48 39 c1             	cmp    %rax,%rcx
ffffffff80415d54:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff80415d58:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff80415d5b:	48 85 c0             	test   %rax,%rax
ffffffff80415d5e:	0f 85 1c ff ff ff    	jne    ffffffff80415c80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415d64:	48 85 ff             	test   %rdi,%rdi
ffffffff80415d67:	74 5d                	je     ffffffff80415dc6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x666>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415d69:	48 8b 0d f8 82 00 00 	mov    0x82f8(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415d70:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415d77:	31 d2                	xor    %edx,%edx
ffffffff80415d79:	48 89 c8             	mov    %rcx,%rax
ffffffff80415d7c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80415d80:	48 f7 d8             	neg    %rax
ffffffff80415d83:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff80415d8a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415d8b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80415d90:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80415d94:	48 85 c9             	test   %rcx,%rcx
ffffffff80415d97:	74 1e                	je     ffffffff80415db7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x657>
ffffffff80415d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80415da0:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80415da7:	f4 ff 
ffffffff80415da9:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415dad:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415db2:	48 39 c5             	cmp    %rax,%rbp
ffffffff80415db5:	75 e9                	jne    ffffffff80415da0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x640>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415db7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415dbb:	48 89 e8             	mov    %rbp,%rax
ffffffff80415dbe:	4c 01 ce             	add    %r9,%rsi
ffffffff80415dc1:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80415dc4:	75 ca                	jne    ffffffff80415d90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x630>
    if (current_col_ != 0) {
ffffffff80415dc6:	48 85 db             	test   %rbx,%rbx
ffffffff80415dc9:	74 52                	je     ffffffff80415e1d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415dcb:	48 8b 35 96 82 00 00 	mov    0x8296(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415dd2:	48 85 f6             	test   %rsi,%rsi
ffffffff80415dd5:	74 46                	je     ffffffff80415e1d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415dd7:	48 89 f2             	mov    %rsi,%rdx
ffffffff80415dda:	48 0f af d7          	imul   %rdi,%rdx
ffffffff80415dde:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80415de2:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80415de6:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff80415ded:	00 
ffffffff80415dee:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80415df5:	00 
ffffffff80415df6:	48 f7 da             	neg    %rdx
ffffffff80415df9:	48 01 f6             	add    %rsi,%rsi
ffffffff80415dfc:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80415e03:	80 
ffffffff80415e04:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415e08:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff80415e0f:	ff 
ffffffff80415e10:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415e14:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415e18:	48 39 c6             	cmp    %rax,%rsi
ffffffff80415e1b:	75 eb                	jne    ffffffff80415e08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a8>
}
ffffffff80415e1d:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80415e21:	58                   	pop    %rax
ffffffff80415e22:	5a                   	pop    %rdx
ffffffff80415e23:	59                   	pop    %rcx
ffffffff80415e24:	5b                   	pop    %rbx
ffffffff80415e25:	5e                   	pop    %rsi
ffffffff80415e26:	5f                   	pop    %rdi
ffffffff80415e27:	5d                   	pop    %rbp
ffffffff80415e28:	41 58                	pop    %r8
ffffffff80415e2a:	41 59                	pop    %r9
ffffffff80415e2c:	41 5a                	pop    %r10
ffffffff80415e2e:	41 5b                	pop    %r11
ffffffff80415e30:	41 5c                	pop    %r12
ffffffff80415e32:	41 5d                	pop    %r13
ffffffff80415e34:	41 5e                	pop    %r14
ffffffff80415e36:	41 5f                	pop    %r15
ffffffff80415e38:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80415e3c:	48 cf                	iretq  
ffffffff80415e3e:	66 90                	xchg   %ax,%ax
      current_row_++;
ffffffff80415e40:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415e44:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80415e46:	48 c7 05 27 82 00 00 	movq   $0x0,0x8227(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415e4d:	00 00 00 00 
      current_row_++;
ffffffff80415e51:	48 89 3d 18 82 00 00 	mov    %rdi,0x8218(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415e58:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff80415e5c:	0f 85 5d fa ff ff    	jne    ffffffff804158bf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80415e62:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80415e65:	48 89 f5             	mov    %rsi,%rbp
ffffffff80415e68:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80415e6c:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff80415e6f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80415e72:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80415e76:	48 29 d0             	sub    %rdx,%rax
ffffffff80415e79:	e9 5c fa ff ff       	jmpq   ffffffff804158da <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x17a>
ffffffff80415e7e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80415e80:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80415e84:	76 5a                	jbe    ffffffff80415ee0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x780>
ffffffff80415e86:	41 bc a0 00 00 00    	mov    $0xa0,%r12d
ffffffff80415e8c:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80415e92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415e98:	45 31 d2             	xor    %r10d,%r10d
ffffffff80415e9b:	4d 8d bc 24 60 ff ff 	lea    -0xa0(%r12),%r15
ffffffff80415ea2:	ff 
ffffffff80415ea3:	4d 85 c0             	test   %r8,%r8
ffffffff80415ea6:	74 28                	je     ffffffff80415ed0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80415ea8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80415ead:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80415eb0:	43 0f b7 84 54 80 e0 	movzwl -0x7fbe1f80(%r12,%r10,2),%eax
ffffffff80415eb7:	41 80 
ffffffff80415eb9:	66 43 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%r10,2)
ffffffff80415ec0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415ec2:	49 83 c2 01          	add    $0x1,%r10
ffffffff80415ec6:	4d 39 c2             	cmp    %r8,%r10
ffffffff80415ec9:	75 e5                	jne    ffffffff80415eb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x750>
ffffffff80415ecb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80415ed0:	49 83 c6 01          	add    $0x1,%r14
ffffffff80415ed4:	49 81 c4 a0 00 00 00 	add    $0xa0,%r12
ffffffff80415edb:	4d 39 ee             	cmp    %r13,%r14
ffffffff80415ede:	75 b8                	jne    ffffffff80415e98 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x738>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415ee0:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80415ee5:	4d 85 c0             	test   %r8,%r8
ffffffff80415ee8:	74 18                	je     ffffffff80415f02 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a2>
ffffffff80415eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80415ef0:	66 41 c7 42 20 00 00 	movw   $0x0,0x20(%r10)
ffffffff80415ef7:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415efb:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff80415f00:	75 ee                	jne    ffffffff80415ef0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x790>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415f02:	48 01 ee             	add    %rbp,%rsi
      current_row_--;
ffffffff80415f05:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80415f09:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80415f0c:	48 89 3d 5d 81 00 00 	mov    %rdi,0x815d(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415f13:	49 0f 47 f0          	cmova  %r8,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415f17:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80415f1a:	0f 82 45 f9 ff ff    	jb     ffffffff80415865 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x105>
ffffffff80415f20:	48 89 ee             	mov    %rbp,%rsi
ffffffff80415f23:	e9 6e f9 ff ff       	jmpq   ffffffff80415896 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x136>
ffffffff80415f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80415f2f:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415f30:	48 89 ca             	mov    %rcx,%rdx
ffffffff80415f33:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    if (count == npos) {
ffffffff80415f3a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80415f3e:	0f 85 fb f8 ff ff    	jne    ffffffff8041583f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xdf>
ffffffff80415f44:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
ffffffff80415f4b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80415f52:	48 89 c6             	mov    %rax,%rsi
ffffffff80415f55:	e9 ef f8 ff ff       	jmpq   ffffffff80415849 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xe9>
ffffffff80415f5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415f60:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80415f63:	73 32                	jae    ffffffff80415f97 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff80415f65:	48 8d 2c bf          	lea    (%rdi,%rdi,4),%rbp
ffffffff80415f69:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80415f6d:	48 01 ee             	add    %rbp,%rsi
ffffffff80415f70:	4c 01 c5             	add    %r8,%rbp
ffffffff80415f73:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80415f7a:	80 
ffffffff80415f7b:	48 8d ac 2d 60 e0 41 	lea    -0x7fbe1fa0(%rbp,%rbp,1),%rbp
ffffffff80415f82:	80 
ffffffff80415f83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80415f88:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80415f8e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415f92:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80415f95:	75 f1                	jne    ffffffff80415f88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x828>
        current_row_++;
ffffffff80415f97:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80415f9b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80415f9d:	48 c7 05 d0 80 00 00 	movq   $0x0,0x80d0(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415fa4:	00 00 00 00 
        current_row_++;
ffffffff80415fa8:	48 89 3d c1 80 00 00 	mov    %rdi,0x80c1(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80415faf:	e9 0b f9 ff ff       	jmpq   ffffffff804158bf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80415fb4:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80415fb8:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415fbc:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80415fbe:	48 c7 05 af 80 00 00 	movq   $0x0,0x80af(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80415fc5:	00 00 00 00 
      current_row_++;
ffffffff80415fc9:	48 89 3d a0 80 00 00 	mov    %rdi,0x80a0(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415fd0:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80415fd4:	0f 85 66 fd ff ff    	jne    ffffffff80415d40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80415fda:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80415fdd:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415fe0:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80415fe4:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80415fe7:	48 39 c2             	cmp    %rax,%rdx
ffffffff80415fea:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80415fee:	48 29 d0             	sub    %rdx,%rax
ffffffff80415ff1:	e9 65 fd ff ff       	jmpq   ffffffff80415d5b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5fb>
ffffffff80415ff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80415ffd:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416000:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80416004:	76 5a                	jbe    ffffffff80416060 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x900>
ffffffff80416006:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff8041600c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80416012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416018:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041601b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80416022:	48 85 ed             	test   %rbp,%rbp
ffffffff80416025:	74 29                	je     ffffffff80416050 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8f0>
ffffffff80416027:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041602c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80416030:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80416037:	41 80 
ffffffff80416039:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80416040:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416042:	49 83 c1 01          	add    $0x1,%r9
ffffffff80416046:	4c 39 cd             	cmp    %r9,%rbp
ffffffff80416049:	75 e5                	jne    ffffffff80416030 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8d0>
ffffffff8041604b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416050:	49 83 c5 01          	add    $0x1,%r13
ffffffff80416054:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff8041605b:	49 39 fd             	cmp    %rdi,%r13
ffffffff8041605e:	75 b8                	jne    ffffffff80416018 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416060:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80416065:	48 85 ed             	test   %rbp,%rbp
ffffffff80416068:	74 16                	je     ffffffff80416080 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
ffffffff8041606a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416070:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80416077:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041607b:	4d 39 cf             	cmp    %r9,%r15
ffffffff8041607e:	75 f0                	jne    ffffffff80416070 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416080:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80416083:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80416087:	48 39 ee             	cmp    %rbp,%rsi
ffffffff8041608a:	48 89 3d df 7f 00 00 	mov    %rdi,0x7fdf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416091:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416095:	48 39 de             	cmp    %rbx,%rsi
ffffffff80416098:	0f 87 47 fc ff ff    	ja     ffffffff80415ce5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x585>
ffffffff8041609e:	48 89 de             	mov    %rbx,%rsi
ffffffff804160a1:	e9 71 fc ff ff       	jmpq   ffffffff80415d17 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b7>
ffffffff804160a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804160ad:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804160b0:	48 89 ca             	mov    %rcx,%rdx
ffffffff804160b3:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff804160ba:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff804160be:	0f 85 fb fb ff ff    	jne    ffffffff80415cbf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x55f>
ffffffff804160c4:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff804160cb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804160d2:	48 89 c6             	mov    %rax,%rsi
ffffffff804160d5:	e9 ef fb ff ff       	jmpq   ffffffff80415cc9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x569>
ffffffff804160da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff804160e0:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804160e4:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff804160e6:	48 c7 05 87 7f 00 00 	movq   $0x0,0x7f87(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804160ed:	00 00 00 00 
      current_row_++;
ffffffff804160f1:	48 89 3d 78 7f 00 00 	mov    %rdi,0x7f78(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804160f8:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff804160fc:	0f 85 3e fa ff ff    	jne    ffffffff80415b40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80416102:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80416105:	48 89 f3             	mov    %rsi,%rbx
ffffffff80416108:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff8041610c:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff8041610f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80416112:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff80416116:	48 29 d0             	sub    %rdx,%rax
ffffffff80416119:	e9 3d fa ff ff       	jmpq   ffffffff80415b5b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3fb>
ffffffff8041611e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416120:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80416124:	76 5a                	jbe    ffffffff80416180 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa20>
ffffffff80416126:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff8041612c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80416132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416138:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041613b:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80416142:	48 85 ed             	test   %rbp,%rbp
ffffffff80416145:	74 29                	je     ffffffff80416170 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff80416147:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff8041614c:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80416150:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80416157:	41 80 
ffffffff80416159:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80416160:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416162:	49 83 c1 01          	add    $0x1,%r9
ffffffff80416166:	49 39 e9             	cmp    %rbp,%r9
ffffffff80416169:	75 e5                	jne    ffffffff80416150 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
ffffffff8041616b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416170:	49 83 c5 01          	add    $0x1,%r13
ffffffff80416174:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff8041617b:	4d 39 e5             	cmp    %r12,%r13
ffffffff8041617e:	75 b8                	jne    ffffffff80416138 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416180:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80416185:	48 85 ed             	test   %rbp,%rbp
ffffffff80416188:	74 16                	je     ffffffff804161a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa40>
ffffffff8041618a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416190:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80416197:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041619b:	4d 39 f9             	cmp    %r15,%r9
ffffffff8041619e:	75 f0                	jne    ffffffff80416190 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa30>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804161a0:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff804161a3:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff804161a7:	48 39 ee             	cmp    %rbp,%rsi
ffffffff804161aa:	48 89 3d bf 7e 00 00 	mov    %rdi,0x7ebf(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804161b1:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804161b5:	48 39 f3             	cmp    %rsi,%rbx
ffffffff804161b8:	0f 82 27 f9 ff ff    	jb     ffffffff80415ae5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x385>
ffffffff804161be:	48 89 de             	mov    %rbx,%rsi
ffffffff804161c1:	e9 51 f9 ff ff       	jmpq   ffffffff80415b17 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff804161c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804161cd:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804161d0:	48 89 ca             	mov    %rcx,%rdx
ffffffff804161d3:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff804161da:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff804161de:	0f 85 db f8 ff ff    	jne    ffffffff80415abf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x35f>
ffffffff804161e4:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff804161eb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804161f2:	48 89 c6             	mov    %rax,%rsi
ffffffff804161f5:	e9 cf f8 ff ff       	jmpq   ffffffff80415ac9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x369>
ffffffff804161fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416200:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80416203:	76 32                	jbe    ffffffff80416237 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xad7>
ffffffff80416205:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80416209:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8041620d:	48 01 de             	add    %rbx,%rsi
ffffffff80416210:	48 01 eb             	add    %rbp,%rbx
ffffffff80416213:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff8041621a:	80 
ffffffff8041621b:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80416222:	80 
ffffffff80416223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80416228:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff8041622e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416232:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80416235:	75 f1                	jne    ffffffff80416228 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xac8>
        current_row_++;
ffffffff80416237:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8041623b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff8041623d:	48 c7 05 30 7e 00 00 	movq   $0x0,0x7e30(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416244:	00 00 00 00 
        current_row_++;
ffffffff80416248:	48 89 3d 21 7e 00 00 	mov    %rdi,0x7e21(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041624f:	e9 ec fa ff ff       	jmpq   ffffffff80415d40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80416254:	0f 1f 40 00          	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416258:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041625b:	76 32                	jbe    ffffffff8041628f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb2f>
ffffffff8041625d:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80416261:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80416265:	48 01 de             	add    %rbx,%rsi
ffffffff80416268:	48 01 eb             	add    %rbp,%rbx
ffffffff8041626b:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80416272:	80 
ffffffff80416273:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff8041627a:	80 
ffffffff8041627b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80416280:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80416286:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041628a:	48 39 de             	cmp    %rbx,%rsi
ffffffff8041628d:	75 f1                	jne    ffffffff80416280 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb20>
        current_row_++;
ffffffff8041628f:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80416293:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80416295:	48 c7 05 d8 7d 00 00 	movq   $0x0,0x7dd8(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041629c:	00 00 00 00 
        current_row_++;
ffffffff804162a0:	48 89 3d c9 7d 00 00 	mov    %rdi,0x7dc9(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804162a7:	e9 94 f8 ff ff       	jmpq   ffffffff80415b40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff804162ac:	0f 1f 40 00          	nopl   0x0(%rax)
    str[0] = 'E';
ffffffff804162b0:	66 c7 44 24 28 45 00 	movw   $0x45,0x28(%rsp)
ffffffff804162b7:	e9 61 f7 ff ff       	jmpq   ffffffff80415a1d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bd>
ffffffff804162bc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804162c0:	48 8b 1d b1 7d 00 00 	mov    0x7db1(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804162c7:	48 8b 3d a2 7d 00 00 	mov    0x7da2(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804162ce:	e9 91 f8 ff ff       	jmpq   ffffffff80415b64 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x404>
ffffffff804162d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804162d8:	48 8b 2d 99 7d 00 00 	mov    0x7d99(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804162df:	48 8b 3d 8a 7d 00 00 	mov    0x7d8a(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804162e6:	e9 f8 f5 ff ff       	jmpq   ffffffff804158e3 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x183>
ffffffff804162eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804162f0:	48 8b 3d 79 7d 00 00 	mov    0x7d79(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804162f7:	48 8b 1d 7a 7d 00 00 	mov    0x7d7a(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804162fe:	e9 61 fa ff ff       	jmpq   ffffffff80415d64 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x604>
ffffffff80416303:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041630a:	00 00 00 00 
ffffffff8041630e:	66 90                	xchg   %ax,%ax

ffffffff80416310 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80416310:	41 57                	push   %r15
ffffffff80416312:	41 56                	push   %r14
ffffffff80416314:	41 55                	push   %r13
ffffffff80416316:	41 54                	push   %r12
ffffffff80416318:	41 53                	push   %r11
ffffffff8041631a:	41 52                	push   %r10
ffffffff8041631c:	41 51                	push   %r9
ffffffff8041631e:	41 50                	push   %r8
ffffffff80416320:	55                   	push   %rbp
ffffffff80416321:	57                   	push   %rdi
ffffffff80416322:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80416323:	be 11 00 00 00       	mov    $0x11,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80416328:	53                   	push   %rbx
ffffffff80416329:	51                   	push   %rcx
ffffffff8041632a:	52                   	push   %rdx
ffffffff8041632b:	50                   	push   %rax
ffffffff8041632c:	48 83 ec 58          	sub    $0x58,%rsp
ffffffff80416330:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
ffffffff80416337:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80416338:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
ffffffff8041633f:	00 
ffffffff80416340:	fc                   	cld    
ffffffff80416341:	e8 8a 79 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEm>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80416346:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff8041634d:	e8 6e 6e ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80416352:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff80416354:	48 85 c0             	test   %rax,%rax
ffffffff80416357:	0f 84 2b 0b 00 00    	je     ffffffff80416e88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb78>
ffffffff8041635d:	4c 8b 2d fc 7c 00 00 	mov    0x7cfc(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80416364:	4c 8b 05 fd 7c 00 00 	mov    0x7cfd(%rip),%r8        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041636b:	49 c7 c1 66 b8 41 80 	mov    $0xffffffff8041b866,%r9
ffffffff80416372:	48 8b 2d ff 7c 00 00 	mov    0x7cff(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416379:	48 8b 3d f0 7c 00 00 	mov    0x7cf0(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416380:	4b 8d 54 ad fb       	lea    -0x5(%r13,%r13,4),%rdx
ffffffff80416385:	48 89 d6             	mov    %rdx,%rsi
ffffffff80416388:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041638c:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80416390:	4c 01 c2             	add    %r8,%rdx
ffffffff80416393:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff8041639a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041639f:	48 8d 8c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rcx
ffffffff804163a6:	80 
ffffffff804163a7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff804163ac:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804163b0:	4c 89 c1             	mov    %r8,%rcx
ffffffff804163b3:	48 29 e9             	sub    %rbp,%rcx
ffffffff804163b6:	48 39 c1             	cmp    %rax,%rcx
ffffffff804163b9:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804163bd:	48 39 c8             	cmp    %rcx,%rax
ffffffff804163c0:	48 89 ce             	mov    %rcx,%rsi
ffffffff804163c3:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff804163c7:	48 85 f6             	test   %rsi,%rsi
ffffffff804163ca:	0f 84 10 07 00 00    	je     ffffffff80416ae0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
    size_t i = pos;
ffffffff804163d0:	31 d2                	xor    %edx,%edx
ffffffff804163d2:	eb 11                	jmp    ffffffff804163e5 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xd5>
ffffffff804163d4:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff804163d8:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804163dc:	48 39 f2             	cmp    %rsi,%rdx
ffffffff804163df:	0f 84 fb 06 00 00    	je     ffffffff80416ae0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7d0>
      if (str_[i] == c) {
ffffffff804163e5:	41 80 3c 11 0a       	cmpb   $0xa,(%r9,%rdx,1)
ffffffff804163ea:	75 ec                	jne    ffffffff804163d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xc8>
ffffffff804163ec:	49 89 d3             	mov    %rdx,%r11
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804163ef:	48 39 d0             	cmp    %rdx,%rax
ffffffff804163f2:	48 89 d6             	mov    %rdx,%rsi
ffffffff804163f5:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff804163f9:	4c 39 ef             	cmp    %r13,%rdi
ffffffff804163fc:	0f 84 2e 06 00 00    	je     ffffffff80416a30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416402:	48 01 ee             	add    %rbp,%rsi
ffffffff80416405:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80416408:	49 0f 47 f0          	cmova  %r8,%rsi
ffffffff8041640c:	48 39 f5             	cmp    %rsi,%rbp
ffffffff8041640f:	0f 83 bb 06 00 00    	jae    ffffffff80416ad0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c0>
ffffffff80416415:	4c 8d 14 bf          	lea    (%rdi,%rdi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80416419:	4d 89 ce             	mov    %r9,%r14
ffffffff8041641c:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff80416420:	49 29 ee             	sub    %rbp,%r14
ffffffff80416423:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80416428:	66 45 0f be 24 2e    	movsbw (%r14,%rbp,1),%r12w
ffffffff8041642e:	66 41 81 cc 00 0f    	or     $0xf00,%r12w
ffffffff80416434:	66 45 89 a4 6a 80 e0 	mov    %r12w,-0x7fbe1f80(%r10,%rbp,2)
ffffffff8041643b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041643d:	48 83 c5 01          	add    $0x1,%rbp
ffffffff80416441:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80416444:	75 e2                	jne    ffffffff80416428 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x118>
    if (current_col_ == num_cols_) {
ffffffff80416446:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80416449:	0f 84 a1 05 00 00    	je     ffffffff804169f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e0>
    current_col_ = i;
ffffffff8041644f:	48 89 35 22 7c 00 00 	mov    %rsi,0x7c22(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416456:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff8041645a:	0f 84 b2 05 00 00    	je     ffffffff80416a12 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x702>
ffffffff80416460:	48 85 f6             	test   %rsi,%rsi
ffffffff80416463:	74 0a                	je     ffffffff8041646f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80416465:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff80416469:	0f 86 a1 06 00 00    	jbe    ffffffff80416b10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x800>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041646f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80416473:	48 89 f5             	mov    %rsi,%rbp
ffffffff80416476:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80416479:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff8041647d:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff80416480:	48 39 c8             	cmp    %rcx,%rax
ffffffff80416483:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80416487:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff8041648a:	48 85 c0             	test   %rax,%rax
ffffffff8041648d:	0f 85 1d ff ff ff    	jne    ffffffff804163b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416493:	48 85 ff             	test   %rdi,%rdi
ffffffff80416496:	74 5e                	je     ffffffff804164f6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1e6>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416498:	48 8b 0d c9 7b 00 00 	mov    0x7bc9(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041649f:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804164a6:	31 d2                	xor    %edx,%edx
ffffffff804164a8:	48 89 c8             	mov    %rcx,%rax
ffffffff804164ab:	4c 8d 1c 09          	lea    (%rcx,%rcx,1),%r11
ffffffff804164af:	48 f7 d8             	neg    %rax
ffffffff804164b2:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff804164b9:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804164ba:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff804164bf:	90                   	nop
ffffffff804164c0:	4e 8d 04 18          	lea    (%rax,%r11,1),%r8
ffffffff804164c4:	48 85 c9             	test   %rcx,%rcx
ffffffff804164c7:	74 1e                	je     ffffffff804164e7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d7>
ffffffff804164c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804164d0:	44 0f b7 8c 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r9d
ffffffff804164d7:	f4 ff 
ffffffff804164d9:	48 83 c0 02          	add    $0x2,%rax
ffffffff804164dd:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804164e2:	4c 39 c0             	cmp    %r8,%rax
ffffffff804164e5:	75 e9                	jne    ffffffff804164d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804164e7:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804164eb:	4c 89 c0             	mov    %r8,%rax
ffffffff804164ee:	4c 01 d6             	add    %r10,%rsi
ffffffff804164f1:	48 39 fa             	cmp    %rdi,%rdx
ffffffff804164f4:	75 ca                	jne    ffffffff804164c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1b0>
    if (current_col_ != 0) {
ffffffff804164f6:	48 85 ed             	test   %rbp,%rbp
ffffffff804164f9:	74 52                	je     ffffffff8041654d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804164fb:	48 8b 35 66 7b 00 00 	mov    0x7b66(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416502:	48 85 f6             	test   %rsi,%rsi
ffffffff80416505:	74 46                	je     ffffffff8041654d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x23d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80416507:	48 89 fa             	mov    %rdi,%rdx
ffffffff8041650a:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff8041650e:	48 0f af d6          	imul   %rsi,%rdx
ffffffff80416512:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80416516:	48 8d b4 32 00 c0 05 	lea    0x5c000(%rdx,%rsi,1),%rsi
ffffffff8041651d:	00 
ffffffff8041651e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80416525:	00 
ffffffff80416526:	48 f7 da             	neg    %rdx
ffffffff80416529:	48 01 f6             	add    %rsi,%rsi
ffffffff8041652c:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff80416533:	80 
ffffffff80416534:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80416538:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff8041653f:	ff 
ffffffff80416540:	48 83 c0 02          	add    $0x2,%rax
ffffffff80416544:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416548:	48 39 f0             	cmp    %rsi,%rax
ffffffff8041654b:	75 eb                	jne    ffffffff80416538 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x228>
  size_t num_len = 0;
ffffffff8041654d:	31 d2                	xor    %edx,%edx
ffffffff8041654f:	90                   	nop
    buffer[i] = num % base;
ffffffff80416550:	48 89 d8             	mov    %rbx,%rax
    num_len++;
ffffffff80416553:	48 83 c2 01          	add    $0x1,%rdx
    buffer[i] = num % base;
ffffffff80416557:	83 e0 0f             	and    $0xf,%eax
ffffffff8041655a:	88 44 14 3b          	mov    %al,0x3b(%rsp,%rdx,1)
ffffffff8041655e:	48 89 d8             	mov    %rbx,%rax
    num /= base;
ffffffff80416561:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80416565:	48 83 f8 0f          	cmp    $0xf,%rax
ffffffff80416569:	76 06                	jbe    ffffffff80416571 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x261>
  for (size_t i = 0; i < size; i++) {
ffffffff8041656b:	48 83 fa 14          	cmp    $0x14,%rdx
ffffffff8041656f:	75 df                	jne    ffffffff80416550 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
  if (num != 0) {
ffffffff80416571:	48 85 db             	test   %rbx,%rbx
ffffffff80416574:	0f 85 e6 08 00 00    	jne    ffffffff80416e60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb50>
    str[offset++] = '0';
ffffffff8041657a:	66 c7 44 24 28 30 78 	movw   $0x7830,0x28(%rsp)
ffffffff80416581:	48 8d 4c 24 3c       	lea    0x3c(%rsp),%rcx
ffffffff80416586:	48 8d 7c 14 3b       	lea    0x3b(%rsp,%rdx,1),%rdi
ffffffff8041658b:	48 8d 74 24 2a       	lea    0x2a(%rsp),%rsi
ffffffff80416590:	eb 1c                	jmp    ffffffff804165ae <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x29e>
ffffffff80416592:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80416598:	83 c0 37             	add    $0x37,%eax
ffffffff8041659b:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041659f:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff804165a2:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff804165a6:	48 39 f9             	cmp    %rdi,%rcx
ffffffff804165a9:	74 1d                	je     ffffffff804165c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b8>
ffffffff804165ab:	48 89 c7             	mov    %rax,%rdi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff804165ae:	0f b6 07             	movzbl (%rdi),%eax
ffffffff804165b1:	3c 09                	cmp    $0x9,%al
ffffffff804165b3:	7f e3                	jg     ffffffff80416598 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff804165b5:	83 c0 30             	add    $0x30,%eax
ffffffff804165b8:	48 83 c6 01          	add    $0x1,%rsi
ffffffff804165bc:	88 46 ff             	mov    %al,-0x1(%rsi)
ffffffff804165bf:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  for (size_t i = 0; i < num_len; i++) {
ffffffff804165c3:	48 39 f9             	cmp    %rdi,%rcx
ffffffff804165c6:	75 e3                	jne    ffffffff804165ab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x29b>
  str[num_len + offset] = 0;
ffffffff804165c8:	c6 44 14 2a 00       	movb   $0x0,0x2a(%rsp,%rdx,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804165cd:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
ffffffff804165d2:	e8 e9 6b ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804165d7:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff804165d9:	48 85 c0             	test   %rax,%rax
ffffffff804165dc:	0f 84 8e 08 00 00    	je     ffffffff80416e70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
ffffffff804165e2:	4c 8b 25 77 7a 00 00 	mov    0x7a77(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804165e9:	48 8b 2d 78 7a 00 00 	mov    0x7a78(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804165f0:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
ffffffff804165f5:	48 8b 1d 7c 7a 00 00 	mov    0x7a7c(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804165fc:	48 8b 3d 6d 7a 00 00 	mov    0x7a6d(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416603:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff80416608:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041660b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041660f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80416613:	48 01 ea             	add    %rbp,%rdx
ffffffff80416616:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff8041661d:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80416624:	80 
ffffffff80416625:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041662a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80416630:	48 89 e9             	mov    %rbp,%rcx
ffffffff80416633:	48 29 d9             	sub    %rbx,%rcx
ffffffff80416636:	48 39 c1             	cmp    %rax,%rcx
ffffffff80416639:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041663d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80416640:	48 89 ce             	mov    %rcx,%rsi
ffffffff80416643:	48 0f 46 f0          	cmovbe %rax,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80416647:	48 85 f6             	test   %rsi,%rsi
ffffffff8041664a:	0f 84 30 07 00 00    	je     ffffffff80416d80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
    size_t i = pos;
ffffffff80416650:	31 d2                	xor    %edx,%edx
ffffffff80416652:	eb 11                	jmp    ffffffff80416665 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x355>
ffffffff80416654:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80416658:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041665c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041665f:	0f 84 1b 07 00 00    	je     ffffffff80416d80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa70>
      if (str_[i] == c) {
ffffffff80416665:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff8041666a:	75 ec                	jne    ffffffff80416658 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x348>
ffffffff8041666c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041666f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80416672:	48 89 d6             	mov    %rdx,%rsi
ffffffff80416675:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80416679:	4c 39 e7             	cmp    %r12,%rdi
ffffffff8041667c:	0f 84 4e 06 00 00    	je     ffffffff80416cd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416682:	48 01 de             	add    %rbx,%rsi
ffffffff80416685:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80416688:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff8041668c:	48 39 f3             	cmp    %rsi,%rbx
ffffffff8041668f:	0f 83 d9 06 00 00    	jae    ffffffff80416d6e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa5e>
ffffffff80416695:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80416699:	4d 89 c5             	mov    %r8,%r13
ffffffff8041669c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff804166a0:	49 29 dd             	sub    %rbx,%r13
ffffffff804166a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804166a8:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff804166af:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff804166b5:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff804166bc:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804166be:	48 83 c3 01          	add    $0x1,%rbx
ffffffff804166c2:	48 39 de             	cmp    %rbx,%rsi
ffffffff804166c5:	75 e1                	jne    ffffffff804166a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x398>
    if (current_col_ == num_cols_) {
ffffffff804166c7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804166ca:	0f 84 c0 05 00 00    	je     ffffffff80416c90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x980>
    current_col_ = i;
ffffffff804166d0:	48 89 35 a1 79 00 00 	mov    %rsi,0x79a1(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804166d7:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff804166db:	0f 84 d1 05 00 00    	je     ffffffff80416cb2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a2>
ffffffff804166e1:	48 85 f6             	test   %rsi,%rsi
ffffffff804166e4:	74 0a                	je     ffffffff804166f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff804166e6:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804166ea:	0f 86 18 07 00 00    	jbe    ffffffff80416e08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xaf8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804166f0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804166f4:	48 89 f3             	mov    %rsi,%rbx
ffffffff804166f7:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804166fa:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804166fe:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80416701:	48 39 c8             	cmp    %rcx,%rax
ffffffff80416704:	48 0f 46 c8          	cmovbe %rax,%rcx
ffffffff80416708:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff8041670b:	48 85 c0             	test   %rax,%rax
ffffffff8041670e:	0f 85 1c ff ff ff    	jne    ffffffff80416630 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x320>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416714:	48 85 ff             	test   %rdi,%rdi
ffffffff80416717:	74 5d                	je     ffffffff80416776 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x466>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416719:	48 8b 0d 48 79 00 00 	mov    0x7948(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416720:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416727:	31 d2                	xor    %edx,%edx
ffffffff80416729:	48 89 c8             	mov    %rcx,%rax
ffffffff8041672c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80416730:	48 f7 d8             	neg    %rax
ffffffff80416733:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff8041673a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041673b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80416740:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80416744:	48 85 c9             	test   %rcx,%rcx
ffffffff80416747:	74 1e                	je     ffffffff80416767 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x457>
ffffffff80416749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80416750:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80416757:	f4 ff 
ffffffff80416759:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041675d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416762:	48 39 c5             	cmp    %rax,%rbp
ffffffff80416765:	75 e9                	jne    ffffffff80416750 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x440>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416767:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041676b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041676e:	4c 01 ce             	add    %r9,%rsi
ffffffff80416771:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80416774:	75 ca                	jne    ffffffff80416740 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x430>
    if (current_col_ != 0) {
ffffffff80416776:	48 85 db             	test   %rbx,%rbx
ffffffff80416779:	74 52                	je     ffffffff804167cd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041677b:	48 8b 35 e6 78 00 00 	mov    0x78e6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416782:	48 85 f6             	test   %rsi,%rsi
ffffffff80416785:	74 46                	je     ffffffff804167cd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x4bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80416787:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041678a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041678e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80416792:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80416796:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041679d:	00 
ffffffff8041679e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff804167a5:	00 
ffffffff804167a6:	48 f7 da             	neg    %rdx
ffffffff804167a9:	48 01 f6             	add    %rsi,%rsi
ffffffff804167ac:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff804167b3:	80 
ffffffff804167b4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804167b8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff804167bf:	ff 
ffffffff804167c0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804167c4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804167c8:	48 39 f0             	cmp    %rsi,%rax
ffffffff804167cb:	75 eb                	jne    ffffffff804167b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x4a8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804167cd:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff804167d4:	e8 e7 69 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804167d9:	89 c0                	mov    %eax,%eax
    while (!s.empty()) {
ffffffff804167db:	48 85 c0             	test   %rax,%rax
ffffffff804167de:	0f 84 bc 06 00 00    	je     ffffffff80416ea0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb90>
ffffffff804167e4:	4c 8b 25 75 78 00 00 	mov    0x7875(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804167eb:	48 8b 2d 76 78 00 00 	mov    0x7876(%rip),%rbp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804167f2:	49 c7 c0 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r8
ffffffff804167f9:	48 8b 1d 78 78 00 00 	mov    0x7878(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416800:	48 8b 3d 69 78 00 00 	mov    0x7869(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416807:	4b 8d 54 a4 fb       	lea    -0x5(%r12,%r12,4),%rdx
ffffffff8041680c:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041680f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80416813:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80416817:	48 01 ea             	add    %rbp,%rdx
ffffffff8041681a:	48 8d 8e 60 e0 41 80 	lea    -0x7fbe1fa0(%rsi),%rcx
ffffffff80416821:	4c 8d bc 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%r15
ffffffff80416828:	80 
ffffffff80416829:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff8041682e:	66 90                	xchg   %ax,%ax
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80416830:	48 89 e9             	mov    %rbp,%rcx
ffffffff80416833:	48 89 c6             	mov    %rax,%rsi
ffffffff80416836:	48 29 d9             	sub    %rbx,%rcx
ffffffff80416839:	48 39 c1             	cmp    %rax,%rcx
ffffffff8041683c:	48 0f 47 c8          	cmova  %rax,%rcx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80416840:	48 39 c1             	cmp    %rax,%rcx
ffffffff80416843:	48 0f 46 f1          	cmovbe %rcx,%rsi
    for (; i < min(size_, pos + count); i++) {
ffffffff80416847:	48 85 f6             	test   %rsi,%rsi
ffffffff8041684a:	0f 84 10 04 00 00    	je     ffffffff80416c60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
    size_t i = pos;
ffffffff80416850:	31 d2                	xor    %edx,%edx
ffffffff80416852:	eb 11                	jmp    ffffffff80416865 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x555>
ffffffff80416854:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80416858:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041685c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041685f:	0f 84 fb 03 00 00    	je     ffffffff80416c60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x950>
      if (str_[i] == c) {
ffffffff80416865:	41 80 3c 10 0a       	cmpb   $0xa,(%r8,%rdx,1)
ffffffff8041686a:	75 ec                	jne    ffffffff80416858 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x548>
ffffffff8041686c:	49 89 d2             	mov    %rdx,%r10
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041686f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80416872:	48 89 d6             	mov    %rdx,%rsi
ffffffff80416875:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80416879:	49 39 fc             	cmp    %rdi,%r12
ffffffff8041687c:	0f 84 2e 03 00 00    	je     ffffffff80416bb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416882:	48 01 de             	add    %rbx,%rsi
ffffffff80416885:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80416888:	48 0f 47 f5          	cmova  %rbp,%rsi
ffffffff8041688c:	48 39 de             	cmp    %rbx,%rsi
ffffffff8041688f:	0f 86 b9 03 00 00    	jbe    ffffffff80416c4e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x93e>
ffffffff80416895:	4c 8d 0c bf          	lea    (%rdi,%rdi,4),%r9
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80416899:	4d 89 c5             	mov    %r8,%r13
ffffffff8041689c:	49 c1 e1 05          	shl    $0x5,%r9
ffffffff804168a0:	49 29 dd             	sub    %rbx,%r13
ffffffff804168a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804168a8:	66 45 0f be 5c 1d 00 	movsbw 0x0(%r13,%rbx,1),%r11w
ffffffff804168af:	66 41 81 cb 00 0f    	or     $0xf00,%r11w
ffffffff804168b5:	66 45 89 9c 59 80 e0 	mov    %r11w,-0x7fbe1f80(%r9,%rbx,2)
ffffffff804168bc:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804168be:	48 83 c3 01          	add    $0x1,%rbx
ffffffff804168c2:	48 39 de             	cmp    %rbx,%rsi
ffffffff804168c5:	75 e1                	jne    ffffffff804168a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x598>
    if (current_col_ == num_cols_) {
ffffffff804168c7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff804168ca:	0f 84 98 02 00 00    	je     ffffffff80416b68 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x858>
    current_col_ = i;
ffffffff804168d0:	48 89 35 a1 77 00 00 	mov    %rsi,0x77a1(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804168d7:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff804168db:	0f 84 a9 02 00 00    	je     ffffffff80416b8a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x87a>
ffffffff804168e1:	48 85 f6             	test   %rsi,%rsi
ffffffff804168e4:	74 0a                	je     ffffffff804168f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff804168e6:	48 83 ff 18          	cmp    $0x18,%rdi
ffffffff804168ea:	0f 86 c0 04 00 00    	jbe    ffffffff80416db0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804168f0:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804168f4:	48 89 f3             	mov    %rsi,%rbx
ffffffff804168f7:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804168fa:	48 0f 46 ca          	cmovbe %rdx,%rcx
    str_ += n;
ffffffff804168fe:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80416901:	48 39 c1             	cmp    %rax,%rcx
ffffffff80416904:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff80416908:	48 29 c8             	sub    %rcx,%rax
    while (!s.empty()) {
ffffffff8041690b:	48 85 c0             	test   %rax,%rax
ffffffff8041690e:	0f 85 1c ff ff ff    	jne    ffffffff80416830 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416914:	48 85 ff             	test   %rdi,%rdi
ffffffff80416917:	74 5d                	je     ffffffff80416976 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x666>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416919:	48 8b 0d 48 77 00 00 	mov    0x7748(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416920:	48 c7 c6 60 e0 41 80 	mov    $0xffffffff8041e060,%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416927:	31 d2                	xor    %edx,%edx
ffffffff80416929:	48 89 c8             	mov    %rcx,%rax
ffffffff8041692c:	4c 8d 14 09          	lea    (%rcx,%rcx,1),%r10
ffffffff80416930:	48 f7 d8             	neg    %rax
ffffffff80416933:	4c 8d 8c 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r9
ffffffff8041693a:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041693b:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80416940:	49 8d 2c 02          	lea    (%r10,%rax,1),%rbp
ffffffff80416944:	48 85 c9             	test   %rcx,%rcx
ffffffff80416947:	74 1e                	je     ffffffff80416967 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x657>
ffffffff80416949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80416950:	44 0f b7 84 06 20 80 	movzwl -0xb7fe0(%rsi,%rax,1),%r8d
ffffffff80416957:	f4 ff 
ffffffff80416959:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041695d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416962:	48 39 c5             	cmp    %rax,%rbp
ffffffff80416965:	75 e9                	jne    ffffffff80416950 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x640>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416967:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041696b:	48 89 e8             	mov    %rbp,%rax
ffffffff8041696e:	4c 01 ce             	add    %r9,%rsi
ffffffff80416971:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80416974:	75 ca                	jne    ffffffff80416940 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x630>
    if (current_col_ != 0) {
ffffffff80416976:	48 85 db             	test   %rbx,%rbx
ffffffff80416979:	74 52                	je     ffffffff804169cd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041697b:	48 8b 35 e6 76 00 00 	mov    0x76e6(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416982:	48 85 f6             	test   %rsi,%rsi
ffffffff80416985:	74 46                	je     ffffffff804169cd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6bd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80416987:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041698a:	48 0f af d7          	imul   %rdi,%rdx
ffffffff8041698e:	48 8d 3c bf          	lea    (%rdi,%rdi,4),%rdi
ffffffff80416992:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80416996:	48 8d b4 16 00 c0 05 	lea    0x5c000(%rsi,%rdx,1),%rsi
ffffffff8041699d:	00 
ffffffff8041699e:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff804169a5:	00 
ffffffff804169a6:	48 f7 da             	neg    %rdx
ffffffff804169a9:	48 01 f6             	add    %rsi,%rsi
ffffffff804169ac:	48 8d bc 57 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdx,2),%rdi
ffffffff804169b3:	80 
ffffffff804169b4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804169b8:	0f b7 94 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%edx
ffffffff804169bf:	ff 
ffffffff804169c0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804169c4:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804169c8:	48 39 c6             	cmp    %rax,%rsi
ffffffff804169cb:	75 eb                	jne    ffffffff804169b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a8>
}
ffffffff804169cd:	48 83 c4 58          	add    $0x58,%rsp
ffffffff804169d1:	58                   	pop    %rax
ffffffff804169d2:	5a                   	pop    %rdx
ffffffff804169d3:	59                   	pop    %rcx
ffffffff804169d4:	5b                   	pop    %rbx
ffffffff804169d5:	5e                   	pop    %rsi
ffffffff804169d6:	5f                   	pop    %rdi
ffffffff804169d7:	5d                   	pop    %rbp
ffffffff804169d8:	41 58                	pop    %r8
ffffffff804169da:	41 59                	pop    %r9
ffffffff804169dc:	41 5a                	pop    %r10
ffffffff804169de:	41 5b                	pop    %r11
ffffffff804169e0:	41 5c                	pop    %r12
ffffffff804169e2:	41 5d                	pop    %r13
ffffffff804169e4:	41 5e                	pop    %r14
ffffffff804169e6:	41 5f                	pop    %r15
ffffffff804169e8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff804169ec:	48 cf                	iretq  
ffffffff804169ee:	66 90                	xchg   %ax,%ax
      current_row_++;
ffffffff804169f0:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804169f4:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff804169f6:	48 c7 05 77 76 00 00 	movq   $0x0,0x7677(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804169fd:	00 00 00 00 
      current_row_++;
ffffffff80416a01:	48 89 3d 68 76 00 00 	mov    %rdi,0x7668(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416a08:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
ffffffff80416a0c:	0f 85 5d fa ff ff    	jne    ffffffff8041646f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80416a12:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80416a15:	48 89 f5             	mov    %rsi,%rbp
ffffffff80416a18:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80416a1c:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff80416a1f:	48 39 c2             	cmp    %rax,%rdx
ffffffff80416a22:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80416a26:	48 29 d0             	sub    %rdx,%rax
ffffffff80416a29:	e9 5c fa ff ff       	jmpq   ffffffff8041648a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x17a>
ffffffff80416a2e:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416a30:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80416a34:	76 5a                	jbe    ffffffff80416a90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x780>
ffffffff80416a36:	41 bc a0 00 00 00    	mov    $0xa0,%r12d
ffffffff80416a3c:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80416a42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416a48:	45 31 d2             	xor    %r10d,%r10d
ffffffff80416a4b:	4d 8d bc 24 60 ff ff 	lea    -0xa0(%r12),%r15
ffffffff80416a52:	ff 
ffffffff80416a53:	4d 85 c0             	test   %r8,%r8
ffffffff80416a56:	74 28                	je     ffffffff80416a80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80416a58:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80416a5d:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80416a60:	43 0f b7 84 54 80 e0 	movzwl -0x7fbe1f80(%r12,%r10,2),%eax
ffffffff80416a67:	41 80 
ffffffff80416a69:	66 43 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%r10,2)
ffffffff80416a70:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416a72:	49 83 c2 01          	add    $0x1,%r10
ffffffff80416a76:	4d 39 c2             	cmp    %r8,%r10
ffffffff80416a79:	75 e5                	jne    ffffffff80416a60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x750>
ffffffff80416a7b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416a80:	49 83 c6 01          	add    $0x1,%r14
ffffffff80416a84:	49 81 c4 a0 00 00 00 	add    $0xa0,%r12
ffffffff80416a8b:	4d 39 ee             	cmp    %r13,%r14
ffffffff80416a8e:	75 b8                	jne    ffffffff80416a48 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x738>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416a90:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80416a95:	4d 85 c0             	test   %r8,%r8
ffffffff80416a98:	74 18                	je     ffffffff80416ab2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a2>
ffffffff80416a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416aa0:	66 41 c7 42 20 00 00 	movw   $0x0,0x20(%r10)
ffffffff80416aa7:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416aab:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff80416ab0:	75 ee                	jne    ffffffff80416aa0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x790>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416ab2:	48 01 ee             	add    %rbp,%rsi
      current_row_--;
ffffffff80416ab5:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80416ab9:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80416abc:	48 89 3d ad 75 00 00 	mov    %rdi,0x75ad(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416ac3:	49 0f 47 f0          	cmova  %r8,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416ac7:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80416aca:	0f 82 45 f9 ff ff    	jb     ffffffff80416415 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x105>
ffffffff80416ad0:	48 89 ee             	mov    %rbp,%rsi
ffffffff80416ad3:	e9 6e f9 ff ff       	jmpq   ffffffff80416446 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x136>
ffffffff80416ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80416adf:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80416ae0:	48 89 ca             	mov    %rcx,%rdx
ffffffff80416ae3:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    if (count == npos) {
ffffffff80416aea:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80416aee:	0f 85 fb f8 ff ff    	jne    ffffffff804163ef <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xdf>
ffffffff80416af4:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
ffffffff80416afb:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80416b02:	48 89 c6             	mov    %rax,%rsi
ffffffff80416b05:	e9 ef f8 ff ff       	jmpq   ffffffff804163f9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xe9>
ffffffff80416b0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416b10:	4c 39 c6             	cmp    %r8,%rsi
ffffffff80416b13:	73 32                	jae    ffffffff80416b47 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x837>
ffffffff80416b15:	48 8d 2c bf          	lea    (%rdi,%rdi,4),%rbp
ffffffff80416b19:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80416b1d:	48 01 ee             	add    %rbp,%rsi
ffffffff80416b20:	4c 01 c5             	add    %r8,%rbp
ffffffff80416b23:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80416b2a:	80 
ffffffff80416b2b:	48 8d ac 2d 60 e0 41 	lea    -0x7fbe1fa0(%rbp,%rbp,1),%rbp
ffffffff80416b32:	80 
ffffffff80416b33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80416b38:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80416b3e:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416b42:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80416b45:	75 f1                	jne    ffffffff80416b38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x828>
        current_row_++;
ffffffff80416b47:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80416b4b:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80416b4d:	48 c7 05 20 75 00 00 	movq   $0x0,0x7520(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416b54:	00 00 00 00 
        current_row_++;
ffffffff80416b58:	48 89 3d 11 75 00 00 	mov    %rdi,0x7511(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416b5f:	e9 0b f9 ff ff       	jmpq   ffffffff8041646f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x15f>
ffffffff80416b64:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80416b68:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416b6c:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80416b6e:	48 c7 05 ff 74 00 00 	movq   $0x0,0x74ff(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416b75:	00 00 00 00 
      current_row_++;
ffffffff80416b79:	48 89 3d f0 74 00 00 	mov    %rdi,0x74f0(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416b80:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80416b84:	0f 85 66 fd ff ff    	jne    ffffffff804168f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80416b8a:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80416b8d:	48 89 f3             	mov    %rsi,%rbx
ffffffff80416b90:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80416b94:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80416b97:	48 39 c2             	cmp    %rax,%rdx
ffffffff80416b9a:	48 0f 47 d0          	cmova  %rax,%rdx
ffffffff80416b9e:	48 29 d0             	sub    %rdx,%rax
ffffffff80416ba1:	e9 65 fd ff ff       	jmpq   ffffffff8041690b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5fb>
ffffffff80416ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80416bad:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416bb0:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80416bb4:	76 5a                	jbe    ffffffff80416c10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x900>
ffffffff80416bb6:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80416bbc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80416bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416bc8:	45 31 c9             	xor    %r9d,%r9d
ffffffff80416bcb:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80416bd2:	48 85 ed             	test   %rbp,%rbp
ffffffff80416bd5:	74 29                	je     ffffffff80416c00 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8f0>
ffffffff80416bd7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80416bdc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80416be0:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80416be7:	41 80 
ffffffff80416be9:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80416bf0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416bf2:	49 83 c1 01          	add    $0x1,%r9
ffffffff80416bf6:	4c 39 cd             	cmp    %r9,%rbp
ffffffff80416bf9:	75 e5                	jne    ffffffff80416be0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8d0>
ffffffff80416bfb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416c00:	49 83 c5 01          	add    $0x1,%r13
ffffffff80416c04:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff80416c0b:	49 39 fd             	cmp    %rdi,%r13
ffffffff80416c0e:	75 b8                	jne    ffffffff80416bc8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416c10:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80416c15:	48 85 ed             	test   %rbp,%rbp
ffffffff80416c18:	74 16                	je     ffffffff80416c30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
ffffffff80416c1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416c20:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80416c27:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416c2b:	4d 39 cf             	cmp    %r9,%r15
ffffffff80416c2e:	75 f0                	jne    ffffffff80416c20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416c30:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80416c33:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80416c37:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80416c3a:	48 89 3d 2f 74 00 00 	mov    %rdi,0x742f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416c41:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416c45:	48 39 de             	cmp    %rbx,%rsi
ffffffff80416c48:	0f 87 47 fc ff ff    	ja     ffffffff80416895 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x585>
ffffffff80416c4e:	48 89 de             	mov    %rbx,%rsi
ffffffff80416c51:	e9 71 fc ff ff       	jmpq   ffffffff804168c7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b7>
ffffffff80416c56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80416c5d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80416c60:	48 89 ca             	mov    %rcx,%rdx
ffffffff80416c63:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff80416c6a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80416c6e:	0f 85 fb fb ff ff    	jne    ffffffff8041686f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x55f>
ffffffff80416c74:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff80416c7b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80416c82:	48 89 c6             	mov    %rax,%rsi
ffffffff80416c85:	e9 ef fb ff ff       	jmpq   ffffffff80416879 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x569>
ffffffff80416c8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80416c90:	48 83 c7 01          	add    $0x1,%rdi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416c94:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80416c96:	48 c7 05 d7 73 00 00 	movq   $0x0,0x73d7(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416c9d:	00 00 00 00 
      current_row_++;
ffffffff80416ca1:	48 89 3d c8 73 00 00 	mov    %rdi,0x73c8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416ca8:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff80416cac:	0f 85 3e fa ff ff    	jne    ffffffff804166f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80416cb2:	48 39 d1             	cmp    %rdx,%rcx
    size_ -= min(n, size_);
ffffffff80416cb5:	48 89 f3             	mov    %rsi,%rbx
ffffffff80416cb8:	48 0f 46 d1          	cmovbe %rcx,%rdx
    str_ += n;
ffffffff80416cbc:	49 01 d0             	add    %rdx,%r8
    size_ -= min(n, size_);
ffffffff80416cbf:	48 39 d0             	cmp    %rdx,%rax
ffffffff80416cc2:	48 0f 46 d0          	cmovbe %rax,%rdx
ffffffff80416cc6:	48 29 d0             	sub    %rdx,%rax
ffffffff80416cc9:	e9 3d fa ff ff       	jmpq   ffffffff8041670b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3fb>
ffffffff80416cce:	66 90                	xchg   %ax,%ax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416cd0:	48 83 ff 01          	cmp    $0x1,%rdi
ffffffff80416cd4:	76 5a                	jbe    ffffffff80416d30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa20>
ffffffff80416cd6:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80416cdc:	41 bd 01 00 00 00    	mov    $0x1,%r13d
ffffffff80416ce2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416ce8:	45 31 c9             	xor    %r9d,%r9d
ffffffff80416ceb:	4d 8d b3 60 ff ff ff 	lea    -0xa0(%r11),%r14
ffffffff80416cf2:	48 85 ed             	test   %rbp,%rbp
ffffffff80416cf5:	74 29                	je     ffffffff80416d20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff80416cf7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80416cfc:	0f 1f 40 00          	nopl   0x0(%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80416d00:	43 0f b7 84 4b 80 e0 	movzwl -0x7fbe1f80(%r11,%r9,2),%eax
ffffffff80416d07:	41 80 
ffffffff80416d09:	66 43 89 84 4e 80 e0 	mov    %ax,-0x7fbe1f80(%r14,%r9,2)
ffffffff80416d10:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416d12:	49 83 c1 01          	add    $0x1,%r9
ffffffff80416d16:	49 39 e9             	cmp    %rbp,%r9
ffffffff80416d19:	75 e5                	jne    ffffffff80416d00 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
ffffffff80416d1b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416d20:	49 83 c5 01          	add    $0x1,%r13
ffffffff80416d24:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff80416d2b:	4d 39 e5             	cmp    %r12,%r13
ffffffff80416d2e:	75 b8                	jne    ffffffff80416ce8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9d8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416d30:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
ffffffff80416d35:	48 85 ed             	test   %rbp,%rbp
ffffffff80416d38:	74 16                	je     ffffffff80416d50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa40>
ffffffff80416d3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416d40:	66 41 c7 41 20 00 00 	movw   $0x0,0x20(%r9)
ffffffff80416d47:	49 83 c1 02          	add    $0x2,%r9
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416d4b:	4d 39 f9             	cmp    %r15,%r9
ffffffff80416d4e:	75 f0                	jne    ffffffff80416d40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa30>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416d50:	48 01 de             	add    %rbx,%rsi
      current_row_--;
ffffffff80416d53:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80416d57:	48 39 ee             	cmp    %rbp,%rsi
ffffffff80416d5a:	48 89 3d 0f 73 00 00 	mov    %rdi,0x730f(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416d61:	48 0f 47 f5          	cmova  %rbp,%rsi
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416d65:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80416d68:	0f 82 27 f9 ff ff    	jb     ffffffff80416695 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x385>
ffffffff80416d6e:	48 89 de             	mov    %rbx,%rsi
ffffffff80416d71:	e9 51 f9 ff ff       	jmpq   ffffffff804166c7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b7>
ffffffff80416d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80416d7d:	00 00 00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80416d80:	48 89 ca             	mov    %rcx,%rdx
ffffffff80416d83:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
    if (count == npos) {
ffffffff80416d8a:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
ffffffff80416d8e:	0f 85 db f8 ff ff    	jne    ffffffff8041666f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x35f>
ffffffff80416d94:	49 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%r10
ffffffff80416d9b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80416da2:	48 89 c6             	mov    %rax,%rsi
ffffffff80416da5:	e9 cf f8 ff ff       	jmpq   ffffffff80416679 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x369>
ffffffff80416daa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416db0:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80416db3:	76 32                	jbe    ffffffff80416de7 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xad7>
ffffffff80416db5:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80416db9:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80416dbd:	48 01 de             	add    %rbx,%rsi
ffffffff80416dc0:	48 01 eb             	add    %rbp,%rbx
ffffffff80416dc3:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80416dca:	80 
ffffffff80416dcb:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80416dd2:	80 
ffffffff80416dd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80416dd8:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80416dde:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416de2:	48 39 f3             	cmp    %rsi,%rbx
ffffffff80416de5:	75 f1                	jne    ffffffff80416dd8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xac8>
        current_row_++;
ffffffff80416de7:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80416deb:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80416ded:	48 c7 05 80 72 00 00 	movq   $0x0,0x7280(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416df4:	00 00 00 00 
        current_row_++;
ffffffff80416df8:	48 89 3d 71 72 00 00 	mov    %rdi,0x7271(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416dff:	e9 ec fa ff ff       	jmpq   ffffffff804168f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5e0>
ffffffff80416e04:	0f 1f 40 00          	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416e08:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80416e0b:	76 32                	jbe    ffffffff80416e3f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb2f>
ffffffff80416e0d:	48 8d 1c bf          	lea    (%rdi,%rdi,4),%rbx
ffffffff80416e11:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80416e15:	48 01 de             	add    %rbx,%rsi
ffffffff80416e18:	48 01 eb             	add    %rbp,%rbx
ffffffff80416e1b:	48 8d b4 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rsi
ffffffff80416e22:	80 
ffffffff80416e23:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80416e2a:	80 
ffffffff80416e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80416e30:	66 c7 46 20 00 00    	movw   $0x0,0x20(%rsi)
ffffffff80416e36:	48 83 c6 02          	add    $0x2,%rsi
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416e3a:	48 39 de             	cmp    %rbx,%rsi
ffffffff80416e3d:	75 f1                	jne    ffffffff80416e30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb20>
        current_row_++;
ffffffff80416e3f:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80416e43:	31 f6                	xor    %esi,%esi
        current_col_ = 0;
ffffffff80416e45:	48 c7 05 28 72 00 00 	movq   $0x0,0x7228(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416e4c:	00 00 00 00 
        current_row_++;
ffffffff80416e50:	48 89 3d 19 72 00 00 	mov    %rdi,0x7219(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416e57:	e9 94 f8 ff ff       	jmpq   ffffffff804166f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3e0>
ffffffff80416e5c:	0f 1f 40 00          	nopl   0x0(%rax)
    str[0] = 'E';
ffffffff80416e60:	66 c7 44 24 28 45 00 	movw   $0x45,0x28(%rsp)
ffffffff80416e67:	e9 61 f7 ff ff       	jmpq   ffffffff804165cd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bd>
ffffffff80416e6c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80416e70:	48 8b 1d 01 72 00 00 	mov    0x7201(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416e77:	48 8b 3d f2 71 00 00 	mov    0x71f2(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416e7e:	e9 91 f8 ff ff       	jmpq   ffffffff80416714 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x404>
ffffffff80416e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80416e88:	48 8b 2d e9 71 00 00 	mov    0x71e9(%rip),%rbp        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416e8f:	48 8b 3d da 71 00 00 	mov    0x71da(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416e96:	e9 f8 f5 ff ff       	jmpq   ffffffff80416493 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x183>
ffffffff80416e9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80416ea0:	48 8b 3d c9 71 00 00 	mov    0x71c9(%rip),%rdi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416ea7:	48 8b 1d ca 71 00 00 	mov    0x71ca(%rip),%rbx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416eae:	e9 61 fa ff ff       	jmpq   ffffffff80416914 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x604>
ffffffff80416eb3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80416eba:	00 00 00 
ffffffff80416ebd:	0f 1f 00             	nopl   (%rax)

ffffffff80416ec0 <_Z11ToUpperCasec>:
#ifndef CHAR_UTIL_H
#define CHAR_UTIL_H

char ToUpperCase(char c) {
  if ('a' <= c && c <= 'z') {
ffffffff80416ec0:	8d 57 9f             	lea    -0x61(%rdi),%edx
    return c + 'A' - 'a';
ffffffff80416ec3:	8d 47 e0             	lea    -0x20(%rdi),%eax
ffffffff80416ec6:	80 fa 1a             	cmp    $0x1a,%dl
ffffffff80416ec9:	0f 43 c7             	cmovae %edi,%eax
  }
  return c;
}
ffffffff80416ecc:	c3                   	retq   
ffffffff80416ecd:	0f 1f 00             	nopl   (%rax)

ffffffff80416ed0 <_Z11ToLowerCasec>:

char ToLowerCase(char c) {
  if ('A' <= c && c <= 'Z') {
ffffffff80416ed0:	8d 57 bf             	lea    -0x41(%rdi),%edx
    return c - ('A' - 'a');
ffffffff80416ed3:	8d 47 20             	lea    0x20(%rdi),%eax
ffffffff80416ed6:	80 fa 1a             	cmp    $0x1a,%dl
ffffffff80416ed9:	0f 43 c7             	cmovae %edi,%eax
  }
  return c;
}
ffffffff80416edc:	c3                   	retq   
ffffffff80416edd:	90                   	nop
ffffffff80416ede:	66 90                	xchg   %ax,%ax

ffffffff80416ee0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh>:
}  // namespace

PS2Keyboard ps2_keyboard;

void PS2Keyboard::MainKeyboardHandler(uint8_t scan_code) {
  KeyInfo key_info = ScanCodeToASCII(scan_code);
ffffffff80416ee0:	40 0f b6 c6          	movzbl %sil,%eax
  if (scan_code <= 0x58) {
ffffffff80416ee4:	40 80 fe 58          	cmp    $0x58,%sil
ffffffff80416ee8:	0f 87 52 02 00 00    	ja     ffffffff80417140 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x260>
    return {static_cast<KEY_CODES>(kScanCodeToASCII[scan_code]), KEY_DOWN};
ffffffff80416eee:	48 63 04 85 c0 b2 41 	movslq -0x7fbe4d40(,%rax,4),%rax
ffffffff80416ef5:	80 
ffffffff80416ef6:	48 8d 34 c7          	lea    (%rdi,%rax,8),%rsi
ffffffff80416efa:	48 89 c2             	mov    %rax,%rdx
  auto& key_press_info = key_press_list_[key_info.key];

  if (key_info.action == KEY_DOWN) {
    if (key_press_info.time_down == 0) {
ffffffff80416efd:	48 8b 05 7c 9a 00 00 	mov    0x9a7c(%rip),%rax        # ffffffff80420980 <_ZN6Kernel9pic_timerE>
ffffffff80416f04:	48 8b 0e             	mov    (%rsi),%rcx
ffffffff80416f07:	48 85 c9             	test   %rcx,%rcx
ffffffff80416f0a:	0f 85 58 02 00 00    	jne    ffffffff80417168 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x288>
      key_press_info.time_down = pic_timer.GetClock();
ffffffff80416f10:	48 89 06             	mov    %rax,(%rsi)
void PS2Keyboard::MainKeyboardHandler(uint8_t scan_code) {
ffffffff80416f13:	41 57                	push   %r15
ffffffff80416f15:	41 56                	push   %r14
ffffffff80416f17:	41 55                	push   %r13
ffffffff80416f19:	41 54                	push   %r12
ffffffff80416f1b:	55                   	push   %rbp
ffffffff80416f1c:	53                   	push   %rbx
ffffffff80416f1d:	48 83 ec 28          	sub    $0x28,%rsp
  } else {
    key_press_info.time_down = 0;
  }

  if (key_info.action == KEY_DOWN) {
    if (key_info.key < 128) {
ffffffff80416f21:	83 fa 7f             	cmp    $0x7f,%edx
ffffffff80416f24:	0f 8f 56 02 00 00    	jg     ffffffff80417180 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x2a0>
    }
  }
}

bool PS2Keyboard::IsShiftDown() const {
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff80416f2a:	48 8b 05 37 71 00 00 	mov    0x7137(%rip),%rax        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416f31:	48 83 bf 18 08 00 00 	cmpq   $0x0,0x818(%rdi)
ffffffff80416f38:	00 
ffffffff80416f39:	89 d1                	mov    %edx,%ecx
ffffffff80416f3b:	48 8b 2d 1e 71 00 00 	mov    0x711e(%rip),%rbp        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80416f42:	0f 84 60 04 00 00    	je     ffffffff804173a8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x4c8>
  char shift_number[] = {')', '!', '@', '#', '$', '%', '^', '&', '*', '('};
ffffffff80416f48:	48 bb 29 21 40 23 24 	movabs $0x265e252423402129,%rbx
ffffffff80416f4f:	25 5e 26 
ffffffff80416f52:	41 bb 2a 28 00 00    	mov    $0x282a,%r11d
  if ('a' <= c && c <= 'z') {
ffffffff80416f58:	8d 72 9f             	lea    -0x61(%rdx),%esi
  char shift_number[] = {')', '!', '@', '#', '$', '%', '^', '&', '*', '('};
ffffffff80416f5b:	48 89 5c 24 16       	mov    %rbx,0x16(%rsp)
ffffffff80416f60:	66 44 89 5c 24 1e    	mov    %r11w,0x1e(%rsp)
  if ('a' <= c && c <= 'z') {
ffffffff80416f66:	40 80 fe 19          	cmp    $0x19,%sil
ffffffff80416f6a:	0f 87 30 08 00 00    	ja     ffffffff804177a0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x8c0>
    return c + 'A' - 'a';
ffffffff80416f70:	8d 4a e0             	lea    -0x20(%rdx),%ecx
ffffffff80416f73:	88 4c 24 16          	mov    %cl,0x16(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff80416f77:	48 8d 4c ad fb       	lea    -0x5(%rbp,%rbp,4),%rcx
ffffffff80416f7c:	49 c7 c3 60 e0 41 80 	mov    $0xffffffff8041e060,%r11
ffffffff80416f83:	48 8b 15 ee 70 00 00 	mov    0x70ee(%rip),%rdx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80416f8a:	48 89 cf             	mov    %rcx,%rdi
ffffffff80416f8d:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff80416f91:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
ffffffff80416f96:	48 8b 35 d3 70 00 00 	mov    0x70d3(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80416f9d:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80416fa1:	48 01 c1             	add    %rax,%rcx
ffffffff80416fa4:	4c 8d 44 24 16       	lea    0x16(%rsp),%r8
ffffffff80416fa9:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff80416faf:	48 8d 9f 60 e0 41 80 	lea    -0x7fbe1fa0(%rdi),%rbx
ffffffff80416fb6:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80416fba:	48 8d 9c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rbx
ffffffff80416fc1:	80 
ffffffff80416fc2:	49 89 db             	mov    %rbx,%r11
ffffffff80416fc5:	0f 1f 00             	nopl   (%rax)
ffffffff80416fc8:	48 89 c7             	mov    %rax,%rdi
ffffffff80416fcb:	48 29 d7             	sub    %rdx,%rdi
ffffffff80416fce:	49 0f 45 fc          	cmovne %r12,%rdi
    for (; i < min(size_, pos + count); i++) {
ffffffff80416fd2:	48 39 d0             	cmp    %rdx,%rax
ffffffff80416fd5:	0f 84 05 08 00 00    	je     ffffffff804177e0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x900>
      size_t endline_or_col_chars = s.find_first_of('\n', 0, len);
ffffffff80416fdb:	41 80 38 0a          	cmpb   $0xa,(%r8)
ffffffff80416fdf:	bb 00 00 00 00       	mov    $0x0,%ebx
ffffffff80416fe4:	41 0f 94 c1          	sete   %r9b
ffffffff80416fe8:	48 0f 45 df          	cmovne %rdi,%rbx
ffffffff80416fec:	45 0f b6 c9          	movzbl %r9b,%r9d
ffffffff80416ff0:	49 83 e9 01          	sub    $0x1,%r9
    if (current_row_ == num_rows_) {
ffffffff80416ff4:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80416ff7:	0f 84 c3 05 00 00    	je     ffffffff804175c0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6e0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416ffd:	48 8d 0c 1a          	lea    (%rdx,%rbx,1),%rcx
ffffffff80417001:	48 39 c1             	cmp    %rax,%rcx
ffffffff80417004:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff80417008:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8041700b:	0f 86 47 06 00 00    	jbe    ffffffff80417658 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x778>
ffffffff80417011:	4c 8d 14 b6          	lea    (%rsi,%rsi,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80417015:	4d 89 c7             	mov    %r8,%r15
ffffffff80417018:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff8041701c:	49 29 d7             	sub    %rdx,%r15
ffffffff8041701f:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80417020:	66 45 0f be 34 17    	movsbw (%r15,%rdx,1),%r14w
ffffffff80417026:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8041702c:	66 45 89 b4 52 80 e0 	mov    %r14w,-0x7fbe1f80(%r10,%rdx,2)
ffffffff80417033:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417035:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80417039:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8041703c:	75 e2                	jne    ffffffff80417020 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x140>
    if (current_col_ == num_cols_) {
ffffffff8041703e:	48 39 c8             	cmp    %rcx,%rax
ffffffff80417041:	0f 84 39 05 00 00    	je     ffffffff80417580 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6a0>
    current_col_ = i;
ffffffff80417047:	48 89 0d 2a 70 00 00 	mov    %rcx,0x702a(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041704e:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff80417052:	0f 84 4c 05 00 00    	je     ffffffff804175a4 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6c4>
ffffffff80417058:	48 85 c9             	test   %rcx,%rcx
ffffffff8041705b:	0f 84 2f 07 00 00    	je     ffffffff80417790 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x8b0>
ffffffff80417061:	48 89 ca             	mov    %rcx,%rdx
ffffffff80417064:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff80417068:	0f 86 ca 06 00 00    	jbe    ffffffff80417738 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x858>
    size_ -= min(n, size_);
ffffffff8041706e:	4c 89 e3             	mov    %r12,%rbx
    str_ += n;
ffffffff80417071:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff80417074:	48 29 fb             	sub    %rdi,%rbx
ffffffff80417077:	48 89 df             	mov    %rbx,%rdi
    while (!s.empty()) {
ffffffff8041707a:	48 85 ff             	test   %rdi,%rdi
ffffffff8041707d:	0f 85 45 ff ff ff    	jne    ffffffff80416fc8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xe8>
ffffffff80417083:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80417088:	48 85 f6             	test   %rsi,%rsi
ffffffff8041708b:	74 51                	je     ffffffff804170de <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1fe>
ffffffff8041708d:	48 89 c1             	mov    %rax,%rcx
ffffffff80417090:	48 8d 1c 00          	lea    (%rax,%rax,1),%rbx
ffffffff80417094:	48 f7 d9             	neg    %rcx
ffffffff80417097:	4c 8d 94 09 a0 00 00 	lea    0xa0(%rcx,%rcx,1),%r10
ffffffff8041709e:	00 
ffffffff8041709f:	b9 00 80 0b 00       	mov    $0xb8000,%ecx
ffffffff804170a4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804170a8:	4c 8d 04 19          	lea    (%rcx,%rbx,1),%r8
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804170ac:	48 85 c0             	test   %rax,%rax
ffffffff804170af:	74 1e                	je     ffffffff804170cf <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1ef>
ffffffff804170b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804170b8:	45 0f b7 8c 0b 20 80 	movzwl -0xb7fe0(%r11,%rcx,1),%r9d
ffffffff804170bf:	f4 ff 
ffffffff804170c1:	48 83 c1 02          	add    $0x2,%rcx
ffffffff804170c5:	66 44 89 49 fe       	mov    %r9w,-0x2(%rcx)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804170ca:	49 39 c8             	cmp    %rcx,%r8
ffffffff804170cd:	75 e9                	jne    ffffffff804170b8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1d8>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804170cf:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804170d3:	4c 89 c1             	mov    %r8,%rcx
ffffffff804170d6:	4d 01 d3             	add    %r10,%r11
ffffffff804170d9:	48 39 f7             	cmp    %rsi,%rdi
ffffffff804170dc:	75 ca                	jne    ffffffff804170a8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1c8>
    if (current_col_ != 0) {
ffffffff804170de:	48 85 d2             	test   %rdx,%rdx
ffffffff804170e1:	74 4a                	je     ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804170e3:	48 85 c0             	test   %rax,%rax
ffffffff804170e6:	74 45                	je     ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804170e8:	48 89 c7             	mov    %rax,%rdi
ffffffff804170eb:	48 0f af fe          	imul   %rsi,%rdi
ffffffff804170ef:	48 8d 8c 38 00 c0 05 	lea    0x5c000(%rax,%rdi,1),%rcx
ffffffff804170f6:	00 
ffffffff804170f7:	48 8d 04 b6          	lea    (%rsi,%rsi,4),%rax
ffffffff804170fb:	48 8d 94 3f 00 80 0b 	lea    0xb8000(%rdi,%rdi,1),%rdx
ffffffff80417102:	00 
ffffffff80417103:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80417107:	48 f7 df             	neg    %rdi
ffffffff8041710a:	48 01 c9             	add    %rcx,%rcx
ffffffff8041710d:	48 8d b4 78 60 e0 41 	lea    -0x7fbe1fa0(%rax,%rdi,2),%rsi
ffffffff80417114:	80 
ffffffff80417115:	0f 1f 00             	nopl   (%rax)
ffffffff80417118:	0f b7 84 16 20 80 f4 	movzwl -0xb7fe0(%rsi,%rdx,1),%eax
ffffffff8041711f:	ff 
ffffffff80417120:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80417124:	66 89 42 fe          	mov    %ax,-0x2(%rdx)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417128:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8041712b:	75 eb                	jne    ffffffff80417118 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x238>
}
ffffffff8041712d:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80417131:	5b                   	pop    %rbx
ffffffff80417132:	5d                   	pop    %rbp
ffffffff80417133:	41 5c                	pop    %r12
ffffffff80417135:	41 5d                	pop    %r13
ffffffff80417137:	41 5e                	pop    %r14
ffffffff80417139:	41 5f                	pop    %r15
ffffffff8041713b:	c3                   	retq   
ffffffff8041713c:	0f 1f 40 00          	nopl   0x0(%rax)
  } else if (0x81 <= scan_code && scan_code <= 0xD8) {
ffffffff80417140:	83 c6 7f             	add    $0x7f,%esi
  auto& key_press_info = key_press_list_[key_info.key];
ffffffff80417143:	ba 27 01 00 00       	mov    $0x127,%edx
  } else if (0x81 <= scan_code && scan_code <= 0xD8) {
ffffffff80417148:	40 80 fe 57          	cmp    $0x57,%sil
ffffffff8041714c:	77 0d                	ja     ffffffff8041715b <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x27b>
    return {static_cast<KEY_CODES>(kScanCodeToASCII[scan_code - 0x80]), KEY_UP};
ffffffff8041714e:	83 c0 80             	add    $0xffffff80,%eax
ffffffff80417151:	48 98                	cltq   
ffffffff80417153:	48 63 14 85 c0 b2 41 	movslq -0x7fbe4d40(,%rax,4),%rdx
ffffffff8041715a:	80 
    key_press_info.time_down = 0;
ffffffff8041715b:	48 c7 04 d7 00 00 00 	movq   $0x0,(%rdi,%rdx,8)
ffffffff80417162:	00 
  if (key_info.action == KEY_DOWN) {
ffffffff80417163:	c3                   	retq   
ffffffff80417164:	0f 1f 40 00          	nopl   0x0(%rax)
      if (pic_timer.GetClock() - first_key_pressed_time < 40) {
ffffffff80417168:	48 29 c8             	sub    %rcx,%rax
ffffffff8041716b:	48 83 f8 27          	cmp    $0x27,%rax
ffffffff8041716f:	0f 87 9e fd ff ff    	ja     ffffffff80416f13 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x33>
ffffffff80417175:	c3                   	retq   
ffffffff80417176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041717d:	00 00 00 
      if (key_info.key == ENTER) {
ffffffff80417180:	81 fa 09 01 00 00    	cmp    $0x109,%edx
ffffffff80417186:	75 a5                	jne    ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80417188:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8041718f:	e8 2c 60 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80417194:	89 c7                	mov    %eax,%edi
    while (!s.empty()) {
ffffffff80417196:	48 85 ff             	test   %rdi,%rdi
ffffffff80417199:	0f 84 a8 08 00 00    	je     ffffffff80417a47 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb67>
ffffffff8041719f:	4c 8b 2d ba 6e 00 00 	mov    0x6eba(%rip),%r13        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804171a6:	4c 8b 0d bb 6e 00 00 	mov    0x6ebb(%rip),%r9        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804171ad:	48 c7 c5 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rbp
ffffffff804171b4:	48 8b 15 bd 6e 00 00 	mov    0x6ebd(%rip),%rdx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804171bb:	48 8b 1d ae 6e 00 00 	mov    0x6eae(%rip),%rbx        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804171c2:	4b 8d 44 ad fb       	lea    -0x5(%r13,%r13,4),%rax
ffffffff804171c7:	48 89 c1             	mov    %rax,%rcx
ffffffff804171ca:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff804171ce:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff804171d2:	4c 01 c8             	add    %r9,%rax
ffffffff804171d5:	48 8d b1 60 e0 41 80 	lea    -0x7fbe1fa0(%rcx),%rsi
ffffffff804171dc:	4c 8d b4 00 60 e0 41 	lea    -0x7fbe1fa0(%rax,%rax,1),%r14
ffffffff804171e3:	80 
ffffffff804171e4:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff804171e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804171f0:	4d 89 ca             	mov    %r9,%r10
ffffffff804171f3:	49 29 d2             	sub    %rdx,%r10
ffffffff804171f6:	49 39 fa             	cmp    %rdi,%r10
ffffffff804171f9:	4c 0f 47 d7          	cmova  %rdi,%r10
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804171fd:	4c 39 d7             	cmp    %r10,%rdi
ffffffff80417200:	4c 89 d1             	mov    %r10,%rcx
ffffffff80417203:	48 0f 46 cf          	cmovbe %rdi,%rcx
    for (; i < min(size_, pos + count); i++) {
ffffffff80417207:	48 85 c9             	test   %rcx,%rcx
ffffffff8041720a:	0f 84 40 06 00 00    	je     ffffffff80417850 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x970>
    size_t i = pos;
ffffffff80417210:	31 c0                	xor    %eax,%eax
ffffffff80417212:	eb 11                	jmp    ffffffff80417225 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x345>
ffffffff80417214:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff80417218:	48 83 c0 01          	add    $0x1,%rax
ffffffff8041721c:	48 39 c8             	cmp    %rcx,%rax
ffffffff8041721f:	0f 84 2b 06 00 00    	je     ffffffff80417850 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x970>
      if (str_[i] == c) {
ffffffff80417225:	80 7c 05 00 0a       	cmpb   $0xa,0x0(%rbp,%rax,1)
ffffffff8041722a:	75 ec                	jne    ffffffff80417218 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x338>
ffffffff8041722c:	49 89 c7             	mov    %rax,%r15
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041722f:	48 39 f8             	cmp    %rdi,%rax
ffffffff80417232:	48 89 fe             	mov    %rdi,%rsi
ffffffff80417235:	48 0f 46 f0          	cmovbe %rax,%rsi
    if (current_row_ == num_rows_) {
ffffffff80417239:	4c 39 eb             	cmp    %r13,%rbx
ffffffff8041723c:	0f 84 3c 06 00 00    	je     ffffffff8041787e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x99e>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417242:	48 01 d6             	add    %rdx,%rsi
ffffffff80417245:	4c 39 ce             	cmp    %r9,%rsi
ffffffff80417248:	49 0f 47 f1          	cmova  %r9,%rsi
ffffffff8041724c:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041724f:	0f 83 fb 06 00 00    	jae    ffffffff80417950 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa70>
ffffffff80417255:	4c 8d 04 9b          	lea    (%rbx,%rbx,4),%r8
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80417259:	49 89 eb             	mov    %rbp,%r11
ffffffff8041725c:	49 c1 e0 05          	shl    $0x5,%r8
ffffffff80417260:	49 29 d3             	sub    %rdx,%r11
ffffffff80417263:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80417268:	66 41 0f be 0c 13    	movsbw (%r11,%rdx,1),%cx
ffffffff8041726e:	80 cd 0f             	or     $0xf,%ch
ffffffff80417271:	66 41 89 8c 50 80 e0 	mov    %cx,-0x7fbe1f80(%r8,%rdx,2)
ffffffff80417278:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041727a:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041727e:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80417281:	75 e5                	jne    ffffffff80417268 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x388>
    if (current_col_ == num_cols_) {
ffffffff80417283:	49 39 f1             	cmp    %rsi,%r9
ffffffff80417286:	0f 84 84 06 00 00    	je     ffffffff80417910 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa30>
    current_col_ = i;
ffffffff8041728c:	48 89 35 e5 6d 00 00 	mov    %rsi,0x6de5(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417293:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
ffffffff80417297:	0f 84 97 06 00 00    	je     ffffffff80417934 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa54>
ffffffff8041729d:	48 85 f6             	test   %rsi,%rsi
ffffffff804172a0:	0f 84 72 07 00 00    	je     ffffffff80417a18 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb38>
ffffffff804172a6:	48 89 f2             	mov    %rsi,%rdx
ffffffff804172a9:	48 83 fb 18          	cmp    $0x18,%rbx
ffffffff804172ad:	0f 86 0d 07 00 00    	jbe    ffffffff804179c0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xae0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804172b3:	48 83 c0 01          	add    $0x1,%rax
ffffffff804172b7:	4c 39 d0             	cmp    %r10,%rax
ffffffff804172ba:	4c 0f 46 d0          	cmovbe %rax,%r10
    str_ += n;
ffffffff804172be:	4c 01 d5             	add    %r10,%rbp
    size_ -= min(n, size_);
ffffffff804172c1:	49 39 fa             	cmp    %rdi,%r10
ffffffff804172c4:	4c 0f 47 d7          	cmova  %rdi,%r10
ffffffff804172c8:	4c 29 d7             	sub    %r10,%rdi
    while (!s.empty()) {
ffffffff804172cb:	48 85 ff             	test   %rdi,%rdi
ffffffff804172ce:	0f 85 1c ff ff ff    	jne    ffffffff804171f0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x310>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804172d4:	48 85 db             	test   %rbx,%rbx
ffffffff804172d7:	74 63                	je     ffffffff8041733c <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x45c>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804172d9:	4c 8b 15 88 6d 00 00 	mov    0x6d88(%rip),%r10        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804172e0:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804172e7:	45 31 c0             	xor    %r8d,%r8d
ffffffff804172ea:	4d 89 d1             	mov    %r10,%r9
ffffffff804172ed:	4f 8d 1c 12          	lea    (%r10,%r10,1),%r11
ffffffff804172f1:	49 f7 d9             	neg    %r9
ffffffff804172f4:	49 8d 8b 00 80 0b 00 	lea    0xb8000(%r11),%rcx
ffffffff804172fb:	4d 01 c9             	add    %r9,%r9
ffffffff804172fe:	49 8d a9 a0 00 00 00 	lea    0xa0(%r9),%rbp
ffffffff80417305:	0f 1f 00             	nopl   (%rax)
ffffffff80417308:	49 8d 04 09          	lea    (%r9,%rcx,1),%rax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041730c:	4d 85 d2             	test   %r10,%r10
ffffffff8041730f:	74 1c                	je     ffffffff8041732d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x44d>
ffffffff80417311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80417318:	0f b7 b4 07 20 80 f4 	movzwl -0xb7fe0(%rdi,%rax,1),%esi
ffffffff8041731f:	ff 
ffffffff80417320:	48 83 c0 02          	add    $0x2,%rax
ffffffff80417324:	66 89 70 fe          	mov    %si,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417328:	48 39 c8             	cmp    %rcx,%rax
ffffffff8041732b:	75 eb                	jne    ffffffff80417318 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x438>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041732d:	49 83 c0 01          	add    $0x1,%r8
ffffffff80417331:	48 01 ef             	add    %rbp,%rdi
ffffffff80417334:	4c 01 d9             	add    %r11,%rcx
ffffffff80417337:	4c 39 c3             	cmp    %r8,%rbx
ffffffff8041733a:	75 cc                	jne    ffffffff80417308 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x428>
    if (current_col_ != 0) {
ffffffff8041733c:	48 85 d2             	test   %rdx,%rdx
ffffffff8041733f:	0f 84 e8 fd ff ff    	je     ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417345:	48 8b 0d 1c 6d 00 00 	mov    0x6d1c(%rip),%rcx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041734c:	48 85 c9             	test   %rcx,%rcx
ffffffff8041734f:	0f 84 d8 fd ff ff    	je     ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80417355:	48 89 ca             	mov    %rcx,%rdx
ffffffff80417358:	48 8d 34 9b          	lea    (%rbx,%rbx,4),%rsi
ffffffff8041735c:	48 0f af d3          	imul   %rbx,%rdx
ffffffff80417360:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80417364:	48 8d 8c 11 00 c0 05 	lea    0x5c000(%rcx,%rdx,1),%rcx
ffffffff8041736b:	00 
ffffffff8041736c:	48 8d 84 12 00 80 0b 	lea    0xb8000(%rdx,%rdx,1),%rax
ffffffff80417373:	00 
ffffffff80417374:	48 f7 da             	neg    %rdx
ffffffff80417377:	48 01 c9             	add    %rcx,%rcx
ffffffff8041737a:	48 8d b4 56 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rdx,2),%rsi
ffffffff80417381:	80 
ffffffff80417382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80417388:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8041738f:	ff 
ffffffff80417390:	48 83 c0 02          	add    $0x2,%rax
ffffffff80417394:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417398:	48 39 c8             	cmp    %rcx,%rax
ffffffff8041739b:	75 eb                	jne    ffffffff80417388 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x4a8>
ffffffff8041739d:	e9 8b fd ff ff       	jmpq   ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
ffffffff804173a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff804173a8:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
ffffffff804173af:	00 
ffffffff804173b0:	0f 85 92 fb ff ff    	jne    ffffffff80416f48 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x68>
        vga_output << static_cast<char>(key_info.key);
ffffffff804173b6:	48 8d 4c ad fb       	lea    -0x5(%rbp,%rbp,4),%rcx
ffffffff804173bb:	88 54 24 16          	mov    %dl,0x16(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff804173bf:	48 8b 35 aa 6c 00 00 	mov    0x6caa(%rip),%rsi        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804173c6:	49 c7 c3 60 e0 41 80 	mov    $0xffffffff8041e060,%r11
ffffffff804173cd:	48 89 cf             	mov    %rcx,%rdi
ffffffff804173d0:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff804173d4:	48 8b 15 9d 6c 00 00 	mov    0x6c9d(%rip),%rdx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff804173db:	4c 8d 54 24 16       	lea    0x16(%rsp),%r10
ffffffff804173e0:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff804173e4:	48 01 c1             	add    %rax,%rcx
ffffffff804173e7:	48 8d 9f 60 e0 41 80 	lea    -0x7fbe1fa0(%rdi),%rbx
ffffffff804173ee:	4c 8d ac 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%r13
ffffffff804173f5:	80 
ffffffff804173f6:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff804173fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80417400:	49 89 c0             	mov    %rax,%r8
ffffffff80417403:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff80417408:	49 29 d0             	sub    %rdx,%r8
ffffffff8041740b:	4c 0f 45 c3          	cmovne %rbx,%r8
    for (; i < min(size_, pos + count); i++) {
ffffffff8041740f:	48 39 d0             	cmp    %rdx,%rax
ffffffff80417412:	0f 84 20 06 00 00    	je     ffffffff80417a38 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb58>
      size_t endline_or_col_chars = s.find_first_of('\n', 0, len);
ffffffff80417418:	41 80 3a 0a          	cmpb   $0xa,(%r10)
ffffffff8041741c:	bb 00 00 00 00       	mov    $0x0,%ebx
ffffffff80417421:	41 0f 94 c1          	sete   %r9b
ffffffff80417425:	49 0f 45 d8          	cmovne %r8,%rbx
ffffffff80417429:	45 0f b6 c9          	movzbl %r9b,%r9d
ffffffff8041742d:	49 83 e9 01          	sub    $0x1,%r9
    if (current_row_ == num_rows_) {
ffffffff80417431:	48 39 f5             	cmp    %rsi,%rbp
ffffffff80417434:	0f 84 26 02 00 00    	je     ffffffff80417660 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x780>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041743a:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
ffffffff8041743e:	48 39 c1             	cmp    %rax,%rcx
ffffffff80417441:	48 0f 47 c8          	cmova  %rax,%rcx
ffffffff80417445:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80417448:	0f 86 a2 03 00 00    	jbe    ffffffff804177f0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x910>
ffffffff8041744e:	4c 8d 34 b6          	lea    (%rsi,%rsi,4),%r14
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80417452:	4d 89 d7             	mov    %r10,%r15
ffffffff80417455:	49 c1 e6 05          	shl    $0x5,%r14
ffffffff80417459:	49 29 d7             	sub    %rdx,%r15
ffffffff8041745c:	0f 1f 40 00          	nopl   0x0(%rax)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80417460:	66 41 0f be 3c 17    	movsbw (%r15,%rdx,1),%di
ffffffff80417466:	66 81 cf 00 0f       	or     $0xf00,%di
ffffffff8041746b:	66 41 89 bc 56 80 e0 	mov    %di,-0x7fbe1f80(%r14,%rdx,2)
ffffffff80417472:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417474:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80417478:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8041747b:	75 e3                	jne    ffffffff80417460 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x580>
    if (current_col_ == num_cols_) {
ffffffff8041747d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80417480:	0f 84 6a 02 00 00    	je     ffffffff804176f0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x810>
    current_col_ = i;
ffffffff80417486:	48 89 0d eb 6b 00 00 	mov    %rcx,0x6beb(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041748d:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff80417491:	0f 84 7d 02 00 00    	je     ffffffff80417714 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x834>
ffffffff80417497:	48 85 c9             	test   %rcx,%rcx
ffffffff8041749a:	0f 84 18 05 00 00    	je     ffffffff804179b8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xad8>
ffffffff804174a0:	48 89 ca             	mov    %rcx,%rdx
ffffffff804174a3:	48 83 fe 18          	cmp    $0x18,%rsi
ffffffff804174a7:	0f 86 b3 04 00 00    	jbe    ffffffff80417960 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa80>
    size_ -= min(n, size_);
ffffffff804174ad:	bb 01 00 00 00       	mov    $0x1,%ebx
    str_ += n;
ffffffff804174b2:	4d 01 c2             	add    %r8,%r10
    size_ -= min(n, size_);
ffffffff804174b5:	4c 29 c3             	sub    %r8,%rbx
ffffffff804174b8:	49 89 d8             	mov    %rbx,%r8
    while (!s.empty()) {
ffffffff804174bb:	4d 85 c0             	test   %r8,%r8
ffffffff804174be:	0f 85 3c ff ff ff    	jne    ffffffff80417400 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x520>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804174c4:	48 85 f6             	test   %rsi,%rsi
ffffffff804174c7:	74 55                	je     ffffffff8041751e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x63e>
ffffffff804174c9:	49 89 c2             	mov    %rax,%r10
ffffffff804174cc:	48 8d 1c 00          	lea    (%rax,%rax,1),%rbx
ffffffff804174d0:	49 f7 da             	neg    %r10
ffffffff804174d3:	48 8d bb 00 80 0b 00 	lea    0xb8000(%rbx),%rdi
ffffffff804174da:	4d 01 d2             	add    %r10,%r10
ffffffff804174dd:	49 8d aa a0 00 00 00 	lea    0xa0(%r10),%rbp
ffffffff804174e4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804174e8:	4a 8d 0c 17          	lea    (%rdi,%r10,1),%rcx
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804174ec:	48 85 c0             	test   %rax,%rax
ffffffff804174ef:	74 1e                	je     ffffffff8041750f <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x62f>
ffffffff804174f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804174f8:	45 0f b7 8c 0b 20 80 	movzwl -0xb7fe0(%r11,%rcx,1),%r9d
ffffffff804174ff:	f4 ff 
ffffffff80417501:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80417505:	66 44 89 49 fe       	mov    %r9w,-0x2(%rcx)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041750a:	48 39 cf             	cmp    %rcx,%rdi
ffffffff8041750d:	75 e9                	jne    ffffffff804174f8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x618>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041750f:	49 83 c0 01          	add    $0x1,%r8
ffffffff80417513:	49 01 eb             	add    %rbp,%r11
ffffffff80417516:	48 01 df             	add    %rbx,%rdi
ffffffff80417519:	49 39 f0             	cmp    %rsi,%r8
ffffffff8041751c:	75 ca                	jne    ffffffff804174e8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x608>
    if (current_col_ != 0) {
ffffffff8041751e:	48 85 d2             	test   %rdx,%rdx
ffffffff80417521:	0f 84 06 fc ff ff    	je     ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417527:	48 85 c0             	test   %rax,%rax
ffffffff8041752a:	0f 84 fd fb ff ff    	je     ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80417530:	48 89 c7             	mov    %rax,%rdi
ffffffff80417533:	48 0f af fe          	imul   %rsi,%rdi
ffffffff80417537:	48 8d 8c 38 00 c0 05 	lea    0x5c000(%rax,%rdi,1),%rcx
ffffffff8041753e:	00 
ffffffff8041753f:	48 8d 04 b6          	lea    (%rsi,%rsi,4),%rax
ffffffff80417543:	48 8d 94 3f 00 80 0b 	lea    0xb8000(%rdi,%rdi,1),%rdx
ffffffff8041754a:	00 
ffffffff8041754b:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041754f:	48 f7 df             	neg    %rdi
ffffffff80417552:	48 01 c9             	add    %rcx,%rcx
ffffffff80417555:	48 8d b4 78 60 e0 41 	lea    -0x7fbe1fa0(%rax,%rdi,2),%rsi
ffffffff8041755c:	80 
ffffffff8041755d:	0f 1f 00             	nopl   (%rax)
ffffffff80417560:	0f b7 84 16 20 80 f4 	movzwl -0xb7fe0(%rsi,%rdx,1),%eax
ffffffff80417567:	ff 
ffffffff80417568:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8041756c:	66 89 42 fe          	mov    %ax,-0x2(%rdx)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417570:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80417573:	75 eb                	jne    ffffffff80417560 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x680>
ffffffff80417575:	e9 b3 fb ff ff       	jmpq   ffffffff8041712d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x24d>
ffffffff8041757a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_row_++;
ffffffff80417580:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417584:	31 d2                	xor    %edx,%edx
ffffffff80417586:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff80417588:	48 c7 05 e5 6a 00 00 	movq   $0x0,0x6ae5(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041758f:	00 00 00 00 
      current_row_++;
ffffffff80417593:	48 89 35 d6 6a 00 00 	mov    %rsi,0x6ad6(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041759a:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff8041759e:	0f 85 ca fa ff ff    	jne    ffffffff8041706e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x18e>
ffffffff804175a4:	48 39 fb             	cmp    %rdi,%rbx
ffffffff804175a7:	48 89 ca             	mov    %rcx,%rdx
ffffffff804175aa:	48 0f 46 fb          	cmovbe %rbx,%rdi
ffffffff804175ae:	4c 89 e3             	mov    %r12,%rbx
ffffffff804175b1:	48 29 fb             	sub    %rdi,%rbx
    str_ += n;
ffffffff804175b4:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff804175b7:	48 89 df             	mov    %rbx,%rdi
ffffffff804175ba:	e9 bb fa ff ff       	jmpq   ffffffff8041707a <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x19a>
ffffffff804175bf:	90                   	nop
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804175c0:	48 83 fd 01          	cmp    $0x1,%rbp
ffffffff804175c4:	76 55                	jbe    ffffffff8041761b <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x73b>
ffffffff804175c6:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff804175cc:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff804175d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804175d8:	31 c9                	xor    %ecx,%ecx
ffffffff804175da:	4d 8d ba 60 ff ff ff 	lea    -0xa0(%r10),%r15
ffffffff804175e1:	48 85 c0             	test   %rax,%rax
ffffffff804175e4:	74 25                	je     ffffffff8041760b <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x72b>
ffffffff804175e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804175ed:	00 00 00 
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804175f0:	45 0f b7 ac 4a 80 e0 	movzwl -0x7fbe1f80(%r10,%rcx,2),%r13d
ffffffff804175f7:	41 80 
ffffffff804175f9:	66 45 89 ac 4f 80 e0 	mov    %r13w,-0x7fbe1f80(%r15,%rcx,2)
ffffffff80417600:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417602:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80417606:	48 39 c8             	cmp    %rcx,%rax
ffffffff80417609:	75 e5                	jne    ffffffff804175f0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x710>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041760b:	49 83 c6 01          	add    $0x1,%r14
ffffffff8041760f:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
ffffffff80417616:	49 39 f6             	cmp    %rsi,%r14
ffffffff80417619:	75 bd                	jne    ffffffff804175d8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6f8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041761b:	48 8b 0c 24          	mov    (%rsp),%rcx
ffffffff8041761f:	48 85 c0             	test   %rax,%rax
ffffffff80417622:	74 15                	je     ffffffff80417639 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x759>
ffffffff80417624:	0f 1f 40 00          	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80417628:	45 31 d2             	xor    %r10d,%r10d
ffffffff8041762b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041762f:	66 44 89 51 1e       	mov    %r10w,0x1e(%rcx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417634:	49 39 cb             	cmp    %rcx,%r11
ffffffff80417637:	75 ef                	jne    ffffffff80417628 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417639:	48 8d 0c 1a          	lea    (%rdx,%rbx,1),%rcx
      current_row_--;
ffffffff8041763d:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80417641:	48 39 c1             	cmp    %rax,%rcx
ffffffff80417644:	48 89 35 25 6a 00 00 	mov    %rsi,0x6a25(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041764b:	48 0f 47 c8          	cmova  %rax,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041764f:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80417652:	0f 87 b9 f9 ff ff    	ja     ffffffff80417011 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x131>
ffffffff80417658:	48 89 d1             	mov    %rdx,%rcx
ffffffff8041765b:	e9 de f9 ff ff       	jmpq   ffffffff8041703e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x15e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417660:	48 83 fd 01          	cmp    $0x1,%rbp
ffffffff80417664:	76 55                	jbe    ffffffff804176bb <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7db>
ffffffff80417666:	bf a0 00 00 00       	mov    $0xa0,%edi
ffffffff8041766b:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80417671:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417678:	31 c9                	xor    %ecx,%ecx
ffffffff8041767a:	4c 8d bf 60 ff ff ff 	lea    -0xa0(%rdi),%r15
ffffffff80417681:	48 85 c0             	test   %rax,%rax
ffffffff80417684:	74 25                	je     ffffffff804176ab <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7cb>
ffffffff80417686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041768d:	00 00 00 
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80417690:	44 0f b7 a4 4f 80 e0 	movzwl -0x7fbe1f80(%rdi,%rcx,2),%r12d
ffffffff80417697:	41 80 
ffffffff80417699:	66 45 89 a4 4f 80 e0 	mov    %r12w,-0x7fbe1f80(%r15,%rcx,2)
ffffffff804176a0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804176a2:	48 83 c1 01          	add    $0x1,%rcx
ffffffff804176a6:	48 39 c1             	cmp    %rax,%rcx
ffffffff804176a9:	75 e5                	jne    ffffffff80417690 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7b0>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804176ab:	49 83 c6 01          	add    $0x1,%r14
ffffffff804176af:	48 81 c7 a0 00 00 00 	add    $0xa0,%rdi
ffffffff804176b6:	49 39 f6             	cmp    %rsi,%r14
ffffffff804176b9:	75 bd                	jne    ffffffff80417678 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x798>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804176bb:	48 8b 0c 24          	mov    (%rsp),%rcx
ffffffff804176bf:	48 85 c0             	test   %rax,%rax
ffffffff804176c2:	74 15                	je     ffffffff804176d9 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7f9>
ffffffff804176c4:	0f 1f 40 00          	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804176c8:	45 31 e4             	xor    %r12d,%r12d
ffffffff804176cb:	48 83 c1 02          	add    $0x2,%rcx
ffffffff804176cf:	66 44 89 61 1e       	mov    %r12w,0x1e(%rcx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804176d4:	49 39 cd             	cmp    %rcx,%r13
ffffffff804176d7:	75 ef                	jne    ffffffff804176c8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7e8>
      current_row_--;
ffffffff804176d9:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff804176dd:	48 89 35 8c 69 00 00 	mov    %rsi,0x698c(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804176e4:	e9 51 fd ff ff       	jmpq   ffffffff8041743a <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x55a>
ffffffff804176e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_row_++;
ffffffff804176f0:	48 83 c6 01          	add    $0x1,%rsi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804176f4:	31 d2                	xor    %edx,%edx
ffffffff804176f6:	31 c9                	xor    %ecx,%ecx
      current_col_ = 0;
ffffffff804176f8:	48 c7 05 75 69 00 00 	movq   $0x0,0x6975(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804176ff:	00 00 00 00 
      current_row_++;
ffffffff80417703:	48 89 35 66 69 00 00 	mov    %rsi,0x6966(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041770a:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff8041770e:	0f 85 99 fd ff ff    	jne    ffffffff804174ad <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x5cd>
ffffffff80417714:	4c 39 c3             	cmp    %r8,%rbx
ffffffff80417717:	48 89 ca             	mov    %rcx,%rdx
ffffffff8041771a:	4c 0f 46 c3          	cmovbe %rbx,%r8
ffffffff8041771e:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff80417723:	4c 29 c3             	sub    %r8,%rbx
    str_ += n;
ffffffff80417726:	4d 01 c2             	add    %r8,%r10
    size_ -= min(n, size_);
ffffffff80417729:	49 89 d8             	mov    %rbx,%r8
ffffffff8041772c:	e9 8a fd ff ff       	jmpq   ffffffff804174bb <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x5db>
ffffffff80417731:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417738:	48 39 c8             	cmp    %rcx,%rax
ffffffff8041773b:	76 34                	jbe    ffffffff80417771 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x891>
ffffffff8041773d:	4c 8d 0c b6          	lea    (%rsi,%rsi,4),%r9
ffffffff80417741:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80417745:	4c 01 c9             	add    %r9,%rcx
ffffffff80417748:	49 01 c1             	add    %rax,%r9
ffffffff8041774b:	48 8d 94 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rdx
ffffffff80417752:	80 
ffffffff80417753:	4b 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%rcx
ffffffff8041775a:	80 
ffffffff8041775b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80417760:	45 31 c9             	xor    %r9d,%r9d
ffffffff80417763:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80417767:	66 44 89 4a 1e       	mov    %r9w,0x1e(%rdx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041776c:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8041776f:	75 ef                	jne    ffffffff80417760 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x880>
        current_row_++;
ffffffff80417771:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80417775:	31 d2                	xor    %edx,%edx
        current_col_ = 0;
ffffffff80417777:	48 c7 05 f6 68 00 00 	movq   $0x0,0x68f6(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041777e:	00 00 00 00 
        current_row_++;
ffffffff80417782:	48 89 35 e7 68 00 00 	mov    %rsi,0x68e7(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80417789:	e9 e0 f8 ff ff       	jmpq   ffffffff8041706e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x18e>
ffffffff8041778e:	66 90                	xchg   %ax,%ax
ffffffff80417790:	31 d2                	xor    %edx,%edx
ffffffff80417792:	e9 d7 f8 ff ff       	jmpq   ffffffff8041706e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x18e>
ffffffff80417797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041779e:	00 00 
  } else if ('0' <= c && c <= '9') {
ffffffff804177a0:	8d 72 d0             	lea    -0x30(%rdx),%esi
ffffffff804177a3:	40 80 fe 09          	cmp    $0x9,%sil
ffffffff804177a7:	0f 86 73 02 00 00    	jbe    ffffffff80417a20 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb40>
  switch (c) {
ffffffff804177ad:	83 ea 27             	sub    $0x27,%edx
ffffffff804177b0:	80 fa 39             	cmp    $0x39,%dl
ffffffff804177b3:	0f 87 ba f7 ff ff    	ja     ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
ffffffff804177b9:	0f b6 d2             	movzbl %dl,%edx
ffffffff804177bc:	ff 24 d5 e0 b0 41 80 	jmpq   *-0x7fbe4f20(,%rdx,8)
  } else if ('0' <= c && c <= '9') {
ffffffff804177c3:	b9 7e 00 00 00       	mov    $0x7e,%ecx
ffffffff804177c8:	e9 a6 f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return '_';
ffffffff804177cd:	b9 5f 00 00 00       	mov    $0x5f,%ecx
ffffffff804177d2:	e9 9c f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
ffffffff804177d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804177de:	00 00 
        endline_or_col_chars = len;
ffffffff804177e0:	48 89 fb             	mov    %rdi,%rbx
        return i;
      }
    }
    return npos;
ffffffff804177e3:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
ffffffff804177ea:	e9 05 f8 ff ff       	jmpq   ffffffff80416ff4 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x114>
ffffffff804177ef:	90                   	nop
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804177f0:	48 89 d1             	mov    %rdx,%rcx
ffffffff804177f3:	e9 85 fc ff ff       	jmpq   ffffffff8041747d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x59d>
      return '}';
ffffffff804177f8:	b9 7d 00 00 00       	mov    $0x7d,%ecx
ffffffff804177fd:	e9 71 f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return '{';
ffffffff80417802:	b9 7b 00 00 00       	mov    $0x7b,%ecx
ffffffff80417807:	e9 67 f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return '+';
ffffffff8041780c:	b9 2b 00 00 00       	mov    $0x2b,%ecx
ffffffff80417811:	e9 5d f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return ':';
ffffffff80417816:	b9 3a 00 00 00       	mov    $0x3a,%ecx
ffffffff8041781b:	e9 53 f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return '?';
ffffffff80417820:	b9 3f 00 00 00       	mov    $0x3f,%ecx
ffffffff80417825:	e9 49 f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return '>';
ffffffff8041782a:	b9 3e 00 00 00       	mov    $0x3e,%ecx
ffffffff8041782f:	e9 3f f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return '<';
ffffffff80417834:	b9 3c 00 00 00       	mov    $0x3c,%ecx
ffffffff80417839:	e9 35 f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
      return '"';
ffffffff8041783e:	b9 22 00 00 00       	mov    $0x22,%ecx
ffffffff80417843:	e9 2b f7 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
ffffffff80417848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041784f:	00 
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80417850:	4c 89 d0             	mov    %r10,%rax
ffffffff80417853:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
    if (count == npos) {
ffffffff8041785a:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041785e:	0f 85 cb f9 ff ff    	jne    ffffffff8041722f <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x34f>
ffffffff80417864:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
ffffffff8041786b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff80417872:	48 89 fe             	mov    %rdi,%rsi
    if (current_row_ == num_rows_) {
ffffffff80417875:	4c 39 eb             	cmp    %r13,%rbx
ffffffff80417878:	0f 85 c4 f9 ff ff    	jne    ffffffff80417242 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x362>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041787e:	48 83 fb 01          	cmp    $0x1,%rbx
ffffffff80417882:	76 53                	jbe    ffffffff804178d7 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9f7>
ffffffff80417884:	41 b8 a0 00 00 00    	mov    $0xa0,%r8d
ffffffff8041788a:	41 bb 01 00 00 00    	mov    $0x1,%r11d
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417890:	31 c9                	xor    %ecx,%ecx
ffffffff80417892:	4d 8d a0 60 ff ff ff 	lea    -0xa0(%r8),%r12
ffffffff80417899:	4d 85 c9             	test   %r9,%r9
ffffffff8041789c:	74 29                	je     ffffffff804178c7 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9e7>
ffffffff8041789e:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff804178a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804178a8:	41 0f b7 84 48 80 e0 	movzwl -0x7fbe1f80(%r8,%rcx,2),%eax
ffffffff804178af:	41 80 
ffffffff804178b1:	66 41 89 84 4c 80 e0 	mov    %ax,-0x7fbe1f80(%r12,%rcx,2)
ffffffff804178b8:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804178ba:	48 83 c1 01          	add    $0x1,%rcx
ffffffff804178be:	4c 39 c9             	cmp    %r9,%rcx
ffffffff804178c1:	75 e5                	jne    ffffffff804178a8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9c8>
ffffffff804178c3:	48 8b 04 24          	mov    (%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804178c7:	49 83 c3 01          	add    $0x1,%r11
ffffffff804178cb:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
ffffffff804178d2:	4d 39 dd             	cmp    %r11,%r13
ffffffff804178d5:	75 b9                	jne    ffffffff80417890 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9b0>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804178d7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff804178dc:	4d 85 c9             	test   %r9,%r9
ffffffff804178df:	74 18                	je     ffffffff804178f9 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa19>
ffffffff804178e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804178e8:	45 31 c0             	xor    %r8d,%r8d
ffffffff804178eb:	48 83 c1 02          	add    $0x2,%rcx
ffffffff804178ef:	66 44 89 41 1e       	mov    %r8w,0x1e(%rcx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804178f4:	49 39 ce             	cmp    %rcx,%r14
ffffffff804178f7:	75 ef                	jne    ffffffff804178e8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa08>
      current_row_--;
ffffffff804178f9:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff804178fd:	48 89 1d 6c 67 00 00 	mov    %rbx,0x676c(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80417904:	e9 39 f9 ff ff       	jmpq   ffffffff80417242 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x362>
ffffffff80417909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_row_++;
ffffffff80417910:	48 83 c3 01          	add    $0x1,%rbx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417914:	31 d2                	xor    %edx,%edx
ffffffff80417916:	31 f6                	xor    %esi,%esi
      current_col_ = 0;
ffffffff80417918:	48 c7 05 55 67 00 00 	movq   $0x0,0x6755(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041791f:	00 00 00 00 
      current_row_++;
ffffffff80417923:	48 89 1d 46 67 00 00 	mov    %rbx,0x6746(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041792a:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
ffffffff8041792e:	0f 85 7f f9 ff ff    	jne    ffffffff804172b3 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3d3>
ffffffff80417934:	4c 39 d0             	cmp    %r10,%rax
    size_ -= min(n, size_);
ffffffff80417937:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041793a:	49 0f 47 c2          	cmova  %r10,%rax
    str_ += n;
ffffffff8041793e:	48 01 c5             	add    %rax,%rbp
    size_ -= min(n, size_);
ffffffff80417941:	48 39 f8             	cmp    %rdi,%rax
ffffffff80417944:	48 0f 47 c7          	cmova  %rdi,%rax
ffffffff80417948:	48 29 c7             	sub    %rax,%rdi
ffffffff8041794b:	e9 7b f9 ff ff       	jmpq   ffffffff804172cb <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3eb>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417950:	48 89 d6             	mov    %rdx,%rsi
ffffffff80417953:	e9 2b f9 ff ff       	jmpq   ffffffff80417283 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3a3>
ffffffff80417958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041795f:	00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417960:	48 39 c8             	cmp    %rcx,%rax
ffffffff80417963:	76 32                	jbe    ffffffff80417997 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xab7>
ffffffff80417965:	48 8d 3c b6          	lea    (%rsi,%rsi,4),%rdi
ffffffff80417969:	48 c1 e7 04          	shl    $0x4,%rdi
ffffffff8041796d:	48 01 f9             	add    %rdi,%rcx
ffffffff80417970:	48 01 c7             	add    %rax,%rdi
ffffffff80417973:	48 8d 94 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rdx
ffffffff8041797a:	80 
ffffffff8041797b:	48 8d 8c 3f 60 e0 41 	lea    -0x7fbe1fa0(%rdi,%rdi,1),%rcx
ffffffff80417982:	80 
ffffffff80417983:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80417988:	31 db                	xor    %ebx,%ebx
ffffffff8041798a:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8041798e:	66 89 5a 1e          	mov    %bx,0x1e(%rdx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417992:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80417995:	75 f1                	jne    ffffffff80417988 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xaa8>
        current_row_++;
ffffffff80417997:	48 83 c6 01          	add    $0x1,%rsi
ffffffff8041799b:	31 d2                	xor    %edx,%edx
        current_col_ = 0;
ffffffff8041799d:	48 c7 05 d0 66 00 00 	movq   $0x0,0x66d0(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804179a4:	00 00 00 00 
        current_row_++;
ffffffff804179a8:	48 89 35 c1 66 00 00 	mov    %rsi,0x66c1(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804179af:	e9 f9 fa ff ff       	jmpq   ffffffff804174ad <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x5cd>
ffffffff804179b4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804179b8:	31 d2                	xor    %edx,%edx
ffffffff804179ba:	e9 ee fa ff ff       	jmpq   ffffffff804174ad <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x5cd>
ffffffff804179bf:	90                   	nop
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804179c0:	49 39 f1             	cmp    %rsi,%r9
ffffffff804179c3:	76 32                	jbe    ffffffff804179f7 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb17>
ffffffff804179c5:	48 8d 0c 9b          	lea    (%rbx,%rbx,4),%rcx
ffffffff804179c9:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff804179cd:	48 01 ce             	add    %rcx,%rsi
ffffffff804179d0:	4c 01 c9             	add    %r9,%rcx
ffffffff804179d3:	48 8d 94 36 60 e0 41 	lea    -0x7fbe1fa0(%rsi,%rsi,1),%rdx
ffffffff804179da:	80 
ffffffff804179db:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff804179e2:	80 
ffffffff804179e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804179e8:	31 f6                	xor    %esi,%esi
ffffffff804179ea:	48 83 c2 02          	add    $0x2,%rdx
ffffffff804179ee:	66 89 72 1e          	mov    %si,0x1e(%rdx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804179f2:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804179f5:	75 f1                	jne    ffffffff804179e8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb08>
        current_row_++;
ffffffff804179f7:	48 83 c3 01          	add    $0x1,%rbx
ffffffff804179fb:	31 d2                	xor    %edx,%edx
        current_col_ = 0;
ffffffff804179fd:	48 c7 05 70 66 00 00 	movq   $0x0,0x6670(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80417a04:	00 00 00 00 
        current_row_++;
ffffffff80417a08:	48 89 1d 61 66 00 00 	mov    %rbx,0x6661(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80417a0f:	e9 9f f8 ff ff       	jmpq   ffffffff804172b3 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3d3>
ffffffff80417a14:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80417a18:	31 d2                	xor    %edx,%edx
ffffffff80417a1a:	e9 94 f8 ff ff       	jmpq   ffffffff804172b3 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3d3>
ffffffff80417a1f:	90                   	nop
        vga_output << CharWhenShiftPressed(static_cast<char>(key_info.key));
ffffffff80417a20:	0f be d2             	movsbl %dl,%edx
    return shift_number[c - '0'];
ffffffff80417a23:	83 ea 30             	sub    $0x30,%edx
ffffffff80417a26:	48 63 d2             	movslq %edx,%rdx
ffffffff80417a29:	0f b6 4c 14 16       	movzbl 0x16(%rsp,%rdx,1),%ecx
ffffffff80417a2e:	e9 40 f5 ff ff       	jmpq   ffffffff80416f73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x93>
ffffffff80417a33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        endline_or_col_chars = len;
ffffffff80417a38:	4c 89 c3             	mov    %r8,%rbx
    return npos;
ffffffff80417a3b:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
ffffffff80417a42:	e9 ea f9 ff ff       	jmpq   ffffffff80417431 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x551>
ffffffff80417a47:	48 8b 15 2a 66 00 00 	mov    0x662a(%rip),%rdx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80417a4e:	48 8b 1d 1b 66 00 00 	mov    0x661b(%rip),%rbx        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80417a55:	e9 7a f8 ff ff       	jmpq   ffffffff804172d4 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3f4>
ffffffff80417a5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80417a60 <_ZNK6Kernel11PS2Keyboard11IsShiftDownEv>:
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff80417a60:	48 83 bf 18 08 00 00 	cmpq   $0x0,0x818(%rdi)
ffffffff80417a67:	00 
ffffffff80417a68:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80417a6d:	75 0b                	jne    ffffffff80417a7a <_ZNK6Kernel11PS2Keyboard11IsShiftDownEv+0x1a>
ffffffff80417a6f:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
ffffffff80417a76:	00 
ffffffff80417a77:	0f 95 c0             	setne  %al
         (key_press_list_[KEY_CODES::RSHIFT].time_down != 0);
}
ffffffff80417a7a:	c3                   	retq   
ffffffff80417a7b:	90                   	nop
ffffffff80417a7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80417a80 <_ZNK6Kernel11PS2Keyboard13IsControlDownEv>:

bool PS2Keyboard::IsControlDown() const {
  return (key_press_list_[KEY_CODES::LCTRL].time_down != 0) ||
ffffffff80417a80:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
ffffffff80417a87:	00 
ffffffff80417a88:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80417a8d:	75 0b                	jne    ffffffff80417a9a <_ZNK6Kernel11PS2Keyboard13IsControlDownEv+0x1a>
ffffffff80417a8f:	48 83 bf 30 08 00 00 	cmpq   $0x0,0x830(%rdi)
ffffffff80417a96:	00 
ffffffff80417a97:	0f 95 c0             	setne  %al
         (key_press_list_[KEY_CODES::RCTRL].time_down != 0);
}
ffffffff80417a9a:	c3                   	retq   
ffffffff80417a9b:	90                   	nop
ffffffff80417a9c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80417aa0 <_ZNK6Kernel11PS2Keyboard9IsAltDownEv>:

bool PS2Keyboard::IsAltDown() const {
  return key_press_list_[KEY_CODES::LALT].time_down != 0;
ffffffff80417aa0:	48 83 bf 58 08 00 00 	cmpq   $0x0,0x858(%rdi)
ffffffff80417aa7:	00 
ffffffff80417aa8:	0f 95 c0             	setne  %al
}
ffffffff80417aab:	c3                   	retq   
ffffffff80417aac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80417ab0 <_ZN6Kernel7PITimerC1Ev>:
#include "timer.h"
#include "stdint.h"
#include "scheduler.h"

namespace Kernel {
ffffffff80417ab0:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
ffffffff80417ab7:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
ffffffff80417abe:	00 
ffffffff80417abf:	c3                   	retq   

ffffffff80417ac0 <_ZN6Kernel7PITimer21TimerInterruptHandlerEv>:
PITimer::PITimer() : timer_tick_lower_(0), timer_tick_upper_(0) {}

void PITimer::TimerInterruptHandler() {
ffffffff80417ac0:	48 8b 07             	mov    (%rdi),%rax
ffffffff80417ac3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff80417ac7:	74 0f                	je     ffffffff80417ad8 <_ZN6Kernel7PITimer21TimerInterruptHandlerEv+0x18>
ffffffff80417ac9:	48 83 c0 01          	add    $0x1,%rax
  if (timer_tick_lower_ == UINT64_MAX) {
    timer_tick_lower_ = 0;
    timer_tick_upper_++;
  }
ffffffff80417acd:	48 89 07             	mov    %rax,(%rdi)
  timer_tick_lower_++;
ffffffff80417ad0:	c3                   	retq   
ffffffff80417ad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    timer_tick_lower_ = 0;
ffffffff80417ad8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80417add:	48 83 47 08 01       	addq   $0x1,0x8(%rdi)
  }
ffffffff80417ae2:	48 89 07             	mov    %rax,(%rdi)
  timer_tick_lower_++;
ffffffff80417ae5:	c3                   	retq   
ffffffff80417ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80417aed:	00 00 00 

ffffffff80417af0 <_ZNK6Kernel7PITimer14InstallPITimerEv>:
ffffffff80417af0:	b8 36 00 00 00       	mov    $0x36,%eax
ffffffff80417af5:	e6 43                	out    %al,$0x43
ffffffff80417af7:	b8 9b ff ff ff       	mov    $0xffffff9b,%eax
ffffffff80417afc:	e6 40                	out    %al,$0x40
ffffffff80417afe:	b8 2e 00 00 00       	mov    $0x2e,%eax
ffffffff80417b03:	e6 40                	out    %al,$0x40
    KernelThreadScheduler::GetKernelThreadScheduler().schedule();
  }
}

void PITimer::InstallPITimer() const {
  const uint16_t divisor = 1193180 / PITIMER_HZ;
ffffffff80417b05:	c3                   	retq   
ffffffff80417b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80417b0d:	00 00 00 

ffffffff80417b10 <_ZL11_out_buffercPvmm>:
} out_fct_wrap_type;

// internal buffer output
static inline void _out_buffer(char character, void* buffer, size_t idx,
                               size_t maxlen) {
  if (idx < maxlen) {
ffffffff80417b10:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80417b13:	73 04                	jae    ffffffff80417b19 <_ZL11_out_buffercPvmm+0x9>
    ((char*)buffer)[idx] = character;
ffffffff80417b15:	40 88 3c 16          	mov    %dil,(%rsi,%rdx,1)
  }
}
ffffffff80417b19:	c3                   	retq   
ffffffff80417b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80417b20 <_ZL9_out_nullcPvmm>:
                             size_t maxlen) {
  (void)character;
  (void)buffer;
  (void)idx;
  (void)maxlen;
}
ffffffff80417b20:	c3                   	retq   
ffffffff80417b21:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80417b28:	00 00 00 00 
ffffffff80417b2c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80417b30 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj>:

// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx,
                           size_t maxlen, char* buf, size_t len, bool negative,
                           unsigned int base, unsigned int prec,
                           unsigned int width, unsigned int flags) {
ffffffff80417b30:	41 57                	push   %r15
ffffffff80417b32:	41 56                	push   %r14
ffffffff80417b34:	41 55                	push   %r13
ffffffff80417b36:	49 89 cd             	mov    %rcx,%r13
ffffffff80417b39:	41 54                	push   %r12
ffffffff80417b3b:	49 89 f4             	mov    %rsi,%r12
ffffffff80417b3e:	55                   	push   %rbp
ffffffff80417b3f:	48 89 fd             	mov    %rdi,%rbp
ffffffff80417b42:	53                   	push   %rbx
ffffffff80417b43:	4c 89 c3             	mov    %r8,%rbx
ffffffff80417b46:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80417b4a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff80417b4f:	8b 94 24 80 00 00 00 	mov    0x80(%rsp),%edx
ffffffff80417b56:	8b 7c 24 60          	mov    0x60(%rsp),%edi
ffffffff80417b5a:	89 d6                	mov    %edx,%esi
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
ffffffff80417b5c:	89 d0                	mov    %edx,%eax
ffffffff80417b5e:	83 e6 10             	and    $0x10,%esi
ffffffff80417b61:	83 e0 02             	and    $0x2,%eax
ffffffff80417b64:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
ffffffff80417b68:	75 77                	jne    ffffffff80417be1 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
    if (width && (flags & FLAGS_ZEROPAD) &&
ffffffff80417b6a:	44 8b 44 24 78       	mov    0x78(%rsp),%r8d
ffffffff80417b6f:	89 d0                	mov    %edx,%eax
ffffffff80417b71:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
ffffffff80417b75:	83 e0 01             	and    $0x1,%eax
ffffffff80417b78:	45 85 c0             	test   %r8d,%r8d
ffffffff80417b7b:	0f 85 c7 01 00 00    	jne    ffffffff80417d48 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x218>
        (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
      width--;
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80417b81:	49 39 c9             	cmp    %rcx,%r9
ffffffff80417b84:	73 27                	jae    ffffffff80417bad <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x7d>
ffffffff80417b86:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417b8a:	75 12                	jne    ffffffff80417b9e <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x6e>
ffffffff80417b8c:	e9 c3 03 00 00       	jmpq   ffffffff80417f54 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x424>
ffffffff80417b91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80417b98:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417b9c:	74 0f                	je     ffffffff80417bad <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x7d>
      buf[len++] = '0';
ffffffff80417b9e:	49 83 c1 01          	add    $0x1,%r9
ffffffff80417ba2:	42 c6 44 0b ff 30    	movb   $0x30,-0x1(%rbx,%r9,1)
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80417ba8:	49 39 c9             	cmp    %rcx,%r9
ffffffff80417bab:	72 eb                	jb     ffffffff80417b98 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x68>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) &&
ffffffff80417bad:	85 c0                	test   %eax,%eax
ffffffff80417baf:	74 30                	je     ffffffff80417be1 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
ffffffff80417bb1:	8b 44 24 78          	mov    0x78(%rsp),%eax
ffffffff80417bb5:	4c 39 c8             	cmp    %r9,%rax
ffffffff80417bb8:	76 27                	jbe    ffffffff80417be1 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
ffffffff80417bba:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417bbe:	75 12                	jne    ffffffff80417bd2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xa2>
ffffffff80417bc0:	e9 ab 03 00 00       	jmpq   ffffffff80417f70 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x440>
ffffffff80417bc5:	0f 1f 00             	nopl   (%rax)
ffffffff80417bc8:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417bcc:	0f 84 a6 01 00 00    	je     ffffffff80417d78 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x248>
           (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
ffffffff80417bd2:	49 83 c1 01          	add    $0x1,%r9
ffffffff80417bd6:	42 c6 44 0b ff 30    	movb   $0x30,-0x1(%rbx,%r9,1)
    while ((flags & FLAGS_ZEROPAD) && (len < width) &&
ffffffff80417bdc:	49 39 c1             	cmp    %rax,%r9
ffffffff80417bdf:	75 e7                	jne    ffffffff80417bc8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x98>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
ffffffff80417be1:	85 f6                	test   %esi,%esi
ffffffff80417be3:	74 40                	je     ffffffff80417c25 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xf5>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff80417be5:	f6 c6 04             	test   $0x4,%dh
ffffffff80417be8:	0f 85 ba 01 00 00    	jne    ffffffff80417da8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x278>
ffffffff80417bee:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
ffffffff80417bf2:	4d 85 c9             	test   %r9,%r9
ffffffff80417bf5:	0f 85 90 01 00 00    	jne    ffffffff80417d8b <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x25b>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff80417bfb:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff80417c00:	0f 84 39 03 00 00    	je     ffffffff80417f3f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x40f>
        (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'x';
    } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
               (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'X';
    } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80417c06:	83 7c 24 68 02       	cmpl   $0x2,0x68(%rsp)
ffffffff80417c0b:	0f 85 35 03 00 00    	jne    ffffffff80417f46 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x416>
      buf[len++] = 'b';
ffffffff80417c11:	c6 03 62             	movb   $0x62,(%rbx)
ffffffff80417c14:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff80417c1a:	4a 8d 04 0b          	lea    (%rbx,%r9,1),%rax
ffffffff80417c1e:	49 83 c1 01          	add    $0x1,%r9
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
      buf[len++] = '0';
ffffffff80417c22:	c6 00 30             	movb   $0x30,(%rax)
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
ffffffff80417c25:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417c29:	0f 84 ad 01 00 00    	je     ffffffff80417ddc <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
    if (negative) {
ffffffff80417c2f:	40 84 ff             	test   %dil,%dil
ffffffff80417c32:	0f 84 d0 01 00 00    	je     ffffffff80417e08 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2d8>
      buf[len++] = '-';
ffffffff80417c38:	49 8d 41 01          	lea    0x1(%r9),%rax
ffffffff80417c3c:	42 c6 04 0b 2d       	movb   $0x2d,(%rbx,%r9,1)
ffffffff80417c41:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff80417c46:	83 e2 03             	and    $0x3,%edx
ffffffff80417c49:	0f 85 01 02 00 00    	jne    ffffffff80417e50 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x320>
    for (size_t i = len; i < width; i++) {
ffffffff80417c4f:	44 8b 74 24 78       	mov    0x78(%rsp),%r14d
ffffffff80417c54:	4c 39 74 24 10       	cmp    %r14,0x10(%rsp)
ffffffff80417c59:	0f 83 f1 01 00 00    	jae    ffffffff80417e50 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x320>
ffffffff80417c5f:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
ffffffff80417c64:	4c 2b 74 24 10       	sub    0x10(%rsp),%r14
ffffffff80417c69:	4d 01 fe             	add    %r15,%r14
ffffffff80417c6c:	0f 1f 40 00          	nopl   0x0(%rax)
      out(' ', buffer, idx++, maxlen);
ffffffff80417c70:	4c 89 fa             	mov    %r15,%rdx
ffffffff80417c73:	49 83 c7 01          	add    $0x1,%r15
ffffffff80417c77:	4c 89 e9             	mov    %r13,%rcx
ffffffff80417c7a:	4c 89 e6             	mov    %r12,%rsi
ffffffff80417c7d:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80417c82:	ff d5                	callq  *%rbp
    for (size_t i = len; i < width; i++) {
ffffffff80417c84:	4d 39 f7             	cmp    %r14,%r15
ffffffff80417c87:	75 e7                	jne    ffffffff80417c70 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x140>
  while (len) {
ffffffff80417c89:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
ffffffff80417c8f:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff80417c93:	74 2b                	je     ffffffff80417cc0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x190>
    for (size_t i = len; i < width; i++) {
ffffffff80417c95:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
ffffffff80417c9a:	4d 01 fe             	add    %r15,%r14
ffffffff80417c9d:	0f 1f 00             	nopl   (%rax)
ffffffff80417ca0:	4c 89 f2             	mov    %r14,%rdx
ffffffff80417ca3:	4c 89 34 24          	mov    %r14,(%rsp)
    out(buf[--len], buffer, idx++, maxlen);
ffffffff80417ca7:	4c 89 e9             	mov    %r13,%rcx
ffffffff80417caa:	4c 89 e6             	mov    %r12,%rsi
ffffffff80417cad:	4c 29 fa             	sub    %r15,%rdx
ffffffff80417cb0:	49 83 ef 01          	sub    $0x1,%r15
ffffffff80417cb4:	42 0f be 3c 3b       	movsbl (%rbx,%r15,1),%edi
ffffffff80417cb9:	ff d5                	callq  *%rbp
  while (len) {
ffffffff80417cbb:	4d 85 ff             	test   %r15,%r15
ffffffff80417cbe:	75 e0                	jne    ffffffff80417ca0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x170>
  if (flags & FLAGS_LEFT) {
ffffffff80417cc0:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
ffffffff80417cc4:	85 c0                	test   %eax,%eax
ffffffff80417cc6:	74 67                	je     ffffffff80417d2f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x1ff>
    while (idx - start_idx < width) {
ffffffff80417cc8:	8b 5c 24 78          	mov    0x78(%rsp),%ebx
ffffffff80417ccc:	4c 8b 34 24          	mov    (%rsp),%r14
ffffffff80417cd0:	4c 2b 74 24 08       	sub    0x8(%rsp),%r14
ffffffff80417cd5:	4c 39 f3             	cmp    %r14,%rbx
ffffffff80417cd8:	76 55                	jbe    ffffffff80417d2f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x1ff>
ffffffff80417cda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      out(' ', buffer, idx++, maxlen);
ffffffff80417ce0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80417ce5:	4c 89 e9             	mov    %r13,%rcx
ffffffff80417ce8:	4c 89 e6             	mov    %r12,%rsi
ffffffff80417ceb:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80417cf0:	4a 8d 14 30          	lea    (%rax,%r14,1),%rdx
ffffffff80417cf4:	49 83 c6 01          	add    $0x1,%r14
ffffffff80417cf8:	ff d5                	callq  *%rbp
    while (idx - start_idx < width) {
ffffffff80417cfa:	49 39 de             	cmp    %rbx,%r14
ffffffff80417cfd:	72 e1                	jb     ffffffff80417ce0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x1b0>
ffffffff80417cff:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff80417d03:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80417d08:	48 89 f2             	mov    %rsi,%rdx
ffffffff80417d0b:	48 8d 44 0b ff       	lea    -0x1(%rbx,%rcx,1),%rax
ffffffff80417d10:	48 29 ca             	sub    %rcx,%rdx
ffffffff80417d13:	48 29 f0             	sub    %rsi,%rax
ffffffff80417d16:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80417d1a:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80417d1d:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80417d22:	48 0f 42 c2          	cmovb  %rdx,%rax
ffffffff80417d26:	48 8d 44 06 01       	lea    0x1(%rsi,%rax,1),%rax
ffffffff80417d2b:	48 89 04 24          	mov    %rax,(%rsp)
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
}
ffffffff80417d2f:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff80417d33:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80417d37:	5b                   	pop    %rbx
ffffffff80417d38:	5d                   	pop    %rbp
ffffffff80417d39:	41 5c                	pop    %r12
ffffffff80417d3b:	41 5d                	pop    %r13
ffffffff80417d3d:	41 5e                	pop    %r14
ffffffff80417d3f:	41 5f                	pop    %r15
ffffffff80417d41:	c3                   	retq   
ffffffff80417d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (width && (flags & FLAGS_ZEROPAD) &&
ffffffff80417d48:	85 c0                	test   %eax,%eax
ffffffff80417d4a:	0f 84 28 01 00 00    	je     ffffffff80417e78 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x348>
ffffffff80417d50:	40 84 ff             	test   %dil,%dil
ffffffff80417d53:	0f 85 57 01 00 00    	jne    ffffffff80417eb0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x380>
        (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
ffffffff80417d59:	f6 c2 0c             	test   $0xc,%dl
ffffffff80417d5c:	0f 85 4e 01 00 00    	jne    ffffffff80417eb0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x380>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80417d62:	49 39 c9             	cmp    %rcx,%r9
ffffffff80417d65:	0f 83 46 fe ff ff    	jae    ffffffff80417bb1 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x81>
ffffffff80417d6b:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417d6f:	0f 85 29 fe ff ff    	jne    ffffffff80417b9e <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x6e>
ffffffff80417d75:	0f 1f 00             	nopl   (%rax)
  if (flags & FLAGS_HASH) {
ffffffff80417d78:	85 f6                	test   %esi,%esi
ffffffff80417d7a:	0f 84 a8 00 00 00    	je     ffffffff80417e28 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2f8>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff80417d80:	41 b9 20 00 00 00    	mov    $0x20,%r9d
ffffffff80417d86:	f6 c6 04             	test   $0x4,%dh
ffffffff80417d89:	75 51                	jne    ffffffff80417ddc <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
ffffffff80417d8b:	49 39 c9             	cmp    %rcx,%r9
ffffffff80417d8e:	0f 84 2c 01 00 00    	je     ffffffff80417ec0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x390>
        ((len == prec) || (len == width))) {
ffffffff80417d94:	8b 44 24 78          	mov    0x78(%rsp),%eax
ffffffff80417d98:	4c 39 c8             	cmp    %r9,%rax
ffffffff80417d9b:	0f 84 1f 01 00 00    	je     ffffffff80417ec0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x390>
ffffffff80417da1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff80417da8:	49 83 f9 1f          	cmp    $0x1f,%r9
ffffffff80417dac:	0f 96 c1             	setbe  %cl
ffffffff80417daf:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff80417db4:	89 c8                	mov    %ecx,%eax
ffffffff80417db6:	0f 84 1e 01 00 00    	je     ffffffff80417eda <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3aa>
    } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80417dbc:	83 7c 24 68 02       	cmpl   $0x2,0x68(%rsp)
ffffffff80417dc1:	75 0f                	jne    ffffffff80417dd2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff80417dc3:	84 c9                	test   %cl,%cl
ffffffff80417dc5:	74 0b                	je     ffffffff80417dd2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff80417dc7:	4a 8d 04 0b          	lea    (%rbx,%r9,1),%rax
ffffffff80417dcb:	49 83 c1 01          	add    $0x1,%r9
      buf[len++] = 'b';
ffffffff80417dcf:	c6 00 62             	movb   $0x62,(%rax)
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
ffffffff80417dd2:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417dd6:	0f 85 3e fe ff ff    	jne    ffffffff80417c1a <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xea>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff80417ddc:	83 e2 03             	and    $0x3,%edx
ffffffff80417ddf:	75 57                	jne    ffffffff80417e38 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x308>
ffffffff80417de1:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80417de8:	00 00 
    for (size_t i = len; i < width; i++) {
ffffffff80417dea:	44 8b 74 24 78       	mov    0x78(%rsp),%r14d
ffffffff80417def:	4c 3b 74 24 10       	cmp    0x10(%rsp),%r14
ffffffff80417df4:	0f 87 65 fe ff ff    	ja     ffffffff80417c5f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x12f>
ffffffff80417dfa:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
ffffffff80417dff:	e9 85 fe ff ff       	jmpq   ffffffff80417c89 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x159>
ffffffff80417e04:	0f 1f 40 00          	nopl   0x0(%rax)
    } else if (flags & FLAGS_PLUS) {
ffffffff80417e08:	f6 c2 04             	test   $0x4,%dl
ffffffff80417e0b:	75 53                	jne    ffffffff80417e60 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x330>
    } else if (flags & FLAGS_SPACE) {
ffffffff80417e0d:	f6 c2 08             	test   $0x8,%dl
ffffffff80417e10:	0f 85 f2 00 00 00    	jne    ffffffff80417f08 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3d8>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff80417e16:	83 e2 03             	and    $0x3,%edx
ffffffff80417e19:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
ffffffff80417e1e:	75 da                	jne    ffffffff80417dfa <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ca>
ffffffff80417e20:	eb c8                	jmp    ffffffff80417dea <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ba>
ffffffff80417e22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80417e28:	83 e2 03             	and    $0x3,%edx
ffffffff80417e2b:	0f 84 ea 00 00 00    	je     ffffffff80417f1b <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3eb>
ffffffff80417e31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80417e38:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80417e3f:	00 00 
ffffffff80417e41:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
ffffffff80417e46:	e9 4a fe ff ff       	jmpq   ffffffff80417c95 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x165>
ffffffff80417e4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    for (size_t i = len; i < width; i++) {
ffffffff80417e50:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
ffffffff80417e55:	e9 3b fe ff ff       	jmpq   ffffffff80417c95 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x165>
ffffffff80417e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      buf[len++] = '+';  // ignore the space if the '+' exists
ffffffff80417e60:	49 8d 41 01          	lea    0x1(%r9),%rax
ffffffff80417e64:	42 c6 04 0b 2b       	movb   $0x2b,(%rbx,%r9,1)
ffffffff80417e69:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80417e6e:	e9 d3 fd ff ff       	jmpq   ffffffff80417c46 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x116>
ffffffff80417e73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80417e78:	49 39 c9             	cmp    %rcx,%r9
ffffffff80417e7b:	0f 83 60 fd ff ff    	jae    ffffffff80417be1 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
ffffffff80417e81:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80417e85:	0f 85 13 fd ff ff    	jne    ffffffff80417b9e <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x6e>
  if (flags & FLAGS_HASH) {
ffffffff80417e8b:	85 f6                	test   %esi,%esi
ffffffff80417e8d:	0f 84 19 01 00 00    	je     ffffffff80417fac <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x47c>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff80417e93:	f6 c6 04             	test   $0x4,%dh
ffffffff80417e96:	0f 85 40 ff ff ff    	jne    ffffffff80417ddc <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
ffffffff80417e9c:	41 b9 20 00 00 00    	mov    $0x20,%r9d
ffffffff80417ea2:	e9 e4 fe ff ff       	jmpq   ffffffff80417d8b <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x25b>
ffffffff80417ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80417eae:	00 00 
      width--;
ffffffff80417eb0:	83 6c 24 78 01       	subl   $0x1,0x78(%rsp)
ffffffff80417eb5:	e9 a8 fe ff ff       	jmpq   ffffffff80417d62 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x232>
ffffffff80417eba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      if (len && (base == 16U)) {
ffffffff80417ec0:	4c 89 ce             	mov    %r9,%rsi
ffffffff80417ec3:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80417ec7:	0f 95 c0             	setne  %al
ffffffff80417eca:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff80417ecf:	0f 94 c1             	sete   %cl
ffffffff80417ed2:	20 c8                	and    %cl,%al
ffffffff80417ed4:	74 53                	je     ffffffff80417f29 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3f9>
        len--;
ffffffff80417ed6:	49 83 e9 02          	sub    $0x2,%r9
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff80417eda:	89 d1                	mov    %edx,%ecx
ffffffff80417edc:	83 e1 20             	and    $0x20,%ecx
ffffffff80417edf:	75 0c                	jne    ffffffff80417eed <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3bd>
ffffffff80417ee1:	84 c0                	test   %al,%al
ffffffff80417ee3:	75 4c                	jne    ffffffff80417f31 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x401>
    } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
ffffffff80417ee5:	85 c9                	test   %ecx,%ecx
ffffffff80417ee7:	0f 84 e5 fe ff ff    	je     ffffffff80417dd2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff80417eed:	84 c0                	test   %al,%al
ffffffff80417eef:	0f 84 dd fe ff ff    	je     ffffffff80417dd2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
      buf[len++] = 'X';
ffffffff80417ef5:	42 c6 04 0b 58       	movb   $0x58,(%rbx,%r9,1)
ffffffff80417efa:	49 83 c1 01          	add    $0x1,%r9
ffffffff80417efe:	e9 cf fe ff ff       	jmpq   ffffffff80417dd2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff80417f03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      buf[len++] = ' ';
ffffffff80417f08:	49 8d 41 01          	lea    0x1(%r9),%rax
ffffffff80417f0c:	42 c6 04 0b 20       	movb   $0x20,(%rbx,%r9,1)
ffffffff80417f11:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80417f16:	e9 2b fd ff ff       	jmpq   ffffffff80417c46 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x116>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff80417f1b:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80417f22:	00 00 
ffffffff80417f24:	e9 26 fd ff ff       	jmpq   ffffffff80417c4f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x11f>
      len--;
ffffffff80417f29:	49 89 f1             	mov    %rsi,%r9
ffffffff80417f2c:	e9 77 fe ff ff       	jmpq   ffffffff80417da8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x278>
      buf[len++] = 'x';
ffffffff80417f31:	42 c6 04 0b 78       	movb   $0x78,(%rbx,%r9,1)
ffffffff80417f36:	49 83 c1 01          	add    $0x1,%r9
ffffffff80417f3a:	e9 93 fe ff ff       	jmpq   ffffffff80417dd2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff80417f3f:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80417f44:	eb 94                	jmp    ffffffff80417eda <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3aa>
      buf[len++] = '0';
ffffffff80417f46:	c6 03 30             	movb   $0x30,(%rbx)
ffffffff80417f49:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff80417f4f:	e9 db fc ff ff       	jmpq   ffffffff80417c2f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xff>
    while ((flags & FLAGS_ZEROPAD) && (len < width) &&
ffffffff80417f54:	85 c0                	test   %eax,%eax
ffffffff80417f56:	0f 85 1c fe ff ff    	jne    ffffffff80417d78 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x248>
ffffffff80417f5c:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
ffffffff80417f60:	89 44 24 78          	mov    %eax,0x78(%rsp)
ffffffff80417f64:	e9 22 ff ff ff       	jmpq   ffffffff80417e8b <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x35b>
ffffffff80417f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  if (flags & FLAGS_HASH) {
ffffffff80417f70:	85 f6                	test   %esi,%esi
ffffffff80417f72:	74 38                	je     ffffffff80417fac <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x47c>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff80417f74:	f6 c6 04             	test   $0x4,%dh
ffffffff80417f77:	0f 84 0e fe ff ff    	je     ffffffff80417d8b <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x25b>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff80417f7d:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff80417f82:	0f 84 54 fe ff ff    	je     ffffffff80417ddc <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff80417f88:	80 e2 03             	and    $0x3,%dl
ffffffff80417f8b:	0f 85 a7 fe ff ff    	jne    ffffffff80417e38 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x308>
    for (size_t i = len; i < width; i++) {
ffffffff80417f91:	49 89 c6             	mov    %rax,%r14
ffffffff80417f94:	48 83 f8 20          	cmp    $0x20,%rax
ffffffff80417f98:	0f 86 9a fe ff ff    	jbe    ffffffff80417e38 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x308>
ffffffff80417f9e:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80417fa5:	00 00 
ffffffff80417fa7:	e9 b3 fc ff ff       	jmpq   ffffffff80417c5f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x12f>
  if (flags & FLAGS_HASH) {
ffffffff80417fac:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80417fb3:	00 00 
ffffffff80417fb5:	e9 8c fc ff ff       	jmpq   ffffffff80417c46 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x116>
ffffffff80417fba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80417fc0 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj>:

// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx,
                         size_t maxlen, unsigned long value, bool negative,
                         unsigned long base, unsigned int prec,
                         unsigned int width, unsigned int flags) {
ffffffff80417fc0:	41 56                	push   %r14
ffffffff80417fc2:	41 55                	push   %r13
ffffffff80417fc4:	41 54                	push   %r12
ffffffff80417fc6:	49 89 d4             	mov    %rdx,%r12
ffffffff80417fc9:	55                   	push   %rbp
ffffffff80417fca:	44 89 cd             	mov    %r9d,%ebp
ffffffff80417fcd:	53                   	push   %rbx
ffffffff80417fce:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80417fd2:	4c 8b 5c 24 50       	mov    0x50(%rsp),%r11
ffffffff80417fd7:	44 8b 6c 24 68       	mov    0x68(%rsp),%r13d
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
ffffffff80417fdc:	4d 85 c0             	test   %r8,%r8
ffffffff80417fdf:	75 4f                	jne    ffffffff80418030 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x70>
    flags &= ~FLAGS_HASH;
ffffffff80417fe1:	44 89 e8             	mov    %r13d,%eax
ffffffff80417fe4:	83 e0 ef             	and    $0xffffffef,%eax
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff80417fe7:	41 81 e5 00 04 00 00 	and    $0x400,%r13d
    flags &= ~FLAGS_HASH;
ffffffff80417fee:	41 89 c5             	mov    %eax,%r13d
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff80417ff1:	74 3d                	je     ffffffff80418030 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x70>
  size_t len = 0U;
ffffffff80417ff3:	45 31 c9             	xor    %r9d,%r9d
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
ffffffff80417ff6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80417ffa:	40 0f b6 ed          	movzbl %bpl,%ebp
ffffffff80417ffe:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418001:	41 55                	push   %r13
ffffffff80418003:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff80418007:	50                   	push   %rax
ffffffff80418008:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff8041800c:	50                   	push   %rax
ffffffff8041800d:	41 53                	push   %r11
ffffffff8041800f:	55                   	push   %rbp
ffffffff80418010:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
ffffffff80418015:	e8 16 fb ff ff       	callq  ffffffff80417b30 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj>
                      (unsigned int)base, prec, width, flags);
}
ffffffff8041801a:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8041801e:	5b                   	pop    %rbx
ffffffff8041801f:	5d                   	pop    %rbp
ffffffff80418020:	41 5c                	pop    %r12
ffffffff80418022:	41 5d                	pop    %r13
ffffffff80418024:	41 5e                	pop    %r14
ffffffff80418026:	c3                   	retq   
ffffffff80418027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041802e:	00 00 
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
ffffffff80418030:	44 89 e8             	mov    %r13d,%eax
ffffffff80418033:	83 e0 20             	and    $0x20,%eax
ffffffff80418036:	83 f8 01             	cmp    $0x1,%eax
ffffffff80418039:	19 db                	sbb    %ebx,%ebx
ffffffff8041803b:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041803e:	83 e3 20             	and    $0x20,%ebx
                       ? '0' + digit
ffffffff80418041:	83 c3 37             	add    $0x37,%ebx
ffffffff80418044:	eb 0d                	jmp    ffffffff80418053 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x93>
ffffffff80418046:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041804d:	00 00 00 
      value /= base;
ffffffff80418050:	49 89 c0             	mov    %rax,%r8
      const char digit = (char)(value % base);
ffffffff80418053:	31 d2                	xor    %edx,%edx
ffffffff80418055:	4c 89 c0             	mov    %r8,%rax
ffffffff80418058:	49 f7 f3             	div    %r11
                       ? '0' + digit
ffffffff8041805b:	48 83 fa 09          	cmp    $0x9,%rdx
ffffffff8041805f:	44 8d 72 30          	lea    0x30(%rdx),%r14d
ffffffff80418063:	44 8d 14 13          	lea    (%rbx,%rdx,1),%r10d
ffffffff80418067:	45 0f 46 d6          	cmovbe %r14d,%r10d
      buf[len++] = digit < 10
ffffffff8041806b:	49 83 c1 01          	add    $0x1,%r9
ffffffff8041806f:	46 88 54 0c ff       	mov    %r10b,-0x1(%rsp,%r9,1)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
ffffffff80418074:	4d 39 d8             	cmp    %r11,%r8
ffffffff80418077:	0f 82 79 ff ff ff    	jb     ffffffff80417ff6 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x36>
ffffffff8041807d:	49 83 f9 1f          	cmp    $0x1f,%r9
ffffffff80418081:	76 cd                	jbe    ffffffff80418050 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x90>
ffffffff80418083:	e9 6e ff ff ff       	jmpq   ffffffff80417ff6 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x36>
ffffffff80418088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041808f:	00 

ffffffff80418090 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj>:
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx,
                              size_t maxlen, unsigned long long value,
                              bool negative, unsigned long long base,
                              unsigned int prec, unsigned int width,
                              unsigned int flags) {
ffffffff80418090:	41 56                	push   %r14
ffffffff80418092:	41 55                	push   %r13
ffffffff80418094:	41 54                	push   %r12
ffffffff80418096:	49 89 d4             	mov    %rdx,%r12
ffffffff80418099:	55                   	push   %rbp
ffffffff8041809a:	44 89 cd             	mov    %r9d,%ebp
ffffffff8041809d:	53                   	push   %rbx
ffffffff8041809e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff804180a2:	4c 8b 5c 24 50       	mov    0x50(%rsp),%r11
ffffffff804180a7:	44 8b 6c 24 68       	mov    0x68(%rsp),%r13d
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
ffffffff804180ac:	4d 85 c0             	test   %r8,%r8
ffffffff804180af:	75 4f                	jne    ffffffff80418100 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x70>
    flags &= ~FLAGS_HASH;
ffffffff804180b1:	44 89 e8             	mov    %r13d,%eax
ffffffff804180b4:	83 e0 ef             	and    $0xffffffef,%eax
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff804180b7:	41 81 e5 00 04 00 00 	and    $0x400,%r13d
    flags &= ~FLAGS_HASH;
ffffffff804180be:	41 89 c5             	mov    %eax,%r13d
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff804180c1:	74 3d                	je     ffffffff80418100 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x70>
  size_t len = 0U;
ffffffff804180c3:	45 31 c9             	xor    %r9d,%r9d
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
ffffffff804180c6:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff804180ca:	40 0f b6 ed          	movzbl %bpl,%ebp
ffffffff804180ce:	4c 89 e2             	mov    %r12,%rdx
ffffffff804180d1:	41 55                	push   %r13
ffffffff804180d3:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff804180d7:	50                   	push   %rax
ffffffff804180d8:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff804180dc:	50                   	push   %rax
ffffffff804180dd:	41 53                	push   %r11
ffffffff804180df:	55                   	push   %rbp
ffffffff804180e0:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
ffffffff804180e5:	e8 46 fa ff ff       	callq  ffffffff80417b30 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj>
                      (unsigned int)base, prec, width, flags);
}
ffffffff804180ea:	48 83 c4 50          	add    $0x50,%rsp
ffffffff804180ee:	5b                   	pop    %rbx
ffffffff804180ef:	5d                   	pop    %rbp
ffffffff804180f0:	41 5c                	pop    %r12
ffffffff804180f2:	41 5d                	pop    %r13
ffffffff804180f4:	41 5e                	pop    %r14
ffffffff804180f6:	c3                   	retq   
ffffffff804180f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804180fe:	00 00 
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
ffffffff80418100:	44 89 e8             	mov    %r13d,%eax
ffffffff80418103:	83 e0 20             	and    $0x20,%eax
ffffffff80418106:	83 f8 01             	cmp    $0x1,%eax
ffffffff80418109:	19 db                	sbb    %ebx,%ebx
ffffffff8041810b:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041810e:	83 e3 20             	and    $0x20,%ebx
                       ? '0' + digit
ffffffff80418111:	83 c3 37             	add    $0x37,%ebx
ffffffff80418114:	eb 0d                	jmp    ffffffff80418123 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x93>
ffffffff80418116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041811d:	00 00 00 
      value /= base;
ffffffff80418120:	49 89 c0             	mov    %rax,%r8
      const char digit = (char)(value % base);
ffffffff80418123:	31 d2                	xor    %edx,%edx
ffffffff80418125:	4c 89 c0             	mov    %r8,%rax
ffffffff80418128:	49 f7 f3             	div    %r11
                       ? '0' + digit
ffffffff8041812b:	48 83 fa 09          	cmp    $0x9,%rdx
ffffffff8041812f:	44 8d 72 30          	lea    0x30(%rdx),%r14d
ffffffff80418133:	44 8d 14 13          	lea    (%rbx,%rdx,1),%r10d
ffffffff80418137:	45 0f 46 d6          	cmovbe %r14d,%r10d
      buf[len++] = digit < 10
ffffffff8041813b:	49 83 c1 01          	add    $0x1,%r9
ffffffff8041813f:	46 88 54 0c ff       	mov    %r10b,-0x1(%rsp,%r9,1)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
ffffffff80418144:	4d 39 d8             	cmp    %r11,%r8
ffffffff80418147:	0f 82 79 ff ff ff    	jb     ffffffff804180c6 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x36>
ffffffff8041814d:	49 83 f9 1f          	cmp    $0x1f,%r9
ffffffff80418151:	76 cd                	jbe    ffffffff80418120 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x90>
ffffffff80418153:	e9 6e ff ff ff       	jmpq   ffffffff804180c6 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x36>
ffffffff80418158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041815f:	00 

ffffffff80418160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>:
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT

// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen,
                      const char* format, va_list va) {
ffffffff80418160:	41 57                	push   %r15
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
    // use null output function
    out = _out_null;
ffffffff80418162:	48 c7 c0 20 7b 41 80 	mov    $0xffffffff80417b20,%rax
                      const char* format, va_list va) {
ffffffff80418169:	49 89 f7             	mov    %rsi,%r15
ffffffff8041816c:	41 56                	push   %r14
ffffffff8041816e:	49 89 d6             	mov    %rdx,%r14
ffffffff80418171:	41 55                	push   %r13
ffffffff80418173:	41 54                	push   %r12
ffffffff80418175:	55                   	push   %rbp
ffffffff80418176:	53                   	push   %rbx
ffffffff80418177:	48 83 ec 38          	sub    $0x38,%rsp
    out = _out_null;
ffffffff8041817b:	48 85 f6             	test   %rsi,%rsi
ffffffff8041817e:	48 0f 45 c7          	cmovne %rdi,%rax
                      const char* format, va_list va) {
ffffffff80418182:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    out = _out_null;
ffffffff80418187:	48 89 c5             	mov    %rax,%rbp
  }

  while (*format) {
ffffffff8041818a:	0f b6 01             	movzbl (%rcx),%eax
ffffffff8041818d:	84 c0                	test   %al,%al
ffffffff8041818f:	0f 84 93 06 00 00    	je     ffffffff80418828 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6c8>
ffffffff80418195:	45 31 e4             	xor    %r12d,%r12d
ffffffff80418198:	49 89 cd             	mov    %rcx,%r13
ffffffff8041819b:	eb 26                	jmp    ffffffff804181c3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x63>
ffffffff8041819d:	0f 1f 00             	nopl   (%rax)
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
      // no
      out(*format, buffer, idx++, maxlen);
ffffffff804181a0:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
ffffffff804181a5:	0f be f8             	movsbl %al,%edi
        out('%', buffer, idx++, maxlen);
        format++;
        break;

      default:
        out(*format, buffer, idx++, maxlen);
ffffffff804181a8:	4c 89 e2             	mov    %r12,%rdx
ffffffff804181ab:	4c 89 f1             	mov    %r14,%rcx
ffffffff804181ae:	4c 89 fe             	mov    %r15,%rsi
ffffffff804181b1:	49 89 dc             	mov    %rbx,%r12
ffffffff804181b4:	ff d5                	callq  *%rbp
  while (*format) {
ffffffff804181b6:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
ffffffff804181bb:	84 c0                	test   %al,%al
ffffffff804181bd:	0f 84 4d 01 00 00    	je     ffffffff80418310 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1b0>
    if (*format != '%') {
ffffffff804181c3:	49 83 c5 01          	add    $0x1,%r13
ffffffff804181c7:	3c 25                	cmp    $0x25,%al
ffffffff804181c9:	75 d5                	jne    ffffffff804181a0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x40>
    flags = 0U;
ffffffff804181cb:	31 d2                	xor    %edx,%edx
ffffffff804181cd:	0f 1f 00             	nopl   (%rax)
      switch (*format) {
ffffffff804181d0:	41 0f be 7d 00       	movsbl 0x0(%r13),%edi
ffffffff804181d5:	49 8d 4d 01          	lea    0x1(%r13),%rcx
ffffffff804181d9:	48 89 ce             	mov    %rcx,%rsi
ffffffff804181dc:	8d 47 e0             	lea    -0x20(%rdi),%eax
ffffffff804181df:	3c 10                	cmp    $0x10,%al
ffffffff804181e1:	77 0d                	ja     ffffffff804181f0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x90>
ffffffff804181e3:	0f b6 c0             	movzbl %al,%eax
ffffffff804181e6:	ff 24 c5 28 b4 41 80 	jmpq   *-0x7fbe4bd8(,%rax,8)
ffffffff804181ed:	0f 1f 00             	nopl   (%rax)
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff804181f0:	8d 47 d0             	lea    -0x30(%rdi),%eax
    if (_is_digit(*format)) {
ffffffff804181f3:	3c 09                	cmp    $0x9,%al
ffffffff804181f5:	0f 86 b5 00 00 00    	jbe    ffffffff804182b0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x150>
    } else if (*format == '*') {
ffffffff804181fb:	40 80 ff 2a          	cmp    $0x2a,%dil
ffffffff804181ff:	0f 84 6b 01 00 00    	je     ffffffff80418370 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x210>
ffffffff80418205:	4c 89 ee             	mov    %r13,%rsi
    width = 0U;
ffffffff80418208:	31 db                	xor    %ebx,%ebx
ffffffff8041820a:	49 89 cd             	mov    %rcx,%r13
    precision = 0U;
ffffffff8041820d:	45 31 c0             	xor    %r8d,%r8d
    if (*format == '.') {
ffffffff80418210:	40 80 ff 2e          	cmp    $0x2e,%dil
ffffffff80418214:	0f 84 cd 00 00 00    	je     ffffffff804182e7 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x187>
    switch (*format) {
ffffffff8041821a:	8d 47 98             	lea    -0x68(%rdi),%eax
ffffffff8041821d:	3c 12                	cmp    $0x12,%al
ffffffff8041821f:	77 57                	ja     ffffffff80418278 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
ffffffff80418221:	0f b6 c0             	movzbl %al,%eax
ffffffff80418224:	ff 24 c5 b0 b4 41 80 	jmpq   *-0x7fbe4b50(,%rax,8)
ffffffff8041822b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          flags |= FLAGS_ZEROPAD;
ffffffff80418230:	83 ca 01             	or     $0x1,%edx
  while (*format) {
ffffffff80418233:	49 89 cd             	mov    %rcx,%r13
ffffffff80418236:	eb 98                	jmp    ffffffff804181d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x70>
ffffffff80418238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041823f:	00 
          flags |= FLAGS_LEFT;
ffffffff80418240:	83 ca 02             	or     $0x2,%edx
          break;
ffffffff80418243:	eb ee                	jmp    ffffffff80418233 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
ffffffff80418245:	0f 1f 00             	nopl   (%rax)
          flags |= FLAGS_PLUS;
ffffffff80418248:	83 ca 04             	or     $0x4,%edx
          break;
ffffffff8041824b:	eb e6                	jmp    ffffffff80418233 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
ffffffff8041824d:	0f 1f 00             	nopl   (%rax)
          flags |= FLAGS_HASH;
ffffffff80418250:	83 ca 10             	or     $0x10,%edx
          break;
ffffffff80418253:	eb de                	jmp    ffffffff80418233 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
ffffffff80418255:	0f 1f 00             	nopl   (%rax)
          flags |= FLAGS_SPACE;
ffffffff80418258:	83 ca 08             	or     $0x8,%edx
          break;
ffffffff8041825b:	eb d6                	jmp    ffffffff80418233 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
        if (*format == 'l') {
ffffffff8041825d:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
ffffffff80418261:	40 80 ff 6c          	cmp    $0x6c,%dil
ffffffff80418265:	0f 84 9b 05 00 00    	je     ffffffff80418806 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6a6>
        flags |= FLAGS_LONG;
ffffffff8041826b:	80 ce 01             	or     $0x1,%dh
ffffffff8041826e:	49 83 c5 01          	add    $0x1,%r13
ffffffff80418272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    switch (*format) {
ffffffff80418278:	8d 47 db             	lea    -0x25(%rdi),%eax
ffffffff8041827b:	3c 53                	cmp    $0x53,%al
ffffffff8041827d:	77 23                	ja     ffffffff804182a2 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x142>
ffffffff8041827f:	0f b6 c0             	movzbl %al,%eax
ffffffff80418282:	ff 24 c5 48 b5 41 80 	jmpq   *-0x7fbe4ab8(,%rax,8)
ffffffff80418289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        flags |=
ffffffff80418290:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
ffffffff80418294:	80 ce 01             	or     $0x1,%dh
        break;
ffffffff80418297:	49 83 c5 01          	add    $0x1,%r13
    switch (*format) {
ffffffff8041829b:	8d 47 db             	lea    -0x25(%rdi),%eax
ffffffff8041829e:	3c 53                	cmp    $0x53,%al
ffffffff804182a0:	76 dd                	jbe    ffffffff8041827f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x11f>
        out(*format, buffer, idx++, maxlen);
ffffffff804182a2:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
ffffffff804182a7:	e9 fc fe ff ff       	jmpq   ffffffff804181a8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x48>
ffffffff804182ac:	0f 1f 40 00          	nopl   0x0(%rax)
  unsigned int i = 0U;
ffffffff804182b0:	31 db                	xor    %ebx,%ebx
ffffffff804182b2:	eb 08                	jmp    ffffffff804182bc <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x15c>
ffffffff804182b4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804182b8:	48 83 c1 01          	add    $0x1,%rcx
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff804182bc:	8d 04 9b             	lea    (%rbx,%rbx,4),%eax
ffffffff804182bf:	4d 89 e8             	mov    %r13,%r8
ffffffff804182c2:	49 89 cd             	mov    %rcx,%r13
ffffffff804182c5:	8d 5c 47 d0          	lea    -0x30(%rdi,%rax,2),%ebx
  while (_is_digit(**str)) {
ffffffff804182c9:	0f be 39             	movsbl (%rcx),%edi
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff804182cc:	8d 47 d0             	lea    -0x30(%rdi),%eax
  while (_is_digit(**str)) {
ffffffff804182cf:	3c 09                	cmp    $0x9,%al
ffffffff804182d1:	76 e5                	jbe    ffffffff804182b8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x158>
ffffffff804182d3:	4d 8d 68 02          	lea    0x2(%r8),%r13
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff804182d7:	48 89 ce             	mov    %rcx,%rsi
    precision = 0U;
ffffffff804182da:	45 31 c0             	xor    %r8d,%r8d
    if (*format == '.') {
ffffffff804182dd:	40 80 ff 2e          	cmp    $0x2e,%dil
ffffffff804182e1:	0f 85 33 ff ff ff    	jne    ffffffff8041821a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
      if (_is_digit(*format)) {
ffffffff804182e7:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
      flags |= FLAGS_PRECISION;
ffffffff804182eb:	80 ce 04             	or     $0x4,%dh
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff804182ee:	8d 47 d0             	lea    -0x30(%rdi),%eax
      if (_is_digit(*format)) {
ffffffff804182f1:	3c 09                	cmp    $0x9,%al
ffffffff804182f3:	76 4b                	jbe    ffffffff80418340 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1e0>
      } else if (*format == '*') {
ffffffff804182f5:	40 80 ff 2a          	cmp    $0x2a,%dil
ffffffff804182f9:	0f 84 ab 03 00 00    	je     ffffffff804186aa <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x54a>
      format++;
ffffffff804182ff:	4c 89 ee             	mov    %r13,%rsi
      } else if (*format == '*') {
ffffffff80418302:	49 83 c5 01          	add    $0x1,%r13
ffffffff80418306:	e9 0f ff ff ff       	jmpq   ffffffff8041821a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
ffffffff8041830b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80418310:	45 89 e5             	mov    %r12d,%r13d
        break;
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
ffffffff80418313:	4d 39 e6             	cmp    %r12,%r14
ffffffff80418316:	49 8d 46 ff          	lea    -0x1(%r14),%rax
ffffffff8041831a:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041831d:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418320:	4c 0f 46 e0          	cmovbe %rax,%r12
ffffffff80418324:	31 ff                	xor    %edi,%edi
ffffffff80418326:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418329:	ff d5                	callq  *%rbp

  // return written chars without terminating \0
  return (int)idx;
}
ffffffff8041832b:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8041832f:	44 89 e8             	mov    %r13d,%eax
ffffffff80418332:	5b                   	pop    %rbx
ffffffff80418333:	5d                   	pop    %rbp
ffffffff80418334:	41 5c                	pop    %r12
ffffffff80418336:	41 5d                	pop    %r13
ffffffff80418338:	41 5e                	pop    %r14
ffffffff8041833a:	41 5f                	pop    %r15
ffffffff8041833c:	c3                   	retq   
ffffffff8041833d:	0f 1f 00             	nopl   (%rax)
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff80418340:	4c 89 e9             	mov    %r13,%rcx
ffffffff80418343:	43 8d 04 80          	lea    (%r8,%r8,4),%eax
ffffffff80418347:	49 83 c5 01          	add    $0x1,%r13
ffffffff8041834b:	44 8d 44 47 d0       	lea    -0x30(%rdi,%rax,2),%r8d
  while (_is_digit(**str)) {
ffffffff80418350:	41 0f be 7d 00       	movsbl 0x0(%r13),%edi
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff80418355:	8d 47 d0             	lea    -0x30(%rdi),%eax
  while (_is_digit(**str)) {
ffffffff80418358:	3c 09                	cmp    $0x9,%al
ffffffff8041835a:	76 e4                	jbe    ffffffff80418340 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1e0>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff8041835c:	4c 89 ee             	mov    %r13,%rsi
  while (_is_digit(**str)) {
ffffffff8041835f:	4c 8d 69 02          	lea    0x2(%rcx),%r13
ffffffff80418363:	e9 b2 fe ff ff       	jmpq   ffffffff8041821a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
ffffffff80418368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041836f:	00 
      const int w = va_arg(va, int);
ffffffff80418370:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff80418375:	8b 03                	mov    (%rbx),%eax
ffffffff80418377:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff8041837a:	76 34                	jbe    ffffffff804183b0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x250>
ffffffff8041837c:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff80418381:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffff80418385:	48 8d 41 08          	lea    0x8(%rcx),%rax
ffffffff80418389:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff8041838d:	8b 19                	mov    (%rcx),%ebx
      if (w < 0) {
ffffffff8041838f:	85 db                	test   %ebx,%ebx
ffffffff80418391:	79 05                	jns    ffffffff80418398 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x238>
        flags |= FLAGS_LEFT;  // reverse padding
ffffffff80418393:	83 ca 02             	or     $0x2,%edx
        width = (unsigned int)-w;
ffffffff80418396:	f7 db                	neg    %ebx
      format++;
ffffffff80418398:	41 0f be 7d 01       	movsbl 0x1(%r13),%edi
ffffffff8041839d:	49 83 c5 02          	add    $0x2,%r13
ffffffff804183a1:	e9 67 fe ff ff       	jmpq   ffffffff8041820d <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xad>
ffffffff804183a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804183ad:	00 00 00 
      const int w = va_arg(va, int);
ffffffff804183b0:	89 c1                	mov    %eax,%ecx
ffffffff804183b2:	83 c0 08             	add    $0x8,%eax
ffffffff804183b5:	48 03 4b 10          	add    0x10(%rbx),%rcx
ffffffff804183b9:	89 03                	mov    %eax,(%rbx)
ffffffff804183bb:	eb d0                	jmp    ffffffff8041838d <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x22d>
        if (*format == 'x' || *format == 'X') {
ffffffff804183bd:	40 80 ff 78          	cmp    $0x78,%dil
ffffffff804183c1:	0f 84 10 04 00 00    	je     ffffffff804187d7 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x677>
ffffffff804183c7:	40 80 ff 58          	cmp    $0x58,%dil
ffffffff804183cb:	0f 84 5e 03 00 00    	je     ffffffff8041872f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5cf>
        } else if (*format == 'o') {
ffffffff804183d1:	40 80 ff 6f          	cmp    $0x6f,%dil
ffffffff804183d5:	0f 84 2a 06 00 00    	je     ffffffff80418a05 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8a5>
        } else if (*format == 'b') {
ffffffff804183db:	40 80 ff 62          	cmp    $0x62,%dil
ffffffff804183df:	0f 84 b7 05 00 00    	je     ffffffff8041899c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x83c>
          flags &= ~FLAGS_HASH;  // no hash for dec format
ffffffff804183e5:	89 d0                	mov    %edx,%eax
ffffffff804183e7:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffff804183ec:	83 e0 ef             	and    $0xffffffef,%eax
        if ((*format != 'i') && (*format != 'd')) {
ffffffff804183ef:	40 80 ff 69          	cmp    $0x69,%dil
ffffffff804183f3:	0f 85 aa 05 00 00    	jne    ffffffff804189a3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x843>
        if (flags & FLAGS_PRECISION) {
ffffffff804183f9:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
ffffffff804183fe:	8b 0a                	mov    (%rdx),%ecx
ffffffff80418400:	f6 c4 04             	test   $0x4,%ah
ffffffff80418403:	0f 85 43 03 00 00    	jne    ffffffff8041874c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5ec>
ffffffff80418409:	89 c2                	mov    %eax,%edx
ffffffff8041840b:	81 e2 00 02 00 00    	and    $0x200,%edx
          if (flags & FLAGS_LONG_LONG) {
ffffffff80418411:	85 d2                	test   %edx,%edx
ffffffff80418413:	0f 85 9f 05 00 00    	jne    ffffffff804189b8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x858>
          } else if (flags & FLAGS_LONG) {
ffffffff80418419:	f6 c4 01             	test   $0x1,%ah
ffffffff8041841c:	0f 85 9a 06 00 00    	jne    ffffffff80418abc <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x95c>
                                  ? (char)va_arg(va, int)
ffffffff80418422:	a8 40                	test   $0x40,%al
ffffffff80418424:	0f 85 23 06 00 00    	jne    ffffffff80418a4d <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8ed>
                                        ? (short int)va_arg(va, int)
ffffffff8041842a:	a8 80                	test   $0x80,%al
ffffffff8041842c:	0f 84 06 07 00 00    	je     ffffffff80418b38 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9d8>
ffffffff80418432:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418435:	0f 87 9f 07 00 00    	ja     ffffffff80418bda <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa7a>
ffffffff8041843b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418440:	89 ca                	mov    %ecx,%edx
ffffffff80418442:	83 c1 08             	add    $0x8,%ecx
ffffffff80418445:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418447:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff8041844b:	44 0f bf 0a          	movswl (%rdx),%r9d
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff8041844f:	44 89 c9             	mov    %r9d,%ecx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418452:	50                   	push   %rax
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff80418453:	c1 f9 1f             	sar    $0x1f,%ecx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418456:	53                   	push   %rbx
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff80418457:	89 ca                	mov    %ecx,%edx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418459:	41 50                	push   %r8
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff8041845b:	44 31 ca             	xor    %r9d,%edx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff8041845e:	56                   	push   %rsi
ffffffff8041845f:	41 c1 e9 1f          	shr    $0x1f,%r9d
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff80418463:	29 ca                	sub    %ecx,%edx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418465:	4c 63 c2             	movslq %edx,%r8
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base,
ffffffff80418468:	4c 89 e2             	mov    %r12,%rdx
ffffffff8041846b:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041846e:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418471:	48 89 ef             	mov    %rbp,%rdi
ffffffff80418474:	e8 47 fb ff ff       	callq  ffffffff80417fc0 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj>
ffffffff80418479:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8041847d:	49 89 c4             	mov    %rax,%r12
        break;
ffffffff80418480:	e9 31 fd ff ff       	jmpq   ffffffff804181b6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        if (*format == 'h') {
ffffffff80418485:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
ffffffff80418489:	40 80 ff 68          	cmp    $0x68,%dil
ffffffff8041848d:	0f 84 63 03 00 00    	je     ffffffff804187f6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x696>
        flags |= FLAGS_SHORT;
ffffffff80418493:	80 ca 80             	or     $0x80,%dl
ffffffff80418496:	49 83 c5 01          	add    $0x1,%r13
ffffffff8041849a:	e9 d9 fd ff ff       	jmpq   ffffffff80418278 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
        const char* p = va_arg(va, char*);
ffffffff8041849f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff804184a4:	8b 06                	mov    (%rsi),%eax
ffffffff804184a6:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff804184a9:	0f 87 4b 02 00 00    	ja     ffffffff804186fa <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x59a>
ffffffff804184af:	89 c1                	mov    %eax,%ecx
ffffffff804184b1:	83 c0 08             	add    $0x8,%eax
ffffffff804184b4:	48 03 4e 10          	add    0x10(%rsi),%rcx
ffffffff804184b8:	89 06                	mov    %eax,(%rsi)
ffffffff804184ba:	4c 8b 09             	mov    (%rcx),%r9
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
ffffffff804184bd:	41 0f b6 09          	movzbl (%r9),%ecx
ffffffff804184c1:	45 85 c0             	test   %r8d,%r8d
ffffffff804184c4:	0f 85 51 02 00 00    	jne    ffffffff8041871b <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5bb>
  for (s = str; *s && maxsize--; ++s)
ffffffff804184ca:	48 c7 c7 fe ff ff ff 	mov    $0xfffffffffffffffe,%rdi
ffffffff804184d1:	84 c9                	test   %cl,%cl
ffffffff804184d3:	0f 84 96 06 00 00    	je     ffffffff80418b6f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa0f>
ffffffff804184d9:	48 83 c7 01          	add    $0x1,%rdi
ffffffff804184dd:	4c 89 c8             	mov    %r9,%rax
ffffffff804184e0:	49 8d 34 39          	lea    (%r9,%rdi,1),%rsi
ffffffff804184e4:	eb 13                	jmp    ffffffff804184f9 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x399>
ffffffff804184e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804184ed:	00 00 00 
ffffffff804184f0:	48 39 f0             	cmp    %rsi,%rax
ffffffff804184f3:	0f 84 d5 02 00 00    	je     ffffffff804187ce <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x66e>
ffffffff804184f9:	48 83 c0 01          	add    $0x1,%rax
ffffffff804184fd:	80 38 00             	cmpb   $0x0,(%rax)
ffffffff80418500:	75 ee                	jne    ffffffff804184f0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x390>
ffffffff80418502:	44 29 c8             	sub    %r9d,%eax
ffffffff80418505:	89 44 24 18          	mov    %eax,0x18(%rsp)
        if (flags & FLAGS_PRECISION) {
ffffffff80418509:	89 d0                	mov    %edx,%eax
ffffffff8041850b:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80418510:	89 04 24             	mov    %eax,(%rsp)
ffffffff80418513:	74 0f                	je     ffffffff80418524 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3c4>
          l = (l < precision ? l : precision);
ffffffff80418515:	8b 44 24 18          	mov    0x18(%rsp),%eax
ffffffff80418519:	44 39 c0             	cmp    %r8d,%eax
ffffffff8041851c:	41 0f 47 c0          	cmova  %r8d,%eax
ffffffff80418520:	89 44 24 18          	mov    %eax,0x18(%rsp)
        if (!(flags & FLAGS_LEFT)) {
ffffffff80418524:	83 e2 02             	and    $0x2,%edx
ffffffff80418527:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
ffffffff8041852b:	0f 84 02 03 00 00    	je     ffffffff80418833 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6d3>
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418531:	84 c9                	test   %cl,%cl
ffffffff80418533:	0f 84 f5 03 00 00    	je     ffffffff8041892e <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x7ce>
ffffffff80418539:	4d 29 e1             	sub    %r12,%r9
ffffffff8041853c:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
ffffffff80418541:	45 89 c5             	mov    %r8d,%r13d
ffffffff80418544:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
ffffffff80418549:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
ffffffff8041854d:	eb 04                	jmp    ffffffff80418553 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3f3>
ffffffff8041854f:	90                   	nop
          out(*(p++), buffer, idx++, maxlen);
ffffffff80418550:	49 89 dc             	mov    %rbx,%r12
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418553:	8b 14 24             	mov    (%rsp),%edx
ffffffff80418556:	85 d2                	test   %edx,%edx
ffffffff80418558:	74 10                	je     ffffffff8041856a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x40a>
ffffffff8041855a:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff8041855e:	45 85 ed             	test   %r13d,%r13d
ffffffff80418561:	0f 84 af 02 00 00    	je     ffffffff80418816 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6b6>
ffffffff80418567:	41 89 d5             	mov    %edx,%r13d
          out(*(p++), buffer, idx++, maxlen);
ffffffff8041856a:	0f be f9             	movsbl %cl,%edi
ffffffff8041856d:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418570:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418573:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418576:	ff d5                	callq  *%rbp
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418578:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
          out(*(p++), buffer, idx++, maxlen);
ffffffff8041857d:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418582:	41 0f b6 4c 04 01    	movzbl 0x1(%r12,%rax,1),%ecx
ffffffff80418588:	84 c9                	test   %cl,%cl
ffffffff8041858a:	75 c4                	jne    ffffffff80418550 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3f0>
ffffffff8041858c:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80418590:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffff80418595:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
        if (flags & FLAGS_LEFT) {
ffffffff80418599:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
ffffffff8041859d:	85 c0                	test   %eax,%eax
ffffffff8041859f:	0f 85 85 03 00 00    	jne    ffffffff8041892a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x7ca>
        break;
ffffffff804185a5:	4c 8b 24 24          	mov    (%rsp),%r12
ffffffff804185a9:	e9 08 fc ff ff       	jmpq   ffffffff804181b6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        out('%', buffer, idx++, maxlen);
ffffffff804185ae:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
ffffffff804185b3:	4c 89 e2             	mov    %r12,%rdx
ffffffff804185b6:	4c 89 f1             	mov    %r14,%rcx
ffffffff804185b9:	4c 89 fe             	mov    %r15,%rsi
ffffffff804185bc:	bf 25 00 00 00       	mov    $0x25,%edi
ffffffff804185c1:	49 89 dc             	mov    %rbx,%r12
ffffffff804185c4:	ff d5                	callq  *%rbp
        break;
ffffffff804185c6:	e9 eb fb ff ff       	jmpq   ffffffff804181b6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
                                (uintptr_t)va_arg(va, void*), false, 16U,
ffffffff804185cb:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
ffffffff804185d0:	83 ca 21             	or     $0x21,%edx
                                (uintptr_t)va_arg(va, void*), false, 16U,
ffffffff804185d3:	8b 03                	mov    (%rbx),%eax
ffffffff804185d5:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff804185d8:	0f 87 06 01 00 00    	ja     ffffffff804186e4 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x584>
ffffffff804185de:	89 c1                	mov    %eax,%ecx
ffffffff804185e0:	83 c0 08             	add    $0x8,%eax
ffffffff804185e3:	48 03 4b 10          	add    0x10(%rbx),%rcx
ffffffff804185e7:	89 03                	mov    %eax,(%rbx)
          idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff804185e9:	52                   	push   %rdx
ffffffff804185ea:	45 31 c9             	xor    %r9d,%r9d
ffffffff804185ed:	6a 10                	pushq  $0x10
ffffffff804185ef:	41 50                	push   %r8
ffffffff804185f1:	6a 10                	pushq  $0x10
ffffffff804185f3:	4c 8b 01             	mov    (%rcx),%r8
ffffffff804185f6:	4c 89 e2             	mov    %r12,%rdx
ffffffff804185f9:	4c 89 f1             	mov    %r14,%rcx
ffffffff804185fc:	4c 89 fe             	mov    %r15,%rsi
ffffffff804185ff:	48 89 ef             	mov    %rbp,%rdi
ffffffff80418602:	e8 89 fa ff ff       	callq  ffffffff80418090 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj>
        break;
ffffffff80418607:	48 83 c4 20          	add    $0x20,%rsp
          idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff8041860b:	49 89 c4             	mov    %rax,%r12
        break;
ffffffff8041860e:	e9 a3 fb ff ff       	jmpq   ffffffff804181b6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        if (!(flags & FLAGS_LEFT)) {
ffffffff80418613:	49 8d 44 24 01       	lea    0x1(%r12),%rax
ffffffff80418618:	83 e2 02             	and    $0x2,%edx
ffffffff8041861b:	49 89 c0             	mov    %rax,%r8
ffffffff8041861e:	0f 84 97 02 00 00    	je     ffffffff804188bb <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x75b>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff80418624:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418629:	8b 16                	mov    (%rsi),%edx
ffffffff8041862b:	83 fa 2f             	cmp    $0x2f,%edx
ffffffff8041862e:	0f 87 84 01 00 00    	ja     ffffffff804187b8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x658>
ffffffff80418634:	89 d1                	mov    %edx,%ecx
ffffffff80418636:	83 c2 08             	add    $0x8,%edx
ffffffff80418639:	48 03 4e 10          	add    0x10(%rsi),%rcx
ffffffff8041863d:	89 16                	mov    %edx,(%rsi)
ffffffff8041863f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80418644:	0f be 39             	movsbl (%rcx),%edi
ffffffff80418647:	4c 89 e2             	mov    %r12,%rdx
ffffffff8041864a:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041864d:	4c 89 04 24          	mov    %r8,(%rsp)
ffffffff80418651:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418654:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418656:	83 fb 01             	cmp    $0x1,%ebx
ffffffff80418659:	4c 8b 04 24          	mov    (%rsp),%r8
ffffffff8041865d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80418662:	0f 86 9c 05 00 00    	jbe    ffffffff80418c04 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xaa4>
ffffffff80418668:	49 8d 44 24 02       	lea    0x2(%r12),%rax
ffffffff8041866d:	83 eb 02             	sub    $0x2,%ebx
ffffffff80418670:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80418674:	4c 8d 24 18          	lea    (%rax,%rbx,1),%r12
ffffffff80418678:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff8041867d:	4c 89 c3             	mov    %r8,%rbx
            out(' ', buffer, idx++, maxlen);
ffffffff80418680:	48 89 da             	mov    %rbx,%rdx
ffffffff80418683:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80418687:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041868a:	4c 89 fe             	mov    %r15,%rsi
ffffffff8041868d:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418692:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418694:	4c 39 e3             	cmp    %r12,%rbx
ffffffff80418697:	75 e7                	jne    ffffffff80418680 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x520>
ffffffff80418699:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff8041869e:	4c 8b 24 24          	mov    (%rsp),%r12
ffffffff804186a2:	49 01 dc             	add    %rbx,%r12
        break;
ffffffff804186a5:	e9 0c fb ff ff       	jmpq   ffffffff804181b6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        const int prec = (int)va_arg(va, int);
ffffffff804186aa:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff804186af:	8b 0f                	mov    (%rdi),%ecx
ffffffff804186b1:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff804186b4:	0f 87 cc 02 00 00    	ja     ffffffff80418986 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x826>
ffffffff804186ba:	89 c8                	mov    %ecx,%eax
ffffffff804186bc:	83 c1 08             	add    $0x8,%ecx
ffffffff804186bf:	48 03 47 10          	add    0x10(%rdi),%rax
ffffffff804186c3:	89 0f                	mov    %ecx,(%rdi)
        precision = prec > 0 ? (unsigned int)prec : 0U;
ffffffff804186c5:	8b 08                	mov    (%rax),%ecx
ffffffff804186c7:	0f be 7e 02          	movsbl 0x2(%rsi),%edi
ffffffff804186cb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff804186d1:	4c 8d 6e 03          	lea    0x3(%rsi),%r13
ffffffff804186d5:	85 c9                	test   %ecx,%ecx
ffffffff804186d7:	44 0f 49 00          	cmovns (%rax),%r8d
        format++;
ffffffff804186db:	48 83 c6 02          	add    $0x2,%rsi
ffffffff804186df:	e9 36 fb ff ff       	jmpq   ffffffff8041821a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
                                (uintptr_t)va_arg(va, void*), false, 16U,
ffffffff804186e4:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff804186e9:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffff804186ed:	48 8d 41 08          	lea    0x8(%rcx),%rax
ffffffff804186f1:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff804186f5:	e9 ef fe ff ff       	jmpq   ffffffff804185e9 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x489>
        const char* p = va_arg(va, char*);
ffffffff804186fa:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff804186ff:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff80418703:	48 8d 41 08          	lea    0x8(%rcx),%rax
ffffffff80418707:	48 89 46 08          	mov    %rax,0x8(%rsi)
ffffffff8041870b:	4c 8b 09             	mov    (%rcx),%r9
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
ffffffff8041870e:	41 0f b6 09          	movzbl (%r9),%ecx
ffffffff80418712:	45 85 c0             	test   %r8d,%r8d
ffffffff80418715:	0f 84 af fd ff ff    	je     ffffffff804184ca <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x36a>
ffffffff8041871b:	44 89 c7             	mov    %r8d,%edi
  for (s = str; *s && maxsize--; ++s)
ffffffff8041871e:	84 c9                	test   %cl,%cl
ffffffff80418720:	0f 84 49 04 00 00    	je     ffffffff80418b6f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa0f>
ffffffff80418726:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff8041872a:	e9 aa fd ff ff       	jmpq   ffffffff804184d9 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x379>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
ffffffff8041872f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418734:	89 d0                	mov    %edx,%eax
ffffffff80418736:	83 e0 f3             	and    $0xfffffff3,%eax
ffffffff80418739:	8b 0e                	mov    (%rsi),%ecx
ffffffff8041873b:	83 c8 20             	or     $0x20,%eax
        if (flags & FLAGS_PRECISION) {
ffffffff8041873e:	f6 c6 04             	test   $0x4,%dh
ffffffff80418741:	0f 84 ae 02 00 00    	je     ffffffff804189f5 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x895>
ffffffff80418747:	be 10 00 00 00       	mov    $0x10,%esi
          flags &= ~FLAGS_ZEROPAD;
ffffffff8041874c:	83 e0 fe             	and    $0xfffffffe,%eax
        if ((*format == 'i') || (*format == 'd')) {
ffffffff8041874f:	89 c2                	mov    %eax,%edx
ffffffff80418751:	81 e2 00 02 00 00    	and    $0x200,%edx
ffffffff80418757:	40 80 ff 64          	cmp    $0x64,%dil
ffffffff8041875b:	0f 84 b0 fc ff ff    	je     ffffffff80418411 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2b1>
ffffffff80418761:	40 80 ff 69          	cmp    $0x69,%dil
ffffffff80418765:	0f 84 a6 fc ff ff    	je     ffffffff80418411 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2b1>
          if (flags & FLAGS_LONG_LONG) {
ffffffff8041876b:	85 d2                	test   %edx,%edx
ffffffff8041876d:	0f 85 9b 02 00 00    	jne    ffffffff80418a0e <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8ae>
          } else if (flags & FLAGS_LONG) {
ffffffff80418773:	f6 c4 01             	test   $0x1,%ah
ffffffff80418776:	0f 85 7d 03 00 00    	jne    ffffffff80418af9 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x999>
                    ? (unsigned char)va_arg(va, unsigned int)
ffffffff8041877c:	a8 40                	test   $0x40,%al
ffffffff8041877e:	0f 85 eb 02 00 00    	jne    ffffffff80418a6f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x90f>
                          ? (unsigned short int)va_arg(va, unsigned int)
ffffffff80418784:	a8 80                	test   $0x80,%al
ffffffff80418786:	0f 84 1c 04 00 00    	je     ffffffff80418ba8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa48>
ffffffff8041878c:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff8041878f:	0f 87 8f 04 00 00    	ja     ffffffff80418c24 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xac4>
ffffffff80418795:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8041879a:	89 ca                	mov    %ecx,%edx
ffffffff8041879c:	83 c1 08             	add    $0x8,%ecx
ffffffff8041879f:	89 0f                	mov    %ecx,(%rdi)
ffffffff804187a1:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff804187a5:	0f b7 12             	movzwl (%rdx),%edx
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base,
ffffffff804187a8:	50                   	push   %rax
ffffffff804187a9:	45 31 c9             	xor    %r9d,%r9d
ffffffff804187ac:	53                   	push   %rbx
ffffffff804187ad:	41 50                	push   %r8
ffffffff804187af:	41 89 d0             	mov    %edx,%r8d
ffffffff804187b2:	56                   	push   %rsi
ffffffff804187b3:	e9 b0 fc ff ff       	jmpq   ffffffff80418468 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x308>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff804187b8:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff804187bd:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff804187c1:	48 8d 51 08          	lea    0x8(%rcx),%rdx
ffffffff804187c5:	48 89 56 08          	mov    %rdx,0x8(%rsi)
ffffffff804187c9:	e9 71 fe ff ff       	jmpq   ffffffff8041863f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x4df>
ffffffff804187ce:	89 7c 24 18          	mov    %edi,0x18(%rsp)
ffffffff804187d2:	e9 32 fd ff ff       	jmpq   ffffffff80418509 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3a9>
ffffffff804187d7:	be 10 00 00 00       	mov    $0x10,%esi
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
ffffffff804187dc:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff804187e1:	89 d0                	mov    %edx,%eax
ffffffff804187e3:	83 e0 f3             	and    $0xfffffff3,%eax
        if (flags & FLAGS_PRECISION) {
ffffffff804187e6:	8b 09                	mov    (%rcx),%ecx
ffffffff804187e8:	80 e6 04             	and    $0x4,%dh
ffffffff804187eb:	0f 84 5e ff ff ff    	je     ffffffff8041874f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5ef>
ffffffff804187f1:	e9 56 ff ff ff       	jmpq   ffffffff8041874c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5ec>
          flags |= FLAGS_CHAR;
ffffffff804187f6:	0f be 7e 02          	movsbl 0x2(%rsi),%edi
ffffffff804187fa:	80 ca c0             	or     $0xc0,%dl
          format++;
ffffffff804187fd:	4c 8d 6e 03          	lea    0x3(%rsi),%r13
ffffffff80418801:	e9 72 fa ff ff       	jmpq   ffffffff80418278 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
          flags |= FLAGS_LONG_LONG;
ffffffff80418806:	0f be 7e 02          	movsbl 0x2(%rsi),%edi
ffffffff8041880a:	80 ce 03             	or     $0x3,%dh
          format++;
ffffffff8041880d:	4c 8d 6e 03          	lea    0x3(%rsi),%r13
ffffffff80418811:	e9 62 fa ff ff       	jmpq   ffffffff80418278 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
ffffffff80418816:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
ffffffff8041881a:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffff8041881f:	4c 89 24 24          	mov    %r12,(%rsp)
ffffffff80418823:	e9 71 fd ff ff       	jmpq   ffffffff80418599 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x439>
  while (*format) {
ffffffff80418828:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041882b:	45 31 e4             	xor    %r12d,%r12d
ffffffff8041882e:	e9 e0 fa ff ff       	jmpq   ffffffff80418313 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1b3>
          while (l++ < width) {
ffffffff80418833:	8b 74 24 18          	mov    0x18(%rsp),%esi
ffffffff80418837:	8d 46 01             	lea    0x1(%rsi),%eax
ffffffff8041883a:	39 f3                	cmp    %esi,%ebx
ffffffff8041883c:	0f 86 b9 03 00 00    	jbe    ffffffff80418bfb <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa9b>
ffffffff80418842:	8d 53 ff             	lea    -0x1(%rbx),%edx
ffffffff80418845:	49 8d 44 24 01       	lea    0x1(%r12),%rax
ffffffff8041884a:	89 5c 24 08          	mov    %ebx,0x8(%rsp)
ffffffff8041884e:	29 f2                	sub    %esi,%edx
ffffffff80418850:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
ffffffff80418855:	49 89 c5             	mov    %rax,%r13
ffffffff80418858:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
ffffffff8041885c:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
ffffffff80418861:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
ffffffff80418866:	48 89 f3             	mov    %rsi,%rbx
ffffffff80418869:	eb 09                	jmp    ffffffff80418874 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x714>
ffffffff8041886b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80418870:	49 83 c5 01          	add    $0x1,%r13
            out(' ', buffer, idx++, maxlen);
ffffffff80418874:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418877:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041887a:	4d 89 ec             	mov    %r13,%r12
ffffffff8041887d:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418880:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418885:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418887:	49 39 dd             	cmp    %rbx,%r13
ffffffff8041888a:	75 e4                	jne    ffffffff80418870 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x710>
ffffffff8041888c:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
ffffffff80418890:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
ffffffff80418895:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
ffffffff8041889a:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffff8041889f:	8d 43 01             	lea    0x1(%rbx),%eax
ffffffff804188a2:	41 0f b6 09          	movzbl (%r9),%ecx
ffffffff804188a6:	89 44 24 18          	mov    %eax,0x18(%rsp)
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff804188aa:	84 c9                	test   %cl,%cl
ffffffff804188ac:	0f 85 87 fc ff ff    	jne    ffffffff80418539 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3d9>
ffffffff804188b2:	4c 89 24 24          	mov    %r12,(%rsp)
ffffffff804188b6:	e9 ea fc ff ff       	jmpq   ffffffff804185a5 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x445>
          while (l++ < width) {
ffffffff804188bb:	83 fb 01             	cmp    $0x1,%ebx
ffffffff804188be:	0f 86 2c 03 00 00    	jbe    ffffffff80418bf0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa90>
ffffffff804188c4:	8d 53 fe             	lea    -0x2(%rbx),%edx
ffffffff804188c7:	4c 89 2c 24          	mov    %r13,(%rsp)
ffffffff804188cb:	49 89 c5             	mov    %rax,%r13
ffffffff804188ce:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
ffffffff804188d2:	eb 08                	jmp    ffffffff804188dc <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x77c>
ffffffff804188d4:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804188d8:	49 83 c5 01          	add    $0x1,%r13
            out(' ', buffer, idx++, maxlen);
ffffffff804188dc:	4c 89 e2             	mov    %r12,%rdx
ffffffff804188df:	4c 89 f1             	mov    %r14,%rcx
ffffffff804188e2:	4d 89 ec             	mov    %r13,%r12
ffffffff804188e5:	4c 89 fe             	mov    %r15,%rsi
ffffffff804188e8:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff804188ed:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff804188ef:	49 39 dd             	cmp    %rbx,%r13
ffffffff804188f2:	75 e4                	jne    ffffffff804188d8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x778>
ffffffff804188f4:	4c 8b 2c 24          	mov    (%rsp),%r13
ffffffff804188f8:	49 83 c4 01          	add    $0x1,%r12
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff804188fc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418901:	8b 06                	mov    (%rsi),%eax
ffffffff80418903:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80418906:	0f 87 2b 01 00 00    	ja     ffffffff80418a37 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8d7>
ffffffff8041890c:	89 c2                	mov    %eax,%edx
ffffffff8041890e:	83 c0 08             	add    $0x8,%eax
ffffffff80418911:	48 03 56 10          	add    0x10(%rsi),%rdx
ffffffff80418915:	89 06                	mov    %eax,(%rsi)
ffffffff80418917:	0f be 3a             	movsbl (%rdx),%edi
ffffffff8041891a:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041891d:	48 89 da             	mov    %rbx,%rdx
ffffffff80418920:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418923:	ff d5                	callq  *%rbp
        if (flags & FLAGS_LEFT) {
ffffffff80418925:	e9 8c f8 ff ff       	jmpq   ffffffff804181b6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
ffffffff8041892a:	4c 8b 24 24          	mov    (%rsp),%r12
          while (l++ < width) {
ffffffff8041892e:	8b 44 24 18          	mov    0x18(%rsp),%eax
ffffffff80418932:	39 c3                	cmp    %eax,%ebx
ffffffff80418934:	0f 86 78 ff ff ff    	jbe    ffffffff804188b2 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x752>
ffffffff8041893a:	44 8d 5b ff          	lea    -0x1(%rbx),%r11d
ffffffff8041893e:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
ffffffff80418943:	41 29 c3             	sub    %eax,%r11d
ffffffff80418946:	49 8d 44 24 01       	lea    0x1(%r12),%rax
ffffffff8041894b:	49 8d 1c 03          	lea    (%r11,%rax,1),%rbx
ffffffff8041894f:	49 89 c5             	mov    %rax,%r13
ffffffff80418952:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80418956:	eb 0c                	jmp    ffffffff80418964 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x804>
ffffffff80418958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041895f:	00 
ffffffff80418960:	49 83 c5 01          	add    $0x1,%r13
            out(' ', buffer, idx++, maxlen);
ffffffff80418964:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418967:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041896a:	4d 89 ec             	mov    %r13,%r12
ffffffff8041896d:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418970:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418975:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418977:	49 39 dd             	cmp    %rbx,%r13
ffffffff8041897a:	75 e4                	jne    ffffffff80418960 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x800>
ffffffff8041897c:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
ffffffff80418981:	e9 1f fc ff ff       	jmpq   ffffffff804185a5 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x445>
        const int prec = (int)va_arg(va, int);
ffffffff80418986:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8041898b:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff8041898f:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff80418993:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418997:	e9 29 fd ff ff       	jmpq   ffffffff804186c5 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x565>
ffffffff8041899c:	be 02 00 00 00       	mov    $0x2,%esi
    precision = 0U;
ffffffff804189a1:	89 d0                	mov    %edx,%eax
        if ((*format != 'i') && (*format != 'd')) {
ffffffff804189a3:	40 80 ff 64          	cmp    $0x64,%dil
ffffffff804189a7:	0f 84 4c fa ff ff    	je     ffffffff804183f9 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x299>
ffffffff804189ad:	89 c2                	mov    %eax,%edx
ffffffff804189af:	e9 28 fe ff ff       	jmpq   ffffffff804187dc <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x67c>
ffffffff804189b4:	0f 1f 40 00          	nopl   0x0(%rax)
            const long long value = va_arg(va, long long);
ffffffff804189b8:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff804189bb:	0f 87 cf 00 00 00    	ja     ffffffff80418a90 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x930>
ffffffff804189c1:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff804189c6:	89 ca                	mov    %ecx,%edx
ffffffff804189c8:	83 c1 08             	add    $0x8,%ecx
ffffffff804189cb:	89 0f                	mov    %ecx,(%rdi)
ffffffff804189cd:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff804189d1:	4c 8b 0a             	mov    (%rdx),%r9
            idx = _ntoa_long_long(
ffffffff804189d4:	50                   	push   %rax
ffffffff804189d5:	53                   	push   %rbx
                (unsigned long long)(value > 0 ? value : 0 - value), value < 0,
ffffffff804189d6:	4c 89 ca             	mov    %r9,%rdx
            idx = _ntoa_long_long(
ffffffff804189d9:	41 50                	push   %r8
                (unsigned long long)(value > 0 ? value : 0 - value), value < 0,
ffffffff804189db:	48 c1 fa 3f          	sar    $0x3f,%rdx
            idx = _ntoa_long_long(
ffffffff804189df:	56                   	push   %rsi
                (unsigned long long)(value > 0 ? value : 0 - value), value < 0,
ffffffff804189e0:	48 89 d1             	mov    %rdx,%rcx
ffffffff804189e3:	4c 31 c9             	xor    %r9,%rcx
            idx = _ntoa_long_long(
ffffffff804189e6:	49 c1 e9 3f          	shr    $0x3f,%r9
ffffffff804189ea:	48 29 d1             	sub    %rdx,%rcx
ffffffff804189ed:	49 89 c8             	mov    %rcx,%r8
ffffffff804189f0:	e9 01 fc ff ff       	jmpq   ffffffff804185f6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x496>
        if ((*format == 'i') || (*format == 'd')) {
ffffffff804189f5:	81 e2 00 02 00 00    	and    $0x200,%edx
        if (flags & FLAGS_PRECISION) {
ffffffff804189fb:	be 10 00 00 00       	mov    $0x10,%esi
ffffffff80418a00:	e9 66 fd ff ff       	jmpq   ffffffff8041876b <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x60b>
ffffffff80418a05:	be 08 00 00 00       	mov    $0x8,%esi
    precision = 0U;
ffffffff80418a0a:	89 d0                	mov    %edx,%eax
ffffffff80418a0c:	eb 95                	jmp    ffffffff804189a3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x843>
            idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff80418a0e:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418a11:	0f 87 8f 00 00 00    	ja     ffffffff80418aa6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x946>
ffffffff80418a17:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418a1c:	89 ca                	mov    %ecx,%edx
ffffffff80418a1e:	83 c1 08             	add    $0x8,%ecx
ffffffff80418a21:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418a23:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418a27:	50                   	push   %rax
ffffffff80418a28:	45 31 c9             	xor    %r9d,%r9d
ffffffff80418a2b:	53                   	push   %rbx
ffffffff80418a2c:	41 50                	push   %r8
ffffffff80418a2e:	56                   	push   %rsi
ffffffff80418a2f:	4c 8b 02             	mov    (%rdx),%r8
ffffffff80418a32:	e9 bf fb ff ff       	jmpq   ffffffff804185f6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x496>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff80418a37:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418a3c:	48 8b 56 08          	mov    0x8(%rsi),%rdx
ffffffff80418a40:	48 8d 42 08          	lea    0x8(%rdx),%rax
ffffffff80418a44:	48 89 46 08          	mov    %rax,0x8(%rsi)
ffffffff80418a48:	e9 ca fe ff ff       	jmpq   ffffffff80418917 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x7b7>
                                  ? (char)va_arg(va, int)
ffffffff80418a4d:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418a50:	0f 87 cc 00 00 00    	ja     ffffffff80418b22 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9c2>
ffffffff80418a56:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418a5b:	89 ca                	mov    %ecx,%edx
ffffffff80418a5d:	83 c1 08             	add    $0x8,%ecx
ffffffff80418a60:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418a62:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418a66:	44 0f be 0a          	movsbl (%rdx),%r9d
ffffffff80418a6a:	e9 e0 f9 ff ff       	jmpq   ffffffff8041844f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2ef>
                    ? (unsigned char)va_arg(va, unsigned int)
ffffffff80418a6f:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418a72:	0f 87 04 01 00 00    	ja     ffffffff80418b7c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa1c>
ffffffff80418a78:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418a7d:	89 ca                	mov    %ecx,%edx
ffffffff80418a7f:	83 c1 08             	add    $0x8,%ecx
ffffffff80418a82:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418a84:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418a88:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80418a8b:	e9 18 fd ff ff       	jmpq   ffffffff804187a8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x648>
            const long long value = va_arg(va, long long);
ffffffff80418a90:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418a95:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418a99:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418a9d:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418aa1:	e9 2b ff ff ff       	jmpq   ffffffff804189d1 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x871>
            idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff80418aa6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418aab:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418aaf:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418ab3:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418ab7:	e9 6b ff ff ff       	jmpq   ffffffff80418a27 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8c7>
            const long value = va_arg(va, long);
ffffffff80418abc:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418abf:	0f 87 94 00 00 00    	ja     ffffffff80418b59 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9f9>
ffffffff80418ac5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418aca:	89 ca                	mov    %ecx,%edx
ffffffff80418acc:	83 c1 08             	add    $0x8,%ecx
ffffffff80418acf:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418ad1:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418ad5:	4c 8b 0a             	mov    (%rdx),%r9
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418ad8:	50                   	push   %rax
ffffffff80418ad9:	53                   	push   %rbx
                             (unsigned long)(value > 0 ? value : 0 - value),
ffffffff80418ada:	4c 89 ca             	mov    %r9,%rdx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418add:	41 50                	push   %r8
                             (unsigned long)(value > 0 ? value : 0 - value),
ffffffff80418adf:	48 c1 fa 3f          	sar    $0x3f,%rdx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418ae3:	56                   	push   %rsi
                             (unsigned long)(value > 0 ? value : 0 - value),
ffffffff80418ae4:	48 89 d1             	mov    %rdx,%rcx
ffffffff80418ae7:	4c 31 c9             	xor    %r9,%rcx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80418aea:	49 c1 e9 3f          	shr    $0x3f,%r9
ffffffff80418aee:	48 29 d1             	sub    %rdx,%rcx
ffffffff80418af1:	49 89 c8             	mov    %rcx,%r8
ffffffff80418af4:	e9 6f f9 ff ff       	jmpq   ffffffff80418468 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x308>
                _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long),
ffffffff80418af9:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418afc:	0f 87 90 00 00 00    	ja     ffffffff80418b92 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa32>
ffffffff80418b02:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418b07:	89 ca                	mov    %ecx,%edx
ffffffff80418b09:	83 c1 08             	add    $0x8,%ecx
ffffffff80418b0c:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418b0e:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418b12:	50                   	push   %rax
ffffffff80418b13:	45 31 c9             	xor    %r9d,%r9d
ffffffff80418b16:	53                   	push   %rbx
ffffffff80418b17:	41 50                	push   %r8
ffffffff80418b19:	56                   	push   %rsi
ffffffff80418b1a:	4c 8b 02             	mov    (%rdx),%r8
ffffffff80418b1d:	e9 46 f9 ff ff       	jmpq   ffffffff80418468 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x308>
                                  ? (char)va_arg(va, int)
ffffffff80418b22:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418b27:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418b2b:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418b2f:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418b33:	e9 2e ff ff ff       	jmpq   ffffffff80418a66 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x906>
                                        ? (short int)va_arg(va, int)
ffffffff80418b38:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418b3b:	0f 87 83 00 00 00    	ja     ffffffff80418bc4 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa64>
ffffffff80418b41:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418b46:	89 ca                	mov    %ecx,%edx
ffffffff80418b48:	83 c1 08             	add    $0x8,%ecx
ffffffff80418b4b:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418b4d:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418b51:	44 8b 0a             	mov    (%rdx),%r9d
ffffffff80418b54:	e9 f6 f8 ff ff       	jmpq   ffffffff8041844f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2ef>
            const long value = va_arg(va, long);
ffffffff80418b59:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418b5e:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418b62:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418b66:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418b6a:	e9 66 ff ff ff       	jmpq   ffffffff80418ad5 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x975>
  for (s = str; *s && maxsize--; ++s)
ffffffff80418b6f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
ffffffff80418b76:	00 
ffffffff80418b77:	e9 8d f9 ff ff       	jmpq   ffffffff80418509 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3a9>
                    ? (unsigned char)va_arg(va, unsigned int)
ffffffff80418b7c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418b81:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418b85:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418b89:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418b8d:	e9 f6 fe ff ff       	jmpq   ffffffff80418a88 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x928>
                _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long),
ffffffff80418b92:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418b97:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418b9b:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418b9f:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418ba3:	e9 6a ff ff ff       	jmpq   ffffffff80418b12 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9b2>
                          ? (unsigned short int)va_arg(va, unsigned int)
ffffffff80418ba8:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418bab:	77 5f                	ja     ffffffff80418c0c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xaac>
ffffffff80418bad:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418bb2:	89 ca                	mov    %ecx,%edx
ffffffff80418bb4:	83 c1 08             	add    $0x8,%ecx
ffffffff80418bb7:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418bbb:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418bbd:	8b 12                	mov    (%rdx),%edx
ffffffff80418bbf:	e9 e4 fb ff ff       	jmpq   ffffffff804187a8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x648>
                                        ? (short int)va_arg(va, int)
ffffffff80418bc4:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418bc9:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418bcd:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418bd1:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418bd5:	e9 77 ff ff ff       	jmpq   ffffffff80418b51 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9f1>
ffffffff80418bda:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418bdf:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418be3:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418be7:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418beb:	e9 5b f8 ff ff       	jmpq   ffffffff8041844b <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2eb>
          while (l++ < width) {
ffffffff80418bf0:	4c 89 e3             	mov    %r12,%rbx
ffffffff80418bf3:	49 89 c4             	mov    %rax,%r12
ffffffff80418bf6:	e9 01 fd ff ff       	jmpq   ffffffff804188fc <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x79c>
          while (l++ < width) {
ffffffff80418bfb:	89 44 24 18          	mov    %eax,0x18(%rsp)
ffffffff80418bff:	e9 a6 fc ff ff       	jmpq   ffffffff804188aa <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x74a>
          while (l++ < width) {
ffffffff80418c04:	49 89 c4             	mov    %rax,%r12
ffffffff80418c07:	e9 aa f5 ff ff       	jmpq   ffffffff804181b6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
                          ? (unsigned short int)va_arg(va, unsigned int)
ffffffff80418c0c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418c11:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418c15:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418c19:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418c1d:	8b 12                	mov    (%rdx),%edx
ffffffff80418c1f:	e9 84 fb ff ff       	jmpq   ffffffff804187a8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x648>
ffffffff80418c24:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418c29:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80418c2d:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80418c31:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418c35:	e9 6b fb ff ff       	jmpq   ffffffff804187a5 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x645>
ffffffff80418c3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80418c40 <_ZL8_out_fctcPvmm>:
  if (character) {
ffffffff80418c40:	40 84 ff             	test   %dil,%dil
ffffffff80418c43:	74 13                	je     ffffffff80418c58 <_ZL8_out_fctcPvmm+0x18>
        ->fct(character, ((out_fct_wrap_type*)buffer)->arg);
ffffffff80418c45:	4c 8b 46 08          	mov    0x8(%rsi),%r8
ffffffff80418c49:	48 8b 06             	mov    (%rsi),%rax
ffffffff80418c4c:	40 0f be ff          	movsbl %dil,%edi
ffffffff80418c50:	4c 89 c6             	mov    %r8,%rsi
ffffffff80418c53:	ff e0                	jmpq   *%rax
ffffffff80418c55:	0f 1f 00             	nopl   (%rax)
}
ffffffff80418c58:	c3                   	retq   
ffffffff80418c59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80418c60 <_ZL9_out_charcPvmm>:
  if (character) {
ffffffff80418c60:	40 84 ff             	test   %dil,%dil
ffffffff80418c63:	75 0b                	jne    ffffffff80418c70 <_ZL9_out_charcPvmm+0x10>
ffffffff80418c65:	c3                   	retq   
ffffffff80418c66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80418c6d:	00 00 00 
                             size_t maxlen) {
ffffffff80418c70:	41 57                	push   %r15
ffffffff80418c72:	41 56                	push   %r14
ffffffff80418c74:	41 55                	push   %r13
      if (str_[i] == c) {
ffffffff80418c76:	45 31 ed             	xor    %r13d,%r13d
ffffffff80418c79:	41 54                	push   %r12
ffffffff80418c7b:	55                   	push   %rbp
ffffffff80418c7c:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff80418c81:	53                   	push   %rbx
ffffffff80418c82:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80418c86:	4c 8b 25 d3 53 00 00 	mov    0x53d3(%rip),%r12        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80418c8d:	48 8b 35 d4 53 00 00 	mov    0x53d4(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80418c94:	40 88 7c 24 27       	mov    %dil,0x27(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff80418c99:	48 8b 05 d8 53 00 00 	mov    0x53d8(%rip),%rax        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
  if (character) {
ffffffff80418ca0:	4c 8d 44 24 27       	lea    0x27(%rsp),%r8
ffffffff80418ca5:	4b 8d 4c a4 fb       	lea    -0x5(%r12,%r12,4),%rcx
ffffffff80418caa:	48 8b 15 bf 53 00 00 	mov    0x53bf(%rip),%rdx        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80418cb1:	48 89 cf             	mov    %rcx,%rdi
ffffffff80418cb4:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff80418cb8:	48 01 f1             	add    %rsi,%rcx
ffffffff80418cbb:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80418cbf:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff80418cc6:	80 
ffffffff80418cc7:	48 8d 9f 60 e0 41 80 	lea    -0x7fbe1fa0(%rdi),%rbx
ffffffff80418cce:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
ffffffff80418cd3:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80418cd8:	48 c7 c3 60 e0 41 80 	mov    $0xffffffff8041e060,%rbx
ffffffff80418cdf:	90                   	nop
ffffffff80418ce0:	48 89 f7             	mov    %rsi,%rdi
ffffffff80418ce3:	48 29 c7             	sub    %rax,%rdi
ffffffff80418ce6:	48 0f 45 fd          	cmovne %rbp,%rdi
    for (; i < min(size_, pos + count); i++) {
ffffffff80418cea:	48 39 f0             	cmp    %rsi,%rax
ffffffff80418ced:	0f 84 95 02 00 00    	je     ffffffff80418f88 <_ZL9_out_charcPvmm+0x328>
      if (str_[i] == c) {
ffffffff80418cf3:	41 80 38 0a          	cmpb   $0xa,(%r8)
ffffffff80418cf7:	4d 89 eb             	mov    %r13,%r11
ffffffff80418cfa:	41 0f 94 c1          	sete   %r9b
ffffffff80418cfe:	4c 0f 45 df          	cmovne %rdi,%r11
ffffffff80418d02:	45 0f b6 c9          	movzbl %r9b,%r9d
ffffffff80418d06:	49 83 e9 01          	sub    $0x1,%r9
    if (current_row_ == num_rows_) {
ffffffff80418d0a:	49 39 d4             	cmp    %rdx,%r12
ffffffff80418d0d:	0f 84 6d 01 00 00    	je     ffffffff80418e80 <_ZL9_out_charcPvmm+0x220>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80418d13:	49 8d 0c 03          	lea    (%r11,%rax,1),%rcx
ffffffff80418d17:	48 39 f1             	cmp    %rsi,%rcx
ffffffff80418d1a:	48 0f 47 ce          	cmova  %rsi,%rcx
ffffffff80418d1e:	48 39 c8             	cmp    %rcx,%rax
ffffffff80418d21:	0f 83 fb 01 00 00    	jae    ffffffff80418f22 <_ZL9_out_charcPvmm+0x2c2>
ffffffff80418d27:	4c 8d 14 92          	lea    (%rdx,%rdx,4),%r10
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff80418d2b:	4d 89 c7             	mov    %r8,%r15
ffffffff80418d2e:	49 c1 e2 05          	shl    $0x5,%r10
ffffffff80418d32:	49 29 c7             	sub    %rax,%r15
ffffffff80418d35:	0f 1f 00             	nopl   (%rax)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80418d38:	66 45 0f be 34 07    	movsbw (%r15,%rax,1),%r14w
ffffffff80418d3e:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80418d44:	66 45 89 b4 42 80 e0 	mov    %r14w,-0x7fbe1f80(%r10,%rax,2)
ffffffff80418d4b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80418d4d:	48 83 c0 01          	add    $0x1,%rax
ffffffff80418d51:	48 39 c8             	cmp    %rcx,%rax
ffffffff80418d54:	75 e2                	jne    ffffffff80418d38 <_ZL9_out_charcPvmm+0xd8>
    if (current_col_ == num_cols_) {
ffffffff80418d56:	48 39 ce             	cmp    %rcx,%rsi
ffffffff80418d59:	0f 84 f1 00 00 00    	je     ffffffff80418e50 <_ZL9_out_charcPvmm+0x1f0>
    current_col_ = i;
ffffffff80418d5f:	48 89 0d 12 53 00 00 	mov    %rcx,0x5312(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80418d66:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff80418d6a:	0f 84 fe 00 00 00    	je     ffffffff80418e6e <_ZL9_out_charcPvmm+0x20e>
ffffffff80418d70:	48 85 c9             	test   %rcx,%rcx
ffffffff80418d73:	74 0a                	je     ffffffff80418d7f <_ZL9_out_charcPvmm+0x11f>
ffffffff80418d75:	48 83 fa 18          	cmp    $0x18,%rdx
ffffffff80418d79:	0f 86 b1 01 00 00    	jbe    ffffffff80418f30 <_ZL9_out_charcPvmm+0x2d0>
    size_ -= min(n, size_);
ffffffff80418d7f:	48 89 e8             	mov    %rbp,%rax
    str_ += n;
ffffffff80418d82:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff80418d85:	48 29 f8             	sub    %rdi,%rax
ffffffff80418d88:	48 89 c7             	mov    %rax,%rdi
ffffffff80418d8b:	48 89 c8             	mov    %rcx,%rax
    while (!s.empty()) {
ffffffff80418d8e:	48 85 ff             	test   %rdi,%rdi
ffffffff80418d91:	0f 85 49 ff ff ff    	jne    ffffffff80418ce0 <_ZL9_out_charcPvmm+0x80>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80418d97:	48 85 d2             	test   %rdx,%rdx
ffffffff80418d9a:	74 52                	je     ffffffff80418dee <_ZL9_out_charcPvmm+0x18e>
ffffffff80418d9c:	48 89 f0             	mov    %rsi,%rax
ffffffff80418d9f:	4c 8d 1c 36          	lea    (%rsi,%rsi,1),%r11
ffffffff80418da3:	48 f7 d8             	neg    %rax
ffffffff80418da6:	4c 8d 94 00 a0 00 00 	lea    0xa0(%rax,%rax,1),%r10
ffffffff80418dad:	00 
ffffffff80418dae:	b8 00 80 0b 00       	mov    $0xb8000,%eax
ffffffff80418db3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80418db8:	4d 8d 04 03          	lea    (%r11,%rax,1),%r8
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80418dbc:	48 85 f6             	test   %rsi,%rsi
ffffffff80418dbf:	74 1e                	je     ffffffff80418ddf <_ZL9_out_charcPvmm+0x17f>
ffffffff80418dc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80418dc8:	44 0f b7 8c 03 20 80 	movzwl -0xb7fe0(%rbx,%rax,1),%r9d
ffffffff80418dcf:	f4 ff 
ffffffff80418dd1:	48 83 c0 02          	add    $0x2,%rax
ffffffff80418dd5:	66 44 89 48 fe       	mov    %r9w,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80418dda:	4c 39 c0             	cmp    %r8,%rax
ffffffff80418ddd:	75 e9                	jne    ffffffff80418dc8 <_ZL9_out_charcPvmm+0x168>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80418ddf:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80418de3:	4c 89 c0             	mov    %r8,%rax
ffffffff80418de6:	4c 01 d3             	add    %r10,%rbx
ffffffff80418de9:	48 39 fa             	cmp    %rdi,%rdx
ffffffff80418dec:	75 ca                	jne    ffffffff80418db8 <_ZL9_out_charcPvmm+0x158>
    if (current_col_ != 0) {
ffffffff80418dee:	48 85 c9             	test   %rcx,%rcx
ffffffff80418df1:	74 4a                	je     ffffffff80418e3d <_ZL9_out_charcPvmm+0x1dd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80418df3:	48 85 f6             	test   %rsi,%rsi
ffffffff80418df6:	74 45                	je     ffffffff80418e3d <_ZL9_out_charcPvmm+0x1dd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80418df8:	48 89 f7             	mov    %rsi,%rdi
ffffffff80418dfb:	48 0f af fa          	imul   %rdx,%rdi
ffffffff80418dff:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80418e03:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80418e07:	48 8d 8c 37 00 c0 05 	lea    0x5c000(%rdi,%rsi,1),%rcx
ffffffff80418e0e:	00 
ffffffff80418e0f:	48 8d 84 3f 00 80 0b 	lea    0xb8000(%rdi,%rdi,1),%rax
ffffffff80418e16:	00 
ffffffff80418e17:	48 f7 df             	neg    %rdi
ffffffff80418e1a:	48 01 c9             	add    %rcx,%rcx
ffffffff80418e1d:	48 8d b4 7a 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdi,2),%rsi
ffffffff80418e24:	80 
ffffffff80418e25:	0f 1f 00             	nopl   (%rax)
ffffffff80418e28:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff80418e2f:	ff 
ffffffff80418e30:	48 83 c0 02          	add    $0x2,%rax
ffffffff80418e34:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80418e38:	48 39 c1             	cmp    %rax,%rcx
ffffffff80418e3b:	75 eb                	jne    ffffffff80418e28 <_ZL9_out_charcPvmm+0x1c8>
}
ffffffff80418e3d:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80418e41:	5b                   	pop    %rbx
ffffffff80418e42:	5d                   	pop    %rbp
ffffffff80418e43:	41 5c                	pop    %r12
ffffffff80418e45:	41 5d                	pop    %r13
ffffffff80418e47:	41 5e                	pop    %r14
ffffffff80418e49:	41 5f                	pop    %r15
ffffffff80418e4b:	c3                   	retq   
ffffffff80418e4c:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80418e50:	48 83 c2 01          	add    $0x1,%rdx
      current_col_ = 0;
ffffffff80418e54:	4c 89 2d 1d 52 00 00 	mov    %r13,0x521d(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80418e5b:	31 c9                	xor    %ecx,%ecx
      current_row_++;
ffffffff80418e5d:	48 89 15 0c 52 00 00 	mov    %rdx,0x520c(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80418e64:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff80418e68:	0f 85 11 ff ff ff    	jne    ffffffff80418d7f <_ZL9_out_charcPvmm+0x11f>
ffffffff80418e6e:	4c 39 df             	cmp    %r11,%rdi
ffffffff80418e71:	49 0f 47 fb          	cmova  %r11,%rdi
ffffffff80418e75:	e9 05 ff ff ff       	jmpq   ffffffff80418d7f <_ZL9_out_charcPvmm+0x11f>
ffffffff80418e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80418e80:	49 83 fc 01          	cmp    $0x1,%r12
ffffffff80418e84:	76 59                	jbe    ffffffff80418edf <_ZL9_out_charcPvmm+0x27f>
ffffffff80418e86:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff80418e8c:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff80418e92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80418e98:	31 c9                	xor    %ecx,%ecx
ffffffff80418e9a:	4d 8d ba 60 ff ff ff 	lea    -0xa0(%r10),%r15
ffffffff80418ea1:	48 85 f6             	test   %rsi,%rsi
ffffffff80418ea4:	74 29                	je     ffffffff80418ecf <_ZL9_out_charcPvmm+0x26f>
ffffffff80418ea6:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80418eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80418eb0:	41 0f b7 84 4a 80 e0 	movzwl -0x7fbe1f80(%r10,%rcx,2),%eax
ffffffff80418eb7:	41 80 
ffffffff80418eb9:	66 41 89 84 4f 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%rcx,2)
ffffffff80418ec0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80418ec2:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80418ec6:	48 39 f1             	cmp    %rsi,%rcx
ffffffff80418ec9:	75 e5                	jne    ffffffff80418eb0 <_ZL9_out_charcPvmm+0x250>
ffffffff80418ecb:	48 8b 04 24          	mov    (%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80418ecf:	49 83 c6 01          	add    $0x1,%r14
ffffffff80418ed3:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
ffffffff80418eda:	4c 39 f2             	cmp    %r14,%rdx
ffffffff80418edd:	75 b9                	jne    ffffffff80418e98 <_ZL9_out_charcPvmm+0x238>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80418edf:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff80418ee4:	48 85 f6             	test   %rsi,%rsi
ffffffff80418ee7:	74 1a                	je     ffffffff80418f03 <_ZL9_out_charcPvmm+0x2a3>
ffffffff80418ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80418ef0:	45 31 d2             	xor    %r10d,%r10d
ffffffff80418ef3:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80418ef7:	66 44 89 51 1e       	mov    %r10w,0x1e(%rcx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80418efc:	48 3b 4c 24 08       	cmp    0x8(%rsp),%rcx
ffffffff80418f01:	75 ed                	jne    ffffffff80418ef0 <_ZL9_out_charcPvmm+0x290>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80418f03:	49 8d 0c 03          	lea    (%r11,%rax,1),%rcx
      current_row_--;
ffffffff80418f07:	48 83 ea 01          	sub    $0x1,%rdx
ffffffff80418f0b:	48 39 f1             	cmp    %rsi,%rcx
ffffffff80418f0e:	48 89 15 5b 51 00 00 	mov    %rdx,0x515b(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80418f15:	48 0f 47 ce          	cmova  %rsi,%rcx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80418f19:	48 39 c8             	cmp    %rcx,%rax
ffffffff80418f1c:	0f 82 05 fe ff ff    	jb     ffffffff80418d27 <_ZL9_out_charcPvmm+0xc7>
ffffffff80418f22:	48 89 c1             	mov    %rax,%rcx
ffffffff80418f25:	e9 2c fe ff ff       	jmpq   ffffffff80418d56 <_ZL9_out_charcPvmm+0xf6>
ffffffff80418f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80418f30:	48 39 ce             	cmp    %rcx,%rsi
ffffffff80418f33:	76 34                	jbe    ffffffff80418f69 <_ZL9_out_charcPvmm+0x309>
ffffffff80418f35:	4c 8d 0c 92          	lea    (%rdx,%rdx,4),%r9
ffffffff80418f39:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80418f3d:	4c 01 c9             	add    %r9,%rcx
ffffffff80418f40:	49 01 f1             	add    %rsi,%r9
ffffffff80418f43:	48 8d 84 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rax
ffffffff80418f4a:	80 
ffffffff80418f4b:	4b 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%rcx
ffffffff80418f52:	80 
ffffffff80418f53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80418f58:	45 31 c9             	xor    %r9d,%r9d
ffffffff80418f5b:	48 83 c0 02          	add    $0x2,%rax
ffffffff80418f5f:	66 44 89 48 1e       	mov    %r9w,0x1e(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80418f64:	48 39 c8             	cmp    %rcx,%rax
ffffffff80418f67:	75 ef                	jne    ffffffff80418f58 <_ZL9_out_charcPvmm+0x2f8>
        current_row_++;
ffffffff80418f69:	48 83 c2 01          	add    $0x1,%rdx
        current_col_ = 0;
ffffffff80418f6d:	4c 89 2d 04 51 00 00 	mov    %r13,0x5104(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80418f74:	31 c9                	xor    %ecx,%ecx
        current_row_++;
ffffffff80418f76:	48 89 15 f3 50 00 00 	mov    %rdx,0x50f3(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80418f7d:	e9 fd fd ff ff       	jmpq   ffffffff80418d7f <_ZL9_out_charcPvmm+0x11f>
ffffffff80418f82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        endline_or_col_chars = len;
ffffffff80418f88:	49 89 fb             	mov    %rdi,%r11
    return npos;
ffffffff80418f8b:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
ffffffff80418f92:	e9 73 fd ff ff       	jmpq   ffffffff80418d0a <_ZL9_out_charcPvmm+0xaa>
ffffffff80418f97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80418f9e:	00 00 

ffffffff80418fa0 <_putchar>:
void _putchar(char character) {
ffffffff80418fa0:	41 57                	push   %r15
ffffffff80418fa2:	41 56                	push   %r14
ffffffff80418fa4:	41 55                	push   %r13
      if (str_[i] == c) {
ffffffff80418fa6:	45 31 ed             	xor    %r13d,%r13d
ffffffff80418fa9:	41 54                	push   %r12
ffffffff80418fab:	41 bc 01 00 00 00    	mov    $0x1,%r12d
ffffffff80418fb1:	55                   	push   %rbp
ffffffff80418fb2:	48 c7 c5 60 e0 41 80 	mov    $0xffffffff8041e060,%rbp
ffffffff80418fb9:	53                   	push   %rbx
ffffffff80418fba:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80418fbe:	4c 8b 15 9b 50 00 00 	mov    0x509b(%rip),%r10        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80418fc5:	48 8b 35 9c 50 00 00 	mov    0x509c(%rip),%rsi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80418fcc:	40 88 7c 24 27       	mov    %dil,0x27(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff80418fd1:	48 8b 0d a0 50 00 00 	mov    0x50a0(%rip),%rcx        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff80418fd8:	4c 8d 44 24 27       	lea    0x27(%rsp),%r8
ffffffff80418fdd:	4b 8d 54 92 fb       	lea    -0x5(%r10,%r10,4),%rdx
ffffffff80418fe2:	48 8b 05 87 50 00 00 	mov    0x5087(%rip),%rax        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80418fe9:	48 89 d7             	mov    %rdx,%rdi
ffffffff80418fec:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80418ff0:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80418ff4:	48 01 f2             	add    %rsi,%rdx
ffffffff80418ff7:	48 8d 9f 60 e0 41 80 	lea    -0x7fbe1fa0(%rdi),%rbx
ffffffff80418ffe:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80419002:	48 8d 9c 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rbx
ffffffff80419009:	80 
ffffffff8041900a:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff8041900f:	90                   	nop
ffffffff80419010:	48 89 f7             	mov    %rsi,%rdi
ffffffff80419013:	48 29 cf             	sub    %rcx,%rdi
ffffffff80419016:	49 0f 45 fc          	cmovne %r12,%rdi
    for (; i < min(size_, pos + count); i++) {
ffffffff8041901a:	48 39 f1             	cmp    %rsi,%rcx
ffffffff8041901d:	0f 84 95 02 00 00    	je     ffffffff804192b8 <_putchar+0x318>
      if (str_[i] == c) {
ffffffff80419023:	41 80 38 0a          	cmpb   $0xa,(%r8)
ffffffff80419027:	4c 89 eb             	mov    %r13,%rbx
ffffffff8041902a:	41 0f 94 c1          	sete   %r9b
ffffffff8041902e:	48 0f 45 df          	cmovne %rdi,%rbx
ffffffff80419032:	45 0f b6 c9          	movzbl %r9b,%r9d
ffffffff80419036:	49 83 e9 01          	sub    $0x1,%r9
    if (current_row_ == num_rows_) {
ffffffff8041903a:	49 39 c2             	cmp    %rax,%r10
ffffffff8041903d:	0f 84 6d 01 00 00    	je     ffffffff804191b0 <_putchar+0x210>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80419043:	48 8d 14 0b          	lea    (%rbx,%rcx,1),%rdx
ffffffff80419047:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041904a:	48 0f 47 d6          	cmova  %rsi,%rdx
ffffffff8041904e:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80419051:	0f 86 fb 01 00 00    	jbe    ffffffff80419252 <_putchar+0x2b2>
ffffffff80419057:	4c 8d 1c 80          	lea    (%rax,%rax,4),%r11
  CharT operator[](size_t i) const { return str_[i]; }
ffffffff8041905b:	4d 89 c7             	mov    %r8,%r15
ffffffff8041905e:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff80419062:	49 29 cf             	sub    %rcx,%r15
ffffffff80419065:	0f 1f 00             	nopl   (%rax)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80419068:	66 45 0f be 34 0f    	movsbw (%r15,%rcx,1),%r14w
ffffffff8041906e:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80419074:	66 45 89 b4 4b 80 e0 	mov    %r14w,-0x7fbe1f80(%r11,%rcx,2)
ffffffff8041907b:	41 80 
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041907d:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80419081:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80419084:	75 e2                	jne    ffffffff80419068 <_putchar+0xc8>
    if (current_col_ == num_cols_) {
ffffffff80419086:	48 39 d6             	cmp    %rdx,%rsi
ffffffff80419089:	0f 84 f1 00 00 00    	je     ffffffff80419180 <_putchar+0x1e0>
    current_col_ = i;
ffffffff8041908f:	48 89 15 e2 4f 00 00 	mov    %rdx,0x4fe2(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80419096:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff8041909a:	0f 84 fe 00 00 00    	je     ffffffff8041919e <_putchar+0x1fe>
ffffffff804190a0:	48 85 d2             	test   %rdx,%rdx
ffffffff804190a3:	74 0a                	je     ffffffff804190af <_putchar+0x10f>
ffffffff804190a5:	48 83 f8 18          	cmp    $0x18,%rax
ffffffff804190a9:	0f 86 b1 01 00 00    	jbe    ffffffff80419260 <_putchar+0x2c0>
    size_ -= min(n, size_);
ffffffff804190af:	4c 89 e3             	mov    %r12,%rbx
    str_ += n;
ffffffff804190b2:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff804190b5:	48 89 d1             	mov    %rdx,%rcx
ffffffff804190b8:	48 29 fb             	sub    %rdi,%rbx
ffffffff804190bb:	48 89 df             	mov    %rbx,%rdi
    while (!s.empty()) {
ffffffff804190be:	48 85 ff             	test   %rdi,%rdi
ffffffff804190c1:	0f 85 49 ff ff ff    	jne    ffffffff80419010 <_putchar+0x70>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804190c7:	48 85 c0             	test   %rax,%rax
ffffffff804190ca:	74 52                	je     ffffffff8041911e <_putchar+0x17e>
ffffffff804190cc:	48 89 f1             	mov    %rsi,%rcx
ffffffff804190cf:	4c 8d 1c 36          	lea    (%rsi,%rsi,1),%r11
ffffffff804190d3:	48 f7 d9             	neg    %rcx
ffffffff804190d6:	4c 8d 94 09 a0 00 00 	lea    0xa0(%rcx,%rcx,1),%r10
ffffffff804190dd:	00 
ffffffff804190de:	b9 00 80 0b 00       	mov    $0xb8000,%ecx
ffffffff804190e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804190e8:	4d 8d 04 0b          	lea    (%r11,%rcx,1),%r8
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804190ec:	48 85 f6             	test   %rsi,%rsi
ffffffff804190ef:	74 1e                	je     ffffffff8041910f <_putchar+0x16f>
ffffffff804190f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804190f8:	44 0f b7 8c 0d 20 80 	movzwl -0xb7fe0(%rbp,%rcx,1),%r9d
ffffffff804190ff:	f4 ff 
ffffffff80419101:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80419105:	66 44 89 49 fe       	mov    %r9w,-0x2(%rcx)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041910a:	4c 39 c1             	cmp    %r8,%rcx
ffffffff8041910d:	75 e9                	jne    ffffffff804190f8 <_putchar+0x158>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041910f:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80419113:	4c 89 c1             	mov    %r8,%rcx
ffffffff80419116:	4c 01 d5             	add    %r10,%rbp
ffffffff80419119:	48 39 f8             	cmp    %rdi,%rax
ffffffff8041911c:	75 ca                	jne    ffffffff804190e8 <_putchar+0x148>
    if (current_col_ != 0) {
ffffffff8041911e:	48 85 d2             	test   %rdx,%rdx
ffffffff80419121:	74 4a                	je     ffffffff8041916d <_putchar+0x1cd>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80419123:	48 85 f6             	test   %rsi,%rsi
ffffffff80419126:	74 45                	je     ffffffff8041916d <_putchar+0x1cd>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80419128:	48 89 f1             	mov    %rsi,%rcx
ffffffff8041912b:	48 0f af c8          	imul   %rax,%rcx
ffffffff8041912f:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80419133:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80419137:	48 8d b4 31 00 c0 05 	lea    0x5c000(%rcx,%rsi,1),%rsi
ffffffff8041913e:	00 
ffffffff8041913f:	48 8d 94 09 00 80 0b 	lea    0xb8000(%rcx,%rcx,1),%rdx
ffffffff80419146:	00 
ffffffff80419147:	48 f7 d9             	neg    %rcx
ffffffff8041914a:	48 01 f6             	add    %rsi,%rsi
ffffffff8041914d:	48 8d 8c 48 60 e0 41 	lea    -0x7fbe1fa0(%rax,%rcx,2),%rcx
ffffffff80419154:	80 
ffffffff80419155:	0f 1f 00             	nopl   (%rax)
ffffffff80419158:	0f b7 84 11 20 80 f4 	movzwl -0xb7fe0(%rcx,%rdx,1),%eax
ffffffff8041915f:	ff 
ffffffff80419160:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80419164:	66 89 42 fe          	mov    %ax,-0x2(%rdx)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80419168:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8041916b:	75 eb                	jne    ffffffff80419158 <_putchar+0x1b8>
}
ffffffff8041916d:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80419171:	5b                   	pop    %rbx
ffffffff80419172:	5d                   	pop    %rbp
ffffffff80419173:	41 5c                	pop    %r12
ffffffff80419175:	41 5d                	pop    %r13
ffffffff80419177:	41 5e                	pop    %r14
ffffffff80419179:	41 5f                	pop    %r15
ffffffff8041917b:	c3                   	retq   
ffffffff8041917c:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff80419180:	48 83 c0 01          	add    $0x1,%rax
      current_col_ = 0;
ffffffff80419184:	4c 89 2d ed 4e 00 00 	mov    %r13,0x4eed(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041918b:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041918d:	48 89 05 dc 4e 00 00 	mov    %rax,0x4edc(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80419194:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
ffffffff80419198:	0f 85 11 ff ff ff    	jne    ffffffff804190af <_putchar+0x10f>
ffffffff8041919e:	48 39 df             	cmp    %rbx,%rdi
ffffffff804191a1:	48 0f 47 fb          	cmova  %rbx,%rdi
ffffffff804191a5:	e9 05 ff ff ff       	jmpq   ffffffff804190af <_putchar+0x10f>
ffffffff804191aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804191b0:	49 83 fa 01          	cmp    $0x1,%r10
ffffffff804191b4:	76 5a                	jbe    ffffffff80419210 <_putchar+0x270>
ffffffff804191b6:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff804191bc:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff804191c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804191c8:	31 d2                	xor    %edx,%edx
ffffffff804191ca:	4d 8d bb 60 ff ff ff 	lea    -0xa0(%r11),%r15
ffffffff804191d1:	48 85 f6             	test   %rsi,%rsi
ffffffff804191d4:	74 2a                	je     ffffffff80419200 <_putchar+0x260>
ffffffff804191d6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff804191db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804191e0:	41 0f b7 84 53 80 e0 	movzwl -0x7fbe1f80(%r11,%rdx,2),%eax
ffffffff804191e7:	41 80 
ffffffff804191e9:	66 41 89 84 57 80 e0 	mov    %ax,-0x7fbe1f80(%r15,%rdx,2)
ffffffff804191f0:	41 80 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804191f2:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804191f6:	48 39 f2             	cmp    %rsi,%rdx
ffffffff804191f9:	75 e5                	jne    ffffffff804191e0 <_putchar+0x240>
ffffffff804191fb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80419200:	49 83 c6 01          	add    $0x1,%r14
ffffffff80419204:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
ffffffff8041920b:	4c 39 f0             	cmp    %r14,%rax
ffffffff8041920e:	75 b8                	jne    ffffffff804191c8 <_putchar+0x228>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80419210:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff80419214:	48 85 f6             	test   %rsi,%rsi
ffffffff80419217:	74 1a                	je     ffffffff80419233 <_putchar+0x293>
ffffffff80419219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80419220:	45 31 db             	xor    %r11d,%r11d
ffffffff80419223:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80419227:	66 44 89 5a 1e       	mov    %r11w,0x1e(%rdx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041922c:	48 3b 54 24 08       	cmp    0x8(%rsp),%rdx
ffffffff80419231:	75 ed                	jne    ffffffff80419220 <_putchar+0x280>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80419233:	48 8d 14 0b          	lea    (%rbx,%rcx,1),%rdx
      current_row_--;
ffffffff80419237:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8041923b:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8041923e:	48 89 05 2b 4e 00 00 	mov    %rax,0x4e2b(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff80419245:	48 0f 47 d6          	cmova  %rsi,%rdx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80419249:	48 39 ca             	cmp    %rcx,%rdx
ffffffff8041924c:	0f 87 05 fe ff ff    	ja     ffffffff80419057 <_putchar+0xb7>
ffffffff80419252:	48 89 ca             	mov    %rcx,%rdx
ffffffff80419255:	e9 2c fe ff ff       	jmpq   ffffffff80419086 <_putchar+0xe6>
ffffffff8041925a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80419260:	48 39 d6             	cmp    %rdx,%rsi
ffffffff80419263:	76 34                	jbe    ffffffff80419299 <_putchar+0x2f9>
ffffffff80419265:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
ffffffff80419269:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff8041926d:	48 01 ca             	add    %rcx,%rdx
ffffffff80419270:	48 01 f1             	add    %rsi,%rcx
ffffffff80419273:	48 8d 94 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rdx
ffffffff8041927a:	80 
ffffffff8041927b:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff80419282:	80 
ffffffff80419283:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80419288:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041928b:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8041928f:	66 44 89 4a 1e       	mov    %r9w,0x1e(%rdx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80419294:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80419297:	75 ef                	jne    ffffffff80419288 <_putchar+0x2e8>
        current_row_++;
ffffffff80419299:	48 83 c0 01          	add    $0x1,%rax
        current_col_ = 0;
ffffffff8041929d:	4c 89 2d d4 4d 00 00 	mov    %r13,0x4dd4(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff804192a4:	31 d2                	xor    %edx,%edx
        current_row_++;
ffffffff804192a6:	48 89 05 c3 4d 00 00 	mov    %rax,0x4dc3(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff804192ad:	e9 fd fd ff ff       	jmpq   ffffffff804190af <_putchar+0x10f>
ffffffff804192b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        endline_or_col_chars = len;
ffffffff804192b8:	48 89 fb             	mov    %rdi,%rbx
    return npos;
ffffffff804192bb:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
ffffffff804192c2:	e9 73 fd ff ff       	jmpq   ffffffff8041903a <_putchar+0x9a>
ffffffff804192c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804192ce:	00 00 

ffffffff804192d0 <printf_>:

///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...) {
ffffffff804192d0:	48 83 ec 58          	sub    $0x58,%rsp
  va_list va;
  va_start(va, format);
ffffffff804192d4:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
int printf_(const char* format, ...) {
ffffffff804192d9:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff804192de:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
int printf_(const char* format, ...) {
ffffffff804192e3:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff804192e8:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
int printf_(const char* format, ...) {
ffffffff804192ef:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff804192f4:	48 89 f9             	mov    %rdi,%rcx
ffffffff804192f7:	48 c7 c7 60 8c 41 80 	mov    $0xffffffff80418c60,%rdi
int printf_(const char* format, ...) {
ffffffff804192fe:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff80419303:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
  va_start(va, format);
ffffffff80419308:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8041930d:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
int printf_(const char* format, ...) {
ffffffff80419312:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  va_start(va, format);
ffffffff80419317:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
ffffffff8041931e:	00 
ffffffff8041931f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff80419324:	e8 37 ee ff ff       	callq  ffffffff80418160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
  va_end(va);
  return ret;
}
ffffffff80419329:	48 83 c4 58          	add    $0x58,%rsp
ffffffff8041932d:	c3                   	retq   
ffffffff8041932e:	66 90                	xchg   %ax,%ax

ffffffff80419330 <sprintf_>:

int sprintf_(char* buffer, const char* format, ...) {
ffffffff80419330:	48 83 ec 58          	sub    $0x58,%rsp
  va_list va;
  va_start(va, format);
ffffffff80419334:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
int sprintf_(char* buffer, const char* format, ...) {
ffffffff80419339:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff8041933e:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
int sprintf_(char* buffer, const char* format, ...) {
ffffffff80419345:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff8041934a:	48 89 f1             	mov    %rsi,%rcx
ffffffff8041934d:	48 89 fe             	mov    %rdi,%rsi
ffffffff80419350:	48 c7 c7 10 7b 41 80 	mov    $0xffffffff80417b10,%rdi
int sprintf_(char* buffer, const char* format, ...) {
ffffffff80419357:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff8041935c:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
  va_start(va, format);
ffffffff80419361:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80419366:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
int sprintf_(char* buffer, const char* format, ...) {
ffffffff8041936b:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  va_start(va, format);
ffffffff80419370:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%rsp)
ffffffff80419377:	00 
ffffffff80419378:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff8041937d:	e8 de ed ff ff       	callq  ffffffff80418160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
  va_end(va);
  return ret;
}
ffffffff80419382:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80419386:	c3                   	retq   
ffffffff80419387:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041938e:	00 00 

ffffffff80419390 <snprintf_>:

int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff80419390:	41 54                	push   %r12
ffffffff80419392:	48 83 ec 50          	sub    $0x50,%rsp
  va_list va;
  va_start(va, format);
ffffffff80419396:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff8041939b:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff804193a0:	48 89 d1             	mov    %rdx,%rcx
ffffffff804193a3:	48 89 f2             	mov    %rsi,%rdx
int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff804193a6:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff804193ab:	48 89 fe             	mov    %rdi,%rsi
ffffffff804193ae:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
ffffffff804193b3:	48 c7 c7 10 7b 41 80 	mov    $0xffffffff80417b10,%rdi
  va_start(va, format);
ffffffff804193ba:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff804193bf:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff804193c4:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  va_start(va, format);
ffffffff804193c9:	c7 44 24 08 18 00 00 	movl   $0x18,0x8(%rsp)
ffffffff804193d0:	00 
ffffffff804193d1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff804193d6:	e8 85 ed ff ff       	callq  ffffffff80418160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
  va_end(va);
  return ret;
}
ffffffff804193db:	48 83 c4 50          	add    $0x50,%rsp
ffffffff804193df:	41 5c                	pop    %r12
ffffffff804193e1:	c3                   	retq   
ffffffff804193e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff804193e9:	00 00 00 00 
ffffffff804193ed:	0f 1f 00             	nopl   (%rax)

ffffffff804193f0 <vprintf_>:

int vprintf_(const char* format, va_list va) {
ffffffff804193f0:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff804193f4:	48 89 f9             	mov    %rdi,%rcx
ffffffff804193f7:	49 89 f0             	mov    %rsi,%r8
  char buffer[1];
  return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff804193fa:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff80419401:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
ffffffff80419406:	48 c7 c7 60 8c 41 80 	mov    $0xffffffff80418c60,%rdi
ffffffff8041940d:	e8 4e ed ff ff       	callq  ffffffff80418160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
}
ffffffff80419412:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80419416:	c3                   	retq   
ffffffff80419417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041941e:	00 00 

ffffffff80419420 <vsnprintf_>:

int vsnprintf_(char* buffer, size_t count, const char* format, va_list va) {
ffffffff80419420:	49 89 c8             	mov    %rcx,%r8
  return _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff80419423:	48 89 d1             	mov    %rdx,%rcx
ffffffff80419426:	48 89 f2             	mov    %rsi,%rdx
ffffffff80419429:	48 89 fe             	mov    %rdi,%rsi
ffffffff8041942c:	48 c7 c7 10 7b 41 80 	mov    $0xffffffff80417b10,%rdi
ffffffff80419433:	e9 28 ed ff ff       	jmpq   ffffffff80418160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
ffffffff80419438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041943f:	00 

ffffffff80419440 <fctprintf>:
}

int fctprintf(void (*out)(char character, void* arg), void* arg,
              const char* format, ...) {
ffffffff80419440:	48 83 ec 68          	sub    $0x68,%rsp
  va_list va;
  va_start(va, format);
ffffffff80419444:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
              const char* format, ...) {
ffffffff80419449:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  const out_fct_wrap_type out_fct_wrap = {out, arg};
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff8041944e:	48 89 d1             	mov    %rdx,%rcx
ffffffff80419451:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
              const char* format, ...) {
ffffffff80419458:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff8041945d:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
  va_start(va, format);
ffffffff80419462:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff80419467:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  const out_fct_wrap_type out_fct_wrap = {out, arg};
ffffffff8041946c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff80419471:	48 c7 c7 40 8c 41 80 	mov    $0xffffffff80418c40,%rdi
  const out_fct_wrap_type out_fct_wrap = {out, arg};
ffffffff80419478:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff8041947d:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
              const char* format, ...) {
ffffffff80419482:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
  va_start(va, format);
ffffffff80419487:	c7 44 24 18 18 00 00 	movl   $0x18,0x18(%rsp)
ffffffff8041948e:	00 
ffffffff8041948f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff80419494:	e8 c7 ec ff ff       	callq  ffffffff80418160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
                             (size_t)-1, format, va);
  va_end(va);
  return ret;
}
ffffffff80419499:	48 83 c4 68          	add    $0x68,%rsp
ffffffff8041949d:	c3                   	retq   
ffffffff8041949e:	66 90                	xchg   %ax,%ax

ffffffff804194a0 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>:
    return 32 - num_leading_zeros;
  }
}

int RoundDownNearestPowerOfTwoLog(uint32_t bytes) {
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff804194a0:	0f bd cf             	bsr    %edi,%ecx

  // bytes is the power of 2.
  return 31 - num_leading_zeros;
ffffffff804194a3:	b8 1f 00 00 00       	mov    $0x1f,%eax
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff804194a8:	83 f1 1f             	xor    $0x1f,%ecx
  return 31 - num_leading_zeros;
ffffffff804194ab:	29 c8                	sub    %ecx,%eax
  return 1 << RoundUpNearestPowerOfTwoLog(bytes);
}

int GetBucketIndexOfFreeChunk(uint32_t bytes) {
  int power = RoundDownNearestPowerOfTwoLog(bytes);
  if (power <= 2) {
ffffffff804194ad:	83 f8 02             	cmp    $0x2,%eax
ffffffff804194b0:	7e 16                	jle    ffffffff804194c8 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj+0x28>
    kprintf("kmalloc : Cannot create bucket with too small memory %d \n",
            bytes);
    return -1;
  } else if (3 <= power && power < 3 + NUM_BUCKETS) {
ffffffff804194b2:	83 e8 03             	sub    $0x3,%eax
    return power - 3;
ffffffff804194b5:	ba 1c 00 00 00       	mov    $0x1c,%edx
ffffffff804194ba:	29 ca                	sub    %ecx,%edx
ffffffff804194bc:	83 f8 10             	cmp    $0x10,%eax
ffffffff804194bf:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff804194c4:	0f 42 c2             	cmovb  %edx,%eax
  }
  return NUM_BUCKETS - 1;
}
ffffffff804194c7:	c3                   	retq   
int GetBucketIndexOfFreeChunk(uint32_t bytes) {
ffffffff804194c8:	48 83 ec 08          	sub    $0x8,%rsp
    kprintf("kmalloc : Cannot create bucket with too small memory %d \n",
ffffffff804194cc:	89 fe                	mov    %edi,%esi
ffffffff804194ce:	31 c0                	xor    %eax,%eax
ffffffff804194d0:	48 c7 c7 f0 b8 41 80 	mov    $0xffffffff8041b8f0,%rdi
ffffffff804194d7:	e8 f4 fd ff ff       	callq  ffffffff804192d0 <printf_>
    return -1;
ffffffff804194dc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
}
ffffffff804194e1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff804194e5:	c3                   	retq   
ffffffff804194e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804194ed:	00 00 00 

ffffffff804194f0 <_ZN6Kernel6memcpyEPvS0_m>:
namespace Kernel {

void* memcpy(void* dest, void* src, size_t count) {
  char* s = reinterpret_cast<char*>(src);
  char* d = reinterpret_cast<char*>(dest);
  while (count-- > 0) {
ffffffff804194f0:	48 85 d2             	test   %rdx,%rdx
ffffffff804194f3:	74 23                	je     ffffffff80419518 <_ZN6Kernel6memcpyEPvS0_m+0x28>
ffffffff804194f5:	31 c0                	xor    %eax,%eax
ffffffff804194f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804194fe:	00 00 
    *d = *s;
ffffffff80419500:	0f b6 0c 06          	movzbl (%rsi,%rax,1),%ecx
ffffffff80419504:	88 0c 07             	mov    %cl,(%rdi,%rax,1)
  while (count-- > 0) {
ffffffff80419507:	48 83 c0 01          	add    $0x1,%rax
ffffffff8041950b:	48 39 d0             	cmp    %rdx,%rax
ffffffff8041950e:	75 f0                	jne    ffffffff80419500 <_ZN6Kernel6memcpyEPvS0_m+0x10>
ffffffff80419510:	48 01 f8             	add    %rdi,%rax
ffffffff80419513:	c3                   	retq   
ffffffff80419514:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80419518:	48 89 f8             	mov    %rdi,%rax
    d++;
    s++;
  }
  return d;
}
ffffffff8041951b:	c3                   	retq   
ffffffff8041951c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80419520 <_ZN6Kernel6memsetEPvim>:

void* memset(void* dest, int ch, size_t count) {
  char* d = reinterpret_cast<char*>(dest);
  while (count-- > 0) {
ffffffff80419520:	48 85 d2             	test   %rdx,%rdx
ffffffff80419523:	74 1b                	je     ffffffff80419540 <_ZN6Kernel6memsetEPvim+0x20>
ffffffff80419525:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
ffffffff80419529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    *d = ch;
ffffffff80419530:	40 88 37             	mov    %sil,(%rdi)
    d++;
ffffffff80419533:	48 83 c7 01          	add    $0x1,%rdi
  while (count-- > 0) {
ffffffff80419537:	48 39 f8             	cmp    %rdi,%rax
ffffffff8041953a:	75 f4                	jne    ffffffff80419530 <_ZN6Kernel6memsetEPvim+0x10>
ffffffff8041953c:	c3                   	retq   
ffffffff8041953d:	0f 1f 00             	nopl   (%rax)
  char* d = reinterpret_cast<char*>(dest);
ffffffff80419540:	48 89 f8             	mov    %rdi,%rax
  }
  return d;
}
ffffffff80419543:	c3                   	retq   
ffffffff80419544:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041954b:	00 00 00 00 
ffffffff8041954f:	90                   	nop

ffffffff80419550 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj>:
  return CreateNewUsedChunkAt(GetAddressByOffset(current_heap_size_),
                              allocate_size);
}

uint32_t KernelMemoryManager::IterateFreeList(uint32_t free_list,
                                              uint32_t memory_size) {
ffffffff80419550:	89 f0                	mov    %esi,%eax
  uint32_t current_offset = free_list;
  while (current_offset) {
ffffffff80419552:	85 f6                	test   %esi,%esi
ffffffff80419554:	74 2b                	je     ffffffff80419581 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x31>
  // Decrease the length of the heap memory.
  current_heap_size_ -= (chunk_size + 8);
}

uint8_t* KernelMemoryManager::GetAddressByOffset(uint32_t offset_size) const {
  return heap_start_ + offset_size;
ffffffff80419556:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80419559:	eb 10                	jmp    ffffffff8041956b <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x1b>
ffffffff8041955b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  return (suffix_block << 1) >> 1;
ffffffff80419560:	8b 44 0e 04          	mov    0x4(%rsi,%rcx,1),%eax
  while (current_offset) {
ffffffff80419564:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
ffffffff80419569:	74 15                	je     ffffffff80419580 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x30>
  return heap_start_ + offset_size;
ffffffff8041956b:	89 c6                	mov    %eax,%esi
ffffffff8041956d:	48 01 fe             	add    %rdi,%rsi
  return prefix_block >> 1;
ffffffff80419570:	8b 0e                	mov    (%rsi),%ecx
ffffffff80419572:	d1 e9                	shr    %ecx
    if (chunk_mem_size >= memory_size) {
ffffffff80419574:	39 ca                	cmp    %ecx,%edx
ffffffff80419576:	77 e8                	ja     ffffffff80419560 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x10>
}
ffffffff80419578:	c3                   	retq   
ffffffff80419579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80419580:	c3                   	retq   
  return 0;
ffffffff80419581:	31 c0                	xor    %eax,%eax
}
ffffffff80419583:	c3                   	retq   
ffffffff80419584:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041958b:	00 00 00 00 
ffffffff8041958f:	90                   	nop

ffffffff80419590 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>:
void SetFree(uint8_t* byte) { (*byte) &= 0b11111110; }
ffffffff80419590:	80 26 fe             	andb   $0xfe,(%rsi)
                                               int bucket_index) {
ffffffff80419593:	41 89 c8             	mov    %ecx,%r8d
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff80419596:	8b 0e                	mov    (%rsi),%ecx
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419598:	44 8d 0c 12          	lea    (%rdx,%rdx,1),%r9d
}

uint32_t KernelMemoryManager::GetOffsetFromHeapStart(uint8_t* addr) const {
  return reinterpret_cast<uint64_t>(addr) -
         reinterpret_cast<uint64_t>(heap_start_);
ffffffff8041959c:	4c 8b 17             	mov    (%rdi),%r10
  return reinterpret_cast<uint64_t>(addr) -
ffffffff8041959f:	49 89 f3             	mov    %rsi,%r11
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff804195a2:	83 e1 01             	and    $0x1,%ecx
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff804195a5:	44 09 c9             	or     %r9d,%ecx
  return reinterpret_cast<uint64_t>(addr) -
ffffffff804195a8:	4d 29 d3             	sub    %r10,%r11
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff804195ab:	89 0e                	mov    %ecx,(%rsi)
  auto next = free_list_[bucket_index];
ffffffff804195ad:	49 63 c8             	movslq %r8d,%rcx
ffffffff804195b0:	48 8d 04 8f          	lea    (%rdi,%rcx,4),%rax
ffffffff804195b4:	8b 48 10             	mov    0x10(%rax),%ecx
  free_list_[bucket_index] = my_offset;
ffffffff804195b7:	44 89 58 10          	mov    %r11d,0x10(%rax)
  if (next != 0) {
ffffffff804195bb:	85 c9                	test   %ecx,%ecx
ffffffff804195bd:	74 07                	je     ffffffff804195c6 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji+0x36>
  return heap_start_ + offset_size;
ffffffff804195bf:	89 c8                	mov    %ecx,%eax
  addr[1] = prev_chunk_offset;
ffffffff804195c1:	45 89 5c 02 04       	mov    %r11d,0x4(%r10,%rax,1)
  return addr + memory_size + 4;
ffffffff804195c6:	89 d2                	mov    %edx,%edx
  addr[1] = prev_chunk_offset;
ffffffff804195c8:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
  return addr + memory_size + 4;
ffffffff804195cf:	48 8d 54 16 04       	lea    0x4(%rsi,%rdx,1),%rdx
  addr[2] = next_chunk_offset;
ffffffff804195d4:	89 4e 08             	mov    %ecx,0x8(%rsi)
void SetFree(uint8_t* byte) { (*byte) &= 0b11111110; }
ffffffff804195d7:	80 22 fe             	andb   $0xfe,(%rdx)
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff804195da:	8b 02                	mov    (%rdx),%eax
ffffffff804195dc:	83 e0 01             	and    $0x1,%eax
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff804195df:	44 09 c8             	or     %r9d,%eax
ffffffff804195e2:	89 02                	mov    %eax,(%rdx)
}
ffffffff804195e4:	c3                   	retq   
ffffffff804195e5:	90                   	nop
ffffffff804195e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804195ed:	00 00 00 

ffffffff804195f0 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj>:
  if (current_heap_size_ + allocated_size >= heap_memory_limit_) {
ffffffff804195f0:	8b 47 0c             	mov    0xc(%rdi),%eax
ffffffff804195f3:	8d 4c 10 08          	lea    0x8(%rax,%rdx,1),%ecx
ffffffff804195f7:	3b 4f 08             	cmp    0x8(%rdi),%ecx
ffffffff804195fa:	73 34                	jae    ffffffff80419630 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj+0x40>
  return reinterpret_cast<uint64_t>(addr) -
ffffffff804195fc:	49 89 f0             	mov    %rsi,%r8
ffffffff804195ff:	4c 2b 07             	sub    (%rdi),%r8
  if (GetOffsetFromHeapStart(addr) == current_heap_size_) {
ffffffff80419602:	44 39 c0             	cmp    %r8d,%eax
ffffffff80419605:	75 03                	jne    ffffffff8041960a <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj+0x1a>
    current_heap_size_ += allocated_size;
ffffffff80419607:	89 4f 0c             	mov    %ecx,0xc(%rdi)
void SetOccupied(uint8_t* byte) { (*byte) |= 0b00000001; }
ffffffff8041960a:	80 0e 01             	orb    $0x1,(%rsi)
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff8041960d:	8b 06                	mov    (%rsi),%eax
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff8041960f:	8d 0c 12             	lea    (%rdx,%rdx,1),%ecx
  return addr + memory_size + 4;
ffffffff80419612:	89 d2                	mov    %edx,%edx
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff80419614:	83 e0 01             	and    $0x1,%eax
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419617:	09 c8                	or     %ecx,%eax
ffffffff80419619:	89 06                	mov    %eax,(%rsi)
  return (addr + 4);
ffffffff8041961b:	48 8d 46 04          	lea    0x4(%rsi),%rax
    (*reinterpret_cast<uint32_t*>(addr)) = kKmallocMagicOccupied;
ffffffff8041961f:	c7 44 16 04 df dd dd 	movl   $0xdddddddf,0x4(%rsi,%rdx,1)
ffffffff80419626:	dd 
  return GetMemoryBlockAddressFromChunkStart(addr);
ffffffff80419627:	c3                   	retq   
ffffffff80419628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041962f:	00 
    return nullptr;
ffffffff80419630:	31 c0                	xor    %eax,%eax
}
ffffffff80419632:	c3                   	retq   
ffffffff80419633:	90                   	nop
ffffffff80419634:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041963b:	00 00 00 00 
ffffffff8041963f:	90                   	nop

ffffffff80419640 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji>:
                                          int bucket_index) {
ffffffff80419640:	41 56                	push   %r14
ffffffff80419642:	41 89 d1             	mov    %edx,%r9d
ffffffff80419645:	41 55                	push   %r13
ffffffff80419647:	49 89 f5             	mov    %rsi,%r13
ffffffff8041964a:	41 54                	push   %r12
ffffffff8041964c:	55                   	push   %rbp
ffffffff8041964d:	48 89 fd             	mov    %rdi,%rbp
ffffffff80419650:	48 83 ec 08          	sub    $0x8,%rsp
  return prefix_block >> 1;
ffffffff80419654:	44 8b 26             	mov    (%rsi),%r12d
  return {data[0], data[1]};
ffffffff80419657:	8b 56 04             	mov    0x4(%rsi),%edx
ffffffff8041965a:	8b 46 08             	mov    0x8(%rsi),%eax
  return prefix_block >> 1;
ffffffff8041965d:	41 d1 ec             	shr    %r12d
  if (memory_size - split_size < 16) {
ffffffff80419660:	44 89 e6             	mov    %r12d,%esi
ffffffff80419663:	44 29 ce             	sub    %r9d,%esi
  return prefix_block >> 1;
ffffffff80419666:	83 fe 0f             	cmp    $0xf,%esi
ffffffff80419669:	4d 0f 46 cc          	cmovbe %r12,%r9
}

void KernelMemoryManager::WeaveTwoChunksTogether(
    const PrevAndNext& prev_and_next, int bucket_index) {
  // This means the prev chunk was just the free_list.
  if (prev_and_next.prev_offset == 0) {
ffffffff8041966d:	85 d2                	test   %edx,%edx
ffffffff8041966f:	75 5f                	jne    ffffffff804196d0 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0x90>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff80419671:	48 63 c9             	movslq %ecx,%rcx
ffffffff80419674:	89 44 8f 10          	mov    %eax,0x10(%rdi,%rcx,4)
  } else {
    uint8_t* chunk = GetAddressByOffset(prev_and_next.prev_offset);
    SetNextOffset(chunk, prev_and_next.next_offset);
  }

  if (prev_and_next.next_offset != 0) {
ffffffff80419678:	85 c0                	test   %eax,%eax
ffffffff8041967a:	74 08                	je     ffffffff80419684 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0x44>
  addr[1] = prev_chunk_offset;
ffffffff8041967c:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
ffffffff80419680:	89 54 01 04          	mov    %edx,0x4(%rcx,%rax,1)
  CreateNewUsedChunkAt(addr, split_size);
ffffffff80419684:	44 89 ca             	mov    %r9d,%edx
ffffffff80419687:	4c 89 ee             	mov    %r13,%rsi
ffffffff8041968a:	48 89 ef             	mov    %rbp,%rdi
ffffffff8041968d:	e8 5e ff ff ff       	callq  ffffffff804195f0 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj>
  if (memory_size == split_size) {
ffffffff80419692:	45 39 e1             	cmp    %r12d,%r9d
ffffffff80419695:	74 24                	je     ffffffff804196bb <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0x7b>
  auto remaining_size = memory_size - split_size - /* info block */ 8;
ffffffff80419697:	41 83 ec 08          	sub    $0x8,%r12d
  return addr + memory_size + 8;
ffffffff8041969b:	4f 8d 74 0d 08       	lea    0x8(%r13,%r9,1),%r14
  auto remaining_size = memory_size - split_size - /* info block */ 8;
ffffffff804196a0:	45 29 cc             	sub    %r9d,%r12d
  int bucket_index_of_remaining = GetBucketIndexOfFreeChunk(remaining_size);
ffffffff804196a3:	44 89 e7             	mov    %r12d,%edi
ffffffff804196a6:	e8 f5 fd ff ff       	callq  ffffffff804194a0 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
  CreateNewFreeChunkAt(free_chunk_start, remaining_size,
ffffffff804196ab:	44 89 e2             	mov    %r12d,%edx
ffffffff804196ae:	4c 89 f6             	mov    %r14,%rsi
ffffffff804196b1:	48 89 ef             	mov    %rbp,%rdi
  int bucket_index_of_remaining = GetBucketIndexOfFreeChunk(remaining_size);
ffffffff804196b4:	89 c1                	mov    %eax,%ecx
  CreateNewFreeChunkAt(free_chunk_start, remaining_size,
ffffffff804196b6:	e8 d5 fe ff ff       	callq  ffffffff80419590 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>
}
ffffffff804196bb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff804196bf:	4c 89 e8             	mov    %r13,%rax
ffffffff804196c2:	5d                   	pop    %rbp
ffffffff804196c3:	41 5c                	pop    %r12
ffffffff804196c5:	41 5d                	pop    %r13
ffffffff804196c7:	41 5e                	pop    %r14
ffffffff804196c9:	c3                   	retq   
ffffffff804196ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  addr[2] = next_chunk_offset;
ffffffff804196d0:	48 8b 37             	mov    (%rdi),%rsi
  return heap_start_ + offset_size;
ffffffff804196d3:	89 d1                	mov    %edx,%ecx
  addr[2] = next_chunk_offset;
ffffffff804196d5:	89 44 0e 08          	mov    %eax,0x8(%rsi,%rcx,1)
}
ffffffff804196d9:	eb 9d                	jmp    ffffffff80419678 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0x38>
ffffffff804196db:	90                   	nop
ffffffff804196dc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804196e0 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij>:
  for (int i = bucket_index; i < NUM_BUCKETS; i++) {
ffffffff804196e0:	4c 8b 07             	mov    (%rdi),%r8
ffffffff804196e3:	83 fe 0f             	cmp    $0xf,%esi
ffffffff804196e6:	7f 51                	jg     ffffffff80419739 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x59>
ffffffff804196e8:	48 63 ce             	movslq %esi,%rcx
ffffffff804196eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    auto free_chunk_offset = IterateFreeList(free_list_[i], bytes);
ffffffff804196f0:	8b 74 8f 10          	mov    0x10(%rdi,%rcx,4),%esi
ffffffff804196f4:	41 89 c9             	mov    %ecx,%r9d
  while (current_offset) {
ffffffff804196f7:	85 f6                	test   %esi,%esi
ffffffff804196f9:	75 11                	jne    ffffffff8041970c <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x2c>
ffffffff804196fb:	eb 33                	jmp    ffffffff80419730 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x50>
ffffffff804196fd:	0f 1f 00             	nopl   (%rax)
  return (suffix_block << 1) >> 1;
ffffffff80419700:	8b 74 06 04          	mov    0x4(%rsi,%rax,1),%esi
  while (current_offset) {
ffffffff80419704:	81 e6 ff ff ff 7f    	and    $0x7fffffff,%esi
ffffffff8041970a:	74 24                	je     ffffffff80419730 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x50>
  return heap_start_ + offset_size;
ffffffff8041970c:	89 f6                	mov    %esi,%esi
ffffffff8041970e:	4c 01 c6             	add    %r8,%rsi
  return prefix_block >> 1;
ffffffff80419711:	8b 06                	mov    (%rsi),%eax
ffffffff80419713:	d1 e8                	shr    %eax
    if (chunk_mem_size >= memory_size) {
ffffffff80419715:	39 c2                	cmp    %eax,%edx
ffffffff80419717:	77 e7                	ja     ffffffff80419700 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x20>
                                                  uint32_t bytes) {
ffffffff80419719:	48 83 ec 08          	sub    $0x8,%rsp
      return GetMemoryBlockAddressFromChunkStart(
ffffffff8041971d:	44 89 c9             	mov    %r9d,%ecx
ffffffff80419720:	e8 1b ff ff ff       	callq  ffffffff80419640 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji>
}
ffffffff80419725:	48 83 c4 08          	add    $0x8,%rsp
  return (addr + 4);
ffffffff80419729:	48 83 c0 04          	add    $0x4,%rax
}
ffffffff8041972d:	c3                   	retq   
ffffffff8041972e:	66 90                	xchg   %ax,%ax
    if (free_chunk_offset) {
ffffffff80419730:	48 83 c1 01          	add    $0x1,%rcx
  for (int i = bucket_index; i < NUM_BUCKETS; i++) {
ffffffff80419734:	83 f9 0f             	cmp    $0xf,%ecx
ffffffff80419737:	7e b7                	jle    ffffffff804196f0 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x10>
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff80419739:	0f bd c2             	bsr    %edx,%eax
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff8041973c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff80419741:	83 f0 1f             	xor    $0x1f,%eax
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419744:	0f bc d2             	bsf    %edx,%edx
ffffffff80419747:	0f 44 d1             	cmove  %ecx,%edx
    return num_trailing_zeros - 1;
ffffffff8041974a:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffff8041974f:	29 c1                	sub    %eax,%ecx
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419751:	83 c2 01             	add    $0x1,%edx
  if (num_leading_zeros + num_trailing_zeros == 32) {
ffffffff80419754:	8d 34 10             	lea    (%rax,%rdx,1),%esi
    return num_trailing_zeros - 1;
ffffffff80419757:	83 ea 01             	sub    $0x1,%edx
ffffffff8041975a:	83 fe 20             	cmp    $0x20,%esi
  return heap_start_ + offset_size;
ffffffff8041975d:	8b 77 0c             	mov    0xc(%rdi),%esi
    return num_trailing_zeros - 1;
ffffffff80419760:	0f 44 ca             	cmove  %edx,%ecx
  return 1 << RoundUpNearestPowerOfTwoLog(bytes);
ffffffff80419763:	ba 01 00 00 00       	mov    $0x1,%edx
  return heap_start_ + offset_size;
ffffffff80419768:	4c 01 c6             	add    %r8,%rsi
  return 1 << RoundUpNearestPowerOfTwoLog(bytes);
ffffffff8041976b:	d3 e2                	shl    %cl,%edx
  return CreateNewUsedChunkAt(GetAddressByOffset(current_heap_size_),
ffffffff8041976d:	e9 7e fe ff ff       	jmpq   ffffffff804195f0 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj>
ffffffff80419772:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419779:	00 00 00 00 
ffffffff8041977d:	0f 1f 00             	nopl   (%rax)

ffffffff80419780 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_>:
void KernelMemoryManager::CoalsceTwoChunks(uint8_t* left, uint8_t* right) {
ffffffff80419780:	41 56                	push   %r14
ffffffff80419782:	41 55                	push   %r13
ffffffff80419784:	41 54                	push   %r12
ffffffff80419786:	49 89 f4             	mov    %rsi,%r12
ffffffff80419789:	55                   	push   %rbp
ffffffff8041978a:	48 89 fd             	mov    %rdi,%rbp
ffffffff8041978d:	53                   	push   %rbx
  return prefix_block >> 1;
ffffffff8041978e:	44 8b 2e             	mov    (%rsi),%r13d
void KernelMemoryManager::CoalsceTwoChunks(uint8_t* left, uint8_t* right) {
ffffffff80419791:	48 89 d3             	mov    %rdx,%rbx
  return prefix_block >> 1;
ffffffff80419794:	44 8b 32             	mov    (%rdx),%r14d
ffffffff80419797:	41 d1 ed             	shr    %r13d
  WeaveTwoChunksTogether(GetPrevAndNextFromFreeChunk(left),
ffffffff8041979a:	44 89 ef             	mov    %r13d,%edi
  return prefix_block >> 1;
ffffffff8041979d:	41 d1 ee             	shr    %r14d
  WeaveTwoChunksTogether(GetPrevAndNextFromFreeChunk(left),
ffffffff804197a0:	e8 fb fc ff ff       	callq  ffffffff804194a0 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
  return {data[0], data[1]};
ffffffff804197a5:	41 8b 4c 24 04       	mov    0x4(%r12),%ecx
ffffffff804197aa:	41 8b 54 24 08       	mov    0x8(%r12),%edx
  if (prev_and_next.prev_offset == 0) {
ffffffff804197af:	85 c9                	test   %ecx,%ecx
ffffffff804197b1:	75 6d                	jne    ffffffff80419820 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0xa0>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff804197b3:	48 98                	cltq   
ffffffff804197b5:	89 54 85 10          	mov    %edx,0x10(%rbp,%rax,4)
  if (prev_and_next.next_offset != 0) {
ffffffff804197b9:	85 d2                	test   %edx,%edx
ffffffff804197bb:	74 08                	je     ffffffff804197c5 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x45>
  addr[1] = prev_chunk_offset;
ffffffff804197bd:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff804197c1:	89 4c 10 04          	mov    %ecx,0x4(%rax,%rdx,1)
  WeaveTwoChunksTogether(GetPrevAndNextFromFreeChunk(right),
ffffffff804197c5:	44 89 f7             	mov    %r14d,%edi
ffffffff804197c8:	e8 d3 fc ff ff       	callq  ffffffff804194a0 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
  return {data[0], data[1]};
ffffffff804197cd:	8b 4b 04             	mov    0x4(%rbx),%ecx
ffffffff804197d0:	8b 53 08             	mov    0x8(%rbx),%edx
  if (prev_and_next.prev_offset == 0) {
ffffffff804197d3:	85 c9                	test   %ecx,%ecx
ffffffff804197d5:	75 39                	jne    ffffffff80419810 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x90>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff804197d7:	48 98                	cltq   
ffffffff804197d9:	89 54 85 10          	mov    %edx,0x10(%rbp,%rax,4)
  if (prev_and_next.next_offset != 0) {
ffffffff804197dd:	85 d2                	test   %edx,%edx
ffffffff804197df:	74 08                	je     ffffffff804197e9 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x69>
  addr[1] = prev_chunk_offset;
ffffffff804197e1:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff804197e5:	89 4c 10 04          	mov    %ecx,0x4(%rax,%rdx,1)
  int total_size = left_size + right_size + 8;
ffffffff804197e9:	47 8d 6c 2e 08       	lea    0x8(%r14,%r13,1),%r13d
  int bucket_index = GetBucketIndexOfFreeChunk(total_size);
ffffffff804197ee:	44 89 ef             	mov    %r13d,%edi
ffffffff804197f1:	e8 aa fc ff ff       	callq  ffffffff804194a0 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
}
ffffffff804197f6:	5b                   	pop    %rbx
  CreateNewFreeChunkAt(left, total_size, bucket_index);
ffffffff804197f7:	44 89 ea             	mov    %r13d,%edx
ffffffff804197fa:	4c 89 e6             	mov    %r12,%rsi
ffffffff804197fd:	48 89 ef             	mov    %rbp,%rdi
  int bucket_index = GetBucketIndexOfFreeChunk(total_size);
ffffffff80419800:	89 c1                	mov    %eax,%ecx
}
ffffffff80419802:	5d                   	pop    %rbp
ffffffff80419803:	41 5c                	pop    %r12
ffffffff80419805:	41 5d                	pop    %r13
ffffffff80419807:	41 5e                	pop    %r14
  CreateNewFreeChunkAt(left, total_size, bucket_index);
ffffffff80419809:	e9 82 fd ff ff       	jmpq   ffffffff80419590 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>
ffffffff8041980e:	66 90                	xchg   %ax,%ax
  addr[2] = next_chunk_offset;
ffffffff80419810:	48 8b 75 00          	mov    0x0(%rbp),%rsi
  return heap_start_ + offset_size;
ffffffff80419814:	89 c8                	mov    %ecx,%eax
  addr[2] = next_chunk_offset;
ffffffff80419816:	89 54 06 08          	mov    %edx,0x8(%rsi,%rax,1)
}
ffffffff8041981a:	eb c1                	jmp    ffffffff804197dd <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x5d>
ffffffff8041981c:	0f 1f 40 00          	nopl   0x0(%rax)
  addr[2] = next_chunk_offset;
ffffffff80419820:	48 8b 75 00          	mov    0x0(%rbp),%rsi
  return heap_start_ + offset_size;
ffffffff80419824:	89 c8                	mov    %ecx,%eax
  addr[2] = next_chunk_offset;
ffffffff80419826:	89 54 06 08          	mov    %edx,0x8(%rsi,%rax,1)
}
ffffffff8041982a:	eb 8d                	jmp    ffffffff804197b9 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x39>
ffffffff8041982c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80419830 <_ZN6Kernel19KernelMemoryManager23RemoveFreeChunkFromHeapEPh>:
void KernelMemoryManager::RemoveFreeChunkFromHeap(uint8_t* addr) {
ffffffff80419830:	41 54                	push   %r12
ffffffff80419832:	55                   	push   %rbp
ffffffff80419833:	48 89 f5             	mov    %rsi,%rbp
ffffffff80419836:	53                   	push   %rbx
  return prefix_block >> 1;
ffffffff80419837:	44 8b 26             	mov    (%rsi),%r12d
void KernelMemoryManager::RemoveFreeChunkFromHeap(uint8_t* addr) {
ffffffff8041983a:	48 89 fb             	mov    %rdi,%rbx
  return prefix_block >> 1;
ffffffff8041983d:	41 d1 ec             	shr    %r12d
  WeaveTwoChunksTogether(GetPrevAndNextFromFreeChunk(addr),
ffffffff80419840:	44 89 e7             	mov    %r12d,%edi
ffffffff80419843:	e8 58 fc ff ff       	callq  ffffffff804194a0 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
  return {data[0], data[1]};
ffffffff80419848:	8b 4d 04             	mov    0x4(%rbp),%ecx
ffffffff8041984b:	8b 55 08             	mov    0x8(%rbp),%edx
  if (prev_and_next.prev_offset == 0) {
ffffffff8041984e:	85 c9                	test   %ecx,%ecx
ffffffff80419850:	75 26                	jne    ffffffff80419878 <_ZN6Kernel19KernelMemoryManager23RemoveFreeChunkFromHeapEPh+0x48>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff80419852:	48 98                	cltq   
ffffffff80419854:	89 54 83 10          	mov    %edx,0x10(%rbx,%rax,4)
  if (prev_and_next.next_offset != 0) {
ffffffff80419858:	85 d2                	test   %edx,%edx
ffffffff8041985a:	74 07                	je     ffffffff80419863 <_ZN6Kernel19KernelMemoryManager23RemoveFreeChunkFromHeapEPh+0x33>
  addr[1] = prev_chunk_offset;
ffffffff8041985c:	48 8b 03             	mov    (%rbx),%rax
ffffffff8041985f:	89 4c 10 04          	mov    %ecx,0x4(%rax,%rdx,1)
  current_heap_size_ -= (chunk_size + 8);
ffffffff80419863:	8b 43 0c             	mov    0xc(%rbx),%eax
ffffffff80419866:	83 e8 08             	sub    $0x8,%eax
ffffffff80419869:	44 29 e0             	sub    %r12d,%eax
ffffffff8041986c:	89 43 0c             	mov    %eax,0xc(%rbx)
}
ffffffff8041986f:	5b                   	pop    %rbx
ffffffff80419870:	5d                   	pop    %rbp
ffffffff80419871:	41 5c                	pop    %r12
ffffffff80419873:	c3                   	retq   
ffffffff80419874:	0f 1f 40 00          	nopl   0x0(%rax)
  addr[2] = next_chunk_offset;
ffffffff80419878:	48 8b 33             	mov    (%rbx),%rsi
  return heap_start_ + offset_size;
ffffffff8041987b:	89 c8                	mov    %ecx,%eax
  addr[2] = next_chunk_offset;
ffffffff8041987d:	89 54 06 08          	mov    %edx,0x8(%rsi,%rax,1)
}
ffffffff80419881:	eb d5                	jmp    ffffffff80419858 <_ZN6Kernel19KernelMemoryManager23RemoveFreeChunkFromHeapEPh+0x28>
ffffffff80419883:	90                   	nop
ffffffff80419884:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041988b:	00 00 00 00 
ffffffff8041988f:	90                   	nop

ffffffff80419890 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh>:
void KernelMemoryManager::FreeOccupiedChunk(uint8_t* addr) {
ffffffff80419890:	41 55                	push   %r13
ffffffff80419892:	41 54                	push   %r12
ffffffff80419894:	49 89 fc             	mov    %rdi,%r12
ffffffff80419897:	55                   	push   %rbp
  return prefix_block >> 1;
ffffffff80419898:	44 8b 2e             	mov    (%rsi),%r13d
void KernelMemoryManager::FreeOccupiedChunk(uint8_t* addr) {
ffffffff8041989b:	48 89 f5             	mov    %rsi,%rbp
  return prefix_block >> 1;
ffffffff8041989e:	41 d1 ed             	shr    %r13d
  CreateNewFreeChunkAt(addr, chunk_size, GetBucketIndexOfFreeChunk(chunk_size));
ffffffff804198a1:	44 89 ef             	mov    %r13d,%edi
ffffffff804198a4:	e8 f7 fb ff ff       	callq  ffffffff804194a0 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
ffffffff804198a9:	44 89 ea             	mov    %r13d,%edx
ffffffff804198ac:	48 89 ee             	mov    %rbp,%rsi
ffffffff804198af:	4c 89 e7             	mov    %r12,%rdi
ffffffff804198b2:	89 c1                	mov    %eax,%ecx
ffffffff804198b4:	e8 d7 fc ff ff       	callq  ffffffff80419590 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>
  if (suffix_of_left_chunk >= heap_start_ + 8 /* initial offset */ &&
ffffffff804198b9:	49 8b 04 24          	mov    (%r12),%rax
  uint8_t* suffix_of_left_chunk = reinterpret_cast<uint8_t*>(addr) - 4;
ffffffff804198bd:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx
  if (suffix_of_left_chunk >= heap_start_ + 8 /* initial offset */ &&
ffffffff804198c1:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff804198c5:	48 39 ca             	cmp    %rcx,%rdx
ffffffff804198c8:	72 06                	jb     ffffffff804198d0 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x40>
ffffffff804198ca:	f6 45 fc 01          	testb  $0x1,-0x4(%rbp)
ffffffff804198ce:	74 70                	je     ffffffff80419940 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0xb0>
  return prefix_block >> 1;
ffffffff804198d0:	8b 55 00             	mov    0x0(%rbp),%edx
ffffffff804198d3:	d1 ea                	shr    %edx
  return addr + memory_size + 8;
ffffffff804198d5:	89 d1                	mov    %edx,%ecx
ffffffff804198d7:	4c 8d 44 0d 08       	lea    0x8(%rbp,%rcx,1),%r8
  if (GetOffsetFromHeapStart(prefix_of_right_chunk) < current_heap_size_ &&
ffffffff804198dc:	41 8b 4c 24 0c       	mov    0xc(%r12),%ecx
  return reinterpret_cast<uint64_t>(addr) -
ffffffff804198e1:	4c 89 c6             	mov    %r8,%rsi
ffffffff804198e4:	48 29 c6             	sub    %rax,%rsi
  if (GetOffsetFromHeapStart(prefix_of_right_chunk) < current_heap_size_ &&
ffffffff804198e7:	39 f1                	cmp    %esi,%ecx
ffffffff804198e9:	76 06                	jbe    ffffffff804198f1 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x61>
ffffffff804198eb:	41 f6 00 01          	testb  $0x1,(%r8)
ffffffff804198ef:	74 2f                	je     ffffffff80419920 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x90>
  return reinterpret_cast<uint64_t>(addr) -
ffffffff804198f1:	48 89 ef             	mov    %rbp,%rdi
ffffffff804198f4:	48 29 c7             	sub    %rax,%rdi
  if (GetOffsetFromHeapStart(addr) + merged_chunk_size + 8 ==
ffffffff804198f7:	8d 44 3a 08          	lea    0x8(%rdx,%rdi,1),%eax
ffffffff804198fb:	39 c8                	cmp    %ecx,%eax
ffffffff804198fd:	74 09                	je     ffffffff80419908 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x78>
}
ffffffff804198ff:	5d                   	pop    %rbp
ffffffff80419900:	41 5c                	pop    %r12
ffffffff80419902:	41 5d                	pop    %r13
ffffffff80419904:	c3                   	retq   
ffffffff80419905:	0f 1f 00             	nopl   (%rax)
    RemoveFreeChunkFromHeap(addr);
ffffffff80419908:	48 89 ee             	mov    %rbp,%rsi
ffffffff8041990b:	4c 89 e7             	mov    %r12,%rdi
}
ffffffff8041990e:	5d                   	pop    %rbp
ffffffff8041990f:	41 5c                	pop    %r12
ffffffff80419911:	41 5d                	pop    %r13
    RemoveFreeChunkFromHeap(addr);
ffffffff80419913:	e9 18 ff ff ff       	jmpq   ffffffff80419830 <_ZN6Kernel19KernelMemoryManager23RemoveFreeChunkFromHeapEPh>
ffffffff80419918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041991f:	00 
    CoalsceTwoChunks(addr, prefix_of_right_chunk);
ffffffff80419920:	4c 89 c2             	mov    %r8,%rdx
ffffffff80419923:	48 89 ee             	mov    %rbp,%rsi
ffffffff80419926:	4c 89 e7             	mov    %r12,%rdi
ffffffff80419929:	e8 52 fe ff ff       	callq  ffffffff80419780 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_>
ffffffff8041992e:	8b 55 00             	mov    0x0(%rbp),%edx
ffffffff80419931:	41 8b 4c 24 0c       	mov    0xc(%r12),%ecx
ffffffff80419936:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8041993a:	d1 ea                	shr    %edx
ffffffff8041993c:	eb b3                	jmp    ffffffff804198f1 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x61>
ffffffff8041993e:	66 90                	xchg   %ax,%ax
  return prefix_block >> 1;
ffffffff80419940:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80419943:	d1 e8                	shr    %eax
  return suffix - mem_size - 4;
ffffffff80419945:	48 29 c2             	sub    %rax,%rdx
ffffffff80419948:	4c 8d 6a fc          	lea    -0x4(%rdx),%r13
    CoalsceTwoChunks(left, addr);
ffffffff8041994c:	48 89 ea             	mov    %rbp,%rdx
ffffffff8041994f:	4c 89 ee             	mov    %r13,%rsi
    addr = left;
ffffffff80419952:	4c 89 ed             	mov    %r13,%rbp
    CoalsceTwoChunks(left, addr);
ffffffff80419955:	e8 26 fe ff ff       	callq  ffffffff80419780 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_>
    addr = left;
ffffffff8041995a:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8041995e:	e9 6d ff ff ff       	jmpq   ffffffff804198d0 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x40>
ffffffff80419963:	90                   	nop
ffffffff80419964:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041996b:	00 00 00 00 
ffffffff8041996f:	90                   	nop

ffffffff80419970 <_ZNK6Kernel19KernelMemoryManager18GetAddressByOffsetEj>:
  return heap_start_ + offset_size;
ffffffff80419970:	89 f0                	mov    %esi,%eax
ffffffff80419972:	48 03 07             	add    (%rdi),%rax
}
ffffffff80419975:	c3                   	retq   
ffffffff80419976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041997d:	00 00 00 

ffffffff80419980 <_ZNK6Kernel19KernelMemoryManager22GetOffsetFromHeapStartEPh>:
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419980:	48 89 f0             	mov    %rsi,%rax
ffffffff80419983:	48 2b 07             	sub    (%rdi),%rax
}
ffffffff80419986:	c3                   	retq   
ffffffff80419987:	90                   	nop
ffffffff80419988:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041998f:	00 

ffffffff80419990 <_ZNK6Kernel19KernelMemoryManager30GetActualMemoryAddressByOffsetEj>:
  return heap_start_ + offset_size + /* prefix size = */ 4;
ffffffff80419990:	48 8b 07             	mov    (%rdi),%rax
ffffffff80419993:	89 f6                	mov    %esi,%esi
ffffffff80419995:	48 8d 44 30 04       	lea    0x4(%rax,%rsi,1),%rax
}
ffffffff8041999a:	c3                   	retq   
ffffffff8041999b:	90                   	nop
ffffffff8041999c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804199a0 <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi>:
  if (prev_and_next.prev_offset == 0) {
ffffffff804199a0:	8b 0e                	mov    (%rsi),%ecx
ffffffff804199a2:	8b 46 04             	mov    0x4(%rsi),%eax
ffffffff804199a5:	85 c9                	test   %ecx,%ecx
ffffffff804199a7:	75 17                	jne    ffffffff804199c0 <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi+0x20>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff804199a9:	48 63 d2             	movslq %edx,%rdx
ffffffff804199ac:	89 44 97 10          	mov    %eax,0x10(%rdi,%rdx,4)
  if (prev_and_next.next_offset != 0) {
ffffffff804199b0:	85 c0                	test   %eax,%eax
ffffffff804199b2:	74 09                	je     ffffffff804199bd <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi+0x1d>
    uint8_t* chunk = GetAddressByOffset(prev_and_next.next_offset);
    SetPrevOffset(chunk, prev_and_next.prev_offset);
ffffffff804199b4:	8b 0e                	mov    (%rsi),%ecx
  addr[1] = prev_chunk_offset;
ffffffff804199b6:	48 8b 17             	mov    (%rdi),%rdx
ffffffff804199b9:	89 4c 02 04          	mov    %ecx,0x4(%rdx,%rax,1)
  }
}
ffffffff804199bd:	c3                   	retq   
ffffffff804199be:	66 90                	xchg   %ax,%ax
  addr[2] = next_chunk_offset;
ffffffff804199c0:	48 8b 17             	mov    (%rdi),%rdx
ffffffff804199c3:	89 44 0a 08          	mov    %eax,0x8(%rdx,%rcx,1)
ffffffff804199c7:	8b 46 04             	mov    0x4(%rsi),%eax
}
ffffffff804199ca:	eb e4                	jmp    ffffffff804199b0 <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi+0x10>
ffffffff804199cc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804199d0 <_ZNK6Kernel19KernelMemoryManager13ShowDebugInfoEv>:

void KernelMemoryManager::ShowDebugInfo() const {
ffffffff804199d0:	55                   	push   %rbp
  kprintf("---------- kmalloc Debug Info ---------- \n");
ffffffff804199d1:	31 c0                	xor    %eax,%eax
void KernelMemoryManager::ShowDebugInfo() const {
ffffffff804199d3:	48 89 fd             	mov    %rdi,%rbp
  kprintf("---------- kmalloc Debug Info ---------- \n");
ffffffff804199d6:	48 c7 c7 30 b9 41 80 	mov    $0xffffffff8041b930,%rdi
void KernelMemoryManager::ShowDebugInfo() const {
ffffffff804199dd:	53                   	push   %rbx
ffffffff804199de:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
ffffffff804199e2:	48 83 c5 50          	add    $0x50,%rbp
ffffffff804199e6:	48 83 ec 08          	sub    $0x8,%rsp
  kprintf("---------- kmalloc Debug Info ---------- \n");
ffffffff804199ea:	e8 e1 f8 ff ff       	callq  ffffffff804192d0 <printf_>
  kprintf("Current Total heap size : %d \n", current_heap_size_ - 8);
ffffffff804199ef:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff804199f2:	48 c7 c7 60 b9 41 80 	mov    $0xffffffff8041b960,%rdi
ffffffff804199f9:	8d 70 f8             	lea    -0x8(%rax),%esi
ffffffff804199fc:	31 c0                	xor    %eax,%eax
ffffffff804199fe:	e8 cd f8 ff ff       	callq  ffffffff804192d0 <printf_>
  kprintf("---------- Free list offsets  ---------- \n");
ffffffff80419a03:	48 c7 c7 80 b9 41 80 	mov    $0xffffffff8041b980,%rdi
ffffffff80419a0a:	31 c0                	xor    %eax,%eax
ffffffff80419a0c:	e8 bf f8 ff ff       	callq  ffffffff804192d0 <printf_>
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff80419a11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    kprintf("%5d", free_list_[i]);
ffffffff80419a18:	8b 33                	mov    (%rbx),%esi
ffffffff80419a1a:	48 c7 c7 f0 b9 41 80 	mov    $0xffffffff8041b9f0,%rdi
ffffffff80419a21:	31 c0                	xor    %eax,%eax
ffffffff80419a23:	48 83 c3 04          	add    $0x4,%rbx
ffffffff80419a27:	e8 a4 f8 ff ff       	callq  ffffffff804192d0 <printf_>
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff80419a2c:	48 39 eb             	cmp    %rbp,%rbx
ffffffff80419a2f:	75 e7                	jne    ffffffff80419a18 <_ZNK6Kernel19KernelMemoryManager13ShowDebugInfoEv+0x48>
  }
}
ffffffff80419a31:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80419a35:	5b                   	pop    %rbx
ffffffff80419a36:	5d                   	pop    %rbp
ffffffff80419a37:	c3                   	retq   
ffffffff80419a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80419a3f:	00 

ffffffff80419a40 <_ZN6Kernel19KernelMemoryManager5ResetEv>:

void KernelMemoryManager::Reset() {
  current_heap_size_ = 8;
ffffffff80419a40:	c7 47 0c 08 00 00 00 	movl   $0x8,0xc(%rdi)
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff80419a47:	48 8d 47 10          	lea    0x10(%rdi),%rax
ffffffff80419a4b:	48 8d 57 50          	lea    0x50(%rdi),%rdx
ffffffff80419a4f:	90                   	nop
    free_list_[i] = 0;
ffffffff80419a50:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80419a56:	48 83 c0 04          	add    $0x4,%rax
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff80419a5a:	48 39 d0             	cmp    %rdx,%rax
ffffffff80419a5d:	75 f1                	jne    ffffffff80419a50 <_ZN6Kernel19KernelMemoryManager5ResetEv+0x10>
  }
}
ffffffff80419a5f:	c3                   	retq   

ffffffff80419a60 <_ZNK6Kernel19KernelMemoryManager21CheckMemoryDeleteSizeEPhj>:
  return prefix_block >> 1;
ffffffff80419a60:	8b 46 fc             	mov    -0x4(%rsi),%eax
ffffffff80419a63:	d1 e8                	shr    %eax

bool KernelMemoryManager::CheckMemoryDeleteSize(uint8_t* addr,
                                                uint32_t bytes) const {
  auto chunk_size = GetChunkSize(addr - /* Get suffix block */ 4);
  return chunk_size >= bytes;
ffffffff80419a65:	39 c2                	cmp    %eax,%edx
ffffffff80419a67:	0f 96 c0             	setbe  %al
}
ffffffff80419a6a:	c3                   	retq   
ffffffff80419a6b:	90                   	nop
ffffffff80419a6c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80419a70 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv>:

bool KernelMemoryManager::SanityCheck() {
  // First scan the entire heap from the start to the end.
  uint32_t current_offset = 8;
  while (current_offset < current_heap_size_) {
ffffffff80419a70:	44 8b 47 0c          	mov    0xc(%rdi),%r8d
ffffffff80419a74:	41 83 f8 08          	cmp    $0x8,%r8d
ffffffff80419a78:	76 36                	jbe    ffffffff80419ab0 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x40>
  return heap_start_ + offset_size;
ffffffff80419a7a:	48 8b 3f             	mov    (%rdi),%rdi
  uint32_t current_offset = 8;
ffffffff80419a7d:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80419a82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  return heap_start_ + offset_size;
ffffffff80419a88:	89 f2                	mov    %esi,%edx
ffffffff80419a8a:	48 01 fa             	add    %rdi,%rdx
  return prefix_block >> 1;
ffffffff80419a8d:	8b 02                	mov    (%rdx),%eax
ffffffff80419a8f:	d1 e8                	shr    %eax
    uint8_t* chunk = GetAddressByOffset(current_offset);
    uint32_t chunk_size = GetChunkSize(chunk);

    if (IsOccupied(chunk)) {
ffffffff80419a91:	f6 02 01             	testb  $0x1,(%rdx)
ffffffff80419a94:	74 11                	je     ffffffff80419aa7 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x37>
  return addr + memory_size + 4;
ffffffff80419a96:	89 c1                	mov    %eax,%ecx
  return (*s) == kKmallocMagic || (*s) == kKmallocMagicOccupied;
ffffffff80419a98:	8b 4c 0a 04          	mov    0x4(%rdx,%rcx,1),%ecx
ffffffff80419a9c:	83 e1 f7             	and    $0xfffffff7,%ecx
      uint8_t* suffix = GetSuffixBlockAddressFromChunkStart(chunk, chunk_size);
      if (!CheckMagic(suffix)) {
ffffffff80419a9f:	81 f9 d7 dd dd dd    	cmp    $0xddddddd7,%ecx
ffffffff80419aa5:	75 19                	jne    ffffffff80419ac0 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x50>
        kprintf("Magic Corrupted at : %d of %x \n", current_offset, chunk);
        return false;
      }
    }

    current_offset += (8 + chunk_size);
ffffffff80419aa7:	8d 74 30 08          	lea    0x8(%rax,%rsi,1),%esi
  while (current_offset < current_heap_size_) {
ffffffff80419aab:	44 39 c6             	cmp    %r8d,%esi
ffffffff80419aae:	72 d8                	jb     ffffffff80419a88 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x18>
  }
  return true;
ffffffff80419ab0:	b8 01 00 00 00       	mov    $0x1,%eax
}
ffffffff80419ab5:	c3                   	retq   
ffffffff80419ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80419abd:	00 00 00 
bool KernelMemoryManager::SanityCheck() {
ffffffff80419ac0:	48 83 ec 08          	sub    $0x8,%rsp
        kprintf("Magic Corrupted at : %d of %x \n", current_offset, chunk);
ffffffff80419ac4:	48 c7 c7 b0 b9 41 80 	mov    $0xffffffff8041b9b0,%rdi
ffffffff80419acb:	31 c0                	xor    %eax,%eax
ffffffff80419acd:	e8 fe f7 ff ff       	callq  ffffffff804192d0 <printf_>
        return false;
ffffffff80419ad2:	31 c0                	xor    %eax,%eax
}
ffffffff80419ad4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80419ad8:	c3                   	retq   
ffffffff80419ad9:	90                   	nop
ffffffff80419ada:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80419ae0 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv>:

void KernelMemoryManager::DumpMemory() {
  uint32_t current_offset = 8;
  while (current_offset < current_heap_size_) {
ffffffff80419ae0:	83 7f 0c 08          	cmpl   $0x8,0xc(%rdi)
ffffffff80419ae4:	0f 86 b6 00 00 00    	jbe    ffffffff80419ba0 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0xc0>
void KernelMemoryManager::DumpMemory() {
ffffffff80419aea:	41 55                	push   %r13
ffffffff80419aec:	49 89 fd             	mov    %rdi,%r13
ffffffff80419aef:	41 54                	push   %r12
  uint32_t current_offset = 8;
ffffffff80419af1:	41 bc 08 00 00 00    	mov    $0x8,%r12d
void KernelMemoryManager::DumpMemory() {
ffffffff80419af7:	55                   	push   %rbp
ffffffff80419af8:	53                   	push   %rbx
ffffffff80419af9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80419afd:	eb 3c                	jmp    ffffffff80419b3b <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x5b>
ffffffff80419aff:	90                   	nop

    bool is_occupied = IsOccupied(chunk);
    if (is_occupied) {
      kprintf("O ");
    } else {
      kprintf("F ");
ffffffff80419b00:	48 c7 c7 f7 b9 41 80 	mov    $0xffffffff8041b9f7,%rdi
ffffffff80419b07:	31 c0                	xor    %eax,%eax
ffffffff80419b09:	e8 c2 f7 ff ff       	callq  ffffffff804192d0 <printf_>
      if (!CheckMagic(suffix)) {
        kprintf("MAGIC FAILED!");
      }
    } else {
      auto prev_and_next = GetPrevAndNextFromFreeChunk(chunk);
      kprintf(" prev : [%d] next : [%d]", prev_and_next.prev_offset,
ffffffff80419b0e:	8b 53 08             	mov    0x8(%rbx),%edx
ffffffff80419b11:	8b 73 04             	mov    0x4(%rbx),%esi
ffffffff80419b14:	31 c0                	xor    %eax,%eax
ffffffff80419b16:	48 c7 c7 fa b9 41 80 	mov    $0xffffffff8041b9fa,%rdi
ffffffff80419b1d:	e8 ae f7 ff ff       	callq  ffffffff804192d0 <printf_>
              prev_and_next.next_offset);
    }

    kprintf("\n");
ffffffff80419b22:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80419b29:	31 c0                	xor    %eax,%eax

    current_offset += (8 + chunk_size);
ffffffff80419b2b:	46 8d 64 25 08       	lea    0x8(%rbp,%r12,1),%r12d
    kprintf("\n");
ffffffff80419b30:	e8 9b f7 ff ff       	callq  ffffffff804192d0 <printf_>
  while (current_offset < current_heap_size_) {
ffffffff80419b35:	45 39 65 0c          	cmp    %r12d,0xc(%r13)
ffffffff80419b39:	76 55                	jbe    ffffffff80419b90 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0xb0>
  return heap_start_ + offset_size;
ffffffff80419b3b:	44 89 e3             	mov    %r12d,%ebx
ffffffff80419b3e:	49 03 5d 00          	add    0x0(%r13),%rbx
    kprintf("Offset [%d] Chunk Size : [%d] ", current_offset, chunk_size);
ffffffff80419b42:	31 c0                	xor    %eax,%eax
ffffffff80419b44:	44 89 e6             	mov    %r12d,%esi
  return prefix_block >> 1;
ffffffff80419b47:	8b 2b                	mov    (%rbx),%ebp
    kprintf("Offset [%d] Chunk Size : [%d] ", current_offset, chunk_size);
ffffffff80419b49:	48 c7 c7 d0 b9 41 80 	mov    $0xffffffff8041b9d0,%rdi
  return prefix_block >> 1;
ffffffff80419b50:	d1 ed                	shr    %ebp
    kprintf("Offset [%d] Chunk Size : [%d] ", current_offset, chunk_size);
ffffffff80419b52:	89 ea                	mov    %ebp,%edx
ffffffff80419b54:	e8 77 f7 ff ff       	callq  ffffffff804192d0 <printf_>
    if (is_occupied) {
ffffffff80419b59:	f6 03 01             	testb  $0x1,(%rbx)
ffffffff80419b5c:	74 a2                	je     ffffffff80419b00 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x20>
      kprintf("O ");
ffffffff80419b5e:	48 c7 c7 f4 b9 41 80 	mov    $0xffffffff8041b9f4,%rdi
ffffffff80419b65:	31 c0                	xor    %eax,%eax
ffffffff80419b67:	e8 64 f7 ff ff       	callq  ffffffff804192d0 <printf_>
  return addr + memory_size + 4;
ffffffff80419b6c:	89 e8                	mov    %ebp,%eax
  return (*s) == kKmallocMagic || (*s) == kKmallocMagicOccupied;
ffffffff80419b6e:	8b 44 03 04          	mov    0x4(%rbx,%rax,1),%eax
ffffffff80419b72:	83 e0 f7             	and    $0xfffffff7,%eax
      if (!CheckMagic(suffix)) {
ffffffff80419b75:	3d d7 dd dd dd       	cmp    $0xddddddd7,%eax
ffffffff80419b7a:	74 a6                	je     ffffffff80419b22 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x42>
        kprintf("MAGIC FAILED!");
ffffffff80419b7c:	48 c7 c7 13 ba 41 80 	mov    $0xffffffff8041ba13,%rdi
ffffffff80419b83:	31 c0                	xor    %eax,%eax
ffffffff80419b85:	e8 46 f7 ff ff       	callq  ffffffff804192d0 <printf_>
ffffffff80419b8a:	eb 96                	jmp    ffffffff80419b22 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x42>
ffffffff80419b8c:	0f 1f 40 00          	nopl   0x0(%rax)
  }
}
ffffffff80419b90:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80419b94:	5b                   	pop    %rbx
ffffffff80419b95:	5d                   	pop    %rbp
ffffffff80419b96:	41 5c                	pop    %r12
ffffffff80419b98:	41 5d                	pop    %r13
ffffffff80419b9a:	c3                   	retq   
ffffffff80419b9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80419ba0:	c3                   	retq   
ffffffff80419ba1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419ba8:	00 00 00 00 
ffffffff80419bac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80419bb0 <_ZN6Kernel7kmallocEm>:

void* kmalloc(size_t bytes) {
  if (bytes == 0) {
ffffffff80419bb0:	48 85 ff             	test   %rdi,%rdi
ffffffff80419bb3:	74 5b                	je     ffffffff80419c10 <_ZN6Kernel7kmallocEm+0x60>
    return nullptr;
  }

  if (bytes < 8) {
ffffffff80419bb5:	48 83 ff 08          	cmp    $0x8,%rdi
ffffffff80419bb9:	ba 08 00 00 00       	mov    $0x8,%edx
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419bbe:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80419bc3:	48 0f 43 d7          	cmovae %rdi,%rdx
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff80419bc7:	0f bd ca             	bsr    %edx,%ecx
ffffffff80419bca:	83 f1 1f             	xor    $0x1f,%ecx
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419bcd:	0f bc c2             	bsf    %edx,%eax
ffffffff80419bd0:	0f 44 c6             	cmove  %esi,%eax
    return num_trailing_zeros - 1;
ffffffff80419bd3:	be 20 00 00 00       	mov    $0x20,%esi
ffffffff80419bd8:	29 ce                	sub    %ecx,%esi
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419bda:	83 c0 01             	add    $0x1,%eax
  if (num_leading_zeros + num_trailing_zeros == 32) {
ffffffff80419bdd:	8d 3c 01             	lea    (%rcx,%rax,1),%edi
    return num_trailing_zeros - 1;
ffffffff80419be0:	83 e8 01             	sub    $0x1,%eax
ffffffff80419be3:	83 ff 20             	cmp    $0x20,%edi
ffffffff80419be6:	0f 45 c6             	cmovne %esi,%eax
    return 0;
ffffffff80419be9:	31 f6                	xor    %esi,%esi
  if (power < 3) {
ffffffff80419beb:	83 f8 02             	cmp    $0x2,%eax
ffffffff80419bee:	7e 11                	jle    ffffffff80419c01 <_ZN6Kernel7kmallocEm+0x51>
  } else if (3 < power && power < 3 + NUM_BUCKETS) {
ffffffff80419bf0:	8d 48 fc             	lea    -0x4(%rax),%ecx
    return power - 3;
ffffffff80419bf3:	be 0f 00 00 00       	mov    $0xf,%esi
ffffffff80419bf8:	83 e8 03             	sub    $0x3,%eax
ffffffff80419bfb:	83 f9 0f             	cmp    $0xf,%ecx
ffffffff80419bfe:	0f 42 f0             	cmovb  %eax,%esi
    bytes = 8;
  }

  int bucket_index = GetBucketIndex(bytes);
  return reinterpret_cast<void*>(
      kernel_memory_manager.GetMemoryFromBucket(bucket_index, bytes));
ffffffff80419c01:	48 c7 c7 a0 09 42 80 	mov    $0xffffffff804209a0,%rdi
ffffffff80419c08:	e9 d3 fa ff ff       	jmpq   ffffffff804196e0 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij>
ffffffff80419c0d:	0f 1f 00             	nopl   (%rax)
}
ffffffff80419c10:	31 c0                	xor    %eax,%eax
ffffffff80419c12:	c3                   	retq   
ffffffff80419c13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419c1a:	00 00 00 00 
ffffffff80419c1e:	66 90                	xchg   %ax,%ax

ffffffff80419c20 <_ZN6Kernel7kcallocEm>:

void* kcalloc(size_t bytes) {
ffffffff80419c20:	53                   	push   %rbx
ffffffff80419c21:	48 89 fb             	mov    %rdi,%rbx
  void* addr = kmalloc(bytes);
ffffffff80419c24:	e8 87 ff ff ff       	callq  ffffffff80419bb0 <_ZN6Kernel7kmallocEm>
  if (addr != nullptr) {
ffffffff80419c29:	48 85 c0             	test   %rax,%rax
ffffffff80419c2c:	74 1e                	je     ffffffff80419c4c <_ZN6Kernel7kcallocEm+0x2c>
  while (count-- > 0) {
ffffffff80419c2e:	48 85 db             	test   %rbx,%rbx
ffffffff80419c31:	74 19                	je     ffffffff80419c4c <_ZN6Kernel7kcallocEm+0x2c>
ffffffff80419c33:	48 8d 3c 18          	lea    (%rax,%rbx,1),%rdi
ffffffff80419c37:	48 89 c2             	mov    %rax,%rdx
ffffffff80419c3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    *d = ch;
ffffffff80419c40:	c6 02 00             	movb   $0x0,(%rdx)
    d++;
ffffffff80419c43:	48 83 c2 01          	add    $0x1,%rdx
  while (count-- > 0) {
ffffffff80419c47:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80419c4a:	75 f4                	jne    ffffffff80419c40 <_ZN6Kernel7kcallocEm+0x20>
    memset(addr, 0, bytes);
  }
  return addr;
}
ffffffff80419c4c:	5b                   	pop    %rbx
ffffffff80419c4d:	c3                   	retq   
ffffffff80419c4e:	66 90                	xchg   %ax,%ax

ffffffff80419c50 <_ZN6Kernel5kfreeEPv>:

void kfree(void* ptr) {
  // Move addr to point start of the chunk.
  uint8_t* addr = reinterpret_cast<uint8_t*>(ptr);
  addr -= 4;
ffffffff80419c50:	48 8d 77 fc          	lea    -0x4(%rdi),%rsi
  kernel_memory_manager.FreeOccupiedChunk(addr);
ffffffff80419c54:	48 c7 c7 a0 09 42 80 	mov    $0xffffffff804209a0,%rdi
ffffffff80419c5b:	e9 30 fc ff ff       	jmpq   ffffffff80419890 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh>

ffffffff80419c60 <_ZN6Kernel12KernelThread13CurrentThreadEv>:
class ThreadIdManager {
 public:
  static size_t GetThreadId() {
    static ThreadIdManager thread_id_manager;
    return thread_id_manager.GetId();
  }
ffffffff80419c60:	48 8c e0             	mov    %fs,%rax

  ThreadIdManager(const ThreadIdManager&) = delete;
ffffffff80419c63:	c3                   	retq   
ffffffff80419c64:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419c6b:	00 00 00 00 
ffffffff80419c6f:	90                   	nop

ffffffff80419c70 <_ZN6Kernel12KernelThread10InitThreadEv>:
  void operator=(const ThreadIdManager&) = delete;

ffffffff80419c70:	48 83 ec 08          	sub    $0x8,%rsp
 private:
ffffffff80419c74:	bf 38 00 00 00       	mov    $0x38,%edi
ffffffff80419c79:	e8 e2 00 00 00       	callq  ffffffff80419d60 <_Znwm>
      head_ = elem;
    }
  }

  void push_back(KernelListElement<T>* elem) {
    size_++;
ffffffff80419c7e:	83 05 7b 6d 00 00 01 	addl   $0x1,0x6d7b(%rip)        # ffffffff80420a00 <_ZN6Kernel18kernel_thread_listE+0x10>

    if (empty()) {
ffffffff80419c85:	48 83 3d 63 6d 00 00 	cmpq   $0x0,0x6d63(%rip)        # ffffffff804209f0 <_ZN6Kernel18kernel_thread_listE>
ffffffff80419c8c:	00 
  size_t GetId() {
    std::lock_guard<IrqLock> l(lock_);
    return current_id_++;
  }

  size_t current_id_ = 0;
ffffffff80419c8d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
ffffffff80419c94:	48 8d 50 10          	lea    0x10(%rax),%rdx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419c98:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
ffffffff80419c9f:	00 
ffffffff80419ca0:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80419ca7:	00 
ffffffff80419ca8:	48 c7 40 28 f0 09 42 	movq   $0xffffffff804209f0,0x28(%rax)
ffffffff80419caf:	80 
  void Set(const T& data) { t = data; }
ffffffff80419cb0:	48 89 40 20          	mov    %rax,0x20(%rax)
    if (empty()) {
ffffffff80419cb4:	74 2a                	je     ffffffff80419ce0 <_ZN6Kernel12KernelThread10InitThreadEv+0x70>
      head_ = tail_ = elem;
      elem->prev = elem->next = nullptr;
    } else {
      // Link previous tail and new tail together.
      tail_->next = elem;
ffffffff80419cb6:	48 8b 0d 3b 6d 00 00 	mov    0x6d3b(%rip),%rcx        # ffffffff804209f8 <_ZN6Kernel18kernel_thread_listE+0x8>
ffffffff80419cbd:	48 89 51 08          	mov    %rdx,0x8(%rcx)
      elem->prev = tail_;
ffffffff80419cc1:	48 89 48 10          	mov    %rcx,0x10(%rax)

      // There is nothing on the right side of new tail.
      elem->next = nullptr;
ffffffff80419cc5:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80419ccc:	00 

      // Set tail point new element.
      tail_ = elem;
ffffffff80419ccd:	48 89 15 24 6d 00 00 	mov    %rdx,0x6d24(%rip)        # ffffffff804209f8 <_ZN6Kernel18kernel_thread_listE+0x8>
    std::lock_guard<IrqLock> l(lock_);
ffffffff80419cd4:	48 8e e0             	mov    %rax,%fs
    return current_id_++;
ffffffff80419cd7:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80419cdb:	c3                   	retq   
ffffffff80419cdc:	0f 1f 40 00          	nopl   0x0(%rax)
      head_ = tail_ = elem;
ffffffff80419ce0:	48 89 15 11 6d 00 00 	mov    %rdx,0x6d11(%rip)        # ffffffff804209f8 <_ZN6Kernel18kernel_thread_listE+0x8>
ffffffff80419ce7:	48 89 15 02 6d 00 00 	mov    %rdx,0x6d02(%rip)        # ffffffff804209f0 <_ZN6Kernel18kernel_thread_listE>
ffffffff80419cee:	eb e4                	jmp    ffffffff80419cd4 <_ZN6Kernel12KernelThread10InitThreadEv+0x64>

ffffffff80419cf0 <_ZN6Kernel12KernelThreadC1Ev>:
    size_++;
ffffffff80419cf0:	83 05 09 6d 00 00 01 	addl   $0x1,0x6d09(%rip)        # ffffffff80420a00 <_ZN6Kernel18kernel_thread_listE+0x10>
    if (empty()) {
ffffffff80419cf7:	48 83 3d f1 6c 00 00 	cmpq   $0x0,0x6cf1(%rip)        # ffffffff804209f0 <_ZN6Kernel18kernel_thread_listE>
ffffffff80419cfe:	00 
  size_t current_id_ = 0;
ffffffff80419cff:	48 8d 47 10          	lea    0x10(%rdi),%rax
ffffffff80419d03:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419d0a:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
ffffffff80419d11:	00 
ffffffff80419d12:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
ffffffff80419d19:	00 
ffffffff80419d1a:	48 c7 47 28 f0 09 42 	movq   $0xffffffff804209f0,0x28(%rdi)
ffffffff80419d21:	80 
  void Set(const T& data) { t = data; }
ffffffff80419d22:	48 89 7f 20          	mov    %rdi,0x20(%rdi)
    if (empty()) {
ffffffff80419d26:	74 28                	je     ffffffff80419d50 <_ZN6Kernel12KernelThreadC1Ev+0x60>
      tail_->next = elem;
ffffffff80419d28:	48 8b 15 c9 6c 00 00 	mov    0x6cc9(%rip),%rdx        # ffffffff804209f8 <_ZN6Kernel18kernel_thread_listE+0x8>
ffffffff80419d2f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      elem->prev = tail_;
ffffffff80419d33:	48 89 57 10          	mov    %rdx,0x10(%rdi)
      elem->next = nullptr;
ffffffff80419d37:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
ffffffff80419d3e:	00 
      tail_ = elem;
ffffffff80419d3f:	48 89 05 b2 6c 00 00 	mov    %rax,0x6cb2(%rip)        # ffffffff804209f8 <_ZN6Kernel18kernel_thread_listE+0x8>
  IrqLock lock_;
};

KernelThread* KernelThread::CurrentThread() {
ffffffff80419d46:	c3                   	retq   
ffffffff80419d47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80419d4e:	00 00 
      head_ = tail_ = elem;
ffffffff80419d50:	48 89 05 a1 6c 00 00 	mov    %rax,0x6ca1(%rip)        # ffffffff804209f8 <_ZN6Kernel18kernel_thread_listE+0x8>
ffffffff80419d57:	48 89 05 92 6c 00 00 	mov    %rax,0x6c92(%rip)        # ffffffff804209f0 <_ZN6Kernel18kernel_thread_listE>
ffffffff80419d5e:	c3                   	retq   
ffffffff80419d5f:	90                   	nop

ffffffff80419d60 <_Znwm>:
#include "memory.h"

// Overriding global new and delete.
// NOTE THAT WE DO NOT USE new[] or delete[] IN KERNEL CONTEXT.
void* operator new(Kernel::size_t count) { return Kernel::kmalloc(count); }
ffffffff80419d60:	e9 4b fe ff ff       	jmpq   ffffffff80419bb0 <_ZN6Kernel7kmallocEm>
ffffffff80419d65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419d6c:	00 00 00 00 

ffffffff80419d70 <_ZdlPv>:
void operator delete(void* p) noexcept { Kernel::kfree(p); }
ffffffff80419d70:	e9 db fe ff ff       	jmpq   ffffffff80419c50 <_ZN6Kernel5kfreeEPv>
ffffffff80419d75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419d7c:	00 00 00 00 

ffffffff80419d80 <_ZdlPvm>:
void operator delete(void* p, Kernel::size_t) noexcept { Kernel::kfree(p); }
ffffffff80419d80:	e9 cb fe ff ff       	jmpq   ffffffff80419c50 <_ZN6Kernel5kfreeEPv>
ffffffff80419d85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80419d8c:	00 00 00 
ffffffff80419d8f:	90                   	nop

ffffffff80419d90 <__cxa_pure_virtual>:
#include "kernel_test.h"

extern "C" void __cxa_pure_virtual() {
  while (1)
ffffffff80419d90:	eb fe                	jmp    ffffffff80419d90 <__cxa_pure_virtual>
ffffffff80419d92:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419d99:	00 00 00 00 
ffffffff80419d9d:	0f 1f 00             	nopl   (%rax)

ffffffff80419da0 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv>:

namespace Kernel {
namespace kernel_test {

void KernelTestRunner::RunTest() {
  for (int i = 0; i < num_tests_; i++) {
ffffffff80419da0:	8b 97 20 03 00 00    	mov    0x320(%rdi),%edx
ffffffff80419da6:	85 d2                	test   %edx,%edx
ffffffff80419da8:	0f 8e a2 00 00 00    	jle    ffffffff80419e50 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0xb0>
void KernelTestRunner::RunTest() {
ffffffff80419dae:	55                   	push   %rbp
ffffffff80419daf:	48 89 fd             	mov    %rdi,%rbp
ffffffff80419db2:	53                   	push   %rbx
  for (int i = 0; i < num_tests_; i++) {
ffffffff80419db3:	31 db                	xor    %ebx,%ebx
void KernelTestRunner::RunTest() {
ffffffff80419db5:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff80419db9:	eb 3a                	jmp    ffffffff80419df5 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0x55>
ffffffff80419dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    kprintf("[ RUN      ]  %s.%s\n", tests_[i]->GetTestSuiteName(),
           tests_[i]->GetTestName());
    tests_[i]->TestBody();
    if (!tests_[i]->GetBadCount()) {
      kprintf("[       OK ] ");
ffffffff80419dc0:	48 c7 c7 36 ba 41 80 	mov    $0xffffffff8041ba36,%rdi
ffffffff80419dc7:	31 c0                	xor    %eax,%eax
ffffffff80419dc9:	e8 02 f5 ff ff       	callq  ffffffff804192d0 <printf_>
    } else {
      kprintf("[  FAILED  ] ");
    }
    kprintf("%s.%s\n", tests_[i]->GetTestSuiteName(), tests_[i]->GetTestName());
ffffffff80419dce:	48 8b 44 dd 00       	mov    0x0(%rbp,%rbx,8),%rax
ffffffff80419dd3:	48 c7 c7 2f ba 41 80 	mov    $0xffffffff8041ba2f,%rdi
ffffffff80419dda:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80419dde:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80419de2:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff80419de6:	31 c0                	xor    %eax,%eax
ffffffff80419de8:	e8 e3 f4 ff ff       	callq  ffffffff804192d0 <printf_>
  for (int i = 0; i < num_tests_; i++) {
ffffffff80419ded:	39 9d 20 03 00 00    	cmp    %ebx,0x320(%rbp)
ffffffff80419df3:	7e 4b                	jle    ffffffff80419e40 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0xa0>
           tests_[i]->GetTestName());
ffffffff80419df5:	48 8b 44 dd 00       	mov    0x0(%rbp,%rbx,8),%rax
    kprintf("[ RUN      ]  %s.%s\n", tests_[i]->GetTestSuiteName(),
ffffffff80419dfa:	48 c7 c7 21 ba 41 80 	mov    $0xffffffff8041ba21,%rdi
ffffffff80419e01:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff80419e05:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff80419e09:	31 c0                	xor    %eax,%eax
ffffffff80419e0b:	e8 c0 f4 ff ff       	callq  ffffffff804192d0 <printf_>
    tests_[i]->TestBody();
ffffffff80419e10:	48 8b 7c dd 00       	mov    0x0(%rbp,%rbx,8),%rdi
ffffffff80419e15:	48 8b 07             	mov    (%rdi),%rax
ffffffff80419e18:	ff 10                	callq  *(%rax)
    if (!tests_[i]->GetBadCount()) {
ffffffff80419e1a:	48 8b 44 dd 00       	mov    0x0(%rbp,%rbx,8),%rax
ffffffff80419e1f:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff80419e22:	85 c0                	test   %eax,%eax
ffffffff80419e24:	74 9a                	je     ffffffff80419dc0 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0x20>
      kprintf("[  FAILED  ] ");
ffffffff80419e26:	48 c7 c7 44 ba 41 80 	mov    $0xffffffff8041ba44,%rdi
ffffffff80419e2d:	31 c0                	xor    %eax,%eax
ffffffff80419e2f:	e8 9c f4 ff ff       	callq  ffffffff804192d0 <printf_>
ffffffff80419e34:	eb 98                	jmp    ffffffff80419dce <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0x2e>
ffffffff80419e36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80419e3d:	00 00 00 
  }
}
ffffffff80419e40:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80419e44:	5b                   	pop    %rbx
ffffffff80419e45:	5d                   	pop    %rbp
ffffffff80419e46:	c3                   	retq   
ffffffff80419e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80419e4e:	00 00 
ffffffff80419e50:	c3                   	retq   
ffffffff80419e51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80419e58:	00 00 00 
ffffffff80419e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80419e60 <_ZN6Kernel11kernel_test34KernelListTest_SimplePushBack_Test8TestBodyEv>:
  KernelList<int> list;
  INSERT_BACK(1)
  INSERT_BACK(2)
  INSERT_BACK(3)

  int result[] = {1, 2, 3};
ffffffff80419e60:	48 be 02 00 00 00 03 	movabs $0x300000002,%rsi
ffffffff80419e67:	00 00 00 
TEST(KernelListTest, SimplePushBack) {
ffffffff80419e6a:	41 55                	push   %r13
ffffffff80419e6c:	49 89 fd             	mov    %rdi,%r13
ffffffff80419e6f:	41 54                	push   %r12
ffffffff80419e71:	55                   	push   %rbp
ffffffff80419e72:	53                   	push   %rbx
ffffffff80419e73:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419e7a:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
      tail_->next = elem;
ffffffff80419e7f:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419e84:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
ffffffff80419e8b:	00 00 
      head_ = tail_ = elem;
ffffffff80419e8d:	48 8d 5c 24 30       	lea    0x30(%rsp),%rbx
      tail_->next = elem;
ffffffff80419e92:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
ffffffff80419e97:	48 8d 4c 24 50       	lea    0x50(%rsp),%rcx
ffffffff80419e9c:	49 89 c4             	mov    %rax,%r12
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419e9f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  void push_back(KernelListElement<T>* elem) {
ffffffff80419ea4:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419ea9:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff80419eae:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff80419eb5:	00 
  int result[] = {1, 2, 3};
ffffffff80419eb6:	b8 01 00 00 00       	mov    $0x1,%eax
      tail_ = elem;
ffffffff80419ebb:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
ffffffff80419ec0:	ba 01 00 00 00       	mov    $0x1,%edx
      head_ = tail_ = elem;
ffffffff80419ec5:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
      tail_->next = elem;
ffffffff80419eca:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
      elem->prev = tail_;
ffffffff80419ecf:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
      current_ = current_->next;
ffffffff80419ed4:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419ed8:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
ffffffff80419edf:	00 00 
  void Set(const T& data) { t = data; }
ffffffff80419ee1:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
ffffffff80419ee8:	00 
ffffffff80419ee9:	c7 44 24 60 02 00 00 	movl   $0x2,0x60(%rsp)
ffffffff80419ef0:	00 
    size_++;
ffffffff80419ef1:	c7 44 24 28 03 00 00 	movl   $0x3,0x28(%rsp)
ffffffff80419ef8:	00 
      elem->prev = tail_;
ffffffff80419ef9:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
  void Set(const T& data) { t = data; }
ffffffff80419efe:	c7 84 24 80 00 00 00 	movl   $0x3,0x80(%rsp)
ffffffff80419f05:	03 00 00 00 
ffffffff80419f09:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    KernelTestRunner::GetTestRunner().AddTest(this);
  }

  template <typename T, typename U>
  void ExpectEq(const char* file, int line, const T& t, const U& u) {
    if (t != u) {
ffffffff80419f0e:	39 d0                	cmp    %edx,%eax
ffffffff80419f10:	74 1f                	je     ffffffff80419f31 <_ZN6Kernel11kernel_test34KernelListTest_SimplePushBack_Test8TestBodyEv+0xd1>
      kprintf("EXPECT_EQ Failed at: %s:%d\n", file, line);
ffffffff80419f12:	ba 27 00 00 00       	mov    $0x27,%edx
ffffffff80419f17:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff80419f1e:	48 c7 c7 5f ba 41 80 	mov    $0xffffffff8041ba5f,%rdi
ffffffff80419f25:	31 c0                	xor    %eax,%eax
ffffffff80419f27:	e8 a4 f3 ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff80419f2c:	41 83 45 18 01       	addl   $0x1,0x18(%r13)
  auto itr = list.begin();
  for (int i = 0; i < 3; i++) {
    EXPECT_EQ(*itr++, result[i]);
ffffffff80419f31:	48 83 c5 04          	add    $0x4,%rbp
  for (int i = 0; i < 3; i++) {
ffffffff80419f35:	4c 39 e5             	cmp    %r12,%rbp
ffffffff80419f38:	74 17                	je     ffffffff80419f51 <_ZN6Kernel11kernel_test34KernelListTest_SimplePushBack_Test8TestBodyEv+0xf1>
ffffffff80419f3a:	8b 43 10             	mov    0x10(%rbx),%eax
ffffffff80419f3d:	8b 55 00             	mov    0x0(%rbp),%edx
      current_ = current_->next;
ffffffff80419f40:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
    if (t != u) {
ffffffff80419f44:	39 d0                	cmp    %edx,%eax
ffffffff80419f46:	75 ca                	jne    ffffffff80419f12 <_ZN6Kernel11kernel_test34KernelListTest_SimplePushBack_Test8TestBodyEv+0xb2>
    EXPECT_EQ(*itr++, result[i]);
ffffffff80419f48:	48 83 c5 04          	add    $0x4,%rbp
  for (int i = 0; i < 3; i++) {
ffffffff80419f4c:	4c 39 e5             	cmp    %r12,%rbp
ffffffff80419f4f:	75 e9                	jne    ffffffff80419f3a <_ZN6Kernel11kernel_test34KernelListTest_SimplePushBack_Test8TestBodyEv+0xda>
  }
}
ffffffff80419f51:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff80419f58:	5b                   	pop    %rbx
ffffffff80419f59:	5d                   	pop    %rbp
ffffffff80419f5a:	41 5c                	pop    %r12
ffffffff80419f5c:	41 5d                	pop    %r13
ffffffff80419f5e:	c3                   	retq   
ffffffff80419f5f:	90                   	nop

ffffffff80419f60 <_ZN6Kernel11kernel_test35KernelListTest_SimplePushFront_Test8TestBodyEv>:
  int result[] = {3, 2, 1};
ffffffff80419f60:	48 be 02 00 00 00 01 	movabs $0x100000002,%rsi
ffffffff80419f67:	00 00 00 
TEST(KernelListTest, SimplePushFront) {
ffffffff80419f6a:	41 55                	push   %r13
ffffffff80419f6c:	49 89 fd             	mov    %rdi,%r13
ffffffff80419f6f:	41 54                	push   %r12
ffffffff80419f71:	55                   	push   %rbp
ffffffff80419f72:	53                   	push   %rbx
ffffffff80419f73:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419f7a:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
      head_->prev = elem;
ffffffff80419f7f:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419f84:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
ffffffff80419f8b:	00 00 
      head_->prev = elem;
ffffffff80419f8d:	48 8d 5c 24 70       	lea    0x70(%rsp),%rbx
      elem->next = head_;
ffffffff80419f92:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
      head_ = tail_ = elem;
ffffffff80419f97:	48 8d 4c 24 30       	lea    0x30(%rsp),%rcx
ffffffff80419f9c:	49 89 c4             	mov    %rax,%r12
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419f9f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  void push_front(KernelListElement<T>* elem) {
ffffffff80419fa4:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419fa9:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
      head_->prev = elem;
ffffffff80419fae:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  int result[] = {3, 2, 1};
ffffffff80419fb3:	ba 03 00 00 00       	mov    $0x3,%edx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419fb8:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff80419fbf:	00 
ffffffff80419fc0:	b8 03 00 00 00       	mov    $0x3,%eax
      elem->next = head_;
ffffffff80419fc5:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
      head_->prev = elem;
ffffffff80419fca:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
      head_ = elem;
ffffffff80419fcf:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
      current_ = current_->next;
ffffffff80419fd4:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
      head_ = tail_ = elem;
ffffffff80419fd8:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
  void Set(const T& data) { t = data; }
ffffffff80419fdd:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
ffffffff80419fe4:	00 
ffffffff80419fe5:	c7 44 24 60 02 00 00 	movl   $0x2,0x60(%rsp)
ffffffff80419fec:	00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff80419fed:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
ffffffff80419ff4:	00 00 
    size_++;
ffffffff80419ff6:	c7 44 24 28 03 00 00 	movl   $0x3,0x28(%rsp)
ffffffff80419ffd:	00 
  void Set(const T& data) { t = data; }
ffffffff80419ffe:	c7 84 24 80 00 00 00 	movl   $0x3,0x80(%rsp)
ffffffff8041a005:	03 00 00 00 
ffffffff8041a009:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
ffffffff8041a00e:	39 d0                	cmp    %edx,%eax
ffffffff8041a010:	74 1f                	je     ffffffff8041a031 <_ZN6Kernel11kernel_test35KernelListTest_SimplePushFront_Test8TestBodyEv+0xd1>
      kprintf("EXPECT_EQ Failed at: %s:%d\n", file, line);
ffffffff8041a012:	ba 1a 00 00 00       	mov    $0x1a,%edx
ffffffff8041a017:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff8041a01e:	48 c7 c7 5f ba 41 80 	mov    $0xffffffff8041ba5f,%rdi
ffffffff8041a025:	31 c0                	xor    %eax,%eax
ffffffff8041a027:	e8 a4 f2 ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff8041a02c:	41 83 45 18 01       	addl   $0x1,0x18(%r13)
    EXPECT_EQ(*itr++, result[i]);
ffffffff8041a031:	48 83 c5 04          	add    $0x4,%rbp
  for (int i = 0; i < 3; i++) {
ffffffff8041a035:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8041a038:	74 17                	je     ffffffff8041a051 <_ZN6Kernel11kernel_test35KernelListTest_SimplePushFront_Test8TestBodyEv+0xf1>
ffffffff8041a03a:	8b 43 10             	mov    0x10(%rbx),%eax
ffffffff8041a03d:	8b 55 00             	mov    0x0(%rbp),%edx
      current_ = current_->next;
ffffffff8041a040:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
    if (t != u) {
ffffffff8041a044:	39 d0                	cmp    %edx,%eax
ffffffff8041a046:	75 ca                	jne    ffffffff8041a012 <_ZN6Kernel11kernel_test35KernelListTest_SimplePushFront_Test8TestBodyEv+0xb2>
    EXPECT_EQ(*itr++, result[i]);
ffffffff8041a048:	48 83 c5 04          	add    $0x4,%rbp
  for (int i = 0; i < 3; i++) {
ffffffff8041a04c:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8041a04f:	75 e9                	jne    ffffffff8041a03a <_ZN6Kernel11kernel_test35KernelListTest_SimplePushFront_Test8TestBodyEv+0xda>
}
ffffffff8041a051:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff8041a058:	5b                   	pop    %rbx
ffffffff8041a059:	5d                   	pop    %rbp
ffffffff8041a05a:	41 5c                	pop    %r12
ffffffff8041a05c:	41 5d                	pop    %r13
ffffffff8041a05e:	c3                   	retq   
ffffffff8041a05f:	90                   	nop

ffffffff8041a060 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv>:
    EXPECT_EQ(list.pop_front()->Get(), result[i]);
  }
  EXPECT_TRUE(list.empty());
}

TEST(KernelListTest, PopBack) {
ffffffff8041a060:	41 55                	push   %r13
ffffffff8041a062:	49 89 fd             	mov    %rdi,%r13
ffffffff8041a065:	41 54                	push   %r12
ffffffff8041a067:	55                   	push   %rbp
ffffffff8041a068:	53                   	push   %rbx
ffffffff8041a069:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
      head_->prev = elem;
ffffffff8041a070:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a075:	4c 8d 64 24 18       	lea    0x18(%rsp),%r12
ffffffff8041a07a:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
ffffffff8041a081:	00 00 
      head_ = tail_ = elem;
ffffffff8041a083:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
      head_->prev = elem;
ffffffff8041a088:	48 8d 6c 24 70       	lea    0x70(%rsp),%rbp
ffffffff8041a08d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
      elem->next = head_;
ffffffff8041a092:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
ffffffff8041a097:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
  KernelList<int> list;
  INSERT_FRONT(1)
  INSERT_FRONT(2)
  INSERT_FRONT(3)

  int result[] = {1, 2, 3};
ffffffff8041a09c:	48 b8 01 00 00 00 02 	movabs $0x200000001,%rax
ffffffff8041a0a3:	00 00 00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a0a6:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
      head_ = tail_ = elem;
ffffffff8041a0ab:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a0b0:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
ffffffff8041a0b7:	00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a0b8:	4c 89 64 24 68       	mov    %r12,0x68(%rsp)
      elem->next = head_;
ffffffff8041a0bd:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a0c2:	c7 44 24 60 02 00 00 	movl   $0x2,0x60(%rsp)
ffffffff8041a0c9:	00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a0ca:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
ffffffff8041a0d1:	00 00 
ffffffff8041a0d3:	4c 89 a4 24 88 00 00 	mov    %r12,0x88(%rsp)
ffffffff8041a0da:	00 
    size_++;
ffffffff8041a0db:	c7 44 24 28 03 00 00 	movl   $0x3,0x28(%rsp)
ffffffff8041a0e2:	00 
      head_->prev = elem;
ffffffff8041a0e3:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
      head_ = elem;
ffffffff8041a0e8:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a0ed:	c7 84 24 80 00 00 00 	movl   $0x3,0x80(%rsp)
ffffffff8041a0f4:	03 00 00 00 
ffffffff8041a0f8:	48 89 44 24 0c       	mov    %rax,0xc(%rsp)
ffffffff8041a0fd:	c7 44 24 14 03 00 00 	movl   $0x3,0x14(%rsp)
ffffffff8041a104:	00 
    if (empty()) {
      return nullptr;
    } else {
      size_--;

      auto* tail_to_return = tail_;
ffffffff8041a105:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
      size_--;
ffffffff8041a10a:	83 6c 24 28 01       	subl   $0x1,0x28(%rsp)
      auto* new_tail = tail_->prev;
ffffffff8041a10f:	48 8b 10             	mov    (%rax),%rdx
  void RemoveSelfFromList() {
ffffffff8041a112:	48 8b 48 08          	mov    0x8(%rax),%rcx
    if (prev) {
ffffffff8041a116:	48 85 d2             	test   %rdx,%rdx
ffffffff8041a119:	74 7d                	je     ffffffff8041a198 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0x138>
      prev->next = next;
ffffffff8041a11b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    if (next) {
ffffffff8041a11f:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8041a123:	48 85 c9             	test   %rcx,%rcx
ffffffff8041a126:	74 0b                	je     ffffffff8041a133 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0xd3>
      next->prev = prev;
ffffffff8041a128:	48 89 11             	mov    %rdx,(%rcx)
    prev = next = nullptr;
ffffffff8041a12b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8041a132:	00 
ffffffff8041a133:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)

      // If current tail is the ONLY element.
      if (!new_tail) {
        head_ = tail_ = nullptr;
      } else {
        tail_ = new_tail;
ffffffff8041a13a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
ffffffff8041a13f:	8b 33                	mov    (%rbx),%esi
ffffffff8041a141:	39 70 10             	cmp    %esi,0x10(%rax)
ffffffff8041a144:	74 1f                	je     ffffffff8041a165 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0x105>
      kprintf("EXPECT_EQ Failed at: %s:%d\n", file, line);
ffffffff8041a146:	ba 52 00 00 00       	mov    $0x52,%edx
ffffffff8041a14b:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff8041a152:	48 c7 c7 5f ba 41 80 	mov    $0xffffffff8041ba5f,%rdi
ffffffff8041a159:	31 c0                	xor    %eax,%eax
ffffffff8041a15b:	e8 70 f1 ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff8041a160:	41 83 45 18 01       	addl   $0x1,0x18(%r13)
  for (int i = 0; i < 3; i++) {
    EXPECT_EQ(list.pop_back()->Get(), result[i]);
ffffffff8041a165:	48 83 c3 04          	add    $0x4,%rbx
  for (int i = 0; i < 3; i++) {
ffffffff8041a169:	4c 39 e3             	cmp    %r12,%rbx
ffffffff8041a16c:	74 12                	je     ffffffff8041a180 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0x120>
    if (empty()) {
ffffffff8041a16e:	48 85 ed             	test   %rbp,%rbp
ffffffff8041a171:	75 92                	jne    ffffffff8041a105 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0xa5>
ffffffff8041a173:	e9 fa 08 00 00       	jmpq   ffffffff8041aa72 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv.cold>
ffffffff8041a178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041a17f:	00 
    }
  }

  void ExpectTrue(const char* file, int line, bool t) {
    if (!t) {
ffffffff8041a180:	48 85 ed             	test   %rbp,%rbp
ffffffff8041a183:	75 4b                	jne    ffffffff8041a1d0 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0x170>
  }
  EXPECT_TRUE(list.empty());
}
ffffffff8041a185:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff8041a18c:	5b                   	pop    %rbx
ffffffff8041a18d:	5d                   	pop    %rbp
ffffffff8041a18e:	41 5c                	pop    %r12
ffffffff8041a190:	41 5d                	pop    %r13
ffffffff8041a192:	c3                   	retq   
ffffffff8041a193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    if (next) {
ffffffff8041a198:	48 85 c9             	test   %rcx,%rcx
ffffffff8041a19b:	74 16                	je     ffffffff8041a1b3 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0x153>
      next->prev = prev;
ffffffff8041a19d:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    prev = next = nullptr;
ffffffff8041a1a4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8041a1ab:	00 
ffffffff8041a1ac:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
        head_ = tail_ = nullptr;
ffffffff8041a1b3:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
ffffffff8041a1ba:	00 00 
ffffffff8041a1bc:	31 ed                	xor    %ebp,%ebp
ffffffff8041a1be:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
ffffffff8041a1c5:	00 00 
ffffffff8041a1c7:	e9 73 ff ff ff       	jmpq   ffffffff8041a13f <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv+0xdf>
ffffffff8041a1cc:	0f 1f 40 00          	nopl   0x0(%rax)
      kprintf("EXPECT_TRUE Failed at: %s:%d\n", file, line);
ffffffff8041a1d0:	ba 54 00 00 00       	mov    $0x54,%edx
ffffffff8041a1d5:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff8041a1dc:	48 c7 c7 7b ba 41 80 	mov    $0xffffffff8041ba7b,%rdi
ffffffff8041a1e3:	31 c0                	xor    %eax,%eax
ffffffff8041a1e5:	e8 e6 f0 ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff8041a1ea:	41 83 45 18 01       	addl   $0x1,0x18(%r13)
ffffffff8041a1ef:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff8041a1f6:	5b                   	pop    %rbx
ffffffff8041a1f7:	5d                   	pop    %rbp
ffffffff8041a1f8:	41 5c                	pop    %r12
ffffffff8041a1fa:	41 5d                	pop    %r13
ffffffff8041a1fc:	c3                   	retq   
ffffffff8041a1fd:	90                   	nop
ffffffff8041a1fe:	66 90                	xchg   %ax,%ax

ffffffff8041a200 <_ZN6Kernel11kernel_test26KernelListTest_ZigZag_Test8TestBodyEv>:
TEST(KernelListTest, ZigZag) {
ffffffff8041a200:	41 55                	push   %r13
ffffffff8041a202:	49 89 fd             	mov    %rdi,%r13
ffffffff8041a205:	41 54                	push   %r12
ffffffff8041a207:	55                   	push   %rbp
ffffffff8041a208:	53                   	push   %rbx
ffffffff8041a209:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
      head_->prev = elem;
ffffffff8041a210:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
      tail_->next = elem;
ffffffff8041a215:	48 8d 4c 24 50       	lea    0x50(%rsp),%rcx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a21a:	48 89 64 24 48       	mov    %rsp,0x48(%rsp)
      head_->prev = elem;
ffffffff8041a21f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
      elem->prev = tail_;
ffffffff8041a224:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
ffffffff8041a229:	48 8d 5c 24 1c       	lea    0x1c(%rsp),%rbx
      elem->next = head_;
ffffffff8041a22e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
ffffffff8041a235:	00 
      tail_->next = elem;
ffffffff8041a236:	48 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%rax
ffffffff8041a23d:	00 
ffffffff8041a23e:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
ffffffff8041a245:	00 
ffffffff8041a246:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
ffffffff8041a24d:	00 
      head_->prev = elem;
ffffffff8041a24e:	48 8d ac 24 b0 00 00 	lea    0xb0(%rsp),%rbp
ffffffff8041a255:	00 
      tail_ = elem;
ffffffff8041a256:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  int result[] = {5, 3, 1, 2, 4, 6};
ffffffff8041a25b:	48 b8 03 00 00 00 01 	movabs $0x100000003,%rax
ffffffff8041a262:	00 00 00 
      tail_->next = elem;
ffffffff8041a265:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
      elem->prev = tail_;
ffffffff8041a26a:	48 89 94 24 d0 00 00 	mov    %rdx,0xd0(%rsp)
ffffffff8041a271:	00 
ffffffff8041a272:	ba 05 00 00 00       	mov    $0x5,%edx
  void Set(const T& data) { t = data; }
ffffffff8041a277:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
ffffffff8041a27e:	00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a27f:	48 89 64 24 68       	mov    %rsp,0x68(%rsp)
      tail_->next = elem;
ffffffff8041a284:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
      elem->prev = tail_;
ffffffff8041a289:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a28e:	c7 44 24 60 02 00 00 	movl   $0x2,0x60(%rsp)
ffffffff8041a295:	00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a296:	48 89 a4 24 88 00 00 	mov    %rsp,0x88(%rsp)
ffffffff8041a29d:	00 
      elem->next = head_;
ffffffff8041a29e:	4c 89 64 24 78       	mov    %r12,0x78(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a2a3:	c7 84 24 80 00 00 00 	movl   $0x3,0x80(%rsp)
ffffffff8041a2aa:	03 00 00 00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a2ae:	48 89 a4 24 a8 00 00 	mov    %rsp,0xa8(%rsp)
ffffffff8041a2b5:	00 
      elem->prev = tail_;
ffffffff8041a2b6:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
ffffffff8041a2bd:	00 
  void Set(const T& data) { t = data; }
ffffffff8041a2be:	c7 84 24 a0 00 00 00 	movl   $0x4,0xa0(%rsp)
ffffffff8041a2c5:	04 00 00 00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a2c9:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
ffffffff8041a2d0:	00 00 00 00 00 
ffffffff8041a2d5:	48 89 a4 24 c8 00 00 	mov    %rsp,0xc8(%rsp)
ffffffff8041a2dc:	00 
      head_->prev = elem;
ffffffff8041a2dd:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
      head_ = elem;
ffffffff8041a2e2:	48 89 2c 24          	mov    %rbp,(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a2e6:	c7 84 24 c0 00 00 00 	movl   $0x5,0xc0(%rsp)
ffffffff8041a2ed:	05 00 00 00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a2f1:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
ffffffff8041a2f8:	00 00 00 00 00 
ffffffff8041a2fd:	48 89 a4 24 e8 00 00 	mov    %rsp,0xe8(%rsp)
ffffffff8041a304:	00 
    size_++;
ffffffff8041a305:	c7 44 24 10 06 00 00 	movl   $0x6,0x10(%rsp)
ffffffff8041a30c:	00 
  void Set(const T& data) { t = data; }
ffffffff8041a30d:	c7 84 24 e0 00 00 00 	movl   $0x6,0xe0(%rsp)
ffffffff8041a314:	06 00 00 00 
ffffffff8041a318:	48 89 44 24 1c       	mov    %rax,0x1c(%rsp)
ffffffff8041a31d:	48 b8 02 00 00 00 04 	movabs $0x400000002,%rax
ffffffff8041a324:	00 00 00 
ffffffff8041a327:	48 89 44 24 24       	mov    %rax,0x24(%rsp)
ffffffff8041a32c:	b8 05 00 00 00       	mov    $0x5,%eax
ffffffff8041a331:	c7 44 24 2c 06 00 00 	movl   $0x6,0x2c(%rsp)
ffffffff8041a338:	00 
  for (int i = 0; i < 6; i++) {
ffffffff8041a339:	eb 0e                	jmp    ffffffff8041a349 <_ZN6Kernel11kernel_test26KernelListTest_ZigZag_Test8TestBodyEv+0x149>
ffffffff8041a33b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8041a340:	8b 45 10             	mov    0x10(%rbp),%eax
ffffffff8041a343:	8b 13                	mov    (%rbx),%edx
ffffffff8041a345:	48 83 c3 04          	add    $0x4,%rbx
      current_ = current_->next;
ffffffff8041a349:	48 8b 6d 08          	mov    0x8(%rbp),%rbp
    if (t != u) {
ffffffff8041a34d:	39 d0                	cmp    %edx,%eax
ffffffff8041a34f:	74 1f                	je     ffffffff8041a370 <_ZN6Kernel11kernel_test26KernelListTest_ZigZag_Test8TestBodyEv+0x170>
      kprintf("EXPECT_EQ Failed at: %s:%d\n", file, line);
ffffffff8041a351:	ba 37 00 00 00       	mov    $0x37,%edx
ffffffff8041a356:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff8041a35d:	48 c7 c7 5f ba 41 80 	mov    $0xffffffff8041ba5f,%rdi
ffffffff8041a364:	31 c0                	xor    %eax,%eax
ffffffff8041a366:	e8 65 ef ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff8041a36b:	41 83 45 18 01       	addl   $0x1,0x18(%r13)
ffffffff8041a370:	4c 39 e3             	cmp    %r12,%rbx
ffffffff8041a373:	75 cb                	jne    ffffffff8041a340 <_ZN6Kernel11kernel_test26KernelListTest_ZigZag_Test8TestBodyEv+0x140>
}
ffffffff8041a375:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
ffffffff8041a37c:	5b                   	pop    %rbx
ffffffff8041a37d:	5d                   	pop    %rbp
ffffffff8041a37e:	41 5c                	pop    %r12
ffffffff8041a380:	41 5d                	pop    %r13
ffffffff8041a382:	c3                   	retq   
ffffffff8041a383:	90                   	nop
ffffffff8041a384:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041a38b:	00 00 00 00 
ffffffff8041a38f:	90                   	nop

ffffffff8041a390 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv>:
  int result[] = {3, 2, 1};
ffffffff8041a390:	48 be 02 00 00 00 01 	movabs $0x100000002,%rsi
ffffffff8041a397:	00 00 00 
TEST(KernelListTest, PopFront) {
ffffffff8041a39a:	41 57                	push   %r15
    EXPECT_EQ(*list.begin(), result[i]);
ffffffff8041a39c:	41 bf 03 00 00 00    	mov    $0x3,%r15d
TEST(KernelListTest, PopFront) {
ffffffff8041a3a2:	41 56                	push   %r14
    EXPECT_EQ(*list.begin(), result[i]);
ffffffff8041a3a4:	41 be 03 00 00 00    	mov    $0x3,%r14d
TEST(KernelListTest, PopFront) {
ffffffff8041a3aa:	41 55                	push   %r13
      size_--;
ffffffff8041a3ac:	41 bd 03 00 00 00    	mov    $0x3,%r13d
ffffffff8041a3b2:	41 54                	push   %r12
ffffffff8041a3b4:	49 89 fc             	mov    %rdi,%r12
ffffffff8041a3b7:	55                   	push   %rbp
  int result[] = {3, 2, 1};
ffffffff8041a3b8:	bd 01 00 00 00       	mov    $0x1,%ebp
TEST(KernelListTest, PopFront) {
ffffffff8041a3bd:	53                   	push   %rbx
ffffffff8041a3be:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a3c5:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
      head_->prev = elem;
ffffffff8041a3ca:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a3cf:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
ffffffff8041a3d6:	00 00 
ffffffff8041a3d8:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
      head_ = tail_ = elem;
ffffffff8041a3dd:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a3e2:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
ffffffff8041a3e7:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
ffffffff8041a3ee:	00 
      head_->prev = elem;
ffffffff8041a3ef:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  void Set(const T& data) { t = data; }
ffffffff8041a3f4:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
ffffffff8041a3fb:	00 
      head_->prev = elem;
ffffffff8041a3fc:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a401:	c7 44 24 60 02 00 00 	movl   $0x2,0x60(%rsp)
ffffffff8041a408:	00 
      : prev(nullptr), next(nullptr), stack_list_(stack_list) {}
ffffffff8041a409:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
ffffffff8041a410:	00 00 
      head_->prev = elem;
ffffffff8041a412:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
      elem->next = head_;
ffffffff8041a417:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
      head_ = elem;
ffffffff8041a41c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  void Set(const T& data) { t = data; }
ffffffff8041a421:	c7 84 24 80 00 00 00 	movl   $0x3,0x80(%rsp)
ffffffff8041a428:	03 00 00 00 
  int result[] = {3, 2, 1};
ffffffff8041a42c:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
      head_ = tail_ = elem;
ffffffff8041a431:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
      elem->next = head_;
ffffffff8041a436:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
ffffffff8041a43b:	31 d2                	xor    %edx,%edx
      size_--;
ffffffff8041a43d:	44 89 e9             	mov    %r13d,%ecx
ffffffff8041a440:	29 e9                	sub    %ebp,%ecx
ffffffff8041a442:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
  void RemoveSelfFromList() {
ffffffff8041a446:	48 89 d9             	mov    %rbx,%rcx
    if (prev) {
ffffffff8041a449:	48 85 d2             	test   %rdx,%rdx
ffffffff8041a44c:	74 08                	je     ffffffff8041a456 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0xc6>
      prev->next = next;
ffffffff8041a44e:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
ffffffff8041a452:	48 8b 48 08          	mov    0x8(%rax),%rcx
    if (next) {
ffffffff8041a456:	48 85 c9             	test   %rcx,%rcx
ffffffff8041a459:	74 03                	je     ffffffff8041a45e <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0xce>
      next->prev = prev;
ffffffff8041a45b:	48 89 11             	mov    %rdx,(%rcx)
    prev = next = nullptr;
ffffffff8041a45e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
ffffffff8041a465:	00 
ffffffff8041a466:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      if (!new_head) {
ffffffff8041a46d:	48 85 db             	test   %rbx,%rbx
ffffffff8041a470:	0f 84 9a 00 00 00    	je     ffffffff8041a510 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0x180>
        head_ = new_head;
ffffffff8041a476:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    if (t != u) {
ffffffff8041a47b:	45 39 fe             	cmp    %r15d,%r14d
ffffffff8041a47e:	74 20                	je     ffffffff8041a4a0 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0x110>
      kprintf("EXPECT_EQ Failed at: %s:%d\n", file, line);
ffffffff8041a480:	ba 45 00 00 00       	mov    $0x45,%edx
ffffffff8041a485:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff8041a48c:	48 c7 c7 5f ba 41 80 	mov    $0xffffffff8041ba5f,%rdi
ffffffff8041a493:	31 c0                	xor    %eax,%eax
ffffffff8041a495:	e8 36 ee ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff8041a49a:	41 83 44 24 18 01    	addl   $0x1,0x18(%r12)
  for (int i = 0; i < 3; i++) {
ffffffff8041a4a0:	48 83 fd 03          	cmp    $0x3,%rbp
ffffffff8041a4a4:	74 4a                	je     ffffffff8041a4f0 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0x160>
    EXPECT_EQ(*list.begin(), result[i]);
ffffffff8041a4a6:	44 8b 73 10          	mov    0x10(%rbx),%r14d
ffffffff8041a4aa:	44 8b 7c ac 0c       	mov    0xc(%rsp,%rbp,4),%r15d
    if (t != u) {
ffffffff8041a4af:	45 39 fe             	cmp    %r15d,%r14d
ffffffff8041a4b2:	74 20                	je     ffffffff8041a4d4 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0x144>
      kprintf("EXPECT_EQ Failed at: %s:%d\n", file, line);
ffffffff8041a4b4:	ba 44 00 00 00       	mov    $0x44,%edx
ffffffff8041a4b9:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff8041a4c0:	48 c7 c7 5f ba 41 80 	mov    $0xffffffff8041ba5f,%rdi
ffffffff8041a4c7:	31 c0                	xor    %eax,%eax
ffffffff8041a4c9:	e8 02 ee ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff8041a4ce:	41 83 44 24 18 01    	addl   $0x1,0x18(%r12)
ffffffff8041a4d4:	48 8b 13             	mov    (%rbx),%rdx
ffffffff8041a4d7:	48 89 d8             	mov    %rbx,%rax
ffffffff8041a4da:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8041a4de:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
ffffffff8041a4e2:	e9 56 ff ff ff       	jmpq   ffffffff8041a43d <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0xad>
ffffffff8041a4e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a4ee:	00 00 
    if (!t) {
ffffffff8041a4f0:	48 85 db             	test   %rbx,%rbx
ffffffff8041a4f3:	75 3b                	jne    ffffffff8041a530 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0x1a0>
}
ffffffff8041a4f5:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
ffffffff8041a4fc:	5b                   	pop    %rbx
ffffffff8041a4fd:	5d                   	pop    %rbp
ffffffff8041a4fe:	41 5c                	pop    %r12
ffffffff8041a500:	41 5d                	pop    %r13
ffffffff8041a502:	41 5e                	pop    %r14
ffffffff8041a504:	41 5f                	pop    %r15
ffffffff8041a506:	c3                   	retq   
ffffffff8041a507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a50e:	00 00 
        head_ = tail_ = nullptr;
ffffffff8041a510:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
ffffffff8041a517:	00 00 
ffffffff8041a519:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
ffffffff8041a520:	00 00 
ffffffff8041a522:	e9 54 ff ff ff       	jmpq   ffffffff8041a47b <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0xeb>
ffffffff8041a527:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a52e:	00 00 
      kprintf("EXPECT_TRUE Failed at: %s:%d\n", file, line);
ffffffff8041a530:	ba 47 00 00 00       	mov    $0x47,%edx
ffffffff8041a535:	48 c7 c6 52 ba 41 80 	mov    $0xffffffff8041ba52,%rsi
ffffffff8041a53c:	48 c7 c7 7b ba 41 80 	mov    $0xffffffff8041ba7b,%rdi
ffffffff8041a543:	31 c0                	xor    %eax,%eax
ffffffff8041a545:	e8 86 ed ff ff       	callq  ffffffff804192d0 <printf_>
      bad_count_++;
ffffffff8041a54a:	41 83 44 24 18 01    	addl   $0x1,0x18(%r12)
ffffffff8041a550:	eb a3                	jmp    ffffffff8041a4f5 <_ZN6Kernel11kernel_test28KernelListTest_PopFront_Test8TestBodyEv+0x165>
ffffffff8041a552:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a559:	00 00 00 
ffffffff8041a55c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8041a560 <__do_global_ctors_aux>:
ffffffff8041a560:	48 a1 48 dc 41 80 ff 	movabs 0xffffffff8041dc48,%rax
ffffffff8041a567:	ff ff ff 
ffffffff8041a56a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff8041a56e:	74 30                	je     ffffffff8041a5a0 <__do_global_ctors_aux+0x40>
ffffffff8041a570:	55                   	push   %rbp
ffffffff8041a571:	48 89 e5             	mov    %rsp,%rbp
ffffffff8041a574:	53                   	push   %rbx
ffffffff8041a575:	48 bb 48 dc 41 80 ff 	movabs $0xffffffff8041dc48,%rbx
ffffffff8041a57c:	ff ff ff 
ffffffff8041a57f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041a583:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8041a588:	ff d0                	callq  *%rax
ffffffff8041a58a:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff8041a58e:	48 83 eb 08          	sub    $0x8,%rbx
ffffffff8041a592:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff8041a596:	75 f0                	jne    ffffffff8041a588 <__do_global_ctors_aux+0x28>
ffffffff8041a598:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041a59c:	5b                   	pop    %rbx
ffffffff8041a59d:	5d                   	pop    %rbp
ffffffff8041a59e:	c3                   	retq   
ffffffff8041a59f:	90                   	nop
ffffffff8041a5a0:	c3                   	retq   
ffffffff8041a5a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a5a8:	00 00 00 
ffffffff8041a5ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041a5b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>:
  void PrintString(string_view s, VGAColor color = White) {
ffffffff8041a5b0:	41 57                	push   %r15
ffffffff8041a5b2:	41 56                	push   %r14
ffffffff8041a5b4:	41 55                	push   %r13
ffffffff8041a5b6:	41 54                	push   %r12
ffffffff8041a5b8:	55                   	push   %rbp
ffffffff8041a5b9:	53                   	push   %rbx
ffffffff8041a5ba:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8041a5be:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
ffffffff8041a5c2:	4c 8b 67 10          	mov    0x10(%rdi),%r12
ffffffff8041a5c6:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    while (!s.empty()) {
ffffffff8041a5cb:	48 85 d2             	test   %rdx,%rdx
ffffffff8041a5ce:	0f 84 4b 01 00 00    	je     ffffffff8041a71f <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x16f>
ffffffff8041a5d4:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
ffffffff8041a5d9:	48 89 d3             	mov    %rdx,%rbx
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8041a5dc:	41 89 cf             	mov    %ecx,%r15d
ffffffff8041a5df:	41 c1 e7 08          	shl    $0x8,%r15d
ffffffff8041a5e3:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff8041a5e7:	4d 8b 75 08          	mov    0x8(%r13),%r14
ffffffff8041a5eb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
ffffffff8041a5f0:	48 8d 44 80 fb       	lea    -0x5(%rax,%rax,4),%rax
ffffffff8041a5f5:	4b 8d bc 75 a0 00 00 	lea    0xa0(%r13,%r14,2),%rdi
ffffffff8041a5fc:	00 
ffffffff8041a5fd:	48 89 c2             	mov    %rax,%rdx
ffffffff8041a600:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8041a604:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
ffffffff8041a609:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8041a60d:	4c 01 f0             	add    %r14,%rax
ffffffff8041a610:	4c 01 ea             	add    %r13,%rdx
ffffffff8041a613:	49 8d 44 45 00       	lea    0x0(%r13,%rax,2),%rax
ffffffff8041a618:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
ffffffff8041a61d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
ffffffff8041a622:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8041a628:	4d 89 f2             	mov    %r14,%r10
ffffffff8041a62b:	48 89 d8             	mov    %rbx,%rax
ffffffff8041a62e:	4d 29 da             	sub    %r11,%r10
ffffffff8041a631:	49 39 da             	cmp    %rbx,%r10
ffffffff8041a634:	4c 0f 47 d3          	cmova  %rbx,%r10
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041a638:	49 39 da             	cmp    %rbx,%r10
ffffffff8041a63b:	49 0f 46 c2          	cmovbe %r10,%rax
    for (; i < min(size_, pos + count); i++) {
ffffffff8041a63f:	48 85 c0             	test   %rax,%rax
ffffffff8041a642:	0f 84 88 02 00 00    	je     ffffffff8041a8d0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x320>
    size_t i = pos;
ffffffff8041a648:	31 d2                	xor    %edx,%edx
ffffffff8041a64a:	eb 11                	jmp    ffffffff8041a65d <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xad>
ffffffff8041a64c:	0f 1f 40 00          	nopl   0x0(%rax)
    for (; i < min(size_, pos + count); i++) {
ffffffff8041a650:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041a654:	48 39 c2             	cmp    %rax,%rdx
ffffffff8041a657:	0f 84 73 02 00 00    	je     ffffffff8041a8d0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x320>
      if (str_[i] == c) {
ffffffff8041a65d:	80 3c 16 0a          	cmpb   $0xa,(%rsi,%rdx,1)
ffffffff8041a661:	75 ed                	jne    ffffffff8041a650 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xa0>
ffffffff8041a663:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041a668:	48 39 da             	cmp    %rbx,%rdx
ffffffff8041a66b:	48 89 d8             	mov    %rbx,%rax
ffffffff8041a66e:	48 0f 46 c2          	cmovbe %rdx,%rax
ffffffff8041a672:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    if (current_row_ == num_rows_) {
ffffffff8041a677:	4c 39 64 24 18       	cmp    %r12,0x18(%rsp)
ffffffff8041a67c:	0f 84 ae 01 00 00    	je     ffffffff8041a830 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x280>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041a682:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8041a687:	4c 01 df             	add    %r11,%rdi
ffffffff8041a68a:	4c 39 f7             	cmp    %r14,%rdi
ffffffff8041a68d:	49 0f 47 fe          	cmova  %r14,%rdi
ffffffff8041a691:	49 39 fb             	cmp    %rdi,%r11
ffffffff8041a694:	0f 83 56 02 00 00    	jae    ffffffff8041a8f0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x340>
ffffffff8041a69a:	4b 8d 04 a4          	lea    (%r12,%r12,4),%rax
ffffffff8041a69e:	49 89 f8             	mov    %rdi,%r8
ffffffff8041a6a1:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8041a6a5:	4d 29 d8             	sub    %r11,%r8
ffffffff8041a6a8:	49 01 c3             	add    %rax,%r11
ffffffff8041a6ab:	31 c0                	xor    %eax,%eax
ffffffff8041a6ad:	4f 8d 4c 5d 00       	lea    0x0(%r13,%r11,2),%r9
ffffffff8041a6b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8041a6b8:	66 0f be 0c 06       	movsbw (%rsi,%rax,1),%cx
ffffffff8041a6bd:	44 09 f9             	or     %r15d,%ecx
ffffffff8041a6c0:	66 41 89 4c 41 20    	mov    %cx,0x20(%r9,%rax,2)
ffffffff8041a6c6:	48 83 c0 01          	add    $0x1,%rax
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041a6ca:	4c 39 c0             	cmp    %r8,%rax
ffffffff8041a6cd:	75 e9                	jne    ffffffff8041a6b8 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x108>
    if (current_col_ == num_cols_) {
ffffffff8041a6cf:	49 39 fe             	cmp    %rdi,%r14
ffffffff8041a6d2:	0f 84 18 01 00 00    	je     ffffffff8041a7f0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x240>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041a6d8:	48 83 7c 24 10 ff    	cmpq   $0xffffffffffffffff,0x10(%rsp)
    current_col_ = i;
ffffffff8041a6de:	49 89 7d 18          	mov    %rdi,0x18(%r13)
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041a6e2:	0f 84 29 01 00 00    	je     ffffffff8041a811 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x261>
ffffffff8041a6e8:	48 85 ff             	test   %rdi,%rdi
ffffffff8041a6eb:	0f 84 4e 02 00 00    	je     ffffffff8041a93f <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x38f>
ffffffff8041a6f1:	49 89 fb             	mov    %rdi,%r11
ffffffff8041a6f4:	49 83 fc 18          	cmp    $0x18,%r12
ffffffff8041a6f8:	0f 86 fa 01 00 00    	jbe    ffffffff8041a8f8 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x348>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041a6fe:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041a702:	4c 39 d2             	cmp    %r10,%rdx
ffffffff8041a705:	4c 0f 46 d2          	cmovbe %rdx,%r10
    str_ += n;
ffffffff8041a709:	4c 01 d6             	add    %r10,%rsi
    size_ -= min(n, size_);
ffffffff8041a70c:	4c 39 d3             	cmp    %r10,%rbx
ffffffff8041a70f:	4c 0f 46 d3          	cmovbe %rbx,%r10
ffffffff8041a713:	4c 29 d3             	sub    %r10,%rbx
    while (!s.empty()) {
ffffffff8041a716:	48 85 db             	test   %rbx,%rbx
ffffffff8041a719:	0f 85 09 ff ff ff    	jne    ffffffff8041a628 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x78>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041a71f:	4d 85 e4             	test   %r12,%r12
ffffffff8041a722:	74 60                	je     ffffffff8041a784 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x1d4>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a724:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041a729:	31 ff                	xor    %edi,%edi
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a72b:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
ffffffff8041a72f:	4d 89 c8             	mov    %r9,%r8
ffffffff8041a732:	4f 8d 14 09          	lea    (%r9,%r9,1),%r10
ffffffff8041a736:	49 f7 d8             	neg    %r8
ffffffff8041a739:	49 8d 8a 00 80 0b 00 	lea    0xb8000(%r10),%rcx
ffffffff8041a740:	4d 01 c0             	add    %r8,%r8
ffffffff8041a743:	49 8d 98 a0 00 00 00 	lea    0xa0(%r8),%rbx
ffffffff8041a74a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8041a750:	4a 8d 04 01          	lea    (%rcx,%r8,1),%rax
ffffffff8041a754:	4d 85 c9             	test   %r9,%r9
ffffffff8041a757:	74 1c                	je     ffffffff8041a775 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x1c5>
ffffffff8041a759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8041a760:	0f b7 94 06 20 80 f4 	movzwl -0xb7fe0(%rsi,%rax,1),%edx
ffffffff8041a767:	ff 
ffffffff8041a768:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a76c:	66 89 50 fe          	mov    %dx,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a770:	48 39 c1             	cmp    %rax,%rcx
ffffffff8041a773:	75 eb                	jne    ffffffff8041a760 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x1b0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041a775:	48 83 c7 01          	add    $0x1,%rdi
ffffffff8041a779:	48 01 de             	add    %rbx,%rsi
ffffffff8041a77c:	4c 01 d1             	add    %r10,%rcx
ffffffff8041a77f:	4c 39 e7             	cmp    %r12,%rdi
ffffffff8041a782:	75 cc                	jne    ffffffff8041a750 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x1a0>
    if (current_col_ != 0) {
ffffffff8041a784:	4d 85 db             	test   %r11,%r11
ffffffff8041a787:	74 54                	je     ffffffff8041a7dd <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x22d>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a789:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
ffffffff8041a78e:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffff8041a792:	48 85 c9             	test   %rcx,%rcx
ffffffff8041a795:	74 46                	je     ffffffff8041a7dd <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x22d>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8041a797:	48 89 c8             	mov    %rcx,%rax
ffffffff8041a79a:	49 0f af c4          	imul   %r12,%rax
ffffffff8041a79e:	48 8d b4 01 00 c0 05 	lea    0x5c000(%rcx,%rax,1),%rsi
ffffffff8041a7a5:	00 
ffffffff8041a7a6:	4b 8d 0c a4          	lea    (%r12,%r12,4),%rcx
ffffffff8041a7aa:	48 8d 94 00 00 80 0b 	lea    0xb8000(%rax,%rax,1),%rdx
ffffffff8041a7b1:	00 
ffffffff8041a7b2:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8041a7b6:	48 f7 d8             	neg    %rax
ffffffff8041a7b9:	48 01 f6             	add    %rsi,%rsi
ffffffff8041a7bc:	48 8d 04 41          	lea    (%rcx,%rax,2),%rax
ffffffff8041a7c0:	48 01 d8             	add    %rbx,%rax
ffffffff8041a7c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8041a7c8:	0f b7 8c 10 20 80 f4 	movzwl -0xb7fe0(%rax,%rdx,1),%ecx
ffffffff8041a7cf:	ff 
ffffffff8041a7d0:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8041a7d4:	66 89 4a fe          	mov    %cx,-0x2(%rdx)
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a7d8:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8041a7db:	75 eb                	jne    ffffffff8041a7c8 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x218>
  }
ffffffff8041a7dd:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8041a7e1:	5b                   	pop    %rbx
ffffffff8041a7e2:	5d                   	pop    %rbp
ffffffff8041a7e3:	41 5c                	pop    %r12
ffffffff8041a7e5:	41 5d                	pop    %r13
ffffffff8041a7e7:	41 5e                	pop    %r14
ffffffff8041a7e9:	41 5f                	pop    %r15
ffffffff8041a7eb:	c3                   	retq   
ffffffff8041a7ec:	0f 1f 40 00          	nopl   0x0(%rax)
      current_row_++;
ffffffff8041a7f0:	49 83 c4 01          	add    $0x1,%r12
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041a7f4:	45 31 db             	xor    %r11d,%r11d
ffffffff8041a7f7:	31 ff                	xor    %edi,%edi
ffffffff8041a7f9:	48 83 7c 24 10 ff    	cmpq   $0xffffffffffffffff,0x10(%rsp)
      current_col_ = 0;
ffffffff8041a7ff:	49 c7 45 18 00 00 00 	movq   $0x0,0x18(%r13)
ffffffff8041a806:	00 
      current_row_++;
ffffffff8041a807:	4d 89 65 10          	mov    %r12,0x10(%r13)
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041a80b:	0f 85 ed fe ff ff    	jne    ffffffff8041a6fe <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x14e>
ffffffff8041a811:	49 39 d2             	cmp    %rdx,%r10
ffffffff8041a814:	49 89 fb             	mov    %rdi,%r11
ffffffff8041a817:	49 0f 46 d2          	cmovbe %r10,%rdx
    str_ += n;
ffffffff8041a81b:	48 01 d6             	add    %rdx,%rsi
    size_ -= min(n, size_);
ffffffff8041a81e:	48 39 da             	cmp    %rbx,%rdx
ffffffff8041a821:	48 0f 47 d3          	cmova  %rbx,%rdx
ffffffff8041a825:	48 29 d3             	sub    %rdx,%rbx
ffffffff8041a828:	e9 e9 fe ff ff       	jmpq   ffffffff8041a716 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x166>
ffffffff8041a82d:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041a830:	48 83 7c 24 18 01    	cmpq   $0x1,0x18(%rsp)
ffffffff8041a836:	76 61                	jbe    ffffffff8041a899 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2e9>
ffffffff8041a838:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
ffffffff8041a83d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8041a840:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff8041a845:	48 c7 c7 60 ff ff ff 	mov    $0xffffffffffffff60,%rdi
ffffffff8041a84c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8041a850:	4c 89 e8             	mov    %r13,%rax
ffffffff8041a853:	48 29 f8             	sub    %rdi,%rax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a856:	4d 85 f6             	test   %r14,%r14
ffffffff8041a859:	74 20                	je     ffffffff8041a87b <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2cb>
ffffffff8041a85b:	48 89 14 24          	mov    %rdx,(%rsp)
ffffffff8041a85f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff8041a860:	0f b7 50 20          	movzwl 0x20(%rax),%edx
ffffffff8041a864:	48 8d 0c 38          	lea    (%rax,%rdi,1),%rcx
ffffffff8041a868:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a86c:	66 42 89 54 01 20    	mov    %dx,0x20(%rcx,%r8,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a872:	4c 39 c8             	cmp    %r9,%rax
ffffffff8041a875:	75 e9                	jne    ffffffff8041a860 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2b0>
ffffffff8041a877:	48 8b 14 24          	mov    (%rsp),%rdx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041a87b:	48 83 c5 01          	add    $0x1,%rbp
ffffffff8041a87f:	48 81 ef a0 00 00 00 	sub    $0xa0,%rdi
ffffffff8041a886:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
ffffffff8041a88d:	49 81 c1 a0 00 00 00 	add    $0xa0,%r9
ffffffff8041a894:	4c 39 e5             	cmp    %r12,%rbp
ffffffff8041a897:	75 b7                	jne    ffffffff8041a850 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2a0>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a899:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
ffffffff8041a89e:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
ffffffff8041a8a3:	4d 85 f6             	test   %r14,%r14
ffffffff8041a8a6:	74 19                	je     ffffffff8041a8c1 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x311>
ffffffff8041a8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041a8af:	00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff8041a8b0:	45 31 c0             	xor    %r8d,%r8d
ffffffff8041a8b3:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a8b7:	66 44 89 40 1e       	mov    %r8w,0x1e(%rax)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a8bc:	48 39 c1             	cmp    %rax,%rcx
ffffffff8041a8bf:	75 ef                	jne    ffffffff8041a8b0 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x300>
      current_row_--;
ffffffff8041a8c1:	49 83 ec 01          	sub    $0x1,%r12
ffffffff8041a8c5:	4d 89 65 10          	mov    %r12,0x10(%r13)
ffffffff8041a8c9:	e9 b4 fd ff ff       	jmpq   ffffffff8041a682 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xd2>
ffffffff8041a8ce:	66 90                	xchg   %ax,%ax
    if (count == npos) {
ffffffff8041a8d0:	49 83 fa ff          	cmp    $0xffffffffffffffff,%r10
ffffffff8041a8d4:	75 71                	jne    ffffffff8041a947 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x397>
ffffffff8041a8d6:	48 c7 44 24 10 ff ff 	movq   $0xffffffffffffffff,0x10(%rsp)
ffffffff8041a8dd:	ff ff 
        endline_or_col_chars = len;
ffffffff8041a8df:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff8041a8e6:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff8041a8eb:	e9 87 fd ff ff       	jmpq   ffffffff8041a677 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xc7>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041a8f0:	4c 89 df             	mov    %r11,%rdi
ffffffff8041a8f3:	e9 d7 fd ff ff       	jmpq   ffffffff8041a6cf <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x11f>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041a8f8:	49 39 fe             	cmp    %rdi,%r14
ffffffff8041a8fb:	76 2a                	jbe    ffffffff8041a927 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x377>
ffffffff8041a8fd:	4b 8d 0c a4          	lea    (%r12,%r12,4),%rcx
ffffffff8041a901:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff8041a905:	48 01 cf             	add    %rcx,%rdi
ffffffff8041a908:	4c 01 f1             	add    %r14,%rcx
ffffffff8041a90b:	49 8d 44 7d 00       	lea    0x0(%r13,%rdi,2),%rax
ffffffff8041a910:	49 8d 4c 4d 00       	lea    0x0(%r13,%rcx,2),%rcx
ffffffff8041a915:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff8041a918:	31 ff                	xor    %edi,%edi
ffffffff8041a91a:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a91e:	66 89 78 1e          	mov    %di,0x1e(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041a922:	48 39 c8             	cmp    %rcx,%rax
ffffffff8041a925:	75 f1                	jne    ffffffff8041a918 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x368>
        current_row_++;
ffffffff8041a927:	49 83 c4 01          	add    $0x1,%r12
        current_col_ = 0;
ffffffff8041a92b:	49 c7 45 18 00 00 00 	movq   $0x0,0x18(%r13)
ffffffff8041a932:	00 
ffffffff8041a933:	45 31 db             	xor    %r11d,%r11d
        current_row_++;
ffffffff8041a936:	4d 89 65 10          	mov    %r12,0x10(%r13)
ffffffff8041a93a:	e9 bf fd ff ff       	jmpq   ffffffff8041a6fe <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x14e>
ffffffff8041a93f:	45 31 db             	xor    %r11d,%r11d
ffffffff8041a942:	e9 b7 fd ff ff       	jmpq   ffffffff8041a6fe <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x14e>
ffffffff8041a947:	48 c7 44 24 10 ff ff 	movq   $0xffffffffffffffff,0x10(%rsp)
ffffffff8041a94e:	ff ff 
ffffffff8041a950:	4c 89 d2             	mov    %r10,%rdx
ffffffff8041a953:	e9 10 fd ff ff       	jmpq   ffffffff8041a668 <_ZN6Kernel9VGAOutputILm25ELm80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xb8>
ffffffff8041a958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041a95f:	00 

ffffffff8041a960 <_GLOBAL__sub_I__ZN6Kernel10vga_outputE>:
        current_col_(0) {
ffffffff8041a960:	48 c7 05 f5 36 00 00 	movq   $0x19,0x36f5(%rip)        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041a967:	19 00 00 00 
ffffffff8041a96b:	48 c7 c2 20 e1 41 80 	mov    $0xffffffff8041e120,%rdx
ffffffff8041a972:	48 c7 05 eb 36 00 00 	movq   $0x50,0x36eb(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041a979:	50 00 00 00 
ffffffff8041a97d:	48 c7 05 e8 36 00 00 	movq   $0x0,0x36e8(%rip)        # ffffffff8041e070 <_ZN6Kernel10vga_outputE+0x10>
ffffffff8041a984:	00 00 00 00 
ffffffff8041a988:	48 c7 05 e5 36 00 00 	movq   $0x0,0x36e5(%rip)        # ffffffff8041e078 <_ZN6Kernel10vga_outputE+0x18>
ffffffff8041a98f:	00 00 00 00 
ffffffff8041a993:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8041a998:	48 8d 82 60 ff ff ff 	lea    -0xa0(%rdx),%rax
ffffffff8041a99f:	90                   	nop
        text_buffer_[i][j] = 0;
ffffffff8041a9a0:	31 c9                	xor    %ecx,%ecx
ffffffff8041a9a2:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a9a6:	66 89 48 fe          	mov    %cx,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a9aa:	48 39 d0             	cmp    %rdx,%rax
ffffffff8041a9ad:	75 f1                	jne    ffffffff8041a9a0 <_GLOBAL__sub_I__ZN6Kernel10vga_outputE+0x40>
ffffffff8041a9af:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    for (size_t i = 0; i < num_rows_; i++) {
ffffffff8041a9b6:	48 3d 20 f0 41 80    	cmp    $0xffffffff8041f020,%rax
ffffffff8041a9bc:	75 da                	jne    ffffffff8041a998 <_GLOBAL__sub_I__ZN6Kernel10vga_outputE+0x38>
  }
}
ffffffff8041a9be:	c3                   	retq   
ffffffff8041a9bf:	90                   	nop

ffffffff8041a9c0 <_GLOBAL__sub_I__Z11ToUpperCasec>:
};

class PS2Keyboard {
 public:
  PS2Keyboard() {
    for (size_t i = 0; i < NUM_KEY_CODES; i++) {
ffffffff8041a9c0:	31 c0                	xor    %eax,%eax
ffffffff8041a9c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      key_press_list_[i].time_down = 0;
ffffffff8041a9c8:	48 c7 04 c5 40 00 42 	movq   $0x0,-0x7fbdffc0(,%rax,8)
ffffffff8041a9cf:	80 00 00 00 00 
    for (size_t i = 0; i < NUM_KEY_CODES; i++) {
ffffffff8041a9d4:	48 83 c0 01          	add    $0x1,%rax
ffffffff8041a9d8:	48 3d 28 01 00 00    	cmp    $0x128,%rax
ffffffff8041a9de:	75 e8                	jne    ffffffff8041a9c8 <_GLOBAL__sub_I__Z11ToUpperCasec+0x8>

}  // namespace Kernel
ffffffff8041a9e0:	c3                   	retq   
ffffffff8041a9e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a9e8:	00 00 00 
ffffffff8041a9eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041a9f0 <_GLOBAL__sub_I__ZN6Kernel7PITimerC2Ev>:
namespace Kernel {
ffffffff8041a9f0:	48 c7 05 85 5f 00 00 	movq   $0x0,0x5f85(%rip)        # ffffffff80420980 <_ZN6Kernel9pic_timerE>
ffffffff8041a9f7:	00 00 00 00 
ffffffff8041a9fb:	48 c7 05 82 5f 00 00 	movq   $0x0,0x5f82(%rip)        # ffffffff80420988 <_ZN6Kernel9pic_timerE+0x8>
ffffffff8041aa02:	00 00 00 00 

  outb(PIT_CONTROL, 0x36);
  outb(PIT_1, divisor & 0xFF);  // Lower 1 byte
  outb(PIT_1, divisor >> 8);    // High 1 byte
ffffffff8041aa06:	c3                   	retq   
ffffffff8041aa07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041aa0e:	00 00 

ffffffff8041aa10 <_GLOBAL__sub_I__ZN6Kernel6memcpyEPvS0_m>:
      : heap_start_(reinterpret_cast<uint8_t*>(KERNEL_VIRTUAL_START +
                                               KERNEL_HEAP_MEMORY_START_OFFSET +
                                               MEMORY_ALGIN_OFFSET)),
        heap_memory_limit_(ONE_GB - KERNEL_HEAP_MEMORY_START_OFFSET -
                           MEMORY_ALGIN_OFFSET),
        current_heap_size_(8 /* Added initial offset*/) {
ffffffff8041aa10:	48 c7 05 85 5f 00 00 	movq   $0xffffffff81400004,0x5f85(%rip)        # ffffffff804209a0 <_ZN6Kernel21kernel_memory_managerE>
ffffffff8041aa17:	04 00 40 81 
ffffffff8041aa1b:	48 b8 fc ff ff 3e 08 	movabs $0x83efffffc,%rax
ffffffff8041aa22:	00 00 00 
ffffffff8041aa25:	48 89 05 7c 5f 00 00 	mov    %rax,0x5f7c(%rip)        # ffffffff804209a8 <_ZN6Kernel21kernel_memory_managerE+0x8>
    for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff8041aa2c:	48 c7 c0 b0 09 42 80 	mov    $0xffffffff804209b0,%rax
ffffffff8041aa33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      free_list_[i] = 0;
ffffffff8041aa38:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff8041aa3e:	48 83 c0 04          	add    $0x4,%rax
    for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff8041aa42:	48 3d f0 09 42 80    	cmp    $0xffffffff804209f0,%rax
ffffffff8041aa48:	75 ee                	jne    ffffffff8041aa38 <_GLOBAL__sub_I__ZN6Kernel6memcpyEPvS0_m+0x28>
}

}  // namespace Kernel
ffffffff8041aa4a:	c3                   	retq   
ffffffff8041aa4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041aa50 <_GLOBAL__sub_I__ZN6Kernel18kernel_thread_listE>:
  KernelList() : head_(nullptr), tail_(nullptr) {}
ffffffff8041aa50:	48 c7 05 95 5f 00 00 	movq   $0x0,0x5f95(%rip)        # ffffffff804209f0 <_ZN6Kernel18kernel_thread_listE>
ffffffff8041aa57:	00 00 00 00 
ffffffff8041aa5b:	48 c7 05 92 5f 00 00 	movq   $0x0,0x5f92(%rip)        # ffffffff804209f8 <_ZN6Kernel18kernel_thread_listE+0x8>
ffffffff8041aa62:	00 00 00 00 
ffffffff8041aa66:	c7 05 90 5f 00 00 00 	movl   $0x0,0x5f90(%rip)        # ffffffff80420a00 <_ZN6Kernel18kernel_thread_listE+0x10>
ffffffff8041aa6d:	00 00 00 
  KernelThread* current_thread;

ffffffff8041aa70:	c3                   	retq   
ffffffff8041aa71:	90                   	nop

ffffffff8041aa72 <_ZN6Kernel11kernel_test27KernelListTest_PopBack_Test8TestBodyEv.cold>:
    EXPECT_EQ(list.pop_back()->Get(), result[i]);
ffffffff8041aa72:	8b 04 25 10 00 00 00 	mov    0x10,%eax
ffffffff8041aa79:	0f 0b                	ud2    
ffffffff8041aa7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041aa80 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv>:
    static KernelTestRunner test_runner;
ffffffff8041aa80:	80 3d 39 60 00 00 00 	cmpb   $0x0,0x6039(%rip)        # ffffffff80420ac0 <_kernel_virtual_end>
ffffffff8041aa87:	75 1f                	jne    ffffffff8041aaa8 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv+0x28>
ffffffff8041aa89:	c6 05 30 60 00 00 01 	movb   $0x1,0x6030(%rip)        # ffffffff80420ac0 <_kernel_virtual_end>
    if (num_tests_ >= kMaxNumTest) {
ffffffff8041aa90:	31 c0                	xor    %eax,%eax
    tests_[num_tests_++] = test;
ffffffff8041aa92:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8041aa95:	48 89 3c c5 e0 0a 42 	mov    %rdi,-0x7fbdf520(,%rax,8)
ffffffff8041aa9c:	80 
ffffffff8041aa9d:	89 15 5d 63 00 00    	mov    %edx,0x635d(%rip)        # ffffffff80420e00 <_ZZN6Kernel11kernel_test16KernelTestRunner13GetTestRunnerEvE11test_runner+0x320>
  }
ffffffff8041aaa3:	c3                   	retq   
ffffffff8041aaa4:	0f 1f 40 00          	nopl   0x0(%rax)
    if (num_tests_ >= kMaxNumTest) {
ffffffff8041aaa8:	48 63 05 51 63 00 00 	movslq 0x6351(%rip),%rax        # ffffffff80420e00 <_ZZN6Kernel11kernel_test16KernelTestRunner13GetTestRunnerEvE11test_runner+0x320>
ffffffff8041aaaf:	83 f8 63             	cmp    $0x63,%eax
ffffffff8041aab2:	7e de                	jle    ffffffff8041aa92 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv+0x12>
      kprintf("Max Test Number Exceeded!");
ffffffff8041aab4:	48 c7 c7 df ba 41 80 	mov    $0xffffffff8041badf,%rdi
ffffffff8041aabb:	31 c0                	xor    %eax,%eax
ffffffff8041aabd:	e9 0e e8 ff ff       	jmpq   ffffffff804192d0 <printf_>
ffffffff8041aac2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041aac9:	00 00 00 
ffffffff8041aacc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8041aad0 <_GLOBAL__sub_I__ZN6Kernel11kernel_test39KernelListTest_SimplePushFront_Test_objE>:

}  // namespace kernel_test
}  // namespace Kernel
ffffffff8041aad0:	48 83 ec 08          	sub    $0x8,%rsp
    RegisterTest();
ffffffff8041aad4:	48 c7 c7 a0 0a 42 80 	mov    $0xffffffff80420aa0,%rdi
      : test_suite_name_(test_suite_name), test_name_(test_name) {
ffffffff8041aadb:	48 c7 05 ba 5f 00 00 	movq   $0xffffffff8041bb10,0x5fba(%rip)        # ffffffff80420aa0 <_ZN6Kernel11kernel_test39KernelListTest_SimplePushFront_Test_objE>
ffffffff8041aae2:	10 bb 41 80 
ffffffff8041aae6:	48 c7 05 b7 5f 00 00 	movq   $0xffffffff8041ba99,0x5fb7(%rip)        # ffffffff80420aa8 <_ZN6Kernel11kernel_test39KernelListTest_SimplePushFront_Test_objE+0x8>
ffffffff8041aaed:	99 ba 41 80 
ffffffff8041aaf1:	48 c7 05 b4 5f 00 00 	movq   $0xffffffff8041baa8,0x5fb4(%rip)        # ffffffff80420ab0 <_ZN6Kernel11kernel_test39KernelListTest_SimplePushFront_Test_objE+0x10>
ffffffff8041aaf8:	a8 ba 41 80 
ffffffff8041aafc:	c7 05 b2 5f 00 00 00 	movl   $0x0,0x5fb2(%rip)        # ffffffff80420ab8 <_ZN6Kernel11kernel_test39KernelListTest_SimplePushFront_Test_objE+0x18>
ffffffff8041ab03:	00 00 00 
    RegisterTest();
ffffffff8041ab06:	e8 75 ff ff ff       	callq  ffffffff8041aa80 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv>
ffffffff8041ab0b:	48 c7 c7 80 0a 42 80 	mov    $0xffffffff80420a80,%rdi
TEST(KernelListTest, SimplePushFront) {
ffffffff8041ab12:	48 c7 05 83 5f 00 00 	movq   $0xffffffff8041bb28,0x5f83(%rip)        # ffffffff80420aa0 <_ZN6Kernel11kernel_test39KernelListTest_SimplePushFront_Test_objE>
ffffffff8041ab19:	28 bb 41 80 
      : test_suite_name_(test_suite_name), test_name_(test_name) {
ffffffff8041ab1d:	48 c7 05 58 5f 00 00 	movq   $0xffffffff8041bb10,0x5f58(%rip)        # ffffffff80420a80 <_ZN6Kernel11kernel_test38KernelListTest_SimplePushBack_Test_objE>
ffffffff8041ab24:	10 bb 41 80 
ffffffff8041ab28:	48 c7 05 55 5f 00 00 	movq   $0xffffffff8041ba99,0x5f55(%rip)        # ffffffff80420a88 <_ZN6Kernel11kernel_test38KernelListTest_SimplePushBack_Test_objE+0x8>
ffffffff8041ab2f:	99 ba 41 80 
ffffffff8041ab33:	48 c7 05 52 5f 00 00 	movq   $0xffffffff8041bab8,0x5f52(%rip)        # ffffffff80420a90 <_ZN6Kernel11kernel_test38KernelListTest_SimplePushBack_Test_objE+0x10>
ffffffff8041ab3a:	b8 ba 41 80 
ffffffff8041ab3e:	c7 05 50 5f 00 00 00 	movl   $0x0,0x5f50(%rip)        # ffffffff80420a98 <_ZN6Kernel11kernel_test38KernelListTest_SimplePushBack_Test_objE+0x18>
ffffffff8041ab45:	00 00 00 
    RegisterTest();
ffffffff8041ab48:	e8 33 ff ff ff       	callq  ffffffff8041aa80 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv>
ffffffff8041ab4d:	48 c7 c7 60 0a 42 80 	mov    $0xffffffff80420a60,%rdi
TEST(KernelListTest, SimplePushBack) {
ffffffff8041ab54:	48 c7 05 21 5f 00 00 	movq   $0xffffffff8041bb40,0x5f21(%rip)        # ffffffff80420a80 <_ZN6Kernel11kernel_test38KernelListTest_SimplePushBack_Test_objE>
ffffffff8041ab5b:	40 bb 41 80 
      : test_suite_name_(test_suite_name), test_name_(test_name) {
ffffffff8041ab5f:	48 c7 05 f6 5e 00 00 	movq   $0xffffffff8041bb10,0x5ef6(%rip)        # ffffffff80420a60 <_ZN6Kernel11kernel_test30KernelListTest_ZigZag_Test_objE>
ffffffff8041ab66:	10 bb 41 80 
ffffffff8041ab6a:	48 c7 05 f3 5e 00 00 	movq   $0xffffffff8041ba99,0x5ef3(%rip)        # ffffffff80420a68 <_ZN6Kernel11kernel_test30KernelListTest_ZigZag_Test_objE+0x8>
ffffffff8041ab71:	99 ba 41 80 
ffffffff8041ab75:	48 c7 05 f0 5e 00 00 	movq   $0xffffffff8041bac7,0x5ef0(%rip)        # ffffffff80420a70 <_ZN6Kernel11kernel_test30KernelListTest_ZigZag_Test_objE+0x10>
ffffffff8041ab7c:	c7 ba 41 80 
ffffffff8041ab80:	c7 05 ee 5e 00 00 00 	movl   $0x0,0x5eee(%rip)        # ffffffff80420a78 <_ZN6Kernel11kernel_test30KernelListTest_ZigZag_Test_objE+0x18>
ffffffff8041ab87:	00 00 00 
    RegisterTest();
ffffffff8041ab8a:	e8 f1 fe ff ff       	callq  ffffffff8041aa80 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv>
ffffffff8041ab8f:	48 c7 c7 40 0a 42 80 	mov    $0xffffffff80420a40,%rdi
TEST(KernelListTest, ZigZag) {
ffffffff8041ab96:	48 c7 05 bf 5e 00 00 	movq   $0xffffffff8041bb58,0x5ebf(%rip)        # ffffffff80420a60 <_ZN6Kernel11kernel_test30KernelListTest_ZigZag_Test_objE>
ffffffff8041ab9d:	58 bb 41 80 
      : test_suite_name_(test_suite_name), test_name_(test_name) {
ffffffff8041aba1:	48 c7 05 94 5e 00 00 	movq   $0xffffffff8041bb10,0x5e94(%rip)        # ffffffff80420a40 <_ZN6Kernel11kernel_test32KernelListTest_PopFront_Test_objE>
ffffffff8041aba8:	10 bb 41 80 
ffffffff8041abac:	48 c7 05 91 5e 00 00 	movq   $0xffffffff8041ba99,0x5e91(%rip)        # ffffffff80420a48 <_ZN6Kernel11kernel_test32KernelListTest_PopFront_Test_objE+0x8>
ffffffff8041abb3:	99 ba 41 80 
ffffffff8041abb7:	48 c7 05 8e 5e 00 00 	movq   $0xffffffff8041bace,0x5e8e(%rip)        # ffffffff80420a50 <_ZN6Kernel11kernel_test32KernelListTest_PopFront_Test_objE+0x10>
ffffffff8041abbe:	ce ba 41 80 
ffffffff8041abc2:	c7 05 8c 5e 00 00 00 	movl   $0x0,0x5e8c(%rip)        # ffffffff80420a58 <_ZN6Kernel11kernel_test32KernelListTest_PopFront_Test_objE+0x18>
ffffffff8041abc9:	00 00 00 
    RegisterTest();
ffffffff8041abcc:	e8 af fe ff ff       	callq  ffffffff8041aa80 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv>
ffffffff8041abd1:	48 c7 c7 20 0a 42 80 	mov    $0xffffffff80420a20,%rdi
TEST(KernelListTest, PopFront) {
ffffffff8041abd8:	48 c7 05 5d 5e 00 00 	movq   $0xffffffff8041bb70,0x5e5d(%rip)        # ffffffff80420a40 <_ZN6Kernel11kernel_test32KernelListTest_PopFront_Test_objE>
ffffffff8041abdf:	70 bb 41 80 
      : test_suite_name_(test_suite_name), test_name_(test_name) {
ffffffff8041abe3:	48 c7 05 32 5e 00 00 	movq   $0xffffffff8041bb10,0x5e32(%rip)        # ffffffff80420a20 <_ZN6Kernel11kernel_test31KernelListTest_PopBack_Test_objE>
ffffffff8041abea:	10 bb 41 80 
ffffffff8041abee:	48 c7 05 2f 5e 00 00 	movq   $0xffffffff8041ba99,0x5e2f(%rip)        # ffffffff80420a28 <_ZN6Kernel11kernel_test31KernelListTest_PopBack_Test_objE+0x8>
ffffffff8041abf5:	99 ba 41 80 
ffffffff8041abf9:	48 c7 05 2c 5e 00 00 	movq   $0xffffffff8041bad7,0x5e2c(%rip)        # ffffffff80420a30 <_ZN6Kernel11kernel_test31KernelListTest_PopBack_Test_objE+0x10>
ffffffff8041ac00:	d7 ba 41 80 
ffffffff8041ac04:	c7 05 2a 5e 00 00 00 	movl   $0x0,0x5e2a(%rip)        # ffffffff80420a38 <_ZN6Kernel11kernel_test31KernelListTest_PopBack_Test_objE+0x18>
ffffffff8041ac0b:	00 00 00 
    RegisterTest();
ffffffff8041ac0e:	e8 6d fe ff ff       	callq  ffffffff8041aa80 <_ZN6Kernel11kernel_test10KernelTest12RegisterTestEv>
TEST(KernelListTest, PopBack) {
ffffffff8041ac13:	48 c7 05 02 5e 00 00 	movq   $0xffffffff8041bb88,0x5e02(%rip)        # ffffffff80420a20 <_ZN6Kernel11kernel_test31KernelListTest_PopBack_Test_objE>
ffffffff8041ac1a:	88 bb 41 80 
}  // namespace Kernel
ffffffff8041ac1e:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041ac22:	c3                   	retq   
ffffffff8041ac23:	90                   	nop

ffffffff8041ac24 <_fini>:
ffffffff8041ac24:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041ac28:	e8 53 24 ff ff       	callq  ffffffff8040d080 <__do_global_dtors_aux>
ffffffff8041ac2d:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041ac31:	c3                   	retq   
ffffffff8041ac32:	66 90                	xchg   %ax,%ax

ffffffff8041ac34 <_init>:
ffffffff8041ac34:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041ac38:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8041ac3f:	48 85 c0             	test   %rax,%rax
ffffffff8041ac42:	74 02                	je     ffffffff8041ac46 <_init+0x12>
ffffffff8041ac44:	ff d0                	callq  *%rax
ffffffff8041ac46:	e8 c5 24 ff ff       	callq  ffffffff8040d110 <frame_dummy>
ffffffff8041ac4b:	e8 10 f9 ff ff       	callq  ffffffff8041a560 <__do_global_ctors_aux>
ffffffff8041ac50:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041ac54:	c3                   	retq   
