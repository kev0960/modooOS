
kernel:     file format elf64-x86-64


Disassembly of section .boottext:

0000000000400000 <_kernel_physical_start>:
  400000:	d6                   	(bad)  
  400001:	50                   	push   %rax
  400002:	52                   	push   %rdx
  400003:	e8 00 00 00 00       	callq  400008 <_kernel_physical_start+0x8>
  400008:	18 00                	sbb    %al,(%rax)
  40000a:	00 00                	add    %al,(%rax)
  40000c:	12 af ad 17 00 00    	adc    0x17ad(%rdi),%ch
  400012:	00 00                	add    %al,(%rax)
  400014:	08 00                	or     %al,(%rax)
	...

0000000000400018 <_start>:
.section .text

.global _start
.type _start, @function
_start:
  cmp $0x36d76289, %eax
  400018:	3d 89 62 d7 36       	cmp    $0x36d76289,%eax
  jne multiboot_error
  40001d:	75 02                	jne    400021 <multiboot_error>
  jmp multiboot_success
  40001f:	eb 0d                	jmp    40002e <multiboot_success>

0000000000400021 <multiboot_error>:

multiboot_error:
  movl $0x4641494C, %eax
  400021:	b8 4c 49 41 46       	mov    $0x4641494c,%eax
  movl $0xb8000, %ebx
  400026:	bb 00 80 0b 00       	mov    $0xb8000,%ebx
  movb %al, (%ebx)
  40002b:	88 03                	mov    %al,(%rbx)
  hlt
  40002d:	f4                   	hlt    

000000000040002e <multiboot_success>:

multiboot_success:
  movl $TMP_STACK + KERNEL_BOOT_STACK_SIZE, %esp
  40002e:	bc 00 b0 40 00       	mov    $0x40b000,%esp

  # Start initializing the PML4.
  movl $PDP_HIGH, %eax
  400033:	b8 00 20 40 00       	mov    $0x402000,%eax
  or $(PAGE_ENTRY_PRESENT | PAGE_ENTRY_RW), %eax
  400038:	83 c8 03             	or     $0x3,%eax
  movl %eax, PML4 + (PML4_ADDR_TO_ENTRY_INDEX(KERNEL_VIRTUAL_START) * PAGE_ENTRY_SIZE)
  40003b:	a3 f8 cf 40 00 b8 00 	movabs %eax,0x40b000b80040cff8
  400042:	b0 40 

  movl $PDP_LOW, %eax
  400044:	00 83 c8 03 a3 00    	add    %al,0xa303c8(%rbx)
  or $(PAGE_ENTRY_PRESENT | PAGE_ENTRY_RW), %eax
  movl %eax, PML4 + (PML4_ADDR_TO_ENTRY_INDEX(KERNEL_PHYSICAL_START) * PAGE_ENTRY_SIZE)
  40004a:	c0 40 00 b8          	rolb   $0xb8,0x0(%rax)

  # Now intialize PDP
  movl $0, %eax
  40004e:	00 00                	add    %al,(%rax)
  400050:	00 00                	add    %al,(%rax)
  or $(PAGE_ENTRY_PRESENT | PAGE_ENTRY_RW | PAGE_PAGE_SIZE), %eax
  400052:	0d 83 00 00 00       	or     $0x83,%eax
  movl %eax, PDP_HIGH + (PDP_ADDR_TO_ENTRY_INDEX(KERNEL_VIRTUAL_START) * PAGE_ENTRY_SIZE)
  400057:	a3 f0 2f 40 00 a3 00 	movabs %eax,0x40b000a300402ff0
  40005e:	b0 40 
  movl %eax, PDP_LOW + (PDP_ADDR_TO_ENTRY_INDEX(KERNEL_PHYSICAL_START) * PAGE_ENTRY_SIZE)
  400060:	00 b8 00 c0 40 00    	add    %bh,0x40c000(%rax)

  # When done, set CR3 register.
  movl $PML4, %eax
  movl %eax, %cr3
  400066:	0f 22 d8             	mov    %rax,%cr3

  movl $KERNEL_CR4, %eax
  400069:	b8 20 00 00 00       	mov    $0x20,%eax
  movl %eax, %cr4
  40006e:	0f 22 e0             	mov    %rax,%cr4

  # Long mode is enabled by setting long-mode enable control bit (EFER.LME) to 1.
  movl $MSR_EFER, %ecx
  400071:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
  rdmsr
  400076:	0f 32                	rdmsr  
  or $MSR_EFER_LME, %eax
  400078:	0d 00 01 00 00       	or     $0x100,%eax
  wrmsr
  40007d:	0f 30                	wrmsr  

  movl %cr0, %eax
  40007f:	0f 20 c0             	mov    %cr0,%rax
  or $CONTROL_REGISTER0_PAGE, %eax
  400082:	0d 00 00 00 80       	or     $0x80000000,%eax
  movl %eax, %cr0
  400087:	0f 22 c0             	mov    %rax,%cr0

  lgdt gdt_ptr
  40008a:	0f 01 15 00 18 40 00 	lgdt   0x401800(%rip)        # 801891 <_kernel_physical_end+0x3e0891>

  # Our Code Descriptor is the second one. (+8 offset from GDT)
  ljmp $0x8, $_start64
  400091:	ea                   	(bad)  
  400092:	9a                   	(bad)  
  400093:	00 40 00             	add    %al,0x0(%rax)
  400096:	08 00                	or     %al,(%rax)

  cli
  400098:	fa                   	cli    
  hlt
  400099:	f4                   	hlt    

000000000040009a <_start64>:

.global _start64
.type _start64, @function
_start64:
  // Setup segment selectors
  movw $0, %ax
  40009a:	66 b8 00 00          	mov    $0x0,%ax
  movw %ax, %ds
  40009e:	8e d8                	mov    %eax,%ds
  movw %ax, %es
  4000a0:	8e c0                	mov    %eax,%es
  movw %ax, %fs
  4000a2:	8e e0                	mov    %eax,%fs
  movw %ax, %gs
  4000a4:	8e e8                	mov    %eax,%gs
  movw %ax, %ss
  4000a6:	8e d0                	mov    %eax,%ss

  movq $0x1, %rax
  4000a8:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax

  call _init
  4000af:	e8 54 a8 01 80       	callq  ffffffff8041a908 <_init>
  call KernelMain
  4000b4:	e8 97 d0 00 80       	callq  ffffffff8040d150 <KernelMain>
  cli
  4000b9:	fa                   	cli    
  hlt
  4000ba:	f4                   	hlt    

1:
  jmp 1b
  4000bb:	eb fe                	jmp    4000bb <_start64+0x21>

Disassembly of section .text:

ffffffff8040d000 <deregister_tm_clones>:
ffffffff8040d000:	48 c7 c0 f0 d9 41 80 	mov    $0xffffffff8041d9f0,%rax
ffffffff8040d007:	48 3d f0 d9 41 80    	cmp    $0xffffffff8041d9f0,%rax
ffffffff8040d00d:	74 19                	je     ffffffff8040d028 <deregister_tm_clones+0x28>
ffffffff8040d00f:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d016:	48 85 c0             	test   %rax,%rax
ffffffff8040d019:	74 0d                	je     ffffffff8040d028 <deregister_tm_clones+0x28>
ffffffff8040d01b:	48 c7 c7 f0 d9 41 80 	mov    $0xffffffff8041d9f0,%rdi
ffffffff8040d022:	ff e0                	jmpq   *%rax
ffffffff8040d024:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040d028:	c3                   	retq   
ffffffff8040d029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8040d030 <register_tm_clones>:
ffffffff8040d030:	48 c7 c6 f0 d9 41 80 	mov    $0xffffffff8041d9f0,%rsi
ffffffff8040d037:	48 81 ee f0 d9 41 80 	sub    $0xffffffff8041d9f0,%rsi
ffffffff8040d03e:	48 89 f0             	mov    %rsi,%rax
ffffffff8040d041:	48 c1 ee 3f          	shr    $0x3f,%rsi
ffffffff8040d045:	48 c1 f8 03          	sar    $0x3,%rax
ffffffff8040d049:	48 01 c6             	add    %rax,%rsi
ffffffff8040d04c:	48 d1 fe             	sar    %rsi
ffffffff8040d04f:	74 1f                	je     ffffffff8040d070 <register_tm_clones+0x40>
ffffffff8040d051:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d058:	48 85 c0             	test   %rax,%rax
ffffffff8040d05b:	74 13                	je     ffffffff8040d070 <register_tm_clones+0x40>
ffffffff8040d05d:	48 c7 c7 f0 d9 41 80 	mov    $0xffffffff8041d9f0,%rdi
ffffffff8040d064:	ff e0                	jmpq   *%rax
ffffffff8040d066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040d06d:	00 00 00 
ffffffff8040d070:	c3                   	retq   
ffffffff8040d071:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8040d078:	00 00 00 00 
ffffffff8040d07c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8040d080 <__do_global_dtors_aux>:
ffffffff8040d080:	80 3d 79 0f 01 00 00 	cmpb   $0x0,0x10f79(%rip)        # ffffffff8041e000 <completed.4608>
ffffffff8040d087:	75 7f                	jne    ffffffff8040d108 <__do_global_dtors_aux+0x88>
ffffffff8040d089:	55                   	push   %rbp
ffffffff8040d08a:	48 8b 05 77 0f 01 00 	mov    0x10f77(%rip),%rax        # ffffffff8041e008 <dtor_idx.4610>
ffffffff8040d091:	48 89 e5             	mov    %rsp,%rbp
ffffffff8040d094:	41 54                	push   %r12
ffffffff8040d096:	49 c7 c4 e0 d9 41 80 	mov    $0xffffffff8041d9e0,%r12
ffffffff8040d09d:	53                   	push   %rbx
ffffffff8040d09e:	48 c7 c3 e8 d9 41 80 	mov    $0xffffffff8041d9e8,%rbx
ffffffff8040d0a5:	48 81 eb e0 d9 41 80 	sub    $0xffffffff8041d9e0,%rbx
ffffffff8040d0ac:	48 c1 fb 03          	sar    $0x3,%rbx
ffffffff8040d0b0:	48 83 eb 01          	sub    $0x1,%rbx
ffffffff8040d0b4:	48 39 d8             	cmp    %rbx,%rax
ffffffff8040d0b7:	73 22                	jae    ffffffff8040d0db <__do_global_dtors_aux+0x5b>
ffffffff8040d0b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8040d0c0:	48 83 c0 01          	add    $0x1,%rax
ffffffff8040d0c4:	48 89 05 3d 0f 01 00 	mov    %rax,0x10f3d(%rip)        # ffffffff8041e008 <dtor_idx.4610>
ffffffff8040d0cb:	41 ff 14 c4          	callq  *(%r12,%rax,8)
ffffffff8040d0cf:	48 8b 05 32 0f 01 00 	mov    0x10f32(%rip),%rax        # ffffffff8041e008 <dtor_idx.4610>
ffffffff8040d0d6:	48 39 d8             	cmp    %rbx,%rax
ffffffff8040d0d9:	72 e5                	jb     ffffffff8040d0c0 <__do_global_dtors_aux+0x40>
ffffffff8040d0db:	e8 20 ff ff ff       	callq  ffffffff8040d000 <deregister_tm_clones>
ffffffff8040d0e0:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d0e7:	48 85 c0             	test   %rax,%rax
ffffffff8040d0ea:	74 0c                	je     ffffffff8040d0f8 <__do_global_dtors_aux+0x78>
ffffffff8040d0ec:	48 c7 c7 08 c0 41 80 	mov    $0xffffffff8041c008,%rdi
ffffffff8040d0f3:	e8 08 2f bf 7f       	callq  0 <MULTIBOOT_HEADER_LENGTH-0x18>
ffffffff8040d0f8:	5b                   	pop    %rbx
ffffffff8040d0f9:	41 5c                	pop    %r12
ffffffff8040d0fb:	c6 05 fe 0e 01 00 01 	movb   $0x1,0x10efe(%rip)        # ffffffff8041e000 <completed.4608>
ffffffff8040d102:	5d                   	pop    %rbp
ffffffff8040d103:	c3                   	retq   
ffffffff8040d104:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8040d108:	c3                   	retq   
ffffffff8040d109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8040d110 <frame_dummy>:
ffffffff8040d110:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8040d117:	48 85 c0             	test   %rax,%rax
ffffffff8040d11a:	74 24                	je     ffffffff8040d140 <frame_dummy+0x30>
ffffffff8040d11c:	55                   	push   %rbp
ffffffff8040d11d:	48 c7 c6 20 e0 41 80 	mov    $0xffffffff8041e020,%rsi
ffffffff8040d124:	48 c7 c7 08 c0 41 80 	mov    $0xffffffff8041c008,%rdi
ffffffff8040d12b:	48 89 e5             	mov    %rsp,%rbp
ffffffff8040d12e:	e8 cd 2e bf 7f       	callq  0 <MULTIBOOT_HEADER_LENGTH-0x18>
ffffffff8040d133:	5d                   	pop    %rbp
ffffffff8040d134:	e9 f7 fe ff ff       	jmpq   ffffffff8040d030 <register_tm_clones>
ffffffff8040d139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8040d140:	e9 eb fe ff ff       	jmpq   ffffffff8040d030 <register_tm_clones>
ffffffff8040d145:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040d14c:	00 00 00 
ffffffff8040d14f:	90                   	nop

ffffffff8040d150 <KernelMain>:

Kernel::VGAOutput<> Kernel::vga_output{};

extern "C" void KernelMain(void);

void KernelMain() {
ffffffff8040d150:	48 83 ec 18          	sub    $0x18,%rsp
  // Initialize Interrupts.
  Kernel::IDTManager idt_manager{};
  idt_manager.InitializeIDTForCPUException();
ffffffff8040d154:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
ffffffff8040d159:	e8 02 01 00 00       	callq  ffffffff8040d260 <_ZN6Kernel10IDTManager28InitializeIDTForCPUExceptionEv>
  idt_manager.InitializeIDTForIRQ();
ffffffff8040d15e:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
ffffffff8040d163:	e8 68 0a 00 00       	callq  ffffffff8040dbd0 <_ZN6Kernel10IDTManager19InitializeIDTForIRQEv>
  idt_manager.LoadIDT();
ffffffff8040d168:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
ffffffff8040d16d:	e8 3e 0a 00 00       	callq  ffffffff8040dbb0 <_ZN6Kernel10IDTManager7LoadIDTEv>

namespace Kernel {
template <typename CharT>
class basic_string_view {
 public:
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040d172:	48 c7 c7 e8 b7 41 80 	mov    $0xffffffff8041b7e8,%rdi
ffffffff8040d179:	e8 42 00 00 00       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
      }
    }
  }

  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(string_view s) {
    PrintString(s);
ffffffff8040d17e:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040d183:	48 c7 c6 e8 b7 41 80 	mov    $0xffffffff8041b7e8,%rsi
ffffffff8040d18a:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040d191:	89 c2                	mov    %eax,%edx
ffffffff8040d193:	e8 f8 d1 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
class KernelTest;

class KernelTestRunner {
 public:
  static KernelTestRunner& GetTestRunner() {
    static KernelTestRunner test_runner;
ffffffff8040d198:	80 3d 81 38 01 00 00 	cmpb   $0x0,0x13881(%rip)        # ffffffff80420a20 <_kernel_virtual_end>
ffffffff8040d19f:	75 11                	jne    ffffffff8040d1b2 <KernelMain+0x62>
  void RunTest();
  KernelTestRunner(const KernelTestRunner&) = delete;
  void operator=(const KernelTestRunner&) = delete;

 public:
  KernelTestRunner() : num_tests_(0) {}
ffffffff8040d1a1:	c7 05 b5 3b 01 00 00 	movl   $0x0,0x13bb5(%rip)        # ffffffff80420d60 <_ZZN6Kernel11kernel_test16KernelTestRunner13GetTestRunnerEvE11test_runner+0x320>
ffffffff8040d1a8:	00 00 00 
    static KernelTestRunner test_runner;
ffffffff8040d1ab:	c6 05 6e 38 01 00 01 	movb   $0x1,0x1386e(%rip)        # ffffffff80420a20 <_kernel_virtual_end>

  Kernel::vga_output << "IDT setup is done! \n";
  Kernel::kernel_test::KernelTestRunner::GetTestRunner().RunTest();
ffffffff8040d1b2:	48 c7 c7 40 0a 42 80 	mov    $0xffffffff80420a40,%rdi
ffffffff8040d1b9:	e8 72 d0 00 00       	callq  ffffffff8041a230 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv>

  /*
  asm volatile ("int $10");
  asm volatile ("int $11");
  asm volatile ("int $12");*/
  while (1) {
ffffffff8040d1be:	eb fe                	jmp    ffffffff8040d1be <KernelMain+0x6e>

ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>:
#include "string_util.h"

namespace Kernel {
unsigned int strlen(const char* s) {
  unsigned int len = 0;
  while (*s++) {
ffffffff8040d1c0:	80 3f 00             	cmpb   $0x0,(%rdi)
ffffffff8040d1c3:	48 8d 47 01          	lea    0x1(%rdi),%rax
ffffffff8040d1c7:	74 1f                	je     ffffffff8040d1e8 <_ZN6Kernel6strlenEPKc+0x28>
ffffffff8040d1c9:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040d1ce:	29 c2                	sub    %eax,%edx
    len++;
ffffffff8040d1d0:	44 8d 04 02          	lea    (%rdx,%rax,1),%r8d
  while (*s++) {
ffffffff8040d1d4:	48 83 c0 01          	add    $0x1,%rax
ffffffff8040d1d8:	80 78 ff 00          	cmpb   $0x0,-0x1(%rax)
ffffffff8040d1dc:	75 f2                	jne    ffffffff8040d1d0 <_ZN6Kernel6strlenEPKc+0x10>
  }
  return len;
}
ffffffff8040d1de:	44 89 c0             	mov    %r8d,%eax
ffffffff8040d1e1:	c3                   	retq   
ffffffff8040d1e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  unsigned int len = 0;
ffffffff8040d1e8:	45 31 c0             	xor    %r8d,%r8d
}
ffffffff8040d1eb:	44 89 c0             	mov    %r8d,%eax
ffffffff8040d1ee:	c3                   	retq   
ffffffff8040d1ef:	90                   	nop

ffffffff8040d1f0 <_ZN6Kernel14PITimerHandlerEPNS_23CPUInterruptHandlerArgsE>:
  outb(0x20, 0x20);
}

}  // namespace

__attribute__((interrupt)) void PITimerHandler(CPUInterruptHandlerArgs* args) {
ffffffff8040d1f0:	41 53                	push   %r11
ffffffff8040d1f2:	41 52                	push   %r10
ffffffff8040d1f4:	41 51                	push   %r9
ffffffff8040d1f6:	41 50                	push   %r8
ffffffff8040d1f8:	57                   	push   %rdi
  UNUSED(args);

  pic_timer.TimerInterruptHandler();
ffffffff8040d1f9:	48 c7 c7 80 09 42 80 	mov    $0xffffffff80420980,%rdi
__attribute__((interrupt)) void PITimerHandler(CPUInterruptHandlerArgs* args) {
ffffffff8040d200:	56                   	push   %rsi
ffffffff8040d201:	51                   	push   %rcx
ffffffff8040d202:	52                   	push   %rdx
ffffffff8040d203:	50                   	push   %rax
  pic_timer.TimerInterruptHandler();
ffffffff8040d204:	fc                   	cld    
ffffffff8040d205:	e8 26 ae 00 00       	callq  ffffffff80418030 <_ZN6Kernel7PITimer21TimerInterruptHandlerEv>
#include "types.h"

namespace Kernel {
static inline void outb(uint16_t port, uint8_t val) {
  // Copy value to EAX and port to EDX.
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040d20a:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8040d20f:	e6 20                	out    %al,$0x20
  EndOfIRQ();
}
ffffffff8040d211:	58                   	pop    %rax
ffffffff8040d212:	5a                   	pop    %rdx
ffffffff8040d213:	59                   	pop    %rcx
ffffffff8040d214:	5e                   	pop    %rsi
ffffffff8040d215:	5f                   	pop    %rdi
ffffffff8040d216:	41 58                	pop    %r8
ffffffff8040d218:	41 59                	pop    %r9
ffffffff8040d21a:	41 5a                	pop    %r10
ffffffff8040d21c:	41 5b                	pop    %r11
ffffffff8040d21e:	48 cf                	iretq  

ffffffff8040d220 <_ZN6Kernel15KeyboardHandlerEPNS_23CPUInterruptHandlerArgsE>:

__attribute__((interrupt)) void KeyboardHandler(CPUInterruptHandlerArgs* args) {
ffffffff8040d220:	41 53                	push   %r11
ffffffff8040d222:	41 52                	push   %r10
ffffffff8040d224:	41 51                	push   %r9
ffffffff8040d226:	41 50                	push   %r8
ffffffff8040d228:	57                   	push   %rdi
ffffffff8040d229:	56                   	push   %rsi
ffffffff8040d22a:	51                   	push   %rcx
ffffffff8040d22b:	52                   	push   %rdx
ffffffff8040d22c:	50                   	push   %rax
}

static inline uint8_t inb(uint16_t port) {
  uint8_t ret;
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040d22d:	e4 60                	in     $0x60,%al
  UNUSED(args);

  uint8_t scan_code = inb(0x60);
  ps2_keyboard.MainKeyboardHandler(scan_code);
ffffffff8040d22f:	48 c7 c7 40 00 42 80 	mov    $0xffffffff80420040,%rdi
ffffffff8040d236:	0f b6 f0             	movzbl %al,%esi
ffffffff8040d239:	fc                   	cld    
ffffffff8040d23a:	e8 d1 a1 00 00       	callq  ffffffff80417410 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh>
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040d23f:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8040d244:	e6 20                	out    %al,$0x20
  EndOfIRQ();
}
ffffffff8040d246:	58                   	pop    %rax
ffffffff8040d247:	5a                   	pop    %rdx
ffffffff8040d248:	59                   	pop    %rcx
ffffffff8040d249:	5e                   	pop    %rsi
ffffffff8040d24a:	5f                   	pop    %rdi
ffffffff8040d24b:	41 58                	pop    %r8
ffffffff8040d24d:	41 59                	pop    %r9
ffffffff8040d24f:	41 5a                	pop    %r10
ffffffff8040d251:	41 5b                	pop    %r11
ffffffff8040d253:	48 cf                	iretq  
ffffffff8040d255:	90                   	nop
ffffffff8040d256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040d25d:	00 00 00 

ffffffff8040d260 <_ZN6Kernel10IDTManager28InitializeIDTForCPUExceptionEv>:
  entry.selector = 0x8;  // Code segment.
ffffffff8040d260:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff8040d265:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8040d26a:	bf 08 00 00 00       	mov    $0x8,%edi
  auto ih_addr = has_error_code
ffffffff8040d26f:	48 c7 c2 60 1a 41 80 	mov    $0xffffffff80411a60,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d276:	66 89 15 c3 1d 01 00 	mov    %dx,0x11dc3(%rip)        # ffffffff8041f040 <idt_entries>

void IDTManager::InitializeIDTForCPUException() {
  InstallIDTEntry<0>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
ffffffff8040d27d:	0f b6 05 7c dd 00 00 	movzbl 0xdd7c(%rip),%eax        # ffffffff8041b000 <_init+0x6f8>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d284:	41 b8 08 00 00 00    	mov    $0x8,%r8d
ffffffff8040d28a:	41 b9 08 00 00 00    	mov    $0x8,%r9d
ffffffff8040d290:	66 89 0d ab 1d 01 00 	mov    %cx,0x11dab(%rip)        # ffffffff8041f042 <idt_entries+0x2>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d297:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d29a:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d29e:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2a4:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2a8:	89 15 9a 1d 01 00    	mov    %edx,0x11d9a(%rip)        # ffffffff8041f048 <idt_entries+0x8>
  auto ih_addr = has_error_code
ffffffff8040d2ae:	48 c7 c2 90 1a 41 80 	mov    $0xffffffff80411a90,%rdx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d2b5:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2bb:	66 89 0d 84 1d 01 00 	mov    %cx,0x11d84(%rip)        # ffffffff8041f046 <idt_entries+0x6>
ffffffff8040d2c2:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d2c5:	66 89 15 84 1d 01 00 	mov    %dx,0x11d84(%rip)        # ffffffff8041f050 <idt_entries+0x10>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2cc:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2d0:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2d4:	89 15 7e 1d 01 00    	mov    %edx,0x11d7e(%rip)        # ffffffff8041f058 <idt_entries+0x18>
  auto ih_addr = has_error_code
ffffffff8040d2da:	48 c7 c2 c0 1a 41 80 	mov    $0xffffffff80411ac0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2e1:	66 89 0d 6e 1d 01 00 	mov    %cx,0x11d6e(%rip)        # ffffffff8041f056 <idt_entries+0x16>
ffffffff8040d2e8:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d2eb:	66 89 15 6e 1d 01 00 	mov    %dx,0x11d6e(%rip)        # ffffffff8041f060 <idt_entries+0x20>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2f2:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d2f6:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d2fa:	89 15 68 1d 01 00    	mov    %edx,0x11d68(%rip)        # ffffffff8041f068 <idt_entries+0x28>
  auto ih_addr = has_error_code
ffffffff8040d300:	48 c7 c2 f0 1a 41 80 	mov    $0xffffffff80411af0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d307:	66 89 0d 58 1d 01 00 	mov    %cx,0x11d58(%rip)        # ffffffff8041f066 <idt_entries+0x26>
ffffffff8040d30e:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d311:	66 89 15 58 1d 01 00 	mov    %dx,0x11d58(%rip)        # ffffffff8041f070 <idt_entries+0x30>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d318:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d31c:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d320:	89 15 52 1d 01 00    	mov    %edx,0x11d52(%rip)        # ffffffff8041f078 <idt_entries+0x38>
  auto ih_addr = has_error_code
ffffffff8040d326:	48 c7 c2 20 1b 41 80 	mov    $0xffffffff80411b20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d32d:	66 89 0d 42 1d 01 00 	mov    %cx,0x11d42(%rip)        # ffffffff8041f076 <idt_entries+0x36>
ffffffff8040d334:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d337:	66 89 15 42 1d 01 00 	mov    %dx,0x11d42(%rip)        # ffffffff8041f080 <idt_entries+0x40>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d33e:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d342:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.type_attr = type_attr;
ffffffff8040d346:	88 05 f9 1c 01 00    	mov    %al,0x11cf9(%rip)        # ffffffff8041f045 <idt_entries+0x5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d34c:	66 89 35 ff 1c 01 00 	mov    %si,0x11cff(%rip)        # ffffffff8041f052 <idt_entries+0x12>
ffffffff8040d353:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d358:	88 05 f7 1c 01 00    	mov    %al,0x11cf7(%rip)        # ffffffff8041f055 <idt_entries+0x15>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d35e:	66 89 3d fd 1c 01 00 	mov    %di,0x11cfd(%rip)        # ffffffff8041f062 <idt_entries+0x22>
ffffffff8040d365:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.type_attr = type_attr;
ffffffff8040d36a:	88 05 f5 1c 01 00    	mov    %al,0x11cf5(%rip)        # ffffffff8041f065 <idt_entries+0x25>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d370:	66 44 89 05 fa 1c 01 	mov    %r8w,0x11cfa(%rip)        # ffffffff8041f072 <idt_entries+0x32>
ffffffff8040d377:	00 
ffffffff8040d378:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040d37e:	88 05 f1 1c 01 00    	mov    %al,0x11cf1(%rip)        # ffffffff8041f075 <idt_entries+0x35>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d384:	66 44 89 0d f6 1c 01 	mov    %r9w,0x11cf6(%rip)        # ffffffff8041f082 <idt_entries+0x42>
ffffffff8040d38b:	00 
ffffffff8040d38c:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  entry.ist = 0;
ffffffff8040d392:	c6 05 ab 1c 01 00 00 	movb   $0x0,0x11cab(%rip)        # ffffffff8041f044 <idt_entries+0x4>
  entry.zero = 0;
ffffffff8040d399:	c7 05 a9 1c 01 00 00 	movl   $0x0,0x11ca9(%rip)        # ffffffff8041f04c <idt_entries+0xc>
ffffffff8040d3a0:	00 00 00 
  entry.ist = 0;
ffffffff8040d3a3:	c6 05 aa 1c 01 00 00 	movb   $0x0,0x11caa(%rip)        # ffffffff8041f054 <idt_entries+0x14>
  entry.zero = 0;
ffffffff8040d3aa:	c7 05 a8 1c 01 00 00 	movl   $0x0,0x11ca8(%rip)        # ffffffff8041f05c <idt_entries+0x1c>
ffffffff8040d3b1:	00 00 00 
  entry.ist = 0;
ffffffff8040d3b4:	c6 05 a9 1c 01 00 00 	movb   $0x0,0x11ca9(%rip)        # ffffffff8041f064 <idt_entries+0x24>
  entry.zero = 0;
ffffffff8040d3bb:	c7 05 a7 1c 01 00 00 	movl   $0x0,0x11ca7(%rip)        # ffffffff8041f06c <idt_entries+0x2c>
ffffffff8040d3c2:	00 00 00 
  entry.ist = 0;
ffffffff8040d3c5:	c6 05 a8 1c 01 00 00 	movb   $0x0,0x11ca8(%rip)        # ffffffff8041f074 <idt_entries+0x34>
  entry.zero = 0;
ffffffff8040d3cc:	c7 05 a6 1c 01 00 00 	movl   $0x0,0x11ca6(%rip)        # ffffffff8041f07c <idt_entries+0x3c>
ffffffff8040d3d3:	00 00 00 
  entry.ist = 0;
ffffffff8040d3d6:	c6 05 a7 1c 01 00 00 	movb   $0x0,0x11ca7(%rip)        # ffffffff8041f084 <idt_entries+0x44>
  entry.type_attr = type_attr;
ffffffff8040d3dd:	88 05 a2 1c 01 00    	mov    %al,0x11ca2(%rip)        # ffffffff8041f085 <idt_entries+0x45>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d3e3:	89 15 9f 1c 01 00    	mov    %edx,0x11c9f(%rip)        # ffffffff8041f088 <idt_entries+0x48>
  auto ih_addr = has_error_code
ffffffff8040d3e9:	48 c7 c2 50 1b 41 80 	mov    $0xffffffff80411b50,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d3f0:	66 89 0d 8f 1c 01 00 	mov    %cx,0x11c8f(%rip)        # ffffffff8041f086 <idt_entries+0x46>
ffffffff8040d3f7:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d3fa:	66 89 15 8f 1c 01 00 	mov    %dx,0x11c8f(%rip)        # ffffffff8041f090 <idt_entries+0x50>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d401:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d405:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d409:	89 15 89 1c 01 00    	mov    %edx,0x11c89(%rip)        # ffffffff8041f098 <idt_entries+0x58>
  auto ih_addr = has_error_code
ffffffff8040d40f:	48 c7 c2 80 1b 41 80 	mov    $0xffffffff80411b80,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d416:	66 89 0d 79 1c 01 00 	mov    %cx,0x11c79(%rip)        # ffffffff8041f096 <idt_entries+0x56>
ffffffff8040d41d:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040d420:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d424:	66 89 15 75 1c 01 00 	mov    %dx,0x11c75(%rip)        # ffffffff8041f0a0 <idt_entries+0x60>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d42b:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d42f:	66 89 0d 70 1c 01 00 	mov    %cx,0x11c70(%rip)        # ffffffff8041f0a6 <idt_entries+0x66>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d436:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d43b:	89 15 67 1c 01 00    	mov    %edx,0x11c67(%rip)        # ffffffff8041f0a8 <idt_entries+0x68>
  auto ih_addr = has_error_code
ffffffff8040d441:	48 c7 c2 b0 1b 41 80 	mov    $0xffffffff80411bb0,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d448:	66 89 15 61 1c 01 00 	mov    %dx,0x11c61(%rip)        # ffffffff8041f0b0 <idt_entries+0x70>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d44f:	66 89 0d 5c 1c 01 00 	mov    %cx,0x11c5c(%rip)        # ffffffff8041f0b2 <idt_entries+0x72>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d456:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d459:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d45d:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d461:	89 15 51 1c 01 00    	mov    %edx,0x11c51(%rip)        # ffffffff8041f0b8 <idt_entries+0x78>
  auto ih_addr = has_error_code
ffffffff8040d467:	48 c7 c2 10 1f 41 80 	mov    $0xffffffff80411f10,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d46e:	66 89 0d 41 1c 01 00 	mov    %cx,0x11c41(%rip)        # ffffffff8041f0b6 <idt_entries+0x76>
ffffffff8040d475:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d478:	66 89 15 41 1c 01 00 	mov    %dx,0x11c41(%rip)        # ffffffff8041f0c0 <idt_entries+0x80>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d47f:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d483:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d487:	89 15 3b 1c 01 00    	mov    %edx,0x11c3b(%rip)        # ffffffff8041f0c8 <idt_entries+0x88>
  auto ih_addr = has_error_code
ffffffff8040d48d:	48 c7 c2 e0 1b 41 80 	mov    $0xffffffff80411be0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d494:	66 89 0d 2b 1c 01 00 	mov    %cx,0x11c2b(%rip)        # ffffffff8041f0c6 <idt_entries+0x86>
ffffffff8040d49b:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d49e:	66 89 15 2b 1c 01 00 	mov    %dx,0x11c2b(%rip)        # ffffffff8041f0d0 <idt_entries+0x90>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d4a5:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d4a9:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d4ad:	66 44 89 15 dd 1b 01 	mov    %r10w,0x11bdd(%rip)        # ffffffff8041f092 <idt_entries+0x52>
ffffffff8040d4b4:	00 
ffffffff8040d4b5:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.type_attr = type_attr;
ffffffff8040d4bb:	88 05 d4 1b 01 00    	mov    %al,0x11bd4(%rip)        # ffffffff8041f095 <idt_entries+0x55>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d4c1:	66 44 89 1d d9 1b 01 	mov    %r11w,0x11bd9(%rip)        # ffffffff8041f0a2 <idt_entries+0x62>
ffffffff8040d4c8:	00 
ffffffff8040d4c9:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.type_attr = type_attr;
ffffffff8040d4cf:	88 05 d0 1b 01 00    	mov    %al,0x11bd0(%rip)        # ffffffff8041f0a5 <idt_entries+0x65>
ffffffff8040d4d5:	88 05 da 1b 01 00    	mov    %al,0x11bda(%rip)        # ffffffff8041f0b5 <idt_entries+0x75>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d4db:	66 89 35 e0 1b 01 00 	mov    %si,0x11be0(%rip)        # ffffffff8041f0c2 <idt_entries+0x82>
ffffffff8040d4e2:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d4e7:	88 05 d8 1b 01 00    	mov    %al,0x11bd8(%rip)        # ffffffff8041f0c5 <idt_entries+0x85>
  entry.zero = 0;
ffffffff8040d4ed:	c7 05 95 1b 01 00 00 	movl   $0x0,0x11b95(%rip)        # ffffffff8041f08c <idt_entries+0x4c>
ffffffff8040d4f4:	00 00 00 
  entry.ist = 0;
ffffffff8040d4f7:	c6 05 96 1b 01 00 00 	movb   $0x0,0x11b96(%rip)        # ffffffff8041f094 <idt_entries+0x54>
  entry.zero = 0;
ffffffff8040d4fe:	c7 05 94 1b 01 00 00 	movl   $0x0,0x11b94(%rip)        # ffffffff8041f09c <idt_entries+0x5c>
ffffffff8040d505:	00 00 00 
  entry.ist = 0;
ffffffff8040d508:	c6 05 95 1b 01 00 00 	movb   $0x0,0x11b95(%rip)        # ffffffff8041f0a4 <idt_entries+0x64>
  entry.zero = 0;
ffffffff8040d50f:	c7 05 93 1b 01 00 00 	movl   $0x0,0x11b93(%rip)        # ffffffff8041f0ac <idt_entries+0x6c>
ffffffff8040d516:	00 00 00 
  entry.ist = 0;
ffffffff8040d519:	c6 05 94 1b 01 00 00 	movb   $0x0,0x11b94(%rip)        # ffffffff8041f0b4 <idt_entries+0x74>
  entry.zero = 0;
ffffffff8040d520:	c7 05 92 1b 01 00 00 	movl   $0x0,0x11b92(%rip)        # ffffffff8041f0bc <idt_entries+0x7c>
ffffffff8040d527:	00 00 00 
  entry.ist = 0;
ffffffff8040d52a:	c6 05 93 1b 01 00 00 	movb   $0x0,0x11b93(%rip)        # ffffffff8041f0c4 <idt_entries+0x84>
  entry.zero = 0;
ffffffff8040d531:	c7 05 91 1b 01 00 00 	movl   $0x0,0x11b91(%rip)        # ffffffff8041f0cc <idt_entries+0x8c>
ffffffff8040d538:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040d53b:	66 89 3d 90 1b 01 00 	mov    %di,0x11b90(%rip)        # ffffffff8041f0d2 <idt_entries+0x92>
ffffffff8040d542:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d547:	89 15 8b 1b 01 00    	mov    %edx,0x11b8b(%rip)        # ffffffff8041f0d8 <idt_entries+0x98>
  auto ih_addr = has_error_code
ffffffff8040d54d:	48 c7 c2 30 2b 41 80 	mov    $0xffffffff80412b30,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d554:	66 89 0d 7b 1b 01 00 	mov    %cx,0x11b7b(%rip)        # ffffffff8041f0d6 <idt_entries+0x96>
ffffffff8040d55b:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d55e:	66 89 15 7b 1b 01 00 	mov    %dx,0x11b7b(%rip)        # ffffffff8041f0e0 <idt_entries+0xa0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d565:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d569:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d56d:	89 15 75 1b 01 00    	mov    %edx,0x11b75(%rip)        # ffffffff8041f0e8 <idt_entries+0xa8>
  auto ih_addr = has_error_code
ffffffff8040d573:	48 c7 c2 50 37 41 80 	mov    $0xffffffff80413750,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d57a:	66 89 0d 65 1b 01 00 	mov    %cx,0x11b65(%rip)        # ffffffff8041f0e6 <idt_entries+0xa6>
ffffffff8040d581:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d584:	66 89 15 65 1b 01 00 	mov    %dx,0x11b65(%rip)        # ffffffff8041f0f0 <idt_entries+0xb0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d58b:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d58f:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d593:	89 15 5f 1b 01 00    	mov    %edx,0x11b5f(%rip)        # ffffffff8041f0f8 <idt_entries+0xb8>
  auto ih_addr = has_error_code
ffffffff8040d599:	48 c7 c2 70 43 41 80 	mov    $0xffffffff80414370,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5a0:	66 89 0d 4f 1b 01 00 	mov    %cx,0x11b4f(%rip)        # ffffffff8041f0f6 <idt_entries+0xb6>
ffffffff8040d5a7:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d5aa:	66 89 15 4f 1b 01 00 	mov    %dx,0x11b4f(%rip)        # ffffffff8041f100 <idt_entries+0xc0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5b1:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5b5:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5b9:	89 15 49 1b 01 00    	mov    %edx,0x11b49(%rip)        # ffffffff8041f108 <idt_entries+0xc8>
  auto ih_addr = has_error_code
ffffffff8040d5bf:	48 c7 c2 90 4f 41 80 	mov    $0xffffffff80414f90,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5c6:	66 89 0d 39 1b 01 00 	mov    %cx,0x11b39(%rip)        # ffffffff8041f106 <idt_entries+0xc6>
ffffffff8040d5cd:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040d5d0:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d5d4:	66 89 15 35 1b 01 00 	mov    %dx,0x11b35(%rip)        # ffffffff8041f110 <idt_entries+0xd0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5db:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d5df:	66 89 0d 30 1b 01 00 	mov    %cx,0x11b30(%rip)        # ffffffff8041f116 <idt_entries+0xd6>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d5e6:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d5eb:	89 15 27 1b 01 00    	mov    %edx,0x11b27(%rip)        # ffffffff8041f118 <idt_entries+0xd8>
  auto ih_addr = has_error_code
ffffffff8040d5f1:	48 c7 c2 b0 5b 41 80 	mov    $0xffffffff80415bb0,%rdx
  entry.type_attr = type_attr;
ffffffff8040d5f8:	88 05 d7 1a 01 00    	mov    %al,0x11ad7(%rip)        # ffffffff8041f0d5 <idt_entries+0x95>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d5fe:	66 44 89 05 dc 1a 01 	mov    %r8w,0x11adc(%rip)        # ffffffff8041f0e2 <idt_entries+0xa2>
ffffffff8040d605:	00 
ffffffff8040d606:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040d60c:	88 05 d3 1a 01 00    	mov    %al,0x11ad3(%rip)        # ffffffff8041f0e5 <idt_entries+0xa5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d612:	66 44 89 0d d8 1a 01 	mov    %r9w,0x11ad8(%rip)        # ffffffff8041f0f2 <idt_entries+0xb2>
ffffffff8040d619:	00 
ffffffff8040d61a:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  entry.type_attr = type_attr;
ffffffff8040d620:	88 05 cf 1a 01 00    	mov    %al,0x11acf(%rip)        # ffffffff8041f0f5 <idt_entries+0xb5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d626:	66 44 89 15 d4 1a 01 	mov    %r10w,0x11ad4(%rip)        # ffffffff8041f102 <idt_entries+0xc2>
ffffffff8040d62d:	00 
ffffffff8040d62e:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.type_attr = type_attr;
ffffffff8040d634:	88 05 cb 1a 01 00    	mov    %al,0x11acb(%rip)        # ffffffff8041f105 <idt_entries+0xc5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d63a:	66 44 89 1d d0 1a 01 	mov    %r11w,0x11ad0(%rip)        # ffffffff8041f112 <idt_entries+0xd2>
ffffffff8040d641:	00 
ffffffff8040d642:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.type_attr = type_attr;
ffffffff8040d648:	88 05 c7 1a 01 00    	mov    %al,0x11ac7(%rip)        # ffffffff8041f115 <idt_entries+0xd5>
  entry.ist = 0;
ffffffff8040d64e:	c6 05 7f 1a 01 00 00 	movb   $0x0,0x11a7f(%rip)        # ffffffff8041f0d4 <idt_entries+0x94>
  entry.zero = 0;
ffffffff8040d655:	c7 05 7d 1a 01 00 00 	movl   $0x0,0x11a7d(%rip)        # ffffffff8041f0dc <idt_entries+0x9c>
ffffffff8040d65c:	00 00 00 
  entry.ist = 0;
ffffffff8040d65f:	c6 05 7e 1a 01 00 00 	movb   $0x0,0x11a7e(%rip)        # ffffffff8041f0e4 <idt_entries+0xa4>
  entry.zero = 0;
ffffffff8040d666:	c7 05 7c 1a 01 00 00 	movl   $0x0,0x11a7c(%rip)        # ffffffff8041f0ec <idt_entries+0xac>
ffffffff8040d66d:	00 00 00 
  entry.ist = 0;
ffffffff8040d670:	c6 05 7d 1a 01 00 00 	movb   $0x0,0x11a7d(%rip)        # ffffffff8041f0f4 <idt_entries+0xb4>
  entry.zero = 0;
ffffffff8040d677:	c7 05 7b 1a 01 00 00 	movl   $0x0,0x11a7b(%rip)        # ffffffff8041f0fc <idt_entries+0xbc>
ffffffff8040d67e:	00 00 00 
  entry.ist = 0;
ffffffff8040d681:	c6 05 7c 1a 01 00 00 	movb   $0x0,0x11a7c(%rip)        # ffffffff8041f104 <idt_entries+0xc4>
  entry.zero = 0;
ffffffff8040d688:	c7 05 7a 1a 01 00 00 	movl   $0x0,0x11a7a(%rip)        # ffffffff8041f10c <idt_entries+0xcc>
ffffffff8040d68f:	00 00 00 
  entry.ist = 0;
ffffffff8040d692:	c6 05 7b 1a 01 00 00 	movb   $0x0,0x11a7b(%rip)        # ffffffff8041f114 <idt_entries+0xd4>
  entry.zero = 0;
ffffffff8040d699:	c7 05 79 1a 01 00 00 	movl   $0x0,0x11a79(%rip)        # ffffffff8041f11c <idt_entries+0xdc>
ffffffff8040d6a0:	00 00 00 
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d6a3:	66 89 15 76 1a 01 00 	mov    %dx,0x11a76(%rip)        # ffffffff8041f120 <idt_entries+0xe0>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d6aa:	66 89 0d 71 1a 01 00 	mov    %cx,0x11a71(%rip)        # ffffffff8041f122 <idt_entries+0xe2>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6b1:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6b4:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6b8:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6bc:	89 15 66 1a 01 00    	mov    %edx,0x11a66(%rip)        # ffffffff8041f128 <idt_entries+0xe8>
  auto ih_addr = has_error_code
ffffffff8040d6c2:	48 c7 c2 10 1c 41 80 	mov    $0xffffffff80411c10,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6c9:	66 89 0d 56 1a 01 00 	mov    %cx,0x11a56(%rip)        # ffffffff8041f126 <idt_entries+0xe6>
ffffffff8040d6d0:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d6d3:	66 89 15 56 1a 01 00 	mov    %dx,0x11a56(%rip)        # ffffffff8041f130 <idt_entries+0xf0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6da:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6de:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d6e2:	89 15 50 1a 01 00    	mov    %edx,0x11a50(%rip)        # ffffffff8041f138 <idt_entries+0xf8>
  auto ih_addr = has_error_code
ffffffff8040d6e8:	48 c7 c2 40 1c 41 80 	mov    $0xffffffff80411c40,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d6ef:	66 89 0d 40 1a 01 00 	mov    %cx,0x11a40(%rip)        # ffffffff8041f136 <idt_entries+0xf6>
ffffffff8040d6f6:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040d6f9:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d6fd:	66 89 15 3c 1a 01 00 	mov    %dx,0x11a3c(%rip)        # ffffffff8041f140 <idt_entries+0x100>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d704:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffff8040d708:	89 15 3a 1a 01 00    	mov    %edx,0x11a3a(%rip)        # ffffffff8041f148 <idt_entries+0x108>
  auto ih_addr = has_error_code
ffffffff8040d70e:	48 c7 c2 d0 67 41 80 	mov    $0xffffffff804167d0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d715:	66 89 0d 2a 1a 01 00 	mov    %cx,0x11a2a(%rip)        # ffffffff8041f146 <idt_entries+0x106>
ffffffff8040d71c:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d71f:	66 89 15 2a 1a 01 00 	mov    %dx,0x11a2a(%rip)        # ffffffff8041f150 <idt_entries+0x110>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d726:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d72a:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d72e:	89 15 24 1a 01 00    	mov    %edx,0x11a24(%rip)        # ffffffff8041f158 <idt_entries+0x118>
  auto ih_addr = has_error_code
ffffffff8040d734:	48 c7 c2 70 1c 41 80 	mov    $0xffffffff80411c70,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d73b:	66 89 0d 14 1a 01 00 	mov    %cx,0x11a14(%rip)        # ffffffff8041f156 <idt_entries+0x116>
ffffffff8040d742:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d745:	66 89 15 14 1a 01 00 	mov    %dx,0x11a14(%rip)        # ffffffff8041f160 <idt_entries+0x120>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d74c:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d750:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.type_attr = type_attr;
ffffffff8040d754:	88 05 cb 19 01 00    	mov    %al,0x119cb(%rip)        # ffffffff8041f125 <idt_entries+0xe5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d75a:	66 89 35 d1 19 01 00 	mov    %si,0x119d1(%rip)        # ffffffff8041f132 <idt_entries+0xf2>
ffffffff8040d761:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d766:	88 05 c9 19 01 00    	mov    %al,0x119c9(%rip)        # ffffffff8041f135 <idt_entries+0xf5>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d76c:	66 89 3d cf 19 01 00 	mov    %di,0x119cf(%rip)        # ffffffff8041f142 <idt_entries+0x102>
ffffffff8040d773:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.type_attr = type_attr;
ffffffff8040d778:	88 05 c7 19 01 00    	mov    %al,0x119c7(%rip)        # ffffffff8041f145 <idt_entries+0x105>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d77e:	66 44 89 05 cc 19 01 	mov    %r8w,0x119cc(%rip)        # ffffffff8041f152 <idt_entries+0x112>
ffffffff8040d785:	00 
ffffffff8040d786:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040d78c:	88 05 c3 19 01 00    	mov    %al,0x119c3(%rip)        # ffffffff8041f155 <idt_entries+0x115>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d792:	66 44 89 0d c8 19 01 	mov    %r9w,0x119c8(%rip)        # ffffffff8041f162 <idt_entries+0x122>
ffffffff8040d799:	00 
ffffffff8040d79a:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  entry.type_attr = type_attr;
ffffffff8040d7a0:	88 05 bf 19 01 00    	mov    %al,0x119bf(%rip)        # ffffffff8041f165 <idt_entries+0x125>
  entry.ist = 0;
ffffffff8040d7a6:	c6 05 77 19 01 00 00 	movb   $0x0,0x11977(%rip)        # ffffffff8041f124 <idt_entries+0xe4>
  entry.zero = 0;
ffffffff8040d7ad:	c7 05 75 19 01 00 00 	movl   $0x0,0x11975(%rip)        # ffffffff8041f12c <idt_entries+0xec>
ffffffff8040d7b4:	00 00 00 
  entry.ist = 0;
ffffffff8040d7b7:	c6 05 76 19 01 00 00 	movb   $0x0,0x11976(%rip)        # ffffffff8041f134 <idt_entries+0xf4>
  entry.zero = 0;
ffffffff8040d7be:	c7 05 74 19 01 00 00 	movl   $0x0,0x11974(%rip)        # ffffffff8041f13c <idt_entries+0xfc>
ffffffff8040d7c5:	00 00 00 
  entry.ist = 0;
ffffffff8040d7c8:	c6 05 75 19 01 00 00 	movb   $0x0,0x11975(%rip)        # ffffffff8041f144 <idt_entries+0x104>
  entry.zero = 0;
ffffffff8040d7cf:	c7 05 73 19 01 00 00 	movl   $0x0,0x11973(%rip)        # ffffffff8041f14c <idt_entries+0x10c>
ffffffff8040d7d6:	00 00 00 
  entry.ist = 0;
ffffffff8040d7d9:	c6 05 74 19 01 00 00 	movb   $0x0,0x11974(%rip)        # ffffffff8041f154 <idt_entries+0x114>
  entry.zero = 0;
ffffffff8040d7e0:	c7 05 72 19 01 00 00 	movl   $0x0,0x11972(%rip)        # ffffffff8041f15c <idt_entries+0x11c>
ffffffff8040d7e7:	00 00 00 
  entry.ist = 0;
ffffffff8040d7ea:	c6 05 73 19 01 00 00 	movb   $0x0,0x11973(%rip)        # ffffffff8041f164 <idt_entries+0x124>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d7f1:	66 89 0d 6e 19 01 00 	mov    %cx,0x1196e(%rip)        # ffffffff8041f166 <idt_entries+0x126>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d7f8:	89 15 6a 19 01 00    	mov    %edx,0x1196a(%rip)        # ffffffff8041f168 <idt_entries+0x128>
  auto ih_addr = has_error_code
ffffffff8040d7fe:	48 c7 c2 a0 1c 41 80 	mov    $0xffffffff80411ca0,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d805:	66 89 15 64 19 01 00 	mov    %dx,0x11964(%rip)        # ffffffff8041f170 <idt_entries+0x130>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d80c:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d80f:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffff8040d813:	89 15 5f 19 01 00    	mov    %edx,0x1195f(%rip)        # ffffffff8041f178 <idt_entries+0x138>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d819:	48 c1 e9 10          	shr    $0x10,%rcx
  auto ih_addr = has_error_code
ffffffff8040d81d:	48 c7 c2 d0 1c 41 80 	mov    $0xffffffff80411cd0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d824:	66 89 0d 4b 19 01 00 	mov    %cx,0x1194b(%rip)        # ffffffff8041f176 <idt_entries+0x136>
ffffffff8040d82b:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d82e:	66 89 15 4b 19 01 00 	mov    %dx,0x1194b(%rip)        # ffffffff8041f180 <idt_entries+0x140>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d835:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d839:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d83d:	66 89 0d 42 19 01 00 	mov    %cx,0x11942(%rip)        # ffffffff8041f186 <idt_entries+0x146>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d844:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d849:	89 15 39 19 01 00    	mov    %edx,0x11939(%rip)        # ffffffff8041f188 <idt_entries+0x148>
  auto ih_addr = has_error_code
ffffffff8040d84f:	48 c7 c2 00 1d 41 80 	mov    $0xffffffff80411d00,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d856:	66 89 15 33 19 01 00 	mov    %dx,0x11933(%rip)        # ffffffff8041f190 <idt_entries+0x150>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d85d:	66 89 0d 2e 19 01 00 	mov    %cx,0x1192e(%rip)        # ffffffff8041f192 <idt_entries+0x152>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d864:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d867:	48 c1 ea 20          	shr    $0x20,%rdx
ffffffff8040d86b:	89 15 27 19 01 00    	mov    %edx,0x11927(%rip)        # ffffffff8041f198 <idt_entries+0x158>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d871:	48 c1 e9 10          	shr    $0x10,%rcx
  auto ih_addr = has_error_code
ffffffff8040d875:	48 c7 c2 30 1d 41 80 	mov    $0xffffffff80411d30,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d87c:	66 89 0d 13 19 01 00 	mov    %cx,0x11913(%rip)        # ffffffff8041f196 <idt_entries+0x156>
ffffffff8040d883:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d886:	66 89 15 13 19 01 00 	mov    %dx,0x11913(%rip)        # ffffffff8041f1a0 <idt_entries+0x160>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d88d:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d891:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d895:	89 15 0d 19 01 00    	mov    %edx,0x1190d(%rip)        # ffffffff8041f1a8 <idt_entries+0x168>
  auto ih_addr = has_error_code
ffffffff8040d89b:	48 c7 c2 60 1d 41 80 	mov    $0xffffffff80411d60,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d8a2:	66 89 0d fd 18 01 00 	mov    %cx,0x118fd(%rip)        # ffffffff8041f1a6 <idt_entries+0x166>
ffffffff8040d8a9:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d8ac:	66 89 15 fd 18 01 00 	mov    %dx,0x118fd(%rip)        # ffffffff8041f1b0 <idt_entries+0x170>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d8b3:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d8b7:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8bb:	66 44 89 15 af 18 01 	mov    %r10w,0x118af(%rip)        # ffffffff8041f172 <idt_entries+0x132>
ffffffff8040d8c2:	00 
ffffffff8040d8c3:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  entry.type_attr = type_attr;
ffffffff8040d8c9:	88 05 a6 18 01 00    	mov    %al,0x118a6(%rip)        # ffffffff8041f175 <idt_entries+0x135>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8cf:	66 44 89 1d ab 18 01 	mov    %r11w,0x118ab(%rip)        # ffffffff8041f182 <idt_entries+0x142>
ffffffff8040d8d6:	00 
ffffffff8040d8d7:	41 bb 08 00 00 00    	mov    $0x8,%r11d
  entry.type_attr = type_attr;
ffffffff8040d8dd:	88 05 a2 18 01 00    	mov    %al,0x118a2(%rip)        # ffffffff8041f185 <idt_entries+0x145>
ffffffff8040d8e3:	88 05 ac 18 01 00    	mov    %al,0x118ac(%rip)        # ffffffff8041f195 <idt_entries+0x155>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8e9:	66 89 35 b2 18 01 00 	mov    %si,0x118b2(%rip)        # ffffffff8041f1a2 <idt_entries+0x162>
ffffffff8040d8f0:	be 08 00 00 00       	mov    $0x8,%esi
  entry.type_attr = type_attr;
ffffffff8040d8f5:	88 05 aa 18 01 00    	mov    %al,0x118aa(%rip)        # ffffffff8041f1a5 <idt_entries+0x165>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d8fb:	66 89 3d b0 18 01 00 	mov    %di,0x118b0(%rip)        # ffffffff8041f1b2 <idt_entries+0x172>
ffffffff8040d902:	bf 08 00 00 00       	mov    $0x8,%edi
  entry.zero = 0;
ffffffff8040d907:	c7 05 5b 18 01 00 00 	movl   $0x0,0x1185b(%rip)        # ffffffff8041f16c <idt_entries+0x12c>
ffffffff8040d90e:	00 00 00 
  entry.ist = 0;
ffffffff8040d911:	c6 05 5c 18 01 00 00 	movb   $0x0,0x1185c(%rip)        # ffffffff8041f174 <idt_entries+0x134>
  entry.zero = 0;
ffffffff8040d918:	c7 05 5a 18 01 00 00 	movl   $0x0,0x1185a(%rip)        # ffffffff8041f17c <idt_entries+0x13c>
ffffffff8040d91f:	00 00 00 
  entry.ist = 0;
ffffffff8040d922:	c6 05 5b 18 01 00 00 	movb   $0x0,0x1185b(%rip)        # ffffffff8041f184 <idt_entries+0x144>
  entry.zero = 0;
ffffffff8040d929:	c7 05 59 18 01 00 00 	movl   $0x0,0x11859(%rip)        # ffffffff8041f18c <idt_entries+0x14c>
ffffffff8040d930:	00 00 00 
  entry.ist = 0;
ffffffff8040d933:	c6 05 5a 18 01 00 00 	movb   $0x0,0x1185a(%rip)        # ffffffff8041f194 <idt_entries+0x154>
  entry.zero = 0;
ffffffff8040d93a:	c7 05 58 18 01 00 00 	movl   $0x0,0x11858(%rip)        # ffffffff8041f19c <idt_entries+0x15c>
ffffffff8040d941:	00 00 00 
  entry.ist = 0;
ffffffff8040d944:	c6 05 59 18 01 00 00 	movb   $0x0,0x11859(%rip)        # ffffffff8041f1a4 <idt_entries+0x164>
  entry.zero = 0;
ffffffff8040d94b:	c7 05 57 18 01 00 00 	movl   $0x0,0x11857(%rip)        # ffffffff8041f1ac <idt_entries+0x16c>
ffffffff8040d952:	00 00 00 
  entry.ist = 0;
ffffffff8040d955:	c6 05 58 18 01 00 00 	movb   $0x0,0x11858(%rip)        # ffffffff8041f1b4 <idt_entries+0x174>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d95c:	89 15 56 18 01 00    	mov    %edx,0x11856(%rip)        # ffffffff8041f1b8 <idt_entries+0x178>
  auto ih_addr = has_error_code
ffffffff8040d962:	48 c7 c2 90 1d 41 80 	mov    $0xffffffff80411d90,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d969:	66 89 0d 46 18 01 00 	mov    %cx,0x11846(%rip)        # ffffffff8041f1b6 <idt_entries+0x176>
ffffffff8040d970:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d973:	66 89 15 46 18 01 00 	mov    %dx,0x11846(%rip)        # ffffffff8041f1c0 <idt_entries+0x180>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d97a:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d97e:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d982:	89 15 40 18 01 00    	mov    %edx,0x11840(%rip)        # ffffffff8041f1c8 <idt_entries+0x188>
  auto ih_addr = has_error_code
ffffffff8040d988:	48 c7 c2 c0 1d 41 80 	mov    $0xffffffff80411dc0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d98f:	66 89 0d 30 18 01 00 	mov    %cx,0x11830(%rip)        # ffffffff8041f1c6 <idt_entries+0x186>
ffffffff8040d996:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d999:	66 89 15 30 18 01 00 	mov    %dx,0x11830(%rip)        # ffffffff8041f1d0 <idt_entries+0x190>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9a0:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9a4:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9a8:	89 15 2a 18 01 00    	mov    %edx,0x1182a(%rip)        # ffffffff8041f1d8 <idt_entries+0x198>
  auto ih_addr = has_error_code
ffffffff8040d9ae:	48 c7 c2 f0 1d 41 80 	mov    $0xffffffff80411df0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9b5:	66 89 0d 1a 18 01 00 	mov    %cx,0x1181a(%rip)        # ffffffff8041f1d6 <idt_entries+0x196>
ffffffff8040d9bc:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d9bf:	66 89 15 1a 18 01 00 	mov    %dx,0x1181a(%rip)        # ffffffff8041f1e0 <idt_entries+0x1a0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9c6:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9ca:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9ce:	89 15 14 18 01 00    	mov    %edx,0x11814(%rip)        # ffffffff8041f1e8 <idt_entries+0x1a8>
  auto ih_addr = has_error_code
ffffffff8040d9d4:	48 c7 c2 20 1e 41 80 	mov    $0xffffffff80411e20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9db:	66 89 0d 04 18 01 00 	mov    %cx,0x11804(%rip)        # ffffffff8041f1e6 <idt_entries+0x1a6>
ffffffff8040d9e2:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040d9e5:	66 89 15 04 18 01 00 	mov    %dx,0x11804(%rip)        # ffffffff8041f1f0 <idt_entries+0x1b0>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9ec:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040d9f0:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040d9f4:	66 89 0d fb 17 01 00 	mov    %cx,0x117fb(%rip)        # ffffffff8041f1f6 <idt_entries+0x1b6>
  entry.selector = 0x8;  // Code segment.
ffffffff8040d9fb:	b9 08 00 00 00       	mov    $0x8,%ecx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040da00:	89 15 f2 17 01 00    	mov    %edx,0x117f2(%rip)        # ffffffff8041f1f8 <idt_entries+0x1b8>
  auto ih_addr = has_error_code
ffffffff8040da06:	48 c7 c2 50 1e 41 80 	mov    $0xffffffff80411e50,%rdx
  entry.type_attr = type_attr;
ffffffff8040da0d:	88 05 a2 17 01 00    	mov    %al,0x117a2(%rip)        # ffffffff8041f1b5 <idt_entries+0x175>
  entry.selector = 0x8;  // Code segment.
ffffffff8040da13:	66 44 89 05 a7 17 01 	mov    %r8w,0x117a7(%rip)        # ffffffff8041f1c2 <idt_entries+0x182>
ffffffff8040da1a:	00 
ffffffff8040da1b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  entry.type_attr = type_attr;
ffffffff8040da21:	88 05 9e 17 01 00    	mov    %al,0x1179e(%rip)        # ffffffff8041f1c5 <idt_entries+0x185>
ffffffff8040da27:	88 05 a8 17 01 00    	mov    %al,0x117a8(%rip)        # ffffffff8041f1d5 <idt_entries+0x195>
ffffffff8040da2d:	88 05 b2 17 01 00    	mov    %al,0x117b2(%rip)        # ffffffff8041f1e5 <idt_entries+0x1a5>
ffffffff8040da33:	88 05 bc 17 01 00    	mov    %al,0x117bc(%rip)        # ffffffff8041f1f5 <idt_entries+0x1b5>
  entry.zero = 0;
ffffffff8040da39:	c7 05 79 17 01 00 00 	movl   $0x0,0x11779(%rip)        # ffffffff8041f1bc <idt_entries+0x17c>
ffffffff8040da40:	00 00 00 
  entry.ist = 0;
ffffffff8040da43:	c6 05 7a 17 01 00 00 	movb   $0x0,0x1177a(%rip)        # ffffffff8041f1c4 <idt_entries+0x184>
  entry.zero = 0;
ffffffff8040da4a:	c7 05 78 17 01 00 00 	movl   $0x0,0x11778(%rip)        # ffffffff8041f1cc <idt_entries+0x18c>
ffffffff8040da51:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040da54:	66 44 89 0d 76 17 01 	mov    %r9w,0x11776(%rip)        # ffffffff8041f1d2 <idt_entries+0x192>
ffffffff8040da5b:	00 
  entry.ist = 0;
ffffffff8040da5c:	c6 05 71 17 01 00 00 	movb   $0x0,0x11771(%rip)        # ffffffff8041f1d4 <idt_entries+0x194>
  entry.zero = 0;
ffffffff8040da63:	c7 05 6f 17 01 00 00 	movl   $0x0,0x1176f(%rip)        # ffffffff8041f1dc <idt_entries+0x19c>
ffffffff8040da6a:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040da6d:	66 44 89 15 6d 17 01 	mov    %r10w,0x1176d(%rip)        # ffffffff8041f1e2 <idt_entries+0x1a2>
ffffffff8040da74:	00 
  entry.ist = 0;
ffffffff8040da75:	c6 05 68 17 01 00 00 	movb   $0x0,0x11768(%rip)        # ffffffff8041f1e4 <idt_entries+0x1a4>
  entry.zero = 0;
ffffffff8040da7c:	c7 05 66 17 01 00 00 	movl   $0x0,0x11766(%rip)        # ffffffff8041f1ec <idt_entries+0x1ac>
ffffffff8040da83:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040da86:	66 44 89 1d 64 17 01 	mov    %r11w,0x11764(%rip)        # ffffffff8041f1f2 <idt_entries+0x1b2>
ffffffff8040da8d:	00 
  entry.ist = 0;
ffffffff8040da8e:	c6 05 5f 17 01 00 00 	movb   $0x0,0x1175f(%rip)        # ffffffff8041f1f4 <idt_entries+0x1b4>
  entry.zero = 0;
ffffffff8040da95:	c7 05 5d 17 01 00 00 	movl   $0x0,0x1175d(%rip)        # ffffffff8041f1fc <idt_entries+0x1bc>
ffffffff8040da9c:	00 00 00 
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040da9f:	66 89 15 5a 17 01 00 	mov    %dx,0x1175a(%rip)        # ffffffff8041f200 <idt_entries+0x1c0>
  entry.selector = 0x8;  // Code segment.
ffffffff8040daa6:	66 89 0d 55 17 01 00 	mov    %cx,0x11755(%rip)        # ffffffff8041f202 <idt_entries+0x1c2>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040daad:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dab0:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dab4:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dab8:	89 15 4a 17 01 00    	mov    %edx,0x1174a(%rip)        # ffffffff8041f208 <idt_entries+0x1c8>
  auto ih_addr = has_error_code
ffffffff8040dabe:	48 c7 c2 80 1e 41 80 	mov    $0xffffffff80411e80,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dac5:	66 89 0d 3a 17 01 00 	mov    %cx,0x1173a(%rip)        # ffffffff8041f206 <idt_entries+0x1c6>
ffffffff8040dacc:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040dacf:	66 89 15 3a 17 01 00 	mov    %dx,0x1173a(%rip)        # ffffffff8041f210 <idt_entries+0x1d0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dad6:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dada:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dade:	89 15 34 17 01 00    	mov    %edx,0x11734(%rip)        # ffffffff8041f218 <idt_entries+0x1d8>
  auto ih_addr = has_error_code
ffffffff8040dae4:	48 c7 c2 b0 1e 41 80 	mov    $0xffffffff80411eb0,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040daeb:	66 89 0d 24 17 01 00 	mov    %cx,0x11724(%rip)        # ffffffff8041f216 <idt_entries+0x1d6>
ffffffff8040daf2:	48 89 d1             	mov    %rdx,%rcx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040daf5:	66 89 15 24 17 01 00 	mov    %dx,0x11724(%rip)        # ffffffff8041f220 <idt_entries+0x1e0>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dafc:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db00:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040db04:	89 15 1e 17 01 00    	mov    %edx,0x1171e(%rip)        # ffffffff8041f228 <idt_entries+0x1e8>
  auto ih_addr = has_error_code
ffffffff8040db0a:	48 c7 c2 e0 1e 41 80 	mov    $0xffffffff80411ee0,%rdx
  entry.type_attr = type_attr;
ffffffff8040db11:	88 05 ee 16 01 00    	mov    %al,0x116ee(%rip)        # ffffffff8041f205 <idt_entries+0x1c5>
ffffffff8040db17:	88 05 f8 16 01 00    	mov    %al,0x116f8(%rip)        # ffffffff8041f215 <idt_entries+0x1d5>
ffffffff8040db1d:	88 05 02 17 01 00    	mov    %al,0x11702(%rip)        # ffffffff8041f225 <idt_entries+0x1e5>
ffffffff8040db23:	88 05 0c 17 01 00    	mov    %al,0x1170c(%rip)        # ffffffff8041f235 <idt_entries+0x1f5>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db29:	48 89 d0             	mov    %rdx,%rax
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040db2c:	66 89 15 fd 16 01 00 	mov    %dx,0x116fd(%rip)        # ffffffff8041f230 <idt_entries+0x1f0>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db33:	48 c1 e8 10          	shr    $0x10,%rax
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040db37:	48 c1 ea 20          	shr    $0x20,%rdx
  entry.ist = 0;
ffffffff8040db3b:	c6 05 c2 16 01 00 00 	movb   $0x0,0x116c2(%rip)        # ffffffff8041f204 <idt_entries+0x1c4>
  entry.zero = 0;
ffffffff8040db42:	c7 05 c0 16 01 00 00 	movl   $0x0,0x116c0(%rip)        # ffffffff8041f20c <idt_entries+0x1cc>
ffffffff8040db49:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040db4c:	66 89 35 bf 16 01 00 	mov    %si,0x116bf(%rip)        # ffffffff8041f212 <idt_entries+0x1d2>
  entry.ist = 0;
ffffffff8040db53:	c6 05 ba 16 01 00 00 	movb   $0x0,0x116ba(%rip)        # ffffffff8041f214 <idt_entries+0x1d4>
  entry.zero = 0;
ffffffff8040db5a:	c7 05 b8 16 01 00 00 	movl   $0x0,0x116b8(%rip)        # ffffffff8041f21c <idt_entries+0x1dc>
ffffffff8040db61:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040db64:	66 89 3d b7 16 01 00 	mov    %di,0x116b7(%rip)        # ffffffff8041f222 <idt_entries+0x1e2>
  entry.ist = 0;
ffffffff8040db6b:	c6 05 b2 16 01 00 00 	movb   $0x0,0x116b2(%rip)        # ffffffff8041f224 <idt_entries+0x1e4>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db72:	66 89 0d ad 16 01 00 	mov    %cx,0x116ad(%rip)        # ffffffff8041f226 <idt_entries+0x1e6>
  entry.zero = 0;
ffffffff8040db79:	c7 05 a9 16 01 00 00 	movl   $0x0,0x116a9(%rip)        # ffffffff8041f22c <idt_entries+0x1ec>
ffffffff8040db80:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040db83:	66 44 89 05 a7 16 01 	mov    %r8w,0x116a7(%rip)        # ffffffff8041f232 <idt_entries+0x1f2>
ffffffff8040db8a:	00 
  entry.ist = 0;
ffffffff8040db8b:	c6 05 a2 16 01 00 00 	movb   $0x0,0x116a2(%rip)        # ffffffff8041f234 <idt_entries+0x1f4>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040db92:	66 89 05 9d 16 01 00 	mov    %ax,0x1169d(%rip)        # ffffffff8041f236 <idt_entries+0x1f6>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040db99:	89 15 99 16 01 00    	mov    %edx,0x11699(%rip)        # ffffffff8041f238 <idt_entries+0x1f8>
  entry.zero = 0;
ffffffff8040db9f:	c7 05 93 16 01 00 00 	movl   $0x0,0x11693(%rip)        # ffffffff8041f23c <idt_entries+0x1fc>
ffffffff8040dba6:	00 00 00 
  InstallIDTEntry<27>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<28>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<29>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<30>({INTERRUPT_GATE_32_BIT, 0, 1}, false);
  InstallIDTEntry<31>({INTERRUPT_GATE_32_BIT, 0, 1}, false);  // 0x19
}
ffffffff8040dba9:	c3                   	retq   
ffffffff8040dbaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8040dbb0 <_ZN6Kernel10IDTManager7LoadIDTEv>:

void IDTManager::LoadIDT() {
  // Load IDT to CPU.
  idt_ptr.limit = sizeof(IDTEntry) * 256 - 1;
  idt_ptr.base_addr = reinterpret_cast<uint64_t>(idt_entries);
ffffffff8040dbb0:	48 c7 05 67 14 01 00 	movq   $0xffffffff8041f040,0x11467(%rip)        # ffffffff8041f022 <idt_ptr+0x2>
ffffffff8040dbb7:	40 f0 41 80 
  idt_ptr.limit = sizeof(IDTEntry) * 256 - 1;
ffffffff8040dbbb:	b8 ff 0f 00 00       	mov    $0xfff,%eax
ffffffff8040dbc0:	66 89 05 59 14 01 00 	mov    %ax,0x11459(%rip)        # ffffffff8041f020 <idt_ptr>

  asm volatile("lidt %0" ::"m"(idt_ptr) :);
ffffffff8040dbc7:	0f 01 1d 52 14 01 00 	lidt   0x11452(%rip)        # ffffffff8041f020 <idt_ptr>
  asm volatile("sti");
ffffffff8040dbce:	fb                   	sti    
}
ffffffff8040dbcf:	c3                   	retq   

ffffffff8040dbd0 <_ZN6Kernel10IDTManager19InitializeIDTForIRQEv>:
void IDTManager::InitializeIDTForIRQ() {
ffffffff8040dbd0:	48 83 ec 08          	sub    $0x8,%rsp
  pic_timer.InstallPITimer();
ffffffff8040dbd4:	48 c7 c7 80 09 42 80 	mov    $0xffffffff80420980,%rdi
ffffffff8040dbdb:	e8 80 a4 00 00       	callq  ffffffff80418060 <_ZNK6Kernel7PITimer14InstallPITimerEv>
  entry.selector = 0x8;  // Code segment.
ffffffff8040dbe0:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff8040dbe5:	be 08 00 00 00       	mov    $0x8,%esi
  auto ih_addr = reinterpret_cast<uint64_t>(handler);
ffffffff8040dbea:	48 c7 c0 f0 d1 40 80 	mov    $0xffffffff8040d1f0,%rax

  InstallIDTEntry(PITimerHandler, {INTERRUPT_GATE_32_BIT, 0, 1}, 0x20);
ffffffff8040dbf1:	0f b6 15 08 d4 00 00 	movzbl 0xd408(%rip),%edx        # ffffffff8041b000 <_init+0x6f8>
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040dbf8:	66 89 05 41 16 01 00 	mov    %ax,0x11641(%rip)        # ffffffff8041f240 <idt_entries+0x200>
  entry.selector = 0x8;  // Code segment.
ffffffff8040dbff:	66 89 0d 3c 16 01 00 	mov    %cx,0x1163c(%rip)        # ffffffff8041f242 <idt_entries+0x202>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc06:	48 89 c1             	mov    %rax,%rcx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dc09:	48 c1 e8 20          	shr    $0x20,%rax
ffffffff8040dc0d:	89 05 35 16 01 00    	mov    %eax,0x11635(%rip)        # ffffffff8041f248 <idt_entries+0x208>
  auto ih_addr = reinterpret_cast<uint64_t>(handler);
ffffffff8040dc13:	48 c7 c0 20 d2 40 80 	mov    $0xffffffff8040d220,%rax
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc1a:	48 c1 e9 10          	shr    $0x10,%rcx
  entry.type_attr = type_attr;
ffffffff8040dc1e:	88 15 21 16 01 00    	mov    %dl,0x11621(%rip)        # ffffffff8041f245 <idt_entries+0x205>
ffffffff8040dc24:	88 15 2b 16 01 00    	mov    %dl,0x1162b(%rip)        # ffffffff8041f255 <idt_entries+0x215>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc2a:	48 89 c2             	mov    %rax,%rdx
  entry.offset_1 = ih_addr & 0xFFFF;
ffffffff8040dc2d:	66 89 05 1c 16 01 00 	mov    %ax,0x1161c(%rip)        # ffffffff8041f250 <idt_entries+0x210>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc34:	48 c1 ea 10          	shr    $0x10,%rdx
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dc38:	48 c1 e8 20          	shr    $0x20,%rax
  entry.ist = 0;
ffffffff8040dc3c:	c6 05 01 16 01 00 00 	movb   $0x0,0x11601(%rip)        # ffffffff8041f244 <idt_entries+0x204>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc43:	66 89 0d fc 15 01 00 	mov    %cx,0x115fc(%rip)        # ffffffff8041f246 <idt_entries+0x206>
  entry.zero = 0;
ffffffff8040dc4a:	c7 05 f8 15 01 00 00 	movl   $0x0,0x115f8(%rip)        # ffffffff8041f24c <idt_entries+0x20c>
ffffffff8040dc51:	00 00 00 
  entry.selector = 0x8;  // Code segment.
ffffffff8040dc54:	66 89 35 f7 15 01 00 	mov    %si,0x115f7(%rip)        # ffffffff8041f252 <idt_entries+0x212>
  entry.ist = 0;
ffffffff8040dc5b:	c6 05 f2 15 01 00 00 	movb   $0x0,0x115f2(%rip)        # ffffffff8041f254 <idt_entries+0x214>
  entry.offset_2 = (ih_addr >> 16) & 0xFFFF;
ffffffff8040dc62:	66 89 15 ed 15 01 00 	mov    %dx,0x115ed(%rip)        # ffffffff8041f256 <idt_entries+0x216>
  entry.offset_3 = (ih_addr >> 32) & 0xFFFFFFFF;
ffffffff8040dc69:	89 05 e9 15 01 00    	mov    %eax,0x115e9(%rip)        # ffffffff8041f258 <idt_entries+0x218>
  entry.zero = 0;
ffffffff8040dc6f:	c7 05 e3 15 01 00 00 	movl   $0x0,0x115e3(%rip)        # ffffffff8041f25c <idt_entries+0x21c>
ffffffff8040dc76:	00 00 00 
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040dc79:	e4 21                	in     $0x21,%al
ffffffff8040dc7b:	89 c1                	mov    %eax,%ecx
ffffffff8040dc7d:	e4 a1                	in     $0xa1,%al
ffffffff8040dc7f:	89 c2                	mov    %eax,%edx
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040dc81:	b8 11 00 00 00       	mov    $0x11,%eax
ffffffff8040dc86:	e6 20                	out    %al,$0x20
ffffffff8040dc88:	e6 a0                	out    %al,$0xa0
ffffffff8040dc8a:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8040dc8f:	e6 21                	out    %al,$0x21
ffffffff8040dc91:	b8 28 00 00 00       	mov    $0x28,%eax
ffffffff8040dc96:	e6 a1                	out    %al,$0xa1
ffffffff8040dc98:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8040dc9d:	e6 21                	out    %al,$0x21
ffffffff8040dc9f:	b8 02 00 00 00       	mov    $0x2,%eax
ffffffff8040dca4:	e6 a1                	out    %al,$0xa1
ffffffff8040dca6:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8040dcab:	e6 21                	out    %al,$0x21
ffffffff8040dcad:	e6 a1                	out    %al,$0xa1
ffffffff8040dcaf:	89 c8                	mov    %ecx,%eax
ffffffff8040dcb1:	e6 21                	out    %al,$0x21
ffffffff8040dcb3:	89 d0                	mov    %edx,%eax
ffffffff8040dcb5:	e6 a1                	out    %al,$0xa1
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040dcb7:	e4 21                	in     $0x21,%al
  value = inb(port) & ~(1 << irq_line);
ffffffff8040dcb9:	83 e0 fe             	and    $0xfffffffe,%eax
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040dcbc:	e6 21                	out    %al,$0x21
  asm volatile("inb %1, %0" : "=a"(ret) : "Nd"(port):);
ffffffff8040dcbe:	e4 21                	in     $0x21,%al
ffffffff8040dcc0:	83 e0 fd             	and    $0xfffffffd,%eax
  asm volatile("outb %0, %1" ::"a"(val), "Nd"(port):);
ffffffff8040dcc3:	e6 21                	out    %al,$0x21
  IRQClearMask(0);
  IRQClearMask(1);

  // outb(PIC_MASTER_DATA, 0xFD);
  // outb(PIC_SLAVE_DATA, 0xFF);
}
ffffffff8040dcc5:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8040dcc9:	c3                   	retq   
ffffffff8040dcca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>:
void PrintCPUInterruptFrame(CPUInterruptHandlerArgs* args, size_t int_num) {
ffffffff8040dcd0:	41 57                	push   %r15
ffffffff8040dcd2:	41 56                	push   %r14
ffffffff8040dcd4:	41 55                	push   %r13
ffffffff8040dcd6:	41 54                	push   %r12
ffffffff8040dcd8:	55                   	push   %rbp
ffffffff8040dcd9:	53                   	push   %rbx
ffffffff8040dcda:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff8040dcde:	48 89 3c 24          	mov    %rdi,(%rsp)
ffffffff8040dce2:	48 c7 c7 00 b8 41 80 	mov    $0xffffffff8041b800,%rdi
ffffffff8040dce9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
ffffffff8040dced:	e8 ce f4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040dcf2:	85 c0                	test   %eax,%eax
ffffffff8040dcf4:	0f 84 36 3d 00 00    	je     ffffffff80411a30 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d60>
ffffffff8040dcfa:	44 8b 25 5f 03 01 00 	mov    0x1035f(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040dd01:	44 8b 15 5c 03 01 00 	mov    0x1035c(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040dd08:	49 c7 c3 00 b8 41 80 	mov    $0xffffffff8041b800,%r11
ffffffff8040dd0f:	44 8b 0d 56 03 01 00 	mov    0x10356(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040dd16:	8b 3d 4c 03 01 00    	mov    0x1034c(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040dd1c:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040dd21:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040dd25:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040dd29:	4d 89 ef             	mov    %r13,%r15
ffffffff8040dd2c:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040dd30:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040dd37:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040dd3c:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040dd40:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
ffffffff8040dd45:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040dd48:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040dd4c:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040dd50:	4c 01 ea             	add    %r13,%rdx
ffffffff8040dd53:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040dd5a:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040dd5f:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040dd66:	80 
ffffffff8040dd67:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040dd6c:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040dd70:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040dd73:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040dd76:	39 c1                	cmp    %eax,%ecx
ffffffff8040dd78:	0f 47 c8             	cmova  %eax,%ecx
    size_ -= min(n, size_);
  }

  constexpr bool empty() const { return size_ == 0; }

  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040dd7b:	39 c8                	cmp    %ecx,%eax
ffffffff8040dd7d:	89 ca                	mov    %ecx,%edx
ffffffff8040dd7f:	0f 46 d0             	cmovbe %eax,%edx
      noexcept {
    size_t i = pos;
    for (; i < min(size_, pos + count); i++) {
ffffffff8040dd82:	85 d2                	test   %edx,%edx
ffffffff8040dd84:	0f 84 36 25 00 00    	je     ffffffff804102c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x25f0>
ffffffff8040dd8a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040dd8d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040dd90:	eb 16                	jmp    ffffffff8040dda8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd8>
ffffffff8040dd92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040dd98:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040dd9c:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040dd9f:	0f 84 1b 25 00 00    	je     ffffffff804102c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x25f0>
ffffffff8040dda5:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040dda8:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040ddad:	44 89 c6             	mov    %r8d,%esi
ffffffff8040ddb0:	75 e6                	jne    ffffffff8040dd98 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xc8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040ddb2:	39 f0                	cmp    %esi,%eax
ffffffff8040ddb4:	89 f2                	mov    %esi,%edx
ffffffff8040ddb6:	0f 46 d0             	cmovbe %eax,%edx
    }
  }

  // Print the string at single line.
  void PrintStringLineAtCursor(string_view s, VGAColor color) {
    if (current_row_ == num_rows_) {
ffffffff8040ddb9:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040ddbc:	0f 84 5e 24 00 00    	je     ffffffff80410220 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2550>
      ScrollTextBufferUp();
      current_row_--;
    }

    size_t i;
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040ddc2:	44 01 ca             	add    %r9d,%edx
ffffffff8040ddc5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040ddc8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040ddcc:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040ddcf:	0f 83 e0 24 00 00    	jae    ffffffff804102b5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x25e5>
ffffffff8040ddd5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040ddd8:	f7 d3                	not    %ebx
ffffffff8040ddda:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040dddd:	89 fb                	mov    %edi,%ebx
ffffffff8040dddf:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040dde3:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040dde7:	49 01 d9             	add    %rbx,%r9
ffffffff8040ddea:	31 db                	xor    %ebx,%ebx
ffffffff8040ddec:	4d 01 c9             	add    %r9,%r9
ffffffff8040ddef:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040ddf0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040ddf6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040ddfc:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040de03:	41 80 
ffffffff8040de05:	49 89 de             	mov    %rbx,%r14
ffffffff8040de08:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040de0c:	49 39 ee             	cmp    %rbp,%r14
ffffffff8040de0f:	75 df                	jne    ffffffff8040ddf0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x120>
    }
    current_col_ = i;

    if (current_col_ == num_cols_) {
ffffffff8040de11:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040de14:	0f 84 c6 23 00 00    	je     ffffffff804101e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2510>
    current_col_ = i;
ffffffff8040de1a:	89 15 4c 02 01 00    	mov    %edx,0x1024c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040de20:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040de24:	0f 84 d5 23 00 00    	je     ffffffff804101ff <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x252f>
ffffffff8040de2a:	85 d2                	test   %edx,%edx
ffffffff8040de2c:	74 09                	je     ffffffff8040de37 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x167>
ffffffff8040de2e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040de31:	0f 86 f9 24 00 00    	jbe    ffffffff80410330 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2660>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040de37:	83 c6 01             	add    $0x1,%esi
ffffffff8040de3a:	39 ce                	cmp    %ecx,%esi
ffffffff8040de3c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040de3f:	89 ce                	mov    %ecx,%esi
    size_ -= min(n, size_);
ffffffff8040de41:	41 89 d1             	mov    %edx,%r9d
    str_ += n;
ffffffff8040de44:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040de47:	39 c1                	cmp    %eax,%ecx
ffffffff8040de49:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040de4c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040de4e:	85 c0                	test   %eax,%eax
ffffffff8040de50:	0f 85 1a ff ff ff    	jne    ffffffff8040dd70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040de56:	85 ff                	test   %edi,%edi
ffffffff8040de58:	74 67                	je     ffffffff8040dec1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1f1>
ffffffff8040de5a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040de5d:	44 8b 1d 00 02 01 00 	mov    0x10200(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040de64:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040de6b:	31 f6                	xor    %esi,%esi
ffffffff8040de6d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040de71:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040de75:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040de7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040de80:	49 89 c8             	mov    %rcx,%r8
ffffffff8040de83:	89 f2                	mov    %esi,%edx
ffffffff8040de85:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040de89:	45 85 db             	test   %r11d,%r11d
ffffffff8040de8c:	0f 84 5e 24 00 00    	je     ffffffff804102f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2620>
ffffffff8040de92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040de98:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040de9c:	89 d6                	mov    %edx,%esi
ffffffff8040de9e:	83 c2 01             	add    $0x1,%edx
ffffffff8040dea1:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040dea5:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040deac:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040dead:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040deb0:	75 e6                	jne    ffffffff8040de98 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1c8>
ffffffff8040deb2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040deb9:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040debc:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040debf:	75 bf                	jne    ffffffff8040de80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b0>
    if (current_col_ != 0) {
ffffffff8040dec1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040dec4:	74 3a                	je     ffffffff8040df00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x230>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040dec6:	8b 0d 98 01 01 00    	mov    0x10198(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040decc:	85 c9                	test   %ecx,%ecx
ffffffff8040dece:	74 30                	je     ffffffff8040df00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x230>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040ded0:	89 fa                	mov    %edi,%edx
ffffffff8040ded2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040ded6:	0f af d1             	imul   %ecx,%edx
ffffffff8040ded9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040dedd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040dee3:	01 d1                	add    %edx,%ecx
ffffffff8040dee5:	0f 1f 00             	nopl   (%rax)
ffffffff8040dee8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040deeb:	89 d6                	mov    %edx,%esi
ffffffff8040deed:	83 c2 01             	add    $0x1,%edx
ffffffff8040def0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040def4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040defb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040defc:	39 ca                	cmp    %ecx,%edx
ffffffff8040defe:	75 e8                	jne    ffffffff8040dee8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x218>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040df00:	48 c7 c7 26 b8 41 80 	mov    $0xffffffff8041b826,%rdi
ffffffff8040df07:	e8 b4 f2 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040df0c:	85 c0                	test   %eax,%eax
ffffffff8040df0e:	0f 84 34 3b 00 00    	je     ffffffff80411a48 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d78>
ffffffff8040df14:	44 8b 25 45 01 01 00 	mov    0x10145(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040df1b:	44 8b 15 42 01 01 00 	mov    0x10142(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040df22:	49 c7 c3 26 b8 41 80 	mov    $0xffffffff8041b826,%r11
ffffffff8040df29:	44 8b 0d 3c 01 01 00 	mov    0x1013c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040df30:	8b 3d 32 01 01 00    	mov    0x10132(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040df36:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040df3b:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040df3f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040df43:	4d 89 ef             	mov    %r13,%r15
ffffffff8040df46:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040df4a:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040df51:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040df56:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040df5a:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
ffffffff8040df5f:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040df62:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040df66:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040df6a:	4c 01 ea             	add    %r13,%rdx
ffffffff8040df6d:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040df74:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040df79:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040df80:	80 
ffffffff8040df81:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040df86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040df8d:	00 00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040df90:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040df93:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040df96:	39 c1                	cmp    %eax,%ecx
ffffffff8040df98:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040df9b:	39 c8                	cmp    %ecx,%eax
ffffffff8040df9d:	89 ca                	mov    %ecx,%edx
ffffffff8040df9f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040dfa2:	85 d2                	test   %edx,%edx
ffffffff8040dfa4:	0f 84 16 22 00 00    	je     ffffffff804101c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x24f0>
ffffffff8040dfaa:	83 ea 01             	sub    $0x1,%edx
ffffffff8040dfad:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040dfb0:	eb 16                	jmp    ffffffff8040dfc8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f8>
ffffffff8040dfb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040dfb8:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040dfbc:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040dfbf:	0f 84 fb 21 00 00    	je     ffffffff804101c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x24f0>
ffffffff8040dfc5:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040dfc8:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040dfcd:	44 89 c6             	mov    %r8d,%esi
ffffffff8040dfd0:	75 e6                	jne    ffffffff8040dfb8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2e8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040dfd2:	39 f0                	cmp    %esi,%eax
ffffffff8040dfd4:	89 f2                	mov    %esi,%edx
ffffffff8040dfd6:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040dfd9:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040dfdc:	0f 84 3e 21 00 00    	je     ffffffff80410120 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2450>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040dfe2:	44 01 ca             	add    %r9d,%edx
ffffffff8040dfe5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040dfe8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040dfec:	44 39 ca             	cmp    %r9d,%edx
ffffffff8040dfef:	0f 86 c0 21 00 00    	jbe    ffffffff804101b5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x24e5>
ffffffff8040dff5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040dff8:	f7 d3                	not    %ebx
ffffffff8040dffa:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040dffd:	89 fb                	mov    %edi,%ebx
ffffffff8040dfff:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040e003:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040e007:	49 01 d9             	add    %rbx,%r9
ffffffff8040e00a:	31 db                	xor    %ebx,%ebx
ffffffff8040e00c:	4d 01 c9             	add    %r9,%r9
ffffffff8040e00f:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e010:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040e016:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040e01c:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040e023:	41 80 
ffffffff8040e025:	49 89 de             	mov    %rbx,%r14
ffffffff8040e028:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e02c:	49 39 ee             	cmp    %rbp,%r14
ffffffff8040e02f:	75 df                	jne    ffffffff8040e010 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x340>
    if (current_col_ == num_cols_) {
ffffffff8040e031:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e034:	0f 84 a6 20 00 00    	je     ffffffff804100e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2410>
    current_col_ = i;
ffffffff8040e03a:	89 15 2c 00 01 00    	mov    %edx,0x1002c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040e040:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040e044:	0f 84 b5 20 00 00    	je     ffffffff804100ff <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x242f>
ffffffff8040e04a:	85 d2                	test   %edx,%edx
ffffffff8040e04c:	74 09                	je     ffffffff8040e057 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x387>
ffffffff8040e04e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040e051:	0f 86 41 23 00 00    	jbe    ffffffff80410398 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x26c8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e057:	83 c6 01             	add    $0x1,%esi
ffffffff8040e05a:	41 89 d1             	mov    %edx,%r9d
ffffffff8040e05d:	39 ce                	cmp    %ecx,%esi
ffffffff8040e05f:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040e062:	89 ce                	mov    %ecx,%esi
ffffffff8040e064:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040e067:	39 c1                	cmp    %eax,%ecx
ffffffff8040e069:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040e06c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040e06e:	85 c0                	test   %eax,%eax
ffffffff8040e070:	0f 85 1a ff ff ff    	jne    ffffffff8040df90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e076:	85 ff                	test   %edi,%edi
ffffffff8040e078:	74 67                	je     ffffffff8040e0e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x411>
ffffffff8040e07a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e07d:	44 8b 1d e0 ff 00 00 	mov    0xffe0(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e084:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040e08b:	31 f6                	xor    %esi,%esi
ffffffff8040e08d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040e091:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e095:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040e09b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040e0a0:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e0a3:	89 f2                	mov    %esi,%edx
ffffffff8040e0a5:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040e0a9:	45 85 db             	test   %r11d,%r11d
ffffffff8040e0ac:	0f 84 5e 22 00 00    	je     ffffffff80410310 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2640>
ffffffff8040e0b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e0b8:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040e0bc:	89 d6                	mov    %edx,%esi
ffffffff8040e0be:	83 c2 01             	add    $0x1,%edx
ffffffff8040e0c1:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040e0c5:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040e0cc:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e0cd:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e0d0:	75 e6                	jne    ffffffff8040e0b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3e8>
ffffffff8040e0d2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040e0d9:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e0dc:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040e0df:	75 bf                	jne    ffffffff8040e0a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d0>
    if (current_col_ != 0) {
ffffffff8040e0e1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040e0e4:	74 3a                	je     ffffffff8040e120 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x450>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e0e6:	8b 0d 78 ff 00 00    	mov    0xff78(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e0ec:	85 c9                	test   %ecx,%ecx
ffffffff8040e0ee:	74 30                	je     ffffffff8040e120 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x450>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e0f0:	89 fa                	mov    %edi,%edx
ffffffff8040e0f2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040e0f6:	0f af d1             	imul   %ecx,%edx
ffffffff8040e0f9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e0fd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040e103:	01 d1                	add    %edx,%ecx
ffffffff8040e105:	0f 1f 00             	nopl   (%rax)
ffffffff8040e108:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040e10b:	89 d6                	mov    %edx,%esi
ffffffff8040e10d:	83 c2 01             	add    $0x1,%edx
ffffffff8040e110:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e114:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040e11b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e11c:	39 ca                	cmp    %ecx,%edx
ffffffff8040e11e:	75 e8                	jne    ffffffff8040e108 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x438>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e120:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff8040e124:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040e129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  }

  for (size_t i = 0; i < size; i++) {
    num_len++;

    buffer[i] = num % base;
ffffffff8040e130:	89 c6                	mov    %eax,%esi
    num_len++;
ffffffff8040e132:	89 d1                	mov    %edx,%ecx
    buffer[i] = num % base;
ffffffff8040e134:	83 e6 0f             	and    $0xf,%esi
ffffffff8040e137:	40 88 74 14 4b       	mov    %sil,0x4b(%rsp,%rdx,1)
ffffffff8040e13c:	89 c6                	mov    %eax,%esi
    num /= base;
ffffffff8040e13e:	c1 e8 04             	shr    $0x4,%eax
    if (num == 0) {
ffffffff8040e141:	83 fe 0f             	cmp    $0xf,%esi
ffffffff8040e144:	76 0f                	jbe    ffffffff8040e155 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x485>
ffffffff8040e146:	48 83 c2 01          	add    $0x1,%rdx
  for (size_t i = 0; i < size; i++) {
ffffffff8040e14a:	48 83 fa 15          	cmp    $0x15,%rdx
ffffffff8040e14e:	75 e0                	jne    ffffffff8040e130 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x460>
ffffffff8040e150:	b9 14 00 00 00       	mov    $0x14,%ecx
      break;
    }
  }

  if (num != 0) {
ffffffff8040e155:	85 c0                	test   %eax,%eax
ffffffff8040e157:	0f 85 83 36 00 00    	jne    ffffffff804117e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3b10>
ffffffff8040e15d:	4c 8d 7c 24 38       	lea    0x38(%rsp),%r15
    str[offset++] = '-';
  }
  if (base == 8) {
    str[offset++] = '0';
  } else if (base == 16) {
    str[offset++] = '0';
ffffffff8040e162:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040e168:	89 ce                	mov    %ecx,%esi
ffffffff8040e16a:	66 44 89 64 24 38    	mov    %r12w,0x38(%rsp)
ffffffff8040e170:	4c 01 fe             	add    %r15,%rsi
ffffffff8040e173:	4c 89 fa             	mov    %r15,%rdx
    str[offset++] = '0';
    str[offset++] = 'b';
  }

  for (size_t i = 0; i < num_len; i++) {
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040e176:	42 8d 7c 39 ff       	lea    -0x1(%rcx,%r15,1),%edi
ffffffff8040e17b:	eb 12                	jmp    ffffffff8040e18f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x4bf>
ffffffff8040e17d:	0f 1f 00             	nopl   (%rax)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040e180:	83 c0 37             	add    $0x37,%eax
ffffffff8040e183:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e187:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e18a:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040e18d:	74 1c                	je     ffffffff8040e1ab <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x4db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040e18f:	89 f8                	mov    %edi,%eax
ffffffff8040e191:	29 d0                	sub    %edx,%eax
ffffffff8040e193:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff8040e198:	3c 09                	cmp    $0x9,%al
ffffffff8040e19a:	7f e4                	jg     ffffffff8040e180 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x4b0>
    } else {
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040e19c:	83 c0 30             	add    $0x30,%eax
ffffffff8040e19f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e1a3:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e1a6:	48 39 f2             	cmp    %rsi,%rdx
ffffffff8040e1a9:	75 e4                	jne    ffffffff8040e18f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x4bf>
    }
  }
  str[num_len + offset] = 0;
ffffffff8040e1ab:	8d 41 02             	lea    0x2(%rcx),%eax
ffffffff8040e1ae:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e1b3:	4c 89 ff             	mov    %r15,%rdi
ffffffff8040e1b6:	e8 05 f0 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(temp);
ffffffff8040e1bb:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040e1c0:	4c 89 fe             	mov    %r15,%rsi
ffffffff8040e1c3:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040e1ca:	89 c2                	mov    %eax,%edx
ffffffff8040e1cc:	e8 bf c1 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
  if (int_num < sizeof(kCPUExceptionErrorMessages) /
ffffffff8040e1d1:	83 7c 24 0c 14       	cmpl   $0x14,0xc(%rsp)
ffffffff8040e1d6:	0f 86 f4 36 00 00    	jbe    ffffffff804118d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3c00>
ffffffff8040e1dc:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040e1e3:	e8 d8 ef ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040e1e8:	85 c0                	test   %eax,%eax
ffffffff8040e1ea:	0f 84 6a 37 00 00    	je     ffffffff8041195a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3c8a>
ffffffff8040e1f0:	44 8b 25 69 fe 00 00 	mov    0xfe69(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e1f7:	44 8b 15 66 fe 00 00 	mov    0xfe66(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e1fe:	49 c7 c3 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r11
ffffffff8040e205:	44 8b 0d 60 fe 00 00 	mov    0xfe60(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040e20c:	8b 3d 56 fe 00 00    	mov    0xfe56(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e212:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040e217:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040e21b:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e21f:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040e224:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040e228:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040e22f:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040e234:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e238:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040e23d:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e240:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e244:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e248:	4c 01 ea             	add    %r13,%rdx
ffffffff8040e24b:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040e252:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040e257:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040e25e:	80 
ffffffff8040e25f:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040e264:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e268:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040e26b:	89 c2                	mov    %eax,%edx
ffffffff8040e26d:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040e270:	39 c1                	cmp    %eax,%ecx
ffffffff8040e272:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e275:	39 c1                	cmp    %eax,%ecx
ffffffff8040e277:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e27a:	85 d2                	test   %edx,%edx
ffffffff8040e27c:	0f 84 4e 23 00 00    	je     ffffffff804105d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2900>
ffffffff8040e282:	83 ea 01             	sub    $0x1,%edx
ffffffff8040e285:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040e288:	eb 16                	jmp    ffffffff8040e2a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x5d0>
ffffffff8040e28a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040e290:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040e294:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040e297:	0f 84 33 23 00 00    	je     ffffffff804105d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2900>
ffffffff8040e29d:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040e2a0:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040e2a5:	44 89 c6             	mov    %r8d,%esi
ffffffff8040e2a8:	75 e6                	jne    ffffffff8040e290 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x5c0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e2aa:	39 f0                	cmp    %esi,%eax
ffffffff8040e2ac:	89 f2                	mov    %esi,%edx
ffffffff8040e2ae:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040e2b1:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040e2b4:	0f 84 76 22 00 00    	je     ffffffff80410530 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2860>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e2ba:	44 01 ca             	add    %r9d,%edx
ffffffff8040e2bd:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e2c0:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040e2c4:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040e2c7:	0f 83 f8 22 00 00    	jae    ffffffff804105c5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x28f5>
ffffffff8040e2cd:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040e2d0:	f7 d3                	not    %ebx
ffffffff8040e2d2:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040e2d5:	89 fb                	mov    %edi,%ebx
ffffffff8040e2d7:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040e2db:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040e2df:	49 01 d9             	add    %rbx,%r9
ffffffff8040e2e2:	31 db                	xor    %ebx,%ebx
ffffffff8040e2e4:	4d 01 c9             	add    %r9,%r9
ffffffff8040e2e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040e2ee:	00 00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e2f0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040e2f6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040e2fc:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040e303:	41 80 
ffffffff8040e305:	49 89 de             	mov    %rbx,%r14
ffffffff8040e308:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e30c:	49 39 ee             	cmp    %rbp,%r14
ffffffff8040e30f:	75 df                	jne    ffffffff8040e2f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x620>
    if (current_col_ == num_cols_) {
ffffffff8040e311:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040e314:	0f 84 d6 21 00 00    	je     ffffffff804104f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2820>
    current_col_ = i;
ffffffff8040e31a:	89 15 4c fd 00 00    	mov    %edx,0xfd4c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040e320:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040e324:	0f 84 e5 21 00 00    	je     ffffffff8041050f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x283f>
ffffffff8040e32a:	85 d2                	test   %edx,%edx
ffffffff8040e32c:	74 09                	je     ffffffff8040e337 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x667>
ffffffff8040e32e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040e331:	0f 86 09 23 00 00    	jbe    ffffffff80410640 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2970>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e337:	83 c6 01             	add    $0x1,%esi
ffffffff8040e33a:	39 ce                	cmp    %ecx,%esi
ffffffff8040e33c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040e33f:	89 ce                	mov    %ecx,%esi
ffffffff8040e341:	41 89 d1             	mov    %edx,%r9d
ffffffff8040e344:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040e347:	39 c8                	cmp    %ecx,%eax
ffffffff8040e349:	0f 46 c8             	cmovbe %eax,%ecx
ffffffff8040e34c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040e34e:	85 c0                	test   %eax,%eax
ffffffff8040e350:	0f 85 12 ff ff ff    	jne    ffffffff8040e268 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x598>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e356:	85 ff                	test   %edi,%edi
ffffffff8040e358:	74 67                	je     ffffffff8040e3c1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x6f1>
ffffffff8040e35a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e35d:	44 8b 1d 00 fd 00 00 	mov    0xfd00(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e364:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040e36b:	31 f6                	xor    %esi,%esi
ffffffff8040e36d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040e371:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e375:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040e37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040e380:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e383:	89 f2                	mov    %esi,%edx
ffffffff8040e385:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040e389:	45 85 db             	test   %r11d,%r11d
ffffffff8040e38c:	0f 84 6e 22 00 00    	je     ffffffff80410600 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2930>
ffffffff8040e392:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e398:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040e39c:	89 d6                	mov    %edx,%esi
ffffffff8040e39e:	83 c2 01             	add    $0x1,%edx
ffffffff8040e3a1:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040e3a5:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040e3ac:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e3ad:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e3b0:	75 e6                	jne    ffffffff8040e398 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x6c8>
ffffffff8040e3b2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040e3b9:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e3bc:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040e3bf:	75 bf                	jne    ffffffff8040e380 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x6b0>
    if (current_col_ != 0) {
ffffffff8040e3c1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040e3c4:	74 3a                	je     ffffffff8040e400 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x730>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e3c6:	8b 0d 98 fc 00 00    	mov    0xfc98(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e3cc:	85 c9                	test   %ecx,%ecx
ffffffff8040e3ce:	74 30                	je     ffffffff8040e400 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x730>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e3d0:	89 ca                	mov    %ecx,%edx
ffffffff8040e3d2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040e3d6:	0f af d7             	imul   %edi,%edx
ffffffff8040e3d9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e3dd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040e3e3:	01 d1                	add    %edx,%ecx
ffffffff8040e3e5:	0f 1f 00             	nopl   (%rax)
ffffffff8040e3e8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040e3eb:	89 d6                	mov    %edx,%esi
ffffffff8040e3ed:	83 c2 01             	add    $0x1,%edx
ffffffff8040e3f0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e3f4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040e3fb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e3fc:	39 d1                	cmp    %edx,%ecx
ffffffff8040e3fe:	75 e8                	jne    ffffffff8040e3e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x718>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e400:	48 c7 c7 3a b8 41 80 	mov    $0xffffffff8041b83a,%rdi
ffffffff8040e407:	e8 b4 ed ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040e40c:	85 c0                	test   %eax,%eax
ffffffff8040e40e:	0f 84 d4 35 00 00    	je     ffffffff804119e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d18>
ffffffff8040e414:	44 8b 25 45 fc 00 00 	mov    0xfc45(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e41b:	44 8b 15 42 fc 00 00 	mov    0xfc42(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e422:	49 c7 c3 3a b8 41 80 	mov    $0xffffffff8041b83a,%r11
ffffffff8040e429:	44 8b 0d 3c fc 00 00 	mov    0xfc3c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040e430:	8b 35 32 fc 00 00    	mov    0xfc32(%rip),%esi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e436:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040e43b:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040e43f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e443:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040e448:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040e44c:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff8040e453:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040e458:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e45c:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff8040e461:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e464:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e468:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e46c:	4c 01 ea             	add    %r13,%rdx
ffffffff8040e46f:	48 8d b9 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rdi
ffffffff8040e476:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8040e47b:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff8040e482:	80 
ffffffff8040e483:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
ffffffff8040e488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040e48f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e490:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040e493:	89 c2                	mov    %eax,%edx
ffffffff8040e495:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040e498:	39 c1                	cmp    %eax,%ecx
ffffffff8040e49a:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e49d:	39 c1                	cmp    %eax,%ecx
ffffffff8040e49f:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e4a2:	85 d2                	test   %edx,%edx
ffffffff8040e4a4:	0f 84 26 20 00 00    	je     ffffffff804104d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2800>
ffffffff8040e4aa:	83 ea 01             	sub    $0x1,%edx
ffffffff8040e4ad:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040e4b0:	eb 16                	jmp    ffffffff8040e4c8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x7f8>
ffffffff8040e4b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040e4b8:	49 8d 78 01          	lea    0x1(%r8),%rdi
ffffffff8040e4bc:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040e4bf:	0f 84 0b 20 00 00    	je     ffffffff804104d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2800>
ffffffff8040e4c5:	49 89 f8             	mov    %rdi,%r8
      if (str_[i] == c) {
ffffffff8040e4c8:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040e4cd:	44 89 c7             	mov    %r8d,%edi
ffffffff8040e4d0:	75 e6                	jne    ffffffff8040e4b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x7e8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e4d2:	39 f8                	cmp    %edi,%eax
ffffffff8040e4d4:	89 fa                	mov    %edi,%edx
ffffffff8040e4d6:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040e4d9:	44 39 e6             	cmp    %r12d,%esi
ffffffff8040e4dc:	0f 84 4e 1f 00 00    	je     ffffffff80410430 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2760>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e4e2:	44 01 ca             	add    %r9d,%edx
ffffffff8040e4e5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e4e8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040e4ec:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040e4ef:	0f 83 d0 1f 00 00    	jae    ffffffff804104c5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x27f5>
ffffffff8040e4f5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040e4f8:	f7 d3                	not    %ebx
ffffffff8040e4fa:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040e4fd:	89 f3                	mov    %esi,%ebx
ffffffff8040e4ff:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040e503:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040e507:	49 01 d9             	add    %rbx,%r9
ffffffff8040e50a:	31 db                	xor    %ebx,%ebx
ffffffff8040e50c:	4d 01 c9             	add    %r9,%r9
ffffffff8040e50f:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e510:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040e516:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040e51c:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040e523:	41 80 
ffffffff8040e525:	49 89 de             	mov    %rbx,%r14
ffffffff8040e528:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e52c:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8040e52f:	75 df                	jne    ffffffff8040e510 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x840>
    if (current_col_ == num_cols_) {
ffffffff8040e531:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040e534:	0f 84 c6 1e 00 00    	je     ffffffff80410400 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2730>
    current_col_ = i;
ffffffff8040e53a:	89 15 2c fb 00 00    	mov    %edx,0xfb2c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040e540:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040e544:	0f 84 d5 1e 00 00    	je     ffffffff8041041f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x274f>
ffffffff8040e54a:	85 d2                	test   %edx,%edx
ffffffff8040e54c:	74 09                	je     ffffffff8040e557 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x887>
ffffffff8040e54e:	83 fe 18             	cmp    $0x18,%esi
ffffffff8040e551:	0f 86 51 21 00 00    	jbe    ffffffff804106a8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x29d8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e557:	83 c7 01             	add    $0x1,%edi
ffffffff8040e55a:	39 cf                	cmp    %ecx,%edi
ffffffff8040e55c:	0f 46 cf             	cmovbe %edi,%ecx
    str_ += n;
ffffffff8040e55f:	89 cf                	mov    %ecx,%edi
ffffffff8040e561:	41 89 d1             	mov    %edx,%r9d
ffffffff8040e564:	49 01 fb             	add    %rdi,%r11
    size_ -= min(n, size_);
ffffffff8040e567:	39 c1                	cmp    %eax,%ecx
ffffffff8040e569:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040e56c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040e56e:	85 c0                	test   %eax,%eax
ffffffff8040e570:	0f 85 1a ff ff ff    	jne    ffffffff8040e490 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x7c0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e576:	85 f6                	test   %esi,%esi
ffffffff8040e578:	74 67                	je     ffffffff8040e5e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x911>
ffffffff8040e57a:	8d 46 ff             	lea    -0x1(%rsi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e57d:	44 8b 1d e0 fa 00 00 	mov    0xfae0(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e584:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040e58b:	31 ff                	xor    %edi,%edi
ffffffff8040e58d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040e591:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e595:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040e59b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040e5a0:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e5a3:	89 fa                	mov    %edi,%edx
ffffffff8040e5a5:	46 8d 14 1f          	lea    (%rdi,%r11,1),%r10d
ffffffff8040e5a9:	45 85 db             	test   %r11d,%r11d
ffffffff8040e5ac:	0f 84 6e 20 00 00    	je     ffffffff80410620 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2950>
ffffffff8040e5b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e5b8:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040e5bc:	89 d7                	mov    %edx,%edi
ffffffff8040e5be:	83 c2 01             	add    $0x1,%edx
ffffffff8040e5c1:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040e5c5:	66 89 9c 3f 00 80 0b 	mov    %bx,0xb8000(%rdi,%rdi,1)
ffffffff8040e5cc:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e5cd:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040e5d0:	75 e6                	jne    ffffffff8040e5b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x8e8>
ffffffff8040e5d2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040e5d9:	44 89 d7             	mov    %r10d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e5dc:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040e5df:	75 bf                	jne    ffffffff8040e5a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x8d0>
    if (current_col_ != 0) {
ffffffff8040e5e1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040e5e4:	74 3a                	je     ffffffff8040e620 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x950>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e5e6:	8b 0d 78 fa 00 00    	mov    0xfa78(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e5ec:	85 c9                	test   %ecx,%ecx
ffffffff8040e5ee:	74 30                	je     ffffffff8040e620 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x950>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e5f0:	89 ca                	mov    %ecx,%edx
ffffffff8040e5f2:	48 8d 04 b6          	lea    (%rsi,%rsi,4),%rax
ffffffff8040e5f6:	0f af d6             	imul   %esi,%edx
ffffffff8040e5f9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e5fd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040e603:	01 d1                	add    %edx,%ecx
ffffffff8040e605:	0f 1f 00             	nopl   (%rax)
ffffffff8040e608:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040e60b:	89 d6                	mov    %edx,%esi
ffffffff8040e60d:	83 c2 01             	add    $0x1,%edx
ffffffff8040e610:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e614:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040e61b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e61c:	39 ca                	cmp    %ecx,%edx
ffffffff8040e61e:	75 e8                	jne    ffffffff8040e608 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x938>
  vga_output << " cs : " << args->cs << "\n";
ffffffff8040e620:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8040e624:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040e629:	48 8b 40 08          	mov    0x8(%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040e62d:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff8040e630:	48 89 c6             	mov    %rax,%rsi
    num_len++;
ffffffff8040e633:	89 d1                	mov    %edx,%ecx
    buffer[i] = num % base;
ffffffff8040e635:	83 e6 0f             	and    $0xf,%esi
ffffffff8040e638:	40 88 74 14 4b       	mov    %sil,0x4b(%rsp,%rdx,1)
ffffffff8040e63d:	48 89 c6             	mov    %rax,%rsi
    num /= base;
ffffffff8040e640:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040e644:	48 83 fe 0f          	cmp    $0xf,%rsi
ffffffff8040e648:	76 0f                	jbe    ffffffff8040e659 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x989>
ffffffff8040e64a:	48 83 c2 01          	add    $0x1,%rdx
  for (size_t i = 0; i < size; i++) {
ffffffff8040e64e:	48 83 fa 15          	cmp    $0x15,%rdx
ffffffff8040e652:	75 dc                	jne    ffffffff8040e630 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x960>
ffffffff8040e654:	b9 14 00 00 00       	mov    $0x14,%ecx
  if (num != 0) {
ffffffff8040e659:	48 85 c0             	test   %rax,%rax
ffffffff8040e65c:	0f 85 0e 32 00 00    	jne    ffffffff80411870 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3ba0>
    str[offset++] = '0';
ffffffff8040e662:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040e668:	89 ce                	mov    %ecx,%esi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040e66a:	42 8d 7c 39 ff       	lea    -0x1(%rcx,%r15,1),%edi
    str[offset++] = '0';
ffffffff8040e66f:	4c 89 fa             	mov    %r15,%rdx
ffffffff8040e672:	66 44 89 64 24 38    	mov    %r12w,0x38(%rsp)
ffffffff8040e678:	4c 01 fe             	add    %r15,%rsi
ffffffff8040e67b:	eb 12                	jmp    ffffffff8040e68f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x9bf>
ffffffff8040e67d:	0f 1f 00             	nopl   (%rax)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040e680:	83 c0 37             	add    $0x37,%eax
ffffffff8040e683:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e687:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e68a:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040e68d:	74 1c                	je     ffffffff8040e6ab <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x9db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040e68f:	89 f8                	mov    %edi,%eax
ffffffff8040e691:	29 d0                	sub    %edx,%eax
ffffffff8040e693:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff8040e698:	3c 09                	cmp    $0x9,%al
ffffffff8040e69a:	7f e4                	jg     ffffffff8040e680 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x9b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040e69c:	83 c0 30             	add    $0x30,%eax
ffffffff8040e69f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040e6a3:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040e6a6:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040e6a9:	75 e4                	jne    ffffffff8040e68f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x9bf>
  str[num_len + offset] = 0;
ffffffff8040e6ab:	8d 41 02             	lea    0x2(%rcx),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e6ae:	4c 89 ff             	mov    %r15,%rdi
ffffffff8040e6b1:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff8040e6b6:	e8 05 eb ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040e6bb:	85 c0                	test   %eax,%eax
ffffffff8040e6bd:	0f 84 c9 31 00 00    	je     ffffffff8041188c <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3bbc>
ffffffff8040e6c3:	44 8b 25 96 f9 00 00 	mov    0xf996(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e6ca:	44 8b 15 93 f9 00 00 	mov    0xf993(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e6d1:	4d 89 fb             	mov    %r15,%r11
ffffffff8040e6d4:	44 8b 0d 91 f9 00 00 	mov    0xf991(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040e6db:	8b 3d 87 f9 00 00    	mov    0xf987(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e6e1:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040e6e6:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040e6ea:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e6ee:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040e6f3:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040e6f7:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040e6fe:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040e703:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e707:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040e70c:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e70f:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e713:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e717:	4c 01 ea             	add    %r13,%rdx
ffffffff8040e71a:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040e721:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040e726:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040e72d:	80 
ffffffff8040e72e:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040e733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e738:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040e73b:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040e73e:	39 c1                	cmp    %eax,%ecx
ffffffff8040e740:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e743:	39 c8                	cmp    %ecx,%eax
ffffffff8040e745:	89 ca                	mov    %ecx,%edx
ffffffff8040e747:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e74a:	85 d2                	test   %edx,%edx
ffffffff8040e74c:	0f 84 7e 22 00 00    	je     ffffffff804109d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2d00>
ffffffff8040e752:	83 ea 01             	sub    $0x1,%edx
ffffffff8040e755:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040e758:	eb 16                	jmp    ffffffff8040e770 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xaa0>
ffffffff8040e75a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040e760:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040e764:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040e767:	0f 84 63 22 00 00    	je     ffffffff804109d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2d00>
ffffffff8040e76d:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040e770:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040e775:	44 89 c6             	mov    %r8d,%esi
ffffffff8040e778:	75 e6                	jne    ffffffff8040e760 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xa90>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e77a:	39 f0                	cmp    %esi,%eax
ffffffff8040e77c:	89 f2                	mov    %esi,%edx
ffffffff8040e77e:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040e781:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040e784:	0f 84 a6 21 00 00    	je     ffffffff80410930 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c60>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e78a:	44 01 ca             	add    %r9d,%edx
ffffffff8040e78d:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e790:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040e794:	44 39 ca             	cmp    %r9d,%edx
ffffffff8040e797:	0f 86 28 22 00 00    	jbe    ffffffff804109c5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2cf5>
ffffffff8040e79d:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040e7a0:	f7 d3                	not    %ebx
ffffffff8040e7a2:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040e7a5:	89 fb                	mov    %edi,%ebx
ffffffff8040e7a7:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040e7ab:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040e7af:	49 01 d9             	add    %rbx,%r9
ffffffff8040e7b2:	31 db                	xor    %ebx,%ebx
ffffffff8040e7b4:	4d 01 c9             	add    %r9,%r9
ffffffff8040e7b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040e7be:	00 00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e7c0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040e7c6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040e7cc:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040e7d3:	41 80 
ffffffff8040e7d5:	49 89 de             	mov    %rbx,%r14
ffffffff8040e7d8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e7dc:	49 39 ee             	cmp    %rbp,%r14
ffffffff8040e7df:	75 df                	jne    ffffffff8040e7c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xaf0>
    if (current_col_ == num_cols_) {
ffffffff8040e7e1:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040e7e4:	0f 84 16 21 00 00    	je     ffffffff80410900 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c30>
    current_col_ = i;
ffffffff8040e7ea:	89 15 7c f8 00 00    	mov    %edx,0xf87c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040e7f0:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040e7f4:	0f 84 25 21 00 00    	je     ffffffff8041091f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c4f>
ffffffff8040e7fa:	85 d2                	test   %edx,%edx
ffffffff8040e7fc:	74 09                	je     ffffffff8040e807 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb37>
ffffffff8040e7fe:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040e801:	0f 86 d1 22 00 00    	jbe    ffffffff80410ad8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2e08>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040e807:	83 c6 01             	add    $0x1,%esi
ffffffff8040e80a:	39 ce                	cmp    %ecx,%esi
ffffffff8040e80c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040e80f:	89 ce                	mov    %ecx,%esi
ffffffff8040e811:	41 89 d1             	mov    %edx,%r9d
ffffffff8040e814:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040e817:	39 c8                	cmp    %ecx,%eax
ffffffff8040e819:	0f 46 c8             	cmovbe %eax,%ecx
ffffffff8040e81c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040e81e:	85 c0                	test   %eax,%eax
ffffffff8040e820:	0f 85 12 ff ff ff    	jne    ffffffff8040e738 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xa68>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e826:	85 ff                	test   %edi,%edi
ffffffff8040e828:	74 67                	je     ffffffff8040e891 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xbc1>
ffffffff8040e82a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e82d:	44 8b 1d 30 f8 00 00 	mov    0xf830(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e834:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040e83b:	31 f6                	xor    %esi,%esi
ffffffff8040e83d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040e841:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e845:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040e84b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040e850:	49 89 c8             	mov    %rcx,%r8
ffffffff8040e853:	89 f2                	mov    %esi,%edx
ffffffff8040e855:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040e859:	45 85 db             	test   %r11d,%r11d
ffffffff8040e85c:	0f 84 ae 21 00 00    	je     ffffffff80410a10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2d40>
ffffffff8040e862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040e868:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040e86c:	89 d6                	mov    %edx,%esi
ffffffff8040e86e:	83 c2 01             	add    $0x1,%edx
ffffffff8040e871:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040e875:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040e87c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040e87d:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e880:	75 e6                	jne    ffffffff8040e868 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb98>
ffffffff8040e882:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040e889:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040e88c:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040e88f:	75 bf                	jne    ffffffff8040e850 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb80>
    if (current_col_ != 0) {
ffffffff8040e891:	45 85 c9             	test   %r9d,%r9d
ffffffff8040e894:	74 3a                	je     ffffffff8040e8d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xc00>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e896:	8b 0d c8 f7 00 00    	mov    0xf7c8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e89c:	85 c9                	test   %ecx,%ecx
ffffffff8040e89e:	74 30                	je     ffffffff8040e8d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xc00>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040e8a0:	89 ca                	mov    %ecx,%edx
ffffffff8040e8a2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040e8a6:	0f af d7             	imul   %edi,%edx
ffffffff8040e8a9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040e8ad:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040e8b3:	01 d1                	add    %edx,%ecx
ffffffff8040e8b5:	0f 1f 00             	nopl   (%rax)
ffffffff8040e8b8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040e8bb:	89 d6                	mov    %edx,%esi
ffffffff8040e8bd:	83 c2 01             	add    $0x1,%edx
ffffffff8040e8c0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040e8c4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040e8cb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040e8cc:	39 d1                	cmp    %edx,%ecx
ffffffff8040e8ce:	75 e8                	jne    ffffffff8040e8b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xbe8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040e8d0:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040e8d7:	e8 e4 e8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040e8dc:	85 c0                	test   %eax,%eax
ffffffff8040e8de:	0f 84 8c 30 00 00    	je     ffffffff80411970 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3ca0>
ffffffff8040e8e4:	44 8b 25 75 f7 00 00 	mov    0xf775(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040e8eb:	44 8b 15 72 f7 00 00 	mov    0xf772(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040e8f2:	49 c7 c3 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r11
ffffffff8040e8f9:	44 8b 0d 6c f7 00 00 	mov    0xf76c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040e900:	8b 3d 62 f7 00 00    	mov    0xf762(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040e906:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040e90b:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040e90f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e913:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040e918:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040e91c:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040e923:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040e928:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040e92c:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040e931:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040e934:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040e938:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040e93c:	4c 01 ea             	add    %r13,%rdx
ffffffff8040e93f:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040e946:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040e94b:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040e952:	80 
ffffffff8040e953:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040e958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040e95f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040e960:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040e963:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040e966:	39 c1                	cmp    %eax,%ecx
ffffffff8040e968:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040e96b:	39 c8                	cmp    %ecx,%eax
ffffffff8040e96d:	89 ca                	mov    %ecx,%edx
ffffffff8040e96f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040e972:	85 d2                	test   %edx,%edx
ffffffff8040e974:	0f 84 66 1f 00 00    	je     ffffffff804108e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c10>
ffffffff8040e97a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040e97d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040e980:	eb 16                	jmp    ffffffff8040e998 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xcc8>
ffffffff8040e982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040e988:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040e98c:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040e98f:	0f 84 4b 1f 00 00    	je     ffffffff804108e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c10>
ffffffff8040e995:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040e998:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040e99d:	44 89 c6             	mov    %r8d,%esi
ffffffff8040e9a0:	75 e6                	jne    ffffffff8040e988 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xcb8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040e9a2:	39 f0                	cmp    %esi,%eax
ffffffff8040e9a4:	89 f2                	mov    %esi,%edx
ffffffff8040e9a6:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040e9a9:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040e9ac:	0f 84 8e 1e 00 00    	je     ffffffff80410840 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b70>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e9b2:	44 01 ca             	add    %r9d,%edx
ffffffff8040e9b5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040e9b8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040e9bc:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040e9bf:	0f 83 10 1f 00 00    	jae    ffffffff804108d5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c05>
ffffffff8040e9c5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040e9c8:	f7 d3                	not    %ebx
ffffffff8040e9ca:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040e9cd:	89 fb                	mov    %edi,%ebx
ffffffff8040e9cf:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040e9d3:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040e9d7:	49 01 d9             	add    %rbx,%r9
ffffffff8040e9da:	31 db                	xor    %ebx,%ebx
ffffffff8040e9dc:	4d 01 c9             	add    %r9,%r9
ffffffff8040e9df:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040e9e0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040e9e6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040e9ec:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040e9f3:	41 80 
ffffffff8040e9f5:	49 89 de             	mov    %rbx,%r14
ffffffff8040e9f8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040e9fc:	49 39 ee             	cmp    %rbp,%r14
ffffffff8040e9ff:	75 df                	jne    ffffffff8040e9e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd10>
    if (current_col_ == num_cols_) {
ffffffff8040ea01:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040ea04:	0f 84 f6 1d 00 00    	je     ffffffff80410800 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b30>
    current_col_ = i;
ffffffff8040ea0a:	89 15 5c f6 00 00    	mov    %edx,0xf65c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ea10:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040ea14:	0f 84 05 1e 00 00    	je     ffffffff8041081f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b4f>
ffffffff8040ea1a:	85 d2                	test   %edx,%edx
ffffffff8040ea1c:	74 09                	je     ffffffff8040ea27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd57>
ffffffff8040ea1e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040ea21:	0f 86 49 20 00 00    	jbe    ffffffff80410a70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2da0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040ea27:	83 c6 01             	add    $0x1,%esi
ffffffff8040ea2a:	39 ce                	cmp    %ecx,%esi
ffffffff8040ea2c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040ea2f:	89 ce                	mov    %ecx,%esi
ffffffff8040ea31:	41 89 d1             	mov    %edx,%r9d
ffffffff8040ea34:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040ea37:	39 c1                	cmp    %eax,%ecx
ffffffff8040ea39:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040ea3c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040ea3e:	85 c0                	test   %eax,%eax
ffffffff8040ea40:	0f 85 1a ff ff ff    	jne    ffffffff8040e960 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xc90>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ea46:	85 ff                	test   %edi,%edi
ffffffff8040ea48:	74 67                	je     ffffffff8040eab1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xde1>
ffffffff8040ea4a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ea4d:	44 8b 1d 10 f6 00 00 	mov    0xf610(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040ea54:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040ea5b:	31 f6                	xor    %esi,%esi
ffffffff8040ea5d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040ea61:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040ea65:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040ea6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040ea70:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ea73:	89 f2                	mov    %esi,%edx
ffffffff8040ea75:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040ea79:	45 85 db             	test   %r11d,%r11d
ffffffff8040ea7c:	0f 84 ce 1f 00 00    	je     ffffffff80410a50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2d80>
ffffffff8040ea82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040ea88:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040ea8c:	89 d6                	mov    %edx,%esi
ffffffff8040ea8e:	83 c2 01             	add    $0x1,%edx
ffffffff8040ea91:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040ea95:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040ea9c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ea9d:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040eaa0:	75 e6                	jne    ffffffff8040ea88 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xdb8>
ffffffff8040eaa2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040eaa9:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040eaac:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040eaaf:	75 bf                	jne    ffffffff8040ea70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xda0>
    if (current_col_ != 0) {
ffffffff8040eab1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040eab4:	74 3a                	je     ffffffff8040eaf0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xe20>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040eab6:	8b 0d a8 f5 00 00    	mov    0xf5a8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040eabc:	85 c9                	test   %ecx,%ecx
ffffffff8040eabe:	74 30                	je     ffffffff8040eaf0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xe20>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040eac0:	89 ca                	mov    %ecx,%edx
ffffffff8040eac2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040eac6:	0f af d7             	imul   %edi,%edx
ffffffff8040eac9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040eacd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040ead3:	01 d1                	add    %edx,%ecx
ffffffff8040ead5:	0f 1f 00             	nopl   (%rax)
ffffffff8040ead8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040eadb:	89 d6                	mov    %edx,%esi
ffffffff8040eadd:	83 c2 01             	add    $0x1,%edx
ffffffff8040eae0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040eae4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040eaeb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040eaec:	39 ca                	cmp    %ecx,%edx
ffffffff8040eaee:	75 e8                	jne    ffffffff8040ead8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xe08>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040eaf0:	48 c7 c7 41 b8 41 80 	mov    $0xffffffff8041b841,%rdi
ffffffff8040eaf7:	e8 c4 e6 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040eafc:	85 c0                	test   %eax,%eax
ffffffff8040eafe:	0f 84 84 2e 00 00    	je     ffffffff80411988 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3cb8>
ffffffff8040eb04:	44 8b 25 55 f5 00 00 	mov    0xf555(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040eb0b:	44 8b 15 52 f5 00 00 	mov    0xf552(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040eb12:	49 c7 c3 41 b8 41 80 	mov    $0xffffffff8041b841,%r11
ffffffff8040eb19:	44 8b 0d 4c f5 00 00 	mov    0xf54c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040eb20:	8b 35 42 f5 00 00    	mov    0xf542(%rip),%esi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040eb26:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040eb2b:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040eb2f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040eb33:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040eb38:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040eb3c:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff8040eb43:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040eb48:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040eb4c:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff8040eb51:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040eb54:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040eb58:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040eb5c:	4c 01 ea             	add    %r13,%rdx
ffffffff8040eb5f:	48 8d b9 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rdi
ffffffff8040eb66:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8040eb6b:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff8040eb72:	80 
ffffffff8040eb73:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
ffffffff8040eb78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040eb7f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040eb80:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040eb83:	89 c2                	mov    %eax,%edx
ffffffff8040eb85:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040eb88:	39 c1                	cmp    %eax,%ecx
ffffffff8040eb8a:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040eb8d:	39 c1                	cmp    %eax,%ecx
ffffffff8040eb8f:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040eb92:	85 d2                	test   %edx,%edx
ffffffff8040eb94:	0f 84 46 1c 00 00    	je     ffffffff804107e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b10>
ffffffff8040eb9a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040eb9d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040eba0:	eb 16                	jmp    ffffffff8040ebb8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xee8>
ffffffff8040eba2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040eba8:	49 8d 78 01          	lea    0x1(%r8),%rdi
ffffffff8040ebac:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040ebaf:	0f 84 2b 1c 00 00    	je     ffffffff804107e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b10>
ffffffff8040ebb5:	49 89 f8             	mov    %rdi,%r8
      if (str_[i] == c) {
ffffffff8040ebb8:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040ebbd:	44 89 c7             	mov    %r8d,%edi
ffffffff8040ebc0:	75 e6                	jne    ffffffff8040eba8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xed8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040ebc2:	39 f8                	cmp    %edi,%eax
ffffffff8040ebc4:	89 fa                	mov    %edi,%edx
ffffffff8040ebc6:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040ebc9:	44 39 e6             	cmp    %r12d,%esi
ffffffff8040ebcc:	0f 84 6e 1b 00 00    	je     ffffffff80410740 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2a70>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040ebd2:	44 01 ca             	add    %r9d,%edx
ffffffff8040ebd5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040ebd8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040ebdc:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040ebdf:	0f 83 f0 1b 00 00    	jae    ffffffff804107d5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b05>
ffffffff8040ebe5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040ebe8:	f7 d3                	not    %ebx
ffffffff8040ebea:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040ebed:	89 f3                	mov    %esi,%ebx
ffffffff8040ebef:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040ebf3:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040ebf7:	49 01 d9             	add    %rbx,%r9
ffffffff8040ebfa:	31 db                	xor    %ebx,%ebx
ffffffff8040ebfc:	4d 01 c9             	add    %r9,%r9
ffffffff8040ebff:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040ec00:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040ec06:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040ec0c:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040ec13:	41 80 
ffffffff8040ec15:	49 89 de             	mov    %rbx,%r14
ffffffff8040ec18:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040ec1c:	49 39 ee             	cmp    %rbp,%r14
ffffffff8040ec1f:	75 df                	jne    ffffffff8040ec00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf30>
    if (current_col_ == num_cols_) {
ffffffff8040ec21:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040ec24:	0f 84 e6 1a 00 00    	je     ffffffff80410710 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2a40>
    current_col_ = i;
ffffffff8040ec2a:	89 15 3c f4 00 00    	mov    %edx,0xf43c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ec30:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040ec34:	0f 84 f5 1a 00 00    	je     ffffffff8041072f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2a5f>
ffffffff8040ec3a:	85 d2                	test   %edx,%edx
ffffffff8040ec3c:	74 09                	je     ffffffff8040ec47 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf77>
ffffffff8040ec3e:	83 fe 18             	cmp    $0x18,%esi
ffffffff8040ec41:	0f 86 f9 1e 00 00    	jbe    ffffffff80410b40 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2e70>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040ec47:	83 c7 01             	add    $0x1,%edi
ffffffff8040ec4a:	39 cf                	cmp    %ecx,%edi
ffffffff8040ec4c:	0f 46 cf             	cmovbe %edi,%ecx
    str_ += n;
ffffffff8040ec4f:	89 cf                	mov    %ecx,%edi
ffffffff8040ec51:	41 89 d1             	mov    %edx,%r9d
ffffffff8040ec54:	49 01 fb             	add    %rdi,%r11
    size_ -= min(n, size_);
ffffffff8040ec57:	39 c1                	cmp    %eax,%ecx
ffffffff8040ec59:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040ec5c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040ec5e:	85 c0                	test   %eax,%eax
ffffffff8040ec60:	0f 85 1a ff ff ff    	jne    ffffffff8040eb80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xeb0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ec66:	85 f6                	test   %esi,%esi
ffffffff8040ec68:	74 67                	je     ffffffff8040ecd1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1001>
ffffffff8040ec6a:	8d 46 ff             	lea    -0x1(%rsi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ec6d:	44 8b 1d f0 f3 00 00 	mov    0xf3f0(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040ec74:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040ec7b:	31 ff                	xor    %edi,%edi
ffffffff8040ec7d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040ec81:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040ec85:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040ec8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040ec90:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ec93:	89 fa                	mov    %edi,%edx
ffffffff8040ec95:	46 8d 14 1f          	lea    (%rdi,%r11,1),%r10d
ffffffff8040ec99:	45 85 db             	test   %r11d,%r11d
ffffffff8040ec9c:	0f 84 8e 1d 00 00    	je     ffffffff80410a30 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2d60>
ffffffff8040eca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040eca8:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040ecac:	89 d7                	mov    %edx,%edi
ffffffff8040ecae:	83 c2 01             	add    $0x1,%edx
ffffffff8040ecb1:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040ecb5:	66 89 9c 3f 00 80 0b 	mov    %bx,0xb8000(%rdi,%rdi,1)
ffffffff8040ecbc:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ecbd:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040ecc0:	75 e6                	jne    ffffffff8040eca8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xfd8>
ffffffff8040ecc2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040ecc9:	44 89 d7             	mov    %r10d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040eccc:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040eccf:	75 bf                	jne    ffffffff8040ec90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xfc0>
    if (current_col_ != 0) {
ffffffff8040ecd1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040ecd4:	74 3a                	je     ffffffff8040ed10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1040>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040ecd6:	8b 0d 88 f3 00 00    	mov    0xf388(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040ecdc:	85 c9                	test   %ecx,%ecx
ffffffff8040ecde:	74 30                	je     ffffffff8040ed10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1040>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040ece0:	89 f2                	mov    %esi,%edx
ffffffff8040ece2:	48 8d 04 b6          	lea    (%rsi,%rsi,4),%rax
ffffffff8040ece6:	0f af d1             	imul   %ecx,%edx
ffffffff8040ece9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040eced:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040ecf3:	01 d1                	add    %edx,%ecx
ffffffff8040ecf5:	0f 1f 00             	nopl   (%rax)
ffffffff8040ecf8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040ecfb:	89 d6                	mov    %edx,%esi
ffffffff8040ecfd:	83 c2 01             	add    $0x1,%edx
ffffffff8040ed00:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040ed04:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040ed0b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040ed0c:	39 ca                	cmp    %ecx,%edx
ffffffff8040ed0e:	75 e8                	jne    ffffffff8040ecf8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1028>
  vga_output << " rip : " << args->rip << "\n";
ffffffff8040ed10:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8040ed14:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040ed19:	48 8b 00             	mov    (%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040ed1c:	0f 1f 40 00          	nopl   0x0(%rax)
    buffer[i] = num % base;
ffffffff8040ed20:	48 89 c6             	mov    %rax,%rsi
    num_len++;
ffffffff8040ed23:	89 d1                	mov    %edx,%ecx
    buffer[i] = num % base;
ffffffff8040ed25:	83 e6 0f             	and    $0xf,%esi
ffffffff8040ed28:	40 88 74 14 4b       	mov    %sil,0x4b(%rsp,%rdx,1)
ffffffff8040ed2d:	48 89 c6             	mov    %rax,%rsi
    num /= base;
ffffffff8040ed30:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040ed34:	48 83 fe 0f          	cmp    $0xf,%rsi
ffffffff8040ed38:	76 0f                	jbe    ffffffff8040ed49 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1079>
ffffffff8040ed3a:	48 83 c2 01          	add    $0x1,%rdx
  for (size_t i = 0; i < size; i++) {
ffffffff8040ed3e:	48 83 fa 15          	cmp    $0x15,%rdx
ffffffff8040ed42:	75 dc                	jne    ffffffff8040ed20 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1050>
ffffffff8040ed44:	b9 14 00 00 00       	mov    $0x14,%ecx
  if (num != 0) {
ffffffff8040ed49:	48 85 c0             	test   %rax,%rax
ffffffff8040ed4c:	0f 85 be 2a 00 00    	jne    ffffffff80411810 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3b40>
    str[offset++] = '0';
ffffffff8040ed52:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040ed58:	89 ce                	mov    %ecx,%esi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040ed5a:	42 8d 7c 39 ff       	lea    -0x1(%rcx,%r15,1),%edi
    str[offset++] = '0';
ffffffff8040ed5f:	4c 89 fa             	mov    %r15,%rdx
ffffffff8040ed62:	66 44 89 64 24 38    	mov    %r12w,0x38(%rsp)
ffffffff8040ed68:	4c 01 fe             	add    %r15,%rsi
ffffffff8040ed6b:	eb 12                	jmp    ffffffff8040ed7f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x10af>
ffffffff8040ed6d:	0f 1f 00             	nopl   (%rax)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040ed70:	83 c0 37             	add    $0x37,%eax
ffffffff8040ed73:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ed77:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040ed7a:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040ed7d:	74 1c                	je     ffffffff8040ed9b <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x10cb>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040ed7f:	89 f8                	mov    %edi,%eax
ffffffff8040ed81:	29 d0                	sub    %edx,%eax
ffffffff8040ed83:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff8040ed88:	3c 09                	cmp    $0x9,%al
ffffffff8040ed8a:	7f e4                	jg     ffffffff8040ed70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x10a0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040ed8c:	83 c0 30             	add    $0x30,%eax
ffffffff8040ed8f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040ed93:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040ed96:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040ed99:	75 e4                	jne    ffffffff8040ed7f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x10af>
  str[num_len + offset] = 0;
ffffffff8040ed9b:	8d 41 02             	lea    0x2(%rcx),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040ed9e:	4c 89 ff             	mov    %r15,%rdi
ffffffff8040eda1:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff8040eda6:	e8 15 e4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040edab:	85 c0                	test   %eax,%eax
ffffffff8040edad:	0f 84 79 2a 00 00    	je     ffffffff8041182c <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3b5c>
ffffffff8040edb3:	44 8b 25 a6 f2 00 00 	mov    0xf2a6(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040edba:	44 8b 15 a3 f2 00 00 	mov    0xf2a3(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040edc1:	4d 89 fb             	mov    %r15,%r11
ffffffff8040edc4:	44 8b 0d a1 f2 00 00 	mov    0xf2a1(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040edcb:	8b 35 97 f2 00 00    	mov    0xf297(%rip),%esi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040edd1:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040edd6:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040edda:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040edde:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040ede3:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040ede7:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff8040edee:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040edf3:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040edf7:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff8040edfc:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040edff:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040ee03:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040ee07:	4c 01 ea             	add    %r13,%rdx
ffffffff8040ee0a:	48 8d b9 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rdi
ffffffff8040ee11:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff8040ee16:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff8040ee1d:	80 
ffffffff8040ee1e:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
ffffffff8040ee23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040ee28:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040ee2b:	89 c2                	mov    %eax,%edx
ffffffff8040ee2d:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040ee30:	39 c1                	cmp    %eax,%ecx
ffffffff8040ee32:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040ee35:	39 c1                	cmp    %eax,%ecx
ffffffff8040ee37:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040ee3a:	85 d2                	test   %edx,%edx
ffffffff8040ee3c:	0f 84 1e 20 00 00    	je     ffffffff80410e60 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3190>
ffffffff8040ee42:	83 ea 01             	sub    $0x1,%edx
ffffffff8040ee45:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040ee48:	eb 16                	jmp    ffffffff8040ee60 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1190>
ffffffff8040ee4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040ee50:	49 8d 78 01          	lea    0x1(%r8),%rdi
ffffffff8040ee54:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040ee57:	0f 84 03 20 00 00    	je     ffffffff80410e60 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3190>
ffffffff8040ee5d:	49 89 f8             	mov    %rdi,%r8
      if (str_[i] == c) {
ffffffff8040ee60:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040ee65:	44 89 c7             	mov    %r8d,%edi
ffffffff8040ee68:	75 e6                	jne    ffffffff8040ee50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1180>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040ee6a:	39 f8                	cmp    %edi,%eax
ffffffff8040ee6c:	89 fa                	mov    %edi,%edx
ffffffff8040ee6e:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040ee71:	44 39 e6             	cmp    %r12d,%esi
ffffffff8040ee74:	0f 84 46 1f 00 00    	je     ffffffff80410dc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x30f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040ee7a:	44 01 ca             	add    %r9d,%edx
ffffffff8040ee7d:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040ee80:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040ee84:	44 39 ca             	cmp    %r9d,%edx
ffffffff8040ee87:	0f 86 c8 1f 00 00    	jbe    ffffffff80410e55 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3185>
ffffffff8040ee8d:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040ee90:	f7 d3                	not    %ebx
ffffffff8040ee92:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040ee95:	89 f3                	mov    %esi,%ebx
ffffffff8040ee97:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040ee9b:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040ee9f:	49 01 d9             	add    %rbx,%r9
ffffffff8040eea2:	31 db                	xor    %ebx,%ebx
ffffffff8040eea4:	4d 01 c9             	add    %r9,%r9
ffffffff8040eea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040eeae:	00 00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040eeb0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040eeb6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040eebc:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040eec3:	41 80 
ffffffff8040eec5:	49 89 de             	mov    %rbx,%r14
ffffffff8040eec8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040eecc:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8040eecf:	75 df                	jne    ffffffff8040eeb0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x11e0>
    if (current_col_ == num_cols_) {
ffffffff8040eed1:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040eed4:	0f 84 b6 1e 00 00    	je     ffffffff80410d90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x30c0>
    current_col_ = i;
ffffffff8040eeda:	89 15 8c f1 00 00    	mov    %edx,0xf18c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040eee0:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040eee4:	0f 84 c5 1e 00 00    	je     ffffffff80410daf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x30df>
ffffffff8040eeea:	85 d2                	test   %edx,%edx
ffffffff8040eeec:	74 09                	je     ffffffff8040eef7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1227>
ffffffff8040eeee:	83 fe 18             	cmp    $0x18,%esi
ffffffff8040eef1:	0f 86 71 20 00 00    	jbe    ffffffff80410f68 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3298>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040eef7:	83 c7 01             	add    $0x1,%edi
ffffffff8040eefa:	39 cf                	cmp    %ecx,%edi
ffffffff8040eefc:	0f 46 cf             	cmovbe %edi,%ecx
    str_ += n;
ffffffff8040eeff:	89 cf                	mov    %ecx,%edi
ffffffff8040ef01:	41 89 d1             	mov    %edx,%r9d
ffffffff8040ef04:	49 01 fb             	add    %rdi,%r11
    size_ -= min(n, size_);
ffffffff8040ef07:	39 c1                	cmp    %eax,%ecx
ffffffff8040ef09:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040ef0c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040ef0e:	85 c0                	test   %eax,%eax
ffffffff8040ef10:	0f 85 12 ff ff ff    	jne    ffffffff8040ee28 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1158>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ef16:	85 f6                	test   %esi,%esi
ffffffff8040ef18:	74 67                	je     ffffffff8040ef81 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x12b1>
ffffffff8040ef1a:	8d 46 ff             	lea    -0x1(%rsi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ef1d:	44 8b 1d 40 f1 00 00 	mov    0xf140(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040ef24:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040ef2b:	31 ff                	xor    %edi,%edi
ffffffff8040ef2d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040ef31:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040ef35:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040ef3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040ef40:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ef43:	89 fa                	mov    %edi,%edx
ffffffff8040ef45:	46 8d 14 1f          	lea    (%rdi,%r11,1),%r10d
ffffffff8040ef49:	45 85 db             	test   %r11d,%r11d
ffffffff8040ef4c:	0f 84 4e 1f 00 00    	je     ffffffff80410ea0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x31d0>
ffffffff8040ef52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040ef58:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040ef5c:	89 d7                	mov    %edx,%edi
ffffffff8040ef5e:	83 c2 01             	add    $0x1,%edx
ffffffff8040ef61:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040ef65:	66 89 9c 3f 00 80 0b 	mov    %bx,0xb8000(%rdi,%rdi,1)
ffffffff8040ef6c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ef6d:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040ef70:	75 e6                	jne    ffffffff8040ef58 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1288>
ffffffff8040ef72:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040ef79:	44 89 d7             	mov    %r10d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ef7c:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040ef7f:	75 bf                	jne    ffffffff8040ef40 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1270>
    if (current_col_ != 0) {
ffffffff8040ef81:	45 85 c9             	test   %r9d,%r9d
ffffffff8040ef84:	74 3a                	je     ffffffff8040efc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x12f0>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040ef86:	8b 0d d8 f0 00 00    	mov    0xf0d8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040ef8c:	85 c9                	test   %ecx,%ecx
ffffffff8040ef8e:	74 30                	je     ffffffff8040efc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x12f0>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040ef90:	89 ca                	mov    %ecx,%edx
ffffffff8040ef92:	48 8d 04 b6          	lea    (%rsi,%rsi,4),%rax
ffffffff8040ef96:	0f af d6             	imul   %esi,%edx
ffffffff8040ef99:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040ef9d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040efa3:	01 d1                	add    %edx,%ecx
ffffffff8040efa5:	0f 1f 00             	nopl   (%rax)
ffffffff8040efa8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040efab:	89 d6                	mov    %edx,%esi
ffffffff8040efad:	83 c2 01             	add    $0x1,%edx
ffffffff8040efb0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040efb4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040efbb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040efbc:	39 ca                	cmp    %ecx,%edx
ffffffff8040efbe:	75 e8                	jne    ffffffff8040efa8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x12d8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040efc0:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040efc7:	e8 f4 e1 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040efcc:	85 c0                	test   %eax,%eax
ffffffff8040efce:	0f 84 cc 29 00 00    	je     ffffffff804119a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3cd0>
ffffffff8040efd4:	44 8b 25 85 f0 00 00 	mov    0xf085(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040efdb:	44 8b 15 82 f0 00 00 	mov    0xf082(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040efe2:	49 c7 c3 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r11
ffffffff8040efe9:	44 8b 0d 7c f0 00 00 	mov    0xf07c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040eff0:	8b 3d 72 f0 00 00    	mov    0xf072(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040eff6:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040effb:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040efff:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f003:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040f008:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040f00c:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040f013:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040f018:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f01c:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f021:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f024:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f028:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f02c:	4c 01 ea             	add    %r13,%rdx
ffffffff8040f02f:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040f036:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040f03b:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040f042:	80 
ffffffff8040f043:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040f048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040f04f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f050:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040f053:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040f056:	39 c1                	cmp    %eax,%ecx
ffffffff8040f058:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f05b:	39 c8                	cmp    %ecx,%eax
ffffffff8040f05d:	89 ca                	mov    %ecx,%edx
ffffffff8040f05f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f062:	85 d2                	test   %edx,%edx
ffffffff8040f064:	0f 84 06 1d 00 00    	je     ffffffff80410d70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x30a0>
ffffffff8040f06a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040f06d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040f070:	eb 16                	jmp    ffffffff8040f088 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x13b8>
ffffffff8040f072:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040f078:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040f07c:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040f07f:	0f 84 eb 1c 00 00    	je     ffffffff80410d70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x30a0>
ffffffff8040f085:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040f088:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040f08d:	44 89 c6             	mov    %r8d,%esi
ffffffff8040f090:	75 e6                	jne    ffffffff8040f078 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x13a8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f092:	39 f0                	cmp    %esi,%eax
ffffffff8040f094:	89 f2                	mov    %esi,%edx
ffffffff8040f096:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040f099:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040f09c:	0f 84 2e 1c 00 00    	je     ffffffff80410cd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3000>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f0a2:	44 01 ca             	add    %r9d,%edx
ffffffff8040f0a5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040f0a8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040f0ac:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040f0af:	0f 83 b0 1c 00 00    	jae    ffffffff80410d65 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3095>
ffffffff8040f0b5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040f0b8:	f7 d3                	not    %ebx
ffffffff8040f0ba:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040f0bd:	89 fb                	mov    %edi,%ebx
ffffffff8040f0bf:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040f0c3:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040f0c7:	49 01 d9             	add    %rbx,%r9
ffffffff8040f0ca:	31 db                	xor    %ebx,%ebx
ffffffff8040f0cc:	4d 01 c9             	add    %r9,%r9
ffffffff8040f0cf:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f0d0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040f0d6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040f0dc:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040f0e3:	41 80 
ffffffff8040f0e5:	49 89 de             	mov    %rbx,%r14
ffffffff8040f0e8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f0ec:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8040f0ef:	75 df                	jne    ffffffff8040f0d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1400>
    if (current_col_ == num_cols_) {
ffffffff8040f0f1:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040f0f4:	0f 84 96 1b 00 00    	je     ffffffff80410c90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2fc0>
    current_col_ = i;
ffffffff8040f0fa:	89 15 6c ef 00 00    	mov    %edx,0xef6c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f100:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040f104:	0f 84 a5 1b 00 00    	je     ffffffff80410caf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2fdf>
ffffffff8040f10a:	85 d2                	test   %edx,%edx
ffffffff8040f10c:	74 09                	je     ffffffff8040f117 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1447>
ffffffff8040f10e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040f111:	0f 86 e9 1d 00 00    	jbe    ffffffff80410f00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3230>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f117:	83 c6 01             	add    $0x1,%esi
ffffffff8040f11a:	39 ce                	cmp    %ecx,%esi
ffffffff8040f11c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040f11f:	89 ce                	mov    %ecx,%esi
ffffffff8040f121:	41 89 d1             	mov    %edx,%r9d
ffffffff8040f124:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040f127:	39 c1                	cmp    %eax,%ecx
ffffffff8040f129:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040f12c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040f12e:	85 c0                	test   %eax,%eax
ffffffff8040f130:	0f 85 1a ff ff ff    	jne    ffffffff8040f050 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1380>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f136:	85 ff                	test   %edi,%edi
ffffffff8040f138:	74 67                	je     ffffffff8040f1a1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x14d1>
ffffffff8040f13a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f13d:	44 8b 1d 20 ef 00 00 	mov    0xef20(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f144:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040f14b:	31 f6                	xor    %esi,%esi
ffffffff8040f14d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040f151:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f155:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040f15b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040f160:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f163:	89 f2                	mov    %esi,%edx
ffffffff8040f165:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040f169:	45 85 db             	test   %r11d,%r11d
ffffffff8040f16c:	0f 84 6e 1d 00 00    	je     ffffffff80410ee0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3210>
ffffffff8040f172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f178:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040f17c:	89 d6                	mov    %edx,%esi
ffffffff8040f17e:	83 c2 01             	add    $0x1,%edx
ffffffff8040f181:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040f185:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040f18c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f18d:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040f190:	75 e6                	jne    ffffffff8040f178 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x14a8>
ffffffff8040f192:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040f199:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f19c:	48 39 c1             	cmp    %rax,%rcx
ffffffff8040f19f:	75 bf                	jne    ffffffff8040f160 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1490>
    if (current_col_ != 0) {
ffffffff8040f1a1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040f1a4:	74 3a                	je     ffffffff8040f1e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1510>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f1a6:	8b 0d b8 ee 00 00    	mov    0xeeb8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f1ac:	85 c9                	test   %ecx,%ecx
ffffffff8040f1ae:	74 30                	je     ffffffff8040f1e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1510>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f1b0:	89 ca                	mov    %ecx,%edx
ffffffff8040f1b2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040f1b6:	0f af d7             	imul   %edi,%edx
ffffffff8040f1b9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f1bd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040f1c3:	01 d1                	add    %edx,%ecx
ffffffff8040f1c5:	0f 1f 00             	nopl   (%rax)
ffffffff8040f1c8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040f1cb:	89 d6                	mov    %edx,%esi
ffffffff8040f1cd:	83 c2 01             	add    $0x1,%edx
ffffffff8040f1d0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f1d4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040f1db:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f1dc:	39 ca                	cmp    %ecx,%edx
ffffffff8040f1de:	75 e8                	jne    ffffffff8040f1c8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x14f8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f1e0:	48 c7 c7 49 b8 41 80 	mov    $0xffffffff8041b849,%rdi
ffffffff8040f1e7:	e8 d4 df ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040f1ec:	85 c0                	test   %eax,%eax
ffffffff8040f1ee:	0f 84 24 28 00 00    	je     ffffffff80411a18 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d48>
ffffffff8040f1f4:	44 8b 25 65 ee 00 00 	mov    0xee65(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f1fb:	44 8b 15 62 ee 00 00 	mov    0xee62(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f202:	49 c7 c3 49 b8 41 80 	mov    $0xffffffff8041b849,%r11
ffffffff8040f209:	44 8b 0d 5c ee 00 00 	mov    0xee5c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040f210:	8b 3d 52 ee 00 00    	mov    0xee52(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f216:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040f21b:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040f21f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f223:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040f228:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040f22c:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040f233:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040f238:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f23c:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f241:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f244:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f248:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f24c:	4c 01 ea             	add    %r13,%rdx
ffffffff8040f24f:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040f256:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040f25b:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040f262:	80 
ffffffff8040f263:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040f268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040f26f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f270:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040f273:	89 c2                	mov    %eax,%edx
ffffffff8040f275:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040f278:	39 c1                	cmp    %eax,%ecx
ffffffff8040f27a:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f27d:	39 c1                	cmp    %eax,%ecx
ffffffff8040f27f:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f282:	85 d2                	test   %edx,%edx
ffffffff8040f284:	0f 84 ee 19 00 00    	je     ffffffff80410c78 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2fa8>
ffffffff8040f28a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040f28d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040f290:	eb 16                	jmp    ffffffff8040f2a8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x15d8>
ffffffff8040f292:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040f298:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040f29c:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040f29f:	0f 84 d3 19 00 00    	je     ffffffff80410c78 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2fa8>
ffffffff8040f2a5:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040f2a8:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040f2ad:	44 89 c6             	mov    %r8d,%esi
ffffffff8040f2b0:	75 e6                	jne    ffffffff8040f298 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x15c8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f2b2:	39 f0                	cmp    %esi,%eax
ffffffff8040f2b4:	89 f2                	mov    %esi,%edx
ffffffff8040f2b6:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040f2b9:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040f2bc:	0f 84 16 19 00 00    	je     ffffffff80410bd8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f08>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f2c2:	44 01 ca             	add    %r9d,%edx
ffffffff8040f2c5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040f2c8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040f2cc:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040f2cf:	0f 83 98 19 00 00    	jae    ffffffff80410c6d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f9d>
ffffffff8040f2d5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040f2d8:	f7 d3                	not    %ebx
ffffffff8040f2da:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040f2dd:	89 fb                	mov    %edi,%ebx
ffffffff8040f2df:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040f2e3:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040f2e7:	49 01 d9             	add    %rbx,%r9
ffffffff8040f2ea:	31 db                	xor    %ebx,%ebx
ffffffff8040f2ec:	4d 01 c9             	add    %r9,%r9
ffffffff8040f2ef:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f2f0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040f2f6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040f2fc:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040f303:	41 80 
ffffffff8040f305:	49 89 de             	mov    %rbx,%r14
ffffffff8040f308:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f30c:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8040f30f:	75 df                	jne    ffffffff8040f2f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1620>
    if (current_col_ == num_cols_) {
ffffffff8040f311:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040f314:	0f 84 8e 18 00 00    	je     ffffffff80410ba8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ed8>
    current_col_ = i;
ffffffff8040f31a:	89 15 4c ed 00 00    	mov    %edx,0xed4c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f320:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040f324:	0f 84 9d 18 00 00    	je     ffffffff80410bc7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ef7>
ffffffff8040f32a:	85 d2                	test   %edx,%edx
ffffffff8040f32c:	74 09                	je     ffffffff8040f337 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1667>
ffffffff8040f32e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040f331:	0f 86 99 1c 00 00    	jbe    ffffffff80410fd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3300>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f337:	83 c6 01             	add    $0x1,%esi
ffffffff8040f33a:	39 ce                	cmp    %ecx,%esi
ffffffff8040f33c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040f33f:	89 ce                	mov    %ecx,%esi
ffffffff8040f341:	41 89 d1             	mov    %edx,%r9d
ffffffff8040f344:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040f347:	39 c1                	cmp    %eax,%ecx
ffffffff8040f349:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040f34c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040f34e:	85 c0                	test   %eax,%eax
ffffffff8040f350:	0f 85 1a ff ff ff    	jne    ffffffff8040f270 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x15a0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f356:	85 ff                	test   %edi,%edi
ffffffff8040f358:	74 67                	je     ffffffff8040f3c1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x16f1>
ffffffff8040f35a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f35d:	44 8b 1d 00 ed 00 00 	mov    0xed00(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f364:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040f36b:	31 f6                	xor    %esi,%esi
ffffffff8040f36d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040f371:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f375:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040f37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040f380:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f383:	89 f2                	mov    %esi,%edx
ffffffff8040f385:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040f389:	45 85 db             	test   %r11d,%r11d
ffffffff8040f38c:	0f 84 2e 1b 00 00    	je     ffffffff80410ec0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x31f0>
ffffffff8040f392:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f398:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040f39c:	89 d6                	mov    %edx,%esi
ffffffff8040f39e:	83 c2 01             	add    $0x1,%edx
ffffffff8040f3a1:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040f3a5:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040f3ac:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f3ad:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040f3b0:	75 e6                	jne    ffffffff8040f398 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x16c8>
ffffffff8040f3b2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040f3b9:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f3bc:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040f3bf:	75 bf                	jne    ffffffff8040f380 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x16b0>
    if (current_col_ != 0) {
ffffffff8040f3c1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040f3c4:	74 3a                	je     ffffffff8040f400 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1730>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f3c6:	8b 0d 98 ec 00 00    	mov    0xec98(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f3cc:	85 c9                	test   %ecx,%ecx
ffffffff8040f3ce:	74 30                	je     ffffffff8040f400 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1730>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f3d0:	89 ca                	mov    %ecx,%edx
ffffffff8040f3d2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040f3d6:	0f af d7             	imul   %edi,%edx
ffffffff8040f3d9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f3dd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040f3e3:	01 d1                	add    %edx,%ecx
ffffffff8040f3e5:	0f 1f 00             	nopl   (%rax)
ffffffff8040f3e8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040f3eb:	89 d6                	mov    %edx,%esi
ffffffff8040f3ed:	83 c2 01             	add    $0x1,%edx
ffffffff8040f3f0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f3f4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040f3fb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f3fc:	39 ca                	cmp    %ecx,%edx
ffffffff8040f3fe:	75 e8                	jne    ffffffff8040f3e8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1718>
  vga_output << " rflags : " << args->rflags << "\n";
ffffffff8040f400:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8040f404:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040f409:	48 8b 40 10          	mov    0x10(%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040f40d:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff8040f410:	48 89 c6             	mov    %rax,%rsi
    num_len++;
ffffffff8040f413:	89 d1                	mov    %edx,%ecx
    buffer[i] = num % base;
ffffffff8040f415:	83 e6 0f             	and    $0xf,%esi
ffffffff8040f418:	40 88 74 14 4b       	mov    %sil,0x4b(%rsp,%rdx,1)
ffffffff8040f41d:	48 89 c6             	mov    %rax,%rsi
    num /= base;
ffffffff8040f420:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040f424:	48 83 fe 0f          	cmp    $0xf,%rsi
ffffffff8040f428:	76 0f                	jbe    ffffffff8040f439 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1769>
ffffffff8040f42a:	48 83 c2 01          	add    $0x1,%rdx
  for (size_t i = 0; i < size; i++) {
ffffffff8040f42e:	48 83 fa 15          	cmp    $0x15,%rdx
ffffffff8040f432:	75 dc                	jne    ffffffff8040f410 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1740>
ffffffff8040f434:	b9 14 00 00 00       	mov    $0x14,%ecx
  if (num != 0) {
ffffffff8040f439:	48 85 c0             	test   %rax,%rax
ffffffff8040f43c:	0f 85 fe 23 00 00    	jne    ffffffff80411840 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3b70>
    str[offset++] = '0';
ffffffff8040f442:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040f448:	89 ce                	mov    %ecx,%esi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040f44a:	42 8d 7c 39 ff       	lea    -0x1(%rcx,%r15,1),%edi
    str[offset++] = '0';
ffffffff8040f44f:	4c 89 fa             	mov    %r15,%rdx
ffffffff8040f452:	66 44 89 64 24 38    	mov    %r12w,0x38(%rsp)
ffffffff8040f458:	4c 01 fe             	add    %r15,%rsi
ffffffff8040f45b:	eb 12                	jmp    ffffffff8040f46f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x179f>
ffffffff8040f45d:	0f 1f 00             	nopl   (%rax)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040f460:	83 c0 37             	add    $0x37,%eax
ffffffff8040f463:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f467:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040f46a:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040f46d:	74 1c                	je     ffffffff8040f48b <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x17bb>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040f46f:	89 f8                	mov    %edi,%eax
ffffffff8040f471:	29 d0                	sub    %edx,%eax
ffffffff8040f473:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff8040f478:	3c 09                	cmp    $0x9,%al
ffffffff8040f47a:	7f e4                	jg     ffffffff8040f460 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1790>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040f47c:	83 c0 30             	add    $0x30,%eax
ffffffff8040f47f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040f483:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040f486:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040f489:	75 e4                	jne    ffffffff8040f46f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x179f>
  str[num_len + offset] = 0;
ffffffff8040f48b:	8d 41 02             	lea    0x2(%rcx),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f48e:	4c 89 ff             	mov    %r15,%rdi
ffffffff8040f491:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff8040f496:	e8 25 dd ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040f49b:	85 c0                	test   %eax,%eax
ffffffff8040f49d:	0f 84 b9 23 00 00    	je     ffffffff8041185c <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3b8c>
ffffffff8040f4a3:	44 8b 25 b6 eb 00 00 	mov    0xebb6(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f4aa:	44 8b 15 b3 eb 00 00 	mov    0xebb3(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f4b1:	4d 89 fb             	mov    %r15,%r11
ffffffff8040f4b4:	44 8b 0d b1 eb 00 00 	mov    0xebb1(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040f4bb:	8b 3d a7 eb 00 00    	mov    0xeba7(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f4c1:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040f4c6:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040f4ca:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f4ce:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040f4d3:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040f4d7:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040f4de:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040f4e3:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f4e7:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f4ec:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f4ef:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f4f3:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f4f7:	4c 01 ea             	add    %r13,%rdx
ffffffff8040f4fa:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040f501:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040f506:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040f50d:	80 
ffffffff8040f50e:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040f513:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f518:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040f51b:	89 c2                	mov    %eax,%edx
ffffffff8040f51d:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040f520:	39 c1                	cmp    %eax,%ecx
ffffffff8040f522:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f525:	39 c1                	cmp    %eax,%ecx
ffffffff8040f527:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f52a:	85 d2                	test   %edx,%edx
ffffffff8040f52c:	0f 84 be 1d 00 00    	je     ffffffff804112f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3620>
ffffffff8040f532:	83 ea 01             	sub    $0x1,%edx
ffffffff8040f535:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040f538:	eb 16                	jmp    ffffffff8040f550 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1880>
ffffffff8040f53a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040f540:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040f544:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040f547:	0f 84 a3 1d 00 00    	je     ffffffff804112f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3620>
ffffffff8040f54d:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040f550:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040f555:	44 89 c6             	mov    %r8d,%esi
ffffffff8040f558:	75 e6                	jne    ffffffff8040f540 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1870>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f55a:	39 f0                	cmp    %esi,%eax
ffffffff8040f55c:	89 f2                	mov    %esi,%edx
ffffffff8040f55e:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040f561:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040f564:	0f 84 e6 1c 00 00    	je     ffffffff80411250 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3580>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f56a:	44 01 ca             	add    %r9d,%edx
ffffffff8040f56d:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040f570:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040f574:	41 39 d1             	cmp    %edx,%r9d
ffffffff8040f577:	0f 83 68 1d 00 00    	jae    ffffffff804112e5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3615>
ffffffff8040f57d:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040f580:	f7 d3                	not    %ebx
ffffffff8040f582:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040f585:	89 fb                	mov    %edi,%ebx
ffffffff8040f587:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040f58b:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040f58f:	49 01 d9             	add    %rbx,%r9
ffffffff8040f592:	31 db                	xor    %ebx,%ebx
ffffffff8040f594:	4d 01 c9             	add    %r9,%r9
ffffffff8040f597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040f59e:	00 00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f5a0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040f5a6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040f5ac:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040f5b3:	41 80 
ffffffff8040f5b5:	49 89 de             	mov    %rbx,%r14
ffffffff8040f5b8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f5bc:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8040f5bf:	75 df                	jne    ffffffff8040f5a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x18d0>
    if (current_col_ == num_cols_) {
ffffffff8040f5c1:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040f5c4:	0f 84 56 1c 00 00    	je     ffffffff80411220 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3550>
    current_col_ = i;
ffffffff8040f5ca:	89 15 9c ea 00 00    	mov    %edx,0xea9c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f5d0:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040f5d4:	0f 84 65 1c 00 00    	je     ffffffff8041123f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x356f>
ffffffff8040f5da:	85 d2                	test   %edx,%edx
ffffffff8040f5dc:	74 09                	je     ffffffff8040f5e7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1917>
ffffffff8040f5de:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040f5e1:	0f 86 11 1e 00 00    	jbe    ffffffff804113f8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3728>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f5e7:	83 c6 01             	add    $0x1,%esi
ffffffff8040f5ea:	39 ce                	cmp    %ecx,%esi
ffffffff8040f5ec:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040f5ef:	89 ce                	mov    %ecx,%esi
ffffffff8040f5f1:	41 89 d1             	mov    %edx,%r9d
ffffffff8040f5f4:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040f5f7:	39 c1                	cmp    %eax,%ecx
ffffffff8040f5f9:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040f5fc:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040f5fe:	85 c0                	test   %eax,%eax
ffffffff8040f600:	0f 85 12 ff ff ff    	jne    ffffffff8040f518 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1848>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f606:	85 ff                	test   %edi,%edi
ffffffff8040f608:	74 67                	je     ffffffff8040f671 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x19a1>
ffffffff8040f60a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f60d:	44 8b 1d 50 ea 00 00 	mov    0xea50(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f614:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040f61b:	31 f6                	xor    %esi,%esi
ffffffff8040f61d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040f621:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f625:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040f62b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040f630:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f633:	89 f2                	mov    %esi,%edx
ffffffff8040f635:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040f639:	45 85 db             	test   %r11d,%r11d
ffffffff8040f63c:	0f 84 ee 1c 00 00    	je     ffffffff80411330 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3660>
ffffffff8040f642:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f648:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040f64c:	89 d6                	mov    %edx,%esi
ffffffff8040f64e:	83 c2 01             	add    $0x1,%edx
ffffffff8040f651:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040f655:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040f65c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f65d:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040f660:	75 e6                	jne    ffffffff8040f648 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1978>
ffffffff8040f662:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040f669:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f66c:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040f66f:	75 bf                	jne    ffffffff8040f630 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1960>
    if (current_col_ != 0) {
ffffffff8040f671:	45 85 c9             	test   %r9d,%r9d
ffffffff8040f674:	74 3a                	je     ffffffff8040f6b0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x19e0>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f676:	8b 0d e8 e9 00 00    	mov    0xe9e8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f67c:	85 c9                	test   %ecx,%ecx
ffffffff8040f67e:	74 30                	je     ffffffff8040f6b0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x19e0>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f680:	89 fa                	mov    %edi,%edx
ffffffff8040f682:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040f686:	0f af d1             	imul   %ecx,%edx
ffffffff8040f689:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f68d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040f693:	01 d1                	add    %edx,%ecx
ffffffff8040f695:	0f 1f 00             	nopl   (%rax)
ffffffff8040f698:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040f69b:	89 d6                	mov    %edx,%esi
ffffffff8040f69d:	83 c2 01             	add    $0x1,%edx
ffffffff8040f6a0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f6a4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040f6ab:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f6ac:	39 d1                	cmp    %edx,%ecx
ffffffff8040f6ae:	75 e8                	jne    ffffffff8040f698 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x19c8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f6b0:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040f6b7:	e8 04 db ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040f6bc:	85 c0                	test   %eax,%eax
ffffffff8040f6be:	0f 84 3c 23 00 00    	je     ffffffff80411a00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d30>
ffffffff8040f6c4:	44 8b 25 95 e9 00 00 	mov    0xe995(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f6cb:	44 8b 15 92 e9 00 00 	mov    0xe992(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f6d2:	49 c7 c3 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r11
ffffffff8040f6d9:	44 8b 0d 8c e9 00 00 	mov    0xe98c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040f6e0:	8b 3d 82 e9 00 00    	mov    0xe982(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f6e6:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040f6eb:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040f6ef:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f6f3:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040f6f8:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040f6fc:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040f703:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040f708:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f70c:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f711:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f714:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f718:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f71c:	4c 01 ea             	add    %r13,%rdx
ffffffff8040f71f:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040f726:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040f72b:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040f732:	80 
ffffffff8040f733:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040f738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040f73f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f740:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040f743:	89 c2                	mov    %eax,%edx
ffffffff8040f745:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040f748:	39 c1                	cmp    %eax,%ecx
ffffffff8040f74a:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f74d:	39 c1                	cmp    %eax,%ecx
ffffffff8040f74f:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f752:	85 d2                	test   %edx,%edx
ffffffff8040f754:	0f 84 a6 1a 00 00    	je     ffffffff80411200 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3530>
ffffffff8040f75a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040f75d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040f760:	eb 16                	jmp    ffffffff8040f778 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1aa8>
ffffffff8040f762:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040f768:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040f76c:	49 39 d0             	cmp    %rdx,%r8
ffffffff8040f76f:	0f 84 8b 1a 00 00    	je     ffffffff80411200 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3530>
ffffffff8040f775:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040f778:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040f77d:	44 89 c6             	mov    %r8d,%esi
ffffffff8040f780:	75 e6                	jne    ffffffff8040f768 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1a98>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f782:	39 f0                	cmp    %esi,%eax
ffffffff8040f784:	89 f2                	mov    %esi,%edx
ffffffff8040f786:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040f789:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040f78c:	0f 84 ce 19 00 00    	je     ffffffff80411160 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3490>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f792:	44 01 ca             	add    %r9d,%edx
ffffffff8040f795:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040f798:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040f79c:	44 39 ca             	cmp    %r9d,%edx
ffffffff8040f79f:	0f 86 50 1a 00 00    	jbe    ffffffff804111f5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3525>
ffffffff8040f7a5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040f7a8:	f7 d3                	not    %ebx
ffffffff8040f7aa:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040f7ad:	89 fb                	mov    %edi,%ebx
ffffffff8040f7af:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040f7b3:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040f7b7:	49 01 d9             	add    %rbx,%r9
ffffffff8040f7ba:	31 db                	xor    %ebx,%ebx
ffffffff8040f7bc:	4d 01 c9             	add    %r9,%r9
ffffffff8040f7bf:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f7c0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040f7c6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040f7cc:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040f7d3:	41 80 
ffffffff8040f7d5:	49 89 de             	mov    %rbx,%r14
ffffffff8040f7d8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f7dc:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8040f7df:	75 df                	jne    ffffffff8040f7c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1af0>
    if (current_col_ == num_cols_) {
ffffffff8040f7e1:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040f7e4:	0f 84 36 19 00 00    	je     ffffffff80411120 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3450>
    current_col_ = i;
ffffffff8040f7ea:	89 15 7c e8 00 00    	mov    %edx,0xe87c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040f7f0:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040f7f4:	0f 84 45 19 00 00    	je     ffffffff8041113f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x346f>
ffffffff8040f7fa:	85 d2                	test   %edx,%edx
ffffffff8040f7fc:	74 09                	je     ffffffff8040f807 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b37>
ffffffff8040f7fe:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040f801:	0f 86 89 1b 00 00    	jbe    ffffffff80411390 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x36c0>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040f807:	83 c6 01             	add    $0x1,%esi
ffffffff8040f80a:	39 ce                	cmp    %ecx,%esi
ffffffff8040f80c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040f80f:	89 ce                	mov    %ecx,%esi
ffffffff8040f811:	41 89 d1             	mov    %edx,%r9d
ffffffff8040f814:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040f817:	39 c1                	cmp    %eax,%ecx
ffffffff8040f819:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040f81c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040f81e:	85 c0                	test   %eax,%eax
ffffffff8040f820:	0f 85 1a ff ff ff    	jne    ffffffff8040f740 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1a70>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f826:	85 ff                	test   %edi,%edi
ffffffff8040f828:	74 67                	je     ffffffff8040f891 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1bc1>
ffffffff8040f82a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f82d:	44 8b 1d 30 e8 00 00 	mov    0xe830(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f834:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040f83b:	31 f6                	xor    %esi,%esi
ffffffff8040f83d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040f841:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f845:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040f84b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040f850:	49 89 c8             	mov    %rcx,%r8
ffffffff8040f853:	89 f2                	mov    %esi,%edx
ffffffff8040f855:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040f859:	45 85 db             	test   %r11d,%r11d
ffffffff8040f85c:	0f 84 0e 1b 00 00    	je     ffffffff80411370 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x36a0>
ffffffff8040f862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040f868:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040f86c:	89 d6                	mov    %edx,%esi
ffffffff8040f86e:	83 c2 01             	add    $0x1,%edx
ffffffff8040f871:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040f875:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040f87c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040f87d:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040f880:	75 e6                	jne    ffffffff8040f868 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b98>
ffffffff8040f882:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040f889:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040f88c:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040f88f:	75 bf                	jne    ffffffff8040f850 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b80>
    if (current_col_ != 0) {
ffffffff8040f891:	45 85 c9             	test   %r9d,%r9d
ffffffff8040f894:	74 3a                	je     ffffffff8040f8d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1c00>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f896:	8b 0d c8 e7 00 00    	mov    0xe7c8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f89c:	85 c9                	test   %ecx,%ecx
ffffffff8040f89e:	74 30                	je     ffffffff8040f8d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1c00>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040f8a0:	89 ca                	mov    %ecx,%edx
ffffffff8040f8a2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040f8a6:	0f af d7             	imul   %edi,%edx
ffffffff8040f8a9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040f8ad:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040f8b3:	01 d1                	add    %edx,%ecx
ffffffff8040f8b5:	0f 1f 00             	nopl   (%rax)
ffffffff8040f8b8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040f8bb:	89 d6                	mov    %edx,%esi
ffffffff8040f8bd:	83 c2 01             	add    $0x1,%edx
ffffffff8040f8c0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040f8c4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040f8cb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040f8cc:	39 d1                	cmp    %edx,%ecx
ffffffff8040f8ce:	75 e8                	jne    ffffffff8040f8b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1be8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040f8d0:	48 c7 c7 54 b8 41 80 	mov    $0xffffffff8041b854,%rdi
ffffffff8040f8d7:	e8 e4 d8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040f8dc:	85 c0                	test   %eax,%eax
ffffffff8040f8de:	0f 84 d4 20 00 00    	je     ffffffff804119b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3ce8>
ffffffff8040f8e4:	44 8b 25 75 e7 00 00 	mov    0xe775(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040f8eb:	44 8b 15 72 e7 00 00 	mov    0xe772(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040f8f2:	49 c7 c3 54 b8 41 80 	mov    $0xffffffff8041b854,%r11
ffffffff8040f8f9:	44 8b 0d 6c e7 00 00 	mov    0xe76c(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040f900:	8b 3d 62 e7 00 00    	mov    0xe762(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040f906:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040f90b:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040f90f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f913:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040f918:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040f91c:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040f923:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040f928:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040f92c:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040f931:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040f934:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040f938:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040f93c:	4c 01 ea             	add    %r13,%rdx
ffffffff8040f93f:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040f946:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040f94b:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040f952:	80 
ffffffff8040f953:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040f958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8040f95f:	00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040f960:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040f963:	89 c2                	mov    %eax,%edx
ffffffff8040f965:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040f968:	39 c1                	cmp    %eax,%ecx
ffffffff8040f96a:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040f96d:	39 c1                	cmp    %eax,%ecx
ffffffff8040f96f:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040f972:	85 d2                	test   %edx,%edx
ffffffff8040f974:	0f 84 8e 17 00 00    	je     ffffffff80411108 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3438>
ffffffff8040f97a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040f97d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040f980:	eb 16                	jmp    ffffffff8040f998 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1cc8>
ffffffff8040f982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040f988:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040f98c:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040f98f:	0f 84 73 17 00 00    	je     ffffffff80411108 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3438>
ffffffff8040f995:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040f998:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040f99d:	44 89 c6             	mov    %r8d,%esi
ffffffff8040f9a0:	75 e6                	jne    ffffffff8040f988 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1cb8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040f9a2:	39 f0                	cmp    %esi,%eax
ffffffff8040f9a4:	89 f2                	mov    %esi,%edx
ffffffff8040f9a6:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040f9a9:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040f9ac:	0f 84 b6 16 00 00    	je     ffffffff80411068 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3398>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f9b2:	44 01 ca             	add    %r9d,%edx
ffffffff8040f9b5:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040f9b8:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040f9bc:	44 39 ca             	cmp    %r9d,%edx
ffffffff8040f9bf:	0f 86 38 17 00 00    	jbe    ffffffff804110fd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x342d>
ffffffff8040f9c5:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040f9c8:	f7 d3                	not    %ebx
ffffffff8040f9ca:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040f9cd:	89 fb                	mov    %edi,%ebx
ffffffff8040f9cf:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040f9d3:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040f9d7:	49 01 d9             	add    %rbx,%r9
ffffffff8040f9da:	31 db                	xor    %ebx,%ebx
ffffffff8040f9dc:	4d 01 c9             	add    %r9,%r9
ffffffff8040f9df:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040f9e0:	66 45 0f be 34 1b    	movsbw (%r11,%rbx,1),%r14w
ffffffff8040f9e6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8040f9ec:	66 45 89 b4 59 70 e0 	mov    %r14w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040f9f3:	41 80 
ffffffff8040f9f5:	49 89 de             	mov    %rbx,%r14
ffffffff8040f9f8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040f9fc:	4c 39 f5             	cmp    %r14,%rbp
ffffffff8040f9ff:	75 df                	jne    ffffffff8040f9e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1d10>
    if (current_col_ == num_cols_) {
ffffffff8040fa01:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040fa04:	0f 84 2e 16 00 00    	je     ffffffff80411038 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3368>
    current_col_ = i;
ffffffff8040fa0a:	89 15 5c e6 00 00    	mov    %edx,0xe65c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040fa10:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040fa14:	0f 84 3d 16 00 00    	je     ffffffff80411057 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3387>
ffffffff8040fa1a:	85 d2                	test   %edx,%edx
ffffffff8040fa1c:	74 09                	je     ffffffff8040fa27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1d57>
ffffffff8040fa1e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040fa21:	0f 86 39 1a 00 00    	jbe    ffffffff80411460 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3790>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040fa27:	83 c6 01             	add    $0x1,%esi
ffffffff8040fa2a:	39 ce                	cmp    %ecx,%esi
ffffffff8040fa2c:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040fa2f:	89 ce                	mov    %ecx,%esi
ffffffff8040fa31:	41 89 d1             	mov    %edx,%r9d
ffffffff8040fa34:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040fa37:	39 c8                	cmp    %ecx,%eax
ffffffff8040fa39:	0f 46 c8             	cmovbe %eax,%ecx
ffffffff8040fa3c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040fa3e:	85 c0                	test   %eax,%eax
ffffffff8040fa40:	0f 85 1a ff ff ff    	jne    ffffffff8040f960 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1c90>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fa46:	85 ff                	test   %edi,%edi
ffffffff8040fa48:	74 67                	je     ffffffff8040fab1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1de1>
ffffffff8040fa4a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fa4d:	44 8b 1d 10 e6 00 00 	mov    0xe610(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040fa54:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040fa5b:	31 f6                	xor    %esi,%esi
ffffffff8040fa5d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040fa61:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040fa65:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040fa6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040fa70:	49 89 c8             	mov    %rcx,%r8
ffffffff8040fa73:	89 f2                	mov    %esi,%edx
ffffffff8040fa75:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040fa79:	45 85 db             	test   %r11d,%r11d
ffffffff8040fa7c:	0f 84 ce 18 00 00    	je     ffffffff80411350 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3680>
ffffffff8040fa82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040fa88:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040fa8c:	89 d6                	mov    %edx,%esi
ffffffff8040fa8e:	83 c2 01             	add    $0x1,%edx
ffffffff8040fa91:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040fa95:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040fa9c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fa9d:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040faa0:	75 e6                	jne    ffffffff8040fa88 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1db8>
ffffffff8040faa2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040faa9:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040faac:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040faaf:	75 bf                	jne    ffffffff8040fa70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1da0>
    if (current_col_ != 0) {
ffffffff8040fab1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040fab4:	74 3a                	je     ffffffff8040faf0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e20>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fab6:	8b 0d a8 e5 00 00    	mov    0xe5a8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040fabc:	85 c9                	test   %ecx,%ecx
ffffffff8040fabe:	74 30                	je     ffffffff8040faf0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e20>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040fac0:	89 fa                	mov    %edi,%edx
ffffffff8040fac2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040fac6:	0f af d1             	imul   %ecx,%edx
ffffffff8040fac9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040facd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040fad3:	01 d1                	add    %edx,%ecx
ffffffff8040fad5:	0f 1f 00             	nopl   (%rax)
ffffffff8040fad8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040fadb:	89 d6                	mov    %edx,%esi
ffffffff8040fadd:	83 c2 01             	add    $0x1,%edx
ffffffff8040fae0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040fae4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040faeb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040faec:	39 d1                	cmp    %edx,%ecx
ffffffff8040faee:	75 e8                	jne    ffffffff8040fad8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e08>
  vga_output << " rsp : " << args->rsp << "\n";
ffffffff8040faf0:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8040faf4:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040faf9:	48 8b 40 18          	mov    0x18(%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040fafd:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff8040fb00:	48 89 c6             	mov    %rax,%rsi
    num_len++;
ffffffff8040fb03:	89 d1                	mov    %edx,%ecx
    buffer[i] = num % base;
ffffffff8040fb05:	83 e6 0f             	and    $0xf,%esi
ffffffff8040fb08:	40 88 74 14 4b       	mov    %sil,0x4b(%rsp,%rdx,1)
ffffffff8040fb0d:	48 89 c6             	mov    %rax,%rsi
    num /= base;
ffffffff8040fb10:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff8040fb14:	48 83 fe 0f          	cmp    $0xf,%rsi
ffffffff8040fb18:	76 0f                	jbe    ffffffff8040fb29 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e59>
ffffffff8040fb1a:	48 83 c2 01          	add    $0x1,%rdx
  for (size_t i = 0; i < size; i++) {
ffffffff8040fb1e:	48 83 fa 15          	cmp    $0x15,%rdx
ffffffff8040fb22:	75 dc                	jne    ffffffff8040fb00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e30>
ffffffff8040fb24:	b9 14 00 00 00       	mov    $0x14,%ecx
  if (num != 0) {
ffffffff8040fb29:	48 85 c0             	test   %rax,%rax
ffffffff8040fb2c:	0f 85 6e 1d 00 00    	jne    ffffffff804118a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3bd0>
    str[offset++] = '0';
ffffffff8040fb32:	41 bc 30 78 00 00    	mov    $0x7830,%r12d
ffffffff8040fb38:	89 ce                	mov    %ecx,%esi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040fb3a:	42 8d 7c 39 ff       	lea    -0x1(%rcx,%r15,1),%edi
    str[offset++] = '0';
ffffffff8040fb3f:	4c 89 fa             	mov    %r15,%rdx
ffffffff8040fb42:	66 44 89 64 24 38    	mov    %r12w,0x38(%rsp)
ffffffff8040fb48:	4c 01 fe             	add    %r15,%rsi
ffffffff8040fb4b:	eb 12                	jmp    ffffffff8040fb5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e8f>
ffffffff8040fb4d:	0f 1f 00             	nopl   (%rax)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff8040fb50:	83 c0 37             	add    $0x37,%eax
ffffffff8040fb53:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fb57:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040fb5a:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040fb5d:	74 1c                	je     ffffffff8040fb7b <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1eab>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8040fb5f:	89 f8                	mov    %edi,%eax
ffffffff8040fb61:	29 d0                	sub    %edx,%eax
ffffffff8040fb63:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff8040fb68:	3c 09                	cmp    $0x9,%al
ffffffff8040fb6a:	7f e4                	jg     ffffffff8040fb50 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e80>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8040fb6c:	83 c0 30             	add    $0x30,%eax
ffffffff8040fb6f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8040fb73:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8040fb76:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8040fb79:	75 e4                	jne    ffffffff8040fb5f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1e8f>
  str[num_len + offset] = 0;
ffffffff8040fb7b:	8d 41 02             	lea    0x2(%rcx),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040fb7e:	4c 89 ff             	mov    %r15,%rdi
ffffffff8040fb81:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff8040fb86:	e8 35 d6 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040fb8b:	85 c0                	test   %eax,%eax
ffffffff8040fb8d:	0f 84 29 1d 00 00    	je     ffffffff804118bc <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3bec>
ffffffff8040fb93:	44 8b 25 c6 e4 00 00 	mov    0xe4c6(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040fb9a:	44 8b 15 c3 e4 00 00 	mov    0xe4c3(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040fba1:	4d 89 fb             	mov    %r15,%r11
ffffffff8040fba4:	44 8b 0d c1 e4 00 00 	mov    0xe4c1(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040fbab:	8b 3d b7 e4 00 00    	mov    0xe4b7(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fbb1:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040fbb6:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040fbba:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040fbbe:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040fbc3:	4d 89 ee             	mov    %r13,%r14
ffffffff8040fbc6:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040fbca:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040fbd1:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040fbd6:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040fbda:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040fbdf:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040fbe2:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040fbe6:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040fbea:	4c 01 ea             	add    %r13,%rdx
ffffffff8040fbed:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040fbf4:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040fbf9:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040fc00:	80 
ffffffff8040fc01:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040fc06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8040fc0d:	00 00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040fc10:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040fc13:	89 c2                	mov    %eax,%edx
ffffffff8040fc15:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040fc18:	39 c1                	cmp    %eax,%ecx
ffffffff8040fc1a:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040fc1d:	39 c1                	cmp    %eax,%ecx
ffffffff8040fc1f:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040fc22:	85 d2                	test   %edx,%edx
ffffffff8040fc24:	0f 84 76 1a 00 00    	je     ffffffff804116a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x39d0>
ffffffff8040fc2a:	83 ea 01             	sub    $0x1,%edx
ffffffff8040fc2d:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040fc30:	eb 16                	jmp    ffffffff8040fc48 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1f78>
ffffffff8040fc32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040fc38:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040fc3c:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040fc3f:	0f 84 5b 1a 00 00    	je     ffffffff804116a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x39d0>
ffffffff8040fc45:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040fc48:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040fc4d:	44 89 c6             	mov    %r8d,%esi
ffffffff8040fc50:	75 e6                	jne    ffffffff8040fc38 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1f68>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040fc52:	39 f0                	cmp    %esi,%eax
ffffffff8040fc54:	89 f2                	mov    %esi,%edx
ffffffff8040fc56:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040fc59:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040fc5c:	0f 84 9e 19 00 00    	je     ffffffff80411600 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3930>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040fc62:	44 01 ca             	add    %r9d,%edx
ffffffff8040fc65:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040fc68:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040fc6c:	44 39 ca             	cmp    %r9d,%edx
ffffffff8040fc6f:	0f 86 20 1a 00 00    	jbe    ffffffff80411695 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x39c5>
ffffffff8040fc75:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040fc78:	f7 d3                	not    %ebx
ffffffff8040fc7a:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040fc7d:	89 fb                	mov    %edi,%ebx
ffffffff8040fc7f:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040fc83:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040fc87:	49 01 d9             	add    %rbx,%r9
ffffffff8040fc8a:	31 db                	xor    %ebx,%ebx
ffffffff8040fc8c:	4d 01 c9             	add    %r9,%r9
ffffffff8040fc8f:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040fc90:	66 45 0f be 2c 1b    	movsbw (%r11,%rbx,1),%r13w
ffffffff8040fc96:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff8040fc9c:	66 45 89 ac 59 70 e0 	mov    %r13w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040fca3:	41 80 
ffffffff8040fca5:	49 89 dd             	mov    %rbx,%r13
ffffffff8040fca8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040fcac:	4c 39 ed             	cmp    %r13,%rbp
ffffffff8040fcaf:	75 df                	jne    ffffffff8040fc90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1fc0>
    if (current_col_ == num_cols_) {
ffffffff8040fcb1:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040fcb4:	0f 84 06 19 00 00    	je     ffffffff804115c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x38f0>
    current_col_ = i;
ffffffff8040fcba:	89 15 ac e3 00 00    	mov    %edx,0xe3ac(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040fcc0:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040fcc4:	0f 84 15 19 00 00    	je     ffffffff804115df <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x390f>
ffffffff8040fcca:	85 d2                	test   %edx,%edx
ffffffff8040fccc:	74 09                	je     ffffffff8040fcd7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2007>
ffffffff8040fcce:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040fcd1:	0f 86 39 1a 00 00    	jbe    ffffffff80411710 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3a40>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040fcd7:	83 c6 01             	add    $0x1,%esi
ffffffff8040fcda:	39 ce                	cmp    %ecx,%esi
ffffffff8040fcdc:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040fcdf:	89 ce                	mov    %ecx,%esi
ffffffff8040fce1:	41 89 d1             	mov    %edx,%r9d
ffffffff8040fce4:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040fce7:	39 c8                	cmp    %ecx,%eax
ffffffff8040fce9:	0f 46 c8             	cmovbe %eax,%ecx
ffffffff8040fcec:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040fcee:	85 c0                	test   %eax,%eax
ffffffff8040fcf0:	0f 85 1a ff ff ff    	jne    ffffffff8040fc10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1f40>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fcf6:	85 ff                	test   %edi,%edi
ffffffff8040fcf8:	74 67                	je     ffffffff8040fd61 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2091>
ffffffff8040fcfa:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fcfd:	44 8b 1d 60 e3 00 00 	mov    0xe360(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040fd04:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040fd0b:	31 f6                	xor    %esi,%esi
ffffffff8040fd0d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040fd11:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040fd15:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040fd1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040fd20:	49 89 c8             	mov    %rcx,%r8
ffffffff8040fd23:	89 f2                	mov    %esi,%edx
ffffffff8040fd25:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040fd29:	45 85 db             	test   %r11d,%r11d
ffffffff8040fd2c:	0f 84 9e 19 00 00    	je     ffffffff804116d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3a00>
ffffffff8040fd32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040fd38:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040fd3c:	89 d6                	mov    %edx,%esi
ffffffff8040fd3e:	83 c2 01             	add    $0x1,%edx
ffffffff8040fd41:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040fd45:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040fd4c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040fd4d:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040fd50:	75 e6                	jne    ffffffff8040fd38 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2068>
ffffffff8040fd52:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040fd59:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040fd5c:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040fd5f:	75 bf                	jne    ffffffff8040fd20 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2050>
    if (current_col_ != 0) {
ffffffff8040fd61:	45 85 c9             	test   %r9d,%r9d
ffffffff8040fd64:	74 3a                	je     ffffffff8040fda0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x20d0>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fd66:	8b 0d f8 e2 00 00    	mov    0xe2f8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040fd6c:	85 c9                	test   %ecx,%ecx
ffffffff8040fd6e:	74 30                	je     ffffffff8040fda0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x20d0>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040fd70:	89 ca                	mov    %ecx,%edx
ffffffff8040fd72:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040fd76:	0f af d7             	imul   %edi,%edx
ffffffff8040fd79:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040fd7d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040fd83:	01 d1                	add    %edx,%ecx
ffffffff8040fd85:	0f 1f 00             	nopl   (%rax)
ffffffff8040fd88:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040fd8b:	89 d6                	mov    %edx,%esi
ffffffff8040fd8d:	83 c2 01             	add    $0x1,%edx
ffffffff8040fd90:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040fd94:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040fd9b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040fd9c:	39 d1                	cmp    %edx,%ecx
ffffffff8040fd9e:	75 e8                	jne    ffffffff8040fd88 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x20b8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8040fda0:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8040fda7:	e8 14 d4 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(s);
ffffffff8040fdac:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8040fdb3:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8040fdb8:	48 c7 c6 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rsi
ffffffff8040fdbf:	89 c2                	mov    %eax,%edx
ffffffff8040fdc1:	e8 ca a5 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff8040fdc6:	48 c7 c7 5c b8 41 80 	mov    $0xffffffff8041b85c,%rdi
ffffffff8040fdcd:	e8 ee d3 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8040fdd2:	85 c0                	test   %eax,%eax
ffffffff8040fdd4:	0f 84 f6 1b 00 00    	je     ffffffff804119d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d00>
ffffffff8040fdda:	44 8b 25 7f e2 00 00 	mov    0xe27f(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8040fde1:	44 8b 15 7c e2 00 00 	mov    0xe27c(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040fde8:	49 c7 c3 5c b8 41 80 	mov    $0xffffffff8041b85c,%r11
ffffffff8040fdef:	44 8b 0d 76 e2 00 00 	mov    0xe276(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8040fdf6:	8b 3d 6c e2 00 00    	mov    0xe26c(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8040fdfc:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8040fe01:	45 8d 6a ff          	lea    -0x1(%r10),%r13d
ffffffff8040fe05:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040fe09:	44 89 6c 24 28       	mov    %r13d,0x28(%rsp)
ffffffff8040fe0e:	4d 89 ee             	mov    %r13,%r14
ffffffff8040fe11:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8040fe15:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff8040fe1c:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff8040fe21:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8040fe25:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8040fe2a:	48 89 d1             	mov    %rdx,%rcx
ffffffff8040fe2d:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8040fe31:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8040fe35:	4c 01 ea             	add    %r13,%rdx
ffffffff8040fe38:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff8040fe3f:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
ffffffff8040fe44:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff8040fe4b:	80 
ffffffff8040fe4c:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff8040fe51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8040fe58:	44 89 d1             	mov    %r10d,%ecx
ffffffff8040fe5b:	89 c2                	mov    %eax,%edx
ffffffff8040fe5d:	44 29 c9             	sub    %r9d,%ecx
ffffffff8040fe60:	39 c1                	cmp    %eax,%ecx
ffffffff8040fe62:	0f 47 c8             	cmova  %eax,%ecx
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8040fe65:	39 c1                	cmp    %eax,%ecx
ffffffff8040fe67:	0f 46 d1             	cmovbe %ecx,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8040fe6a:	85 d2                	test   %edx,%edx
ffffffff8040fe6c:	0f 84 2e 17 00 00    	je     ffffffff804115a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x38d0>
ffffffff8040fe72:	83 ea 01             	sub    $0x1,%edx
ffffffff8040fe75:	45 31 c0             	xor    %r8d,%r8d
ffffffff8040fe78:	eb 16                	jmp    ffffffff8040fe90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x21c0>
ffffffff8040fe7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff8040fe80:	49 8d 70 01          	lea    0x1(%r8),%rsi
ffffffff8040fe84:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8040fe87:	0f 84 13 17 00 00    	je     ffffffff804115a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x38d0>
ffffffff8040fe8d:	49 89 f0             	mov    %rsi,%r8
      if (str_[i] == c) {
ffffffff8040fe90:	43 80 3c 03 0a       	cmpb   $0xa,(%r11,%r8,1)
ffffffff8040fe95:	44 89 c6             	mov    %r8d,%esi
ffffffff8040fe98:	75 e6                	jne    ffffffff8040fe80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x21b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8040fe9a:	39 f0                	cmp    %esi,%eax
ffffffff8040fe9c:	89 f2                	mov    %esi,%edx
ffffffff8040fe9e:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff8040fea1:	41 39 fc             	cmp    %edi,%r12d
ffffffff8040fea4:	0f 84 56 16 00 00    	je     ffffffff80411500 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3830>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040feaa:	44 01 ca             	add    %r9d,%edx
ffffffff8040fead:	44 39 d2             	cmp    %r10d,%edx
ffffffff8040feb0:	41 0f 47 d2          	cmova  %r10d,%edx
ffffffff8040feb4:	44 39 ca             	cmp    %r9d,%edx
ffffffff8040feb7:	0f 86 d8 16 00 00    	jbe    ffffffff80411595 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x38c5>
ffffffff8040febd:	44 89 cb             	mov    %r9d,%ebx
ffffffff8040fec0:	f7 d3                	not    %ebx
ffffffff8040fec2:	8d 2c 13             	lea    (%rbx,%rdx,1),%ebp
ffffffff8040fec5:	89 fb                	mov    %edi,%ebx
ffffffff8040fec7:	48 8d 1c 9b          	lea    (%rbx,%rbx,4),%rbx
ffffffff8040fecb:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff8040fecf:	49 01 d9             	add    %rbx,%r9
ffffffff8040fed2:	31 db                	xor    %ebx,%ebx
ffffffff8040fed4:	4d 01 c9             	add    %r9,%r9
ffffffff8040fed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8040fede:	00 00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8040fee0:	66 45 0f be 2c 1b    	movsbw (%r11,%rbx,1),%r13w
ffffffff8040fee6:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff8040feec:	66 45 89 ac 59 70 e0 	mov    %r13w,-0x7fbe1f90(%r9,%rbx,2)
ffffffff8040fef3:	41 80 
ffffffff8040fef5:	49 89 dd             	mov    %rbx,%r13
ffffffff8040fef8:	48 83 c3 01          	add    $0x1,%rbx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8040fefc:	4c 39 ed             	cmp    %r13,%rbp
ffffffff8040feff:	75 df                	jne    ffffffff8040fee0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2210>
    if (current_col_ == num_cols_) {
ffffffff8040ff01:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040ff04:	0f 84 be 15 00 00    	je     ffffffff804114c8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x37f8>
    current_col_ = i;
ffffffff8040ff0a:	89 15 5c e1 00 00    	mov    %edx,0xe15c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8040ff10:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff8040ff14:	0f 84 cd 15 00 00    	je     ffffffff804114e7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3817>
ffffffff8040ff1a:	85 d2                	test   %edx,%edx
ffffffff8040ff1c:	74 09                	je     ffffffff8040ff27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2257>
ffffffff8040ff1e:	83 ff 18             	cmp    $0x18,%edi
ffffffff8040ff21:	0f 86 51 18 00 00    	jbe    ffffffff80411778 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3aa8>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8040ff27:	83 c6 01             	add    $0x1,%esi
ffffffff8040ff2a:	41 89 d1             	mov    %edx,%r9d
ffffffff8040ff2d:	39 ce                	cmp    %ecx,%esi
ffffffff8040ff2f:	0f 46 ce             	cmovbe %esi,%ecx
    str_ += n;
ffffffff8040ff32:	89 ce                	mov    %ecx,%esi
ffffffff8040ff34:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8040ff37:	39 c1                	cmp    %eax,%ecx
ffffffff8040ff39:	0f 47 c8             	cmova  %eax,%ecx
ffffffff8040ff3c:	29 c8                	sub    %ecx,%eax
    while (!s.empty()) {
ffffffff8040ff3e:	85 c0                	test   %eax,%eax
ffffffff8040ff40:	0f 85 12 ff ff ff    	jne    ffffffff8040fe58 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2188>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ff46:	85 ff                	test   %edi,%edi
ffffffff8040ff48:	74 67                	je     ffffffff8040ffb1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x22e1>
ffffffff8040ff4a:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ff4d:	44 8b 1d 10 e1 00 00 	mov    0xe110(%rip),%r11d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040ff54:	48 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%rcx
ffffffff8040ff5b:	31 f6                	xor    %esi,%esi
ffffffff8040ff5d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8040ff61:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040ff65:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff8040ff6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8040ff70:	49 89 c8             	mov    %rcx,%r8
ffffffff8040ff73:	89 f2                	mov    %esi,%edx
ffffffff8040ff75:	46 8d 14 1e          	lea    (%rsi,%r11,1),%r10d
ffffffff8040ff79:	45 85 db             	test   %r11d,%r11d
ffffffff8040ff7c:	0f 84 6e 17 00 00    	je     ffffffff804116f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3a20>
ffffffff8040ff82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8040ff88:	41 0f b7 18          	movzwl (%r8),%ebx
ffffffff8040ff8c:	89 d6                	mov    %edx,%esi
ffffffff8040ff8e:	83 c2 01             	add    $0x1,%edx
ffffffff8040ff91:	49 83 c0 02          	add    $0x2,%r8
ffffffff8040ff95:	66 89 9c 36 00 80 0b 	mov    %bx,0xb8000(%rsi,%rsi,1)
ffffffff8040ff9c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8040ff9d:	41 39 d2             	cmp    %edx,%r10d
ffffffff8040ffa0:	75 e6                	jne    ffffffff8040ff88 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x22b8>
ffffffff8040ffa2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8040ffa9:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8040ffac:	48 39 c8             	cmp    %rcx,%rax
ffffffff8040ffaf:	75 bf                	jne    ffffffff8040ff70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x22a0>
    if (current_col_ != 0) {
ffffffff8040ffb1:	45 85 c9             	test   %r9d,%r9d
ffffffff8040ffb4:	74 3a                	je     ffffffff8040fff0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2320>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040ffb6:	8b 0d a8 e0 00 00    	mov    0xe0a8(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8040ffbc:	85 c9                	test   %ecx,%ecx
ffffffff8040ffbe:	74 30                	je     ffffffff8040fff0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2320>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8040ffc0:	89 ca                	mov    %ecx,%edx
ffffffff8040ffc2:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff8040ffc6:	0f af d7             	imul   %edi,%edx
ffffffff8040ffc9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8040ffcd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8040ffd3:	01 d1                	add    %edx,%ecx
ffffffff8040ffd5:	0f 1f 00             	nopl   (%rax)
ffffffff8040ffd8:	0f b7 38             	movzwl (%rax),%edi
ffffffff8040ffdb:	89 d6                	mov    %edx,%esi
ffffffff8040ffdd:	83 c2 01             	add    $0x1,%edx
ffffffff8040ffe0:	48 83 c0 02          	add    $0x2,%rax
ffffffff8040ffe4:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff8040ffeb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8040ffec:	39 d1                	cmp    %edx,%ecx
ffffffff8040ffee:	75 e8                	jne    ffffffff8040ffd8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2308>
  vga_output << " ss : " << args->ss << "\n";
ffffffff8040fff0:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff8040fff4:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8040fff9:	48 8b 40 20          	mov    0x20(%rax),%rax
  VGAOutput<NUM_ROWS, NUM_COLS>& operator<<(Int s) {
ffffffff8040fffd:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff80410000:	48 89 c6             	mov    %rax,%rsi
    num_len++;
ffffffff80410003:	89 d1                	mov    %edx,%ecx
    buffer[i] = num % base;
ffffffff80410005:	83 e6 0f             	and    $0xf,%esi
ffffffff80410008:	40 88 74 14 4b       	mov    %sil,0x4b(%rsp,%rdx,1)
ffffffff8041000d:	48 89 c6             	mov    %rax,%rsi
    num /= base;
ffffffff80410010:	48 c1 e8 04          	shr    $0x4,%rax
    if (num == 0) {
ffffffff80410014:	48 83 fe 0f          	cmp    $0xf,%rsi
ffffffff80410018:	76 0f                	jbe    ffffffff80410029 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2359>
ffffffff8041001a:	48 83 c2 01          	add    $0x1,%rdx
  for (size_t i = 0; i < size; i++) {
ffffffff8041001e:	48 83 fa 15          	cmp    $0x15,%rdx
ffffffff80410022:	75 dc                	jne    ffffffff80410000 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2330>
ffffffff80410024:	b9 14 00 00 00       	mov    $0x14,%ecx
  if (num != 0) {
ffffffff80410029:	48 85 c0             	test   %rax,%rax
ffffffff8041002c:	0f 85 ce 17 00 00    	jne    ffffffff80411800 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3b30>
    str[offset++] = '0';
ffffffff80410032:	b8 30 78 00 00       	mov    $0x7830,%eax
ffffffff80410037:	89 ce                	mov    %ecx,%esi
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80410039:	42 8d 7c 39 ff       	lea    -0x1(%rcx,%r15,1),%edi
    str[offset++] = '0';
ffffffff8041003e:	4c 89 fa             	mov    %r15,%rdx
ffffffff80410041:	66 89 44 24 38       	mov    %ax,0x38(%rsp)
ffffffff80410046:	4c 01 fe             	add    %r15,%rsi
ffffffff80410049:	eb 14                	jmp    ffffffff8041005f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x238f>
ffffffff8041004b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80410050:	83 c0 37             	add    $0x37,%eax
ffffffff80410053:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80410057:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8041005a:	48 39 d6             	cmp    %rdx,%rsi
ffffffff8041005d:	74 1c                	je     ffffffff8041007b <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x23ab>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8041005f:	89 f8                	mov    %edi,%eax
ffffffff80410061:	29 d0                	sub    %edx,%eax
ffffffff80410063:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff80410068:	3c 09                	cmp    $0x9,%al
ffffffff8041006a:	7f e4                	jg     ffffffff80410050 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2380>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8041006c:	83 c0 30             	add    $0x30,%eax
ffffffff8041006f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80410073:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80410076:	48 39 d6             	cmp    %rdx,%rsi
ffffffff80410079:	75 e4                	jne    ffffffff8041005f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x238f>
  str[num_len + offset] = 0;
ffffffff8041007b:	8d 41 02             	lea    0x2(%rcx),%eax
ffffffff8041007e:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80410083:	4c 89 ff             	mov    %r15,%rdi
ffffffff80410086:	e8 35 d1 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(temp);
ffffffff8041008b:	4c 89 fe             	mov    %r15,%rsi
ffffffff8041008e:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff80410093:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff8041009a:	89 c2                	mov    %eax,%edx
ffffffff8041009c:	e8 ef a2 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff804100a1:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff804100a8:	e8 13 d1 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(s);
ffffffff804100ad:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff804100b2:	48 c7 c6 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rsi
ffffffff804100b9:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff804100c0:	89 c2                	mov    %eax,%edx
ffffffff804100c2:	e8 c9 a2 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
}
ffffffff804100c7:	48 83 c4 68          	add    $0x68,%rsp
ffffffff804100cb:	5b                   	pop    %rbx
ffffffff804100cc:	5d                   	pop    %rbp
ffffffff804100cd:	41 5c                	pop    %r12
ffffffff804100cf:	41 5d                	pop    %r13
ffffffff804100d1:	41 5e                	pop    %r14
ffffffff804100d3:	41 5f                	pop    %r15
ffffffff804100d5:	c3                   	retq   
ffffffff804100d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804100dd:	00 00 00 
      current_col_ = 0;
ffffffff804100e0:	c7 05 82 df 00 00 00 	movl   $0x0,0xdf82(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804100e7:	00 00 00 
      current_row_++;
ffffffff804100ea:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804100ed:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804100ef:	89 3d 73 df 00 00    	mov    %edi,0xdf73(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804100f5:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff804100f9:	0f 85 58 df ff ff    	jne    ffffffff8040e057 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x387>
ffffffff804100ff:	39 f1                	cmp    %esi,%ecx
    size_ -= min(n, size_);
ffffffff80410101:	41 89 d1             	mov    %edx,%r9d
ffffffff80410104:	0f 47 ce             	cmova  %esi,%ecx
    str_ += n;
ffffffff80410107:	89 ce                	mov    %ecx,%esi
ffffffff80410109:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff8041010c:	39 c8                	cmp    %ecx,%eax
ffffffff8041010e:	0f 46 c8             	cmovbe %eax,%ecx
ffffffff80410111:	29 c8                	sub    %ecx,%eax
ffffffff80410113:	e9 56 df ff ff       	jmpq   ffffffff8040e06e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x39e>
ffffffff80410118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041011f:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410120:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80410124:	76 51                	jbe    ffffffff80410177 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x24a7>
ffffffff80410126:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041012b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410130:	31 ed                	xor    %ebp,%ebp
ffffffff80410132:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410139:	45 85 d2             	test   %r10d,%r10d
ffffffff8041013c:	74 2b                	je     ffffffff80410169 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2499>
ffffffff8041013e:	89 44 24 10          	mov    %eax,0x10(%rsp)
ffffffff80410142:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410148:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041014f:	80 
ffffffff80410150:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410157:	41 80 
ffffffff80410159:	48 89 e8             	mov    %rbp,%rax
ffffffff8041015c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410160:	49 39 c5             	cmp    %rax,%r13
ffffffff80410163:	75 e3                	jne    ffffffff80410148 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2478>
ffffffff80410165:	8b 44 24 10          	mov    0x10(%rsp),%eax
ffffffff80410169:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410170:	48 3b 5c 24 28       	cmp    0x28(%rsp),%rbx
ffffffff80410175:	75 b9                	jne    ffffffff80410130 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2460>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410177:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff8041017c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041017f:	74 18                	je     ffffffff80410199 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x24c9>
ffffffff80410181:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410188:	31 ed                	xor    %ebp,%ebp
ffffffff8041018a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8041018e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410192:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
ffffffff80410197:	75 ef                	jne    ffffffff80410188 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x24b8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410199:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff8041019c:	83 ef 01             	sub    $0x1,%edi
ffffffff8041019f:	44 39 d2             	cmp    %r10d,%edx
ffffffff804101a2:	89 3d c0 de 00 00    	mov    %edi,0xdec0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804101a8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804101ac:	44 39 ca             	cmp    %r9d,%edx
ffffffff804101af:	0f 87 40 de ff ff    	ja     ffffffff8040dff5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x325>
ffffffff804101b5:	44 89 ca             	mov    %r9d,%edx
ffffffff804101b8:	e9 74 de ff ff       	jmpq   ffffffff8040e031 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x361>
ffffffff804101bd:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804101c0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804101c3:	75 4b                	jne    ffffffff80410210 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2540>
ffffffff804101c5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804101cb:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff804101d0:	89 c2                	mov    %eax,%edx
ffffffff804101d2:	e9 02 de ff ff       	jmpq   ffffffff8040dfd9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x309>
ffffffff804101d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804101de:	00 00 
      current_col_ = 0;
ffffffff804101e0:	c7 05 82 de 00 00 00 	movl   $0x0,0xde82(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804101e7:	00 00 00 
      current_row_++;
ffffffff804101ea:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804101ed:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804101ef:	89 3d 73 de 00 00    	mov    %edi,0xde73(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804101f5:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff804101f9:	0f 85 38 dc ff ff    	jne    ffffffff8040de37 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x167>
ffffffff804101ff:	39 f1                	cmp    %esi,%ecx
ffffffff80410201:	0f 47 ce             	cmova  %esi,%ecx
ffffffff80410204:	e9 36 dc ff ff       	jmpq   ffffffff8040de3f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x16f>
ffffffff80410209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80410210:	89 ce                	mov    %ecx,%esi
ffffffff80410212:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410218:	e9 b5 dd ff ff       	jmpq   ffffffff8040dfd2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x302>
ffffffff8041021d:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410220:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80410224:	76 51                	jbe    ffffffff80410277 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x25a7>
ffffffff80410226:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041022b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410230:	31 ed                	xor    %ebp,%ebp
ffffffff80410232:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410239:	45 85 d2             	test   %r10d,%r10d
ffffffff8041023c:	74 2b                	je     ffffffff80410269 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2599>
ffffffff8041023e:	89 44 24 10          	mov    %eax,0x10(%rsp)
ffffffff80410242:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410248:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041024f:	80 
ffffffff80410250:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410257:	41 80 
ffffffff80410259:	48 89 e8             	mov    %rbp,%rax
ffffffff8041025c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410260:	49 39 c5             	cmp    %rax,%r13
ffffffff80410263:	75 e3                	jne    ffffffff80410248 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2578>
ffffffff80410265:	8b 44 24 10          	mov    0x10(%rsp),%eax
ffffffff80410269:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410270:	48 3b 5c 24 28       	cmp    0x28(%rsp),%rbx
ffffffff80410275:	75 b9                	jne    ffffffff80410230 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2560>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410277:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff8041027c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041027f:	74 18                	je     ffffffff80410299 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x25c9>
ffffffff80410281:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410288:	31 ed                	xor    %ebp,%ebp
ffffffff8041028a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8041028e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410292:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
ffffffff80410297:	75 ef                	jne    ffffffff80410288 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x25b8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410299:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff8041029c:	83 ef 01             	sub    $0x1,%edi
ffffffff8041029f:	44 39 d2             	cmp    %r10d,%edx
ffffffff804102a2:	89 3d c0 dd 00 00    	mov    %edi,0xddc0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804102a8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804102ac:	41 39 d1             	cmp    %edx,%r9d
ffffffff804102af:	0f 82 20 db ff ff    	jb     ffffffff8040ddd5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x105>
ffffffff804102b5:	44 89 ca             	mov    %r9d,%edx
ffffffff804102b8:	e9 54 db ff ff       	jmpq   ffffffff8040de11 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x141>
ffffffff804102bd:	0f 1f 00             	nopl   (%rax)
ffffffff804102c0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804102c3:	75 1b                	jne    ffffffff804102e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2610>
ffffffff804102c5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804102cb:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff804102d0:	89 c2                	mov    %eax,%edx
ffffffff804102d2:	e9 e2 da ff ff       	jmpq   ffffffff8040ddb9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xe9>
ffffffff804102d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804102de:	00 00 
ffffffff804102e0:	89 ce                	mov    %ecx,%esi
ffffffff804102e2:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804102e8:	e9 c5 da ff ff       	jmpq   ffffffff8040ddb2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xe2>
ffffffff804102ed:	0f 1f 00             	nopl   (%rax)
ffffffff804102f0:	41 89 f2             	mov    %esi,%r10d
ffffffff804102f3:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff804102fa:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804102fd:	48 39 c1             	cmp    %rax,%rcx
ffffffff80410300:	0f 85 7a db ff ff    	jne    ffffffff8040de80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b0>
ffffffff80410306:	e9 b6 db ff ff       	jmpq   ffffffff8040dec1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1f1>
ffffffff8041030b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80410310:	41 89 f2             	mov    %esi,%r10d
ffffffff80410313:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8041031a:	44 89 d6             	mov    %r10d,%esi
ffffffff8041031d:	48 39 c1             	cmp    %rax,%rcx
ffffffff80410320:	0f 85 7a dd ff ff    	jne    ffffffff8040e0a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3d0>
ffffffff80410326:	e9 b6 dd ff ff       	jmpq   ffffffff8040e0e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x411>
ffffffff8041032b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410330:	44 39 d2             	cmp    %r10d,%edx
ffffffff80410333:	73 44                	jae    ffffffff80410379 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x26a9>
ffffffff80410335:	41 89 f8             	mov    %edi,%r8d
ffffffff80410338:	89 d3                	mov    %edx,%ebx
ffffffff8041033a:	4f 8d 04 80          	lea    (%r8,%r8,4),%r8
ffffffff8041033e:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80410342:	4e 8d 4c 03 08       	lea    0x8(%rbx,%r8,1),%r9
ffffffff80410347:	49 01 d8             	add    %rbx,%r8
ffffffff8041034a:	44 89 fb             	mov    %r15d,%ebx
ffffffff8041034d:	29 d3                	sub    %edx,%ebx
ffffffff8041034f:	4f 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%r9
ffffffff80410356:	80 
ffffffff80410357:	49 01 d8             	add    %rbx,%r8
ffffffff8041035a:	4b 8d 94 00 72 e0 41 	lea    -0x7fbe1f8e(%r8,%r8,1),%rdx
ffffffff80410361:	80 
ffffffff80410362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410368:	45 31 f6             	xor    %r14d,%r14d
ffffffff8041036b:	49 83 c1 02          	add    $0x2,%r9
ffffffff8041036f:	66 45 89 71 fe       	mov    %r14w,-0x2(%r9)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410374:	49 39 d1             	cmp    %rdx,%r9
ffffffff80410377:	75 ef                	jne    ffffffff80410368 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2698>
        current_col_ = 0;
ffffffff80410379:	c7 05 e9 dc 00 00 00 	movl   $0x0,0xdce9(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410380:	00 00 00 
        current_row_++;
ffffffff80410383:	83 c7 01             	add    $0x1,%edi
ffffffff80410386:	31 d2                	xor    %edx,%edx
ffffffff80410388:	89 3d da dc 00 00    	mov    %edi,0xdcda(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041038e:	e9 a4 da ff ff       	jmpq   ffffffff8040de37 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x167>
ffffffff80410393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410398:	44 39 d2             	cmp    %r10d,%edx
ffffffff8041039b:	73 44                	jae    ffffffff804103e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2711>
ffffffff8041039d:	41 89 f8             	mov    %edi,%r8d
ffffffff804103a0:	89 d3                	mov    %edx,%ebx
ffffffff804103a2:	4f 8d 04 80          	lea    (%r8,%r8,4),%r8
ffffffff804103a6:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff804103aa:	4e 8d 4c 03 08       	lea    0x8(%rbx,%r8,1),%r9
ffffffff804103af:	49 01 d8             	add    %rbx,%r8
ffffffff804103b2:	44 89 fb             	mov    %r15d,%ebx
ffffffff804103b5:	29 d3                	sub    %edx,%ebx
ffffffff804103b7:	4f 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%r9
ffffffff804103be:	80 
ffffffff804103bf:	49 01 d8             	add    %rbx,%r8
ffffffff804103c2:	4b 8d 94 00 72 e0 41 	lea    -0x7fbe1f8e(%r8,%r8,1),%rdx
ffffffff804103c9:	80 
ffffffff804103ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804103d0:	45 31 f6             	xor    %r14d,%r14d
ffffffff804103d3:	49 83 c1 02          	add    $0x2,%r9
ffffffff804103d7:	66 45 89 71 fe       	mov    %r14w,-0x2(%r9)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804103dc:	49 39 d1             	cmp    %rdx,%r9
ffffffff804103df:	75 ef                	jne    ffffffff804103d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2700>
        current_col_ = 0;
ffffffff804103e1:	c7 05 81 dc 00 00 00 	movl   $0x0,0xdc81(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804103e8:	00 00 00 
        current_row_++;
ffffffff804103eb:	83 c7 01             	add    $0x1,%edi
ffffffff804103ee:	31 d2                	xor    %edx,%edx
ffffffff804103f0:	89 3d 72 dc 00 00    	mov    %edi,0xdc72(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804103f6:	e9 5c dc ff ff       	jmpq   ffffffff8040e057 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x387>
ffffffff804103fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80410400:	c7 05 62 dc 00 00 00 	movl   $0x0,0xdc62(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410407:	00 00 00 
      current_row_++;
ffffffff8041040a:	83 c6 01             	add    $0x1,%esi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041040d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041040f:	89 35 53 dc 00 00    	mov    %esi,0xdc53(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410415:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410419:	0f 85 38 e1 ff ff    	jne    ffffffff8040e557 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x887>
ffffffff8041041f:	39 f9                	cmp    %edi,%ecx
ffffffff80410421:	0f 47 cf             	cmova  %edi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410424:	e9 36 e1 ff ff       	jmpq   ffffffff8040e55f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x88f>
ffffffff80410429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410430:	83 fe 01             	cmp    $0x1,%esi
ffffffff80410433:	76 52                	jbe    ffffffff80410487 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x27b7>
ffffffff80410435:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041043a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410440:	31 ed                	xor    %ebp,%ebp
ffffffff80410442:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410449:	45 85 d2             	test   %r10d,%r10d
ffffffff8041044c:	74 2b                	je     ffffffff80410479 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x27a9>
ffffffff8041044e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410452:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410458:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041045f:	80 
ffffffff80410460:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410467:	41 80 
ffffffff80410469:	48 89 e8             	mov    %rbp,%rax
ffffffff8041046c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410470:	49 39 c5             	cmp    %rax,%r13
ffffffff80410473:	75 e3                	jne    ffffffff80410458 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2788>
ffffffff80410475:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410479:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410480:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff80410485:	75 b9                	jne    ffffffff80410440 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2770>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410487:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff8041048c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041048f:	74 18                	je     ffffffff804104a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x27d9>
ffffffff80410491:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410498:	31 ed                	xor    %ebp,%ebp
ffffffff8041049a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8041049e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804104a2:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
ffffffff804104a7:	75 ef                	jne    ffffffff80410498 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x27c8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804104a9:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804104ac:	83 ee 01             	sub    $0x1,%esi
ffffffff804104af:	44 39 d2             	cmp    %r10d,%edx
ffffffff804104b2:	89 35 b0 db 00 00    	mov    %esi,0xdbb0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804104b8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804104bc:	41 39 d1             	cmp    %edx,%r9d
ffffffff804104bf:	0f 82 30 e0 ff ff    	jb     ffffffff8040e4f5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x825>
ffffffff804104c5:	44 89 ca             	mov    %r9d,%edx
ffffffff804104c8:	e9 64 e0 ff ff       	jmpq   ffffffff8040e531 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x861>
ffffffff804104cd:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804104d0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804104d3:	75 4b                	jne    ffffffff80410520 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2850>
ffffffff804104d5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804104db:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff804104e0:	89 c2                	mov    %eax,%edx
ffffffff804104e2:	e9 f2 df ff ff       	jmpq   ffffffff8040e4d9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x809>
ffffffff804104e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804104ee:	00 00 
      current_col_ = 0;
ffffffff804104f0:	c7 05 72 db 00 00 00 	movl   $0x0,0xdb72(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804104f7:	00 00 00 
      current_row_++;
ffffffff804104fa:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804104fd:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804104ff:	89 3d 63 db 00 00    	mov    %edi,0xdb63(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410505:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410509:	0f 85 28 de ff ff    	jne    ffffffff8040e337 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x667>
ffffffff8041050f:	39 f1                	cmp    %esi,%ecx
ffffffff80410511:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410514:	e9 26 de ff ff       	jmpq   ffffffff8040e33f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x66f>
ffffffff80410519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80410520:	89 cf                	mov    %ecx,%edi
ffffffff80410522:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410528:	e9 a5 df ff ff       	jmpq   ffffffff8040e4d2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x802>
ffffffff8041052d:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410530:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80410534:	76 51                	jbe    ffffffff80410587 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x28b7>
ffffffff80410536:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041053b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410540:	31 ed                	xor    %ebp,%ebp
ffffffff80410542:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410549:	45 85 d2             	test   %r10d,%r10d
ffffffff8041054c:	74 2b                	je     ffffffff80410579 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x28a9>
ffffffff8041054e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410558:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041055f:	80 
ffffffff80410560:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410567:	41 80 
ffffffff80410569:	48 89 e8             	mov    %rbp,%rax
ffffffff8041056c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410570:	49 39 c5             	cmp    %rax,%r13
ffffffff80410573:	75 e3                	jne    ffffffff80410558 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2888>
ffffffff80410575:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410579:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410580:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
ffffffff80410585:	75 b9                	jne    ffffffff80410540 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2870>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410587:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff8041058c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041058f:	74 18                	je     ffffffff804105a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x28d9>
ffffffff80410591:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410598:	31 ed                	xor    %ebp,%ebp
ffffffff8041059a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8041059e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804105a2:	48 3b 5c 24 18       	cmp    0x18(%rsp),%rbx
ffffffff804105a7:	75 ef                	jne    ffffffff80410598 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x28c8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804105a9:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804105ac:	83 ef 01             	sub    $0x1,%edi
ffffffff804105af:	44 39 d2             	cmp    %r10d,%edx
ffffffff804105b2:	89 3d b0 da 00 00    	mov    %edi,0xdab0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804105b8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804105bc:	41 39 d1             	cmp    %edx,%r9d
ffffffff804105bf:	0f 82 08 dd ff ff    	jb     ffffffff8040e2cd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x5fd>
ffffffff804105c5:	44 89 ca             	mov    %r9d,%edx
ffffffff804105c8:	e9 44 dd ff ff       	jmpq   ffffffff8040e311 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x641>
ffffffff804105cd:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804105d0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804105d3:	75 1b                	jne    ffffffff804105f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2920>
ffffffff804105d5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804105db:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff804105e0:	89 c2                	mov    %eax,%edx
ffffffff804105e2:	e9 ca dc ff ff       	jmpq   ffffffff8040e2b1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x5e1>
ffffffff804105e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804105ee:	00 00 
ffffffff804105f0:	89 ce                	mov    %ecx,%esi
ffffffff804105f2:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804105f8:	e9 ad dc ff ff       	jmpq   ffffffff8040e2aa <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x5da>
ffffffff804105fd:	0f 1f 00             	nopl   (%rax)
ffffffff80410600:	41 89 f2             	mov    %esi,%r10d
ffffffff80410603:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8041060a:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041060d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80410610:	0f 85 6a dd ff ff    	jne    ffffffff8040e380 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x6b0>
ffffffff80410616:	e9 a6 dd ff ff       	jmpq   ffffffff8040e3c1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x6f1>
ffffffff8041061b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80410620:	41 89 fa             	mov    %edi,%r10d
ffffffff80410623:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8041062a:	44 89 d7             	mov    %r10d,%edi
ffffffff8041062d:	48 39 c1             	cmp    %rax,%rcx
ffffffff80410630:	0f 85 6a df ff ff    	jne    ffffffff8040e5a0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x8d0>
ffffffff80410636:	e9 a6 df ff ff       	jmpq   ffffffff8040e5e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x911>
ffffffff8041063b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410640:	41 39 d2             	cmp    %edx,%r10d
ffffffff80410643:	76 44                	jbe    ffffffff80410689 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x29b9>
ffffffff80410645:	41 89 f8             	mov    %edi,%r8d
ffffffff80410648:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff8041064d:	89 d3                	mov    %edx,%ebx
ffffffff8041064f:	4f 8d 0c 80          	lea    (%r8,%r8,4),%r9
ffffffff80410653:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80410657:	41 29 d6             	sub    %edx,%r14d
ffffffff8041065a:	4e 8d 44 0b 08       	lea    0x8(%rbx,%r9,1),%r8
ffffffff8041065f:	49 01 d9             	add    %rbx,%r9
ffffffff80410662:	4d 01 f1             	add    %r14,%r9
ffffffff80410665:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff8041066c:	80 
ffffffff8041066d:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff80410674:	80 
ffffffff80410675:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80410678:	45 31 f6             	xor    %r14d,%r14d
ffffffff8041067b:	49 83 c0 02          	add    $0x2,%r8
ffffffff8041067f:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410684:	4c 39 c2             	cmp    %r8,%rdx
ffffffff80410687:	75 ef                	jne    ffffffff80410678 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x29a8>
        current_col_ = 0;
ffffffff80410689:	c7 05 d9 d9 00 00 00 	movl   $0x0,0xd9d9(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410690:	00 00 00 
        current_row_++;
ffffffff80410693:	83 c7 01             	add    $0x1,%edi
ffffffff80410696:	31 d2                	xor    %edx,%edx
ffffffff80410698:	89 3d ca d9 00 00    	mov    %edi,0xd9ca(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041069e:	e9 94 dc ff ff       	jmpq   ffffffff8040e337 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x667>
ffffffff804106a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804106a8:	41 39 d2             	cmp    %edx,%r10d
ffffffff804106ab:	76 44                	jbe    ffffffff804106f1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2a21>
ffffffff804106ad:	41 89 f0             	mov    %esi,%r8d
ffffffff804106b0:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff804106b5:	41 89 d1             	mov    %edx,%r9d
ffffffff804106b8:	4b 8d 1c 80          	lea    (%r8,%r8,4),%rbx
ffffffff804106bc:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff804106c0:	41 29 d6             	sub    %edx,%r14d
ffffffff804106c3:	4d 8d 44 19 08       	lea    0x8(%r9,%rbx,1),%r8
ffffffff804106c8:	49 01 d9             	add    %rbx,%r9
ffffffff804106cb:	4d 01 f1             	add    %r14,%r9
ffffffff804106ce:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff804106d5:	80 
ffffffff804106d6:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff804106dd:	80 
ffffffff804106de:	66 90                	xchg   %ax,%ax
          text_buffer_[current_row_][i] = 0;
ffffffff804106e0:	45 31 f6             	xor    %r14d,%r14d
ffffffff804106e3:	49 83 c0 02          	add    $0x2,%r8
ffffffff804106e7:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804106ec:	4c 39 c2             	cmp    %r8,%rdx
ffffffff804106ef:	75 ef                	jne    ffffffff804106e0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2a10>
        current_col_ = 0;
ffffffff804106f1:	c7 05 71 d9 00 00 00 	movl   $0x0,0xd971(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804106f8:	00 00 00 
        current_row_++;
ffffffff804106fb:	83 c6 01             	add    $0x1,%esi
ffffffff804106fe:	31 d2                	xor    %edx,%edx
ffffffff80410700:	89 35 62 d9 00 00    	mov    %esi,0xd962(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410706:	e9 4c de ff ff       	jmpq   ffffffff8040e557 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x887>
ffffffff8041070b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80410710:	c7 05 52 d9 00 00 00 	movl   $0x0,0xd952(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410717:	00 00 00 
      current_row_++;
ffffffff8041071a:	83 c6 01             	add    $0x1,%esi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041071d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041071f:	89 35 43 d9 00 00    	mov    %esi,0xd943(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410725:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410729:	0f 85 18 e5 ff ff    	jne    ffffffff8040ec47 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf77>
ffffffff8041072f:	39 f9                	cmp    %edi,%ecx
ffffffff80410731:	0f 47 cf             	cmova  %edi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410734:	e9 16 e5 ff ff       	jmpq   ffffffff8040ec4f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf7f>
ffffffff80410739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410740:	83 fe 01             	cmp    $0x1,%esi
ffffffff80410743:	76 52                	jbe    ffffffff80410797 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ac7>
ffffffff80410745:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041074a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410750:	31 ed                	xor    %ebp,%ebp
ffffffff80410752:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410759:	45 85 d2             	test   %r10d,%r10d
ffffffff8041075c:	74 2b                	je     ffffffff80410789 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ab9>
ffffffff8041075e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410762:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410768:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041076f:	80 
ffffffff80410770:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410777:	41 80 
ffffffff80410779:	48 89 e8             	mov    %rbp,%rax
ffffffff8041077c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410780:	4c 39 e8             	cmp    %r13,%rax
ffffffff80410783:	75 e3                	jne    ffffffff80410768 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2a98>
ffffffff80410785:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410789:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410790:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff80410795:	75 b9                	jne    ffffffff80410750 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2a80>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410797:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff8041079c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041079f:	74 18                	je     ffffffff804107b9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ae9>
ffffffff804107a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804107a8:	31 ed                	xor    %ebp,%ebp
ffffffff804107aa:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804107ae:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804107b2:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
ffffffff804107b7:	75 ef                	jne    ffffffff804107a8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ad8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804107b9:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804107bc:	83 ee 01             	sub    $0x1,%esi
ffffffff804107bf:	44 39 d2             	cmp    %r10d,%edx
ffffffff804107c2:	89 35 a0 d8 00 00    	mov    %esi,0xd8a0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804107c8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804107cc:	41 39 d1             	cmp    %edx,%r9d
ffffffff804107cf:	0f 82 10 e4 ff ff    	jb     ffffffff8040ebe5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf15>
ffffffff804107d5:	44 89 ca             	mov    %r9d,%edx
ffffffff804107d8:	e9 44 e4 ff ff       	jmpq   ffffffff8040ec21 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf51>
ffffffff804107dd:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804107e0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804107e3:	75 4b                	jne    ffffffff80410830 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b60>
ffffffff804107e5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804107eb:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff804107f0:	89 c2                	mov    %eax,%edx
ffffffff804107f2:	e9 d2 e3 ff ff       	jmpq   ffffffff8040ebc9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xef9>
ffffffff804107f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804107fe:	00 00 
      current_col_ = 0;
ffffffff80410800:	c7 05 62 d8 00 00 00 	movl   $0x0,0xd862(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410807:	00 00 00 
      current_row_++;
ffffffff8041080a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041080d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041080f:	89 3d 53 d8 00 00    	mov    %edi,0xd853(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410815:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410819:	0f 85 08 e2 ff ff    	jne    ffffffff8040ea27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd57>
ffffffff8041081f:	39 f1                	cmp    %esi,%ecx
ffffffff80410821:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410824:	e9 06 e2 ff ff       	jmpq   ffffffff8040ea2f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd5f>
ffffffff80410829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80410830:	89 cf                	mov    %ecx,%edi
ffffffff80410832:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410838:	e9 85 e3 ff ff       	jmpq   ffffffff8040ebc2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xef2>
ffffffff8041083d:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410840:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80410844:	76 51                	jbe    ffffffff80410897 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2bc7>
ffffffff80410846:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041084b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410850:	31 ed                	xor    %ebp,%ebp
ffffffff80410852:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410859:	45 85 d2             	test   %r10d,%r10d
ffffffff8041085c:	74 2b                	je     ffffffff80410889 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2bb9>
ffffffff8041085e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410868:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041086f:	80 
ffffffff80410870:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410877:	41 80 
ffffffff80410879:	48 89 e8             	mov    %rbp,%rax
ffffffff8041087c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410880:	4c 39 e8             	cmp    %r13,%rax
ffffffff80410883:	75 e3                	jne    ffffffff80410868 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b98>
ffffffff80410885:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410889:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410890:	48 39 5c 24 20       	cmp    %rbx,0x20(%rsp)
ffffffff80410895:	75 b9                	jne    ffffffff80410850 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2b80>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410897:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
ffffffff8041089c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041089f:	74 18                	je     ffffffff804108b9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2be9>
ffffffff804108a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804108a8:	31 ed                	xor    %ebp,%ebp
ffffffff804108aa:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804108ae:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804108b2:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff804108b7:	75 ef                	jne    ffffffff804108a8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2bd8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804108b9:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804108bc:	83 ef 01             	sub    $0x1,%edi
ffffffff804108bf:	44 39 d2             	cmp    %r10d,%edx
ffffffff804108c2:	89 3d a0 d7 00 00    	mov    %edi,0xd7a0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804108c8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804108cc:	41 39 d1             	cmp    %edx,%r9d
ffffffff804108cf:	0f 82 f0 e0 ff ff    	jb     ffffffff8040e9c5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xcf5>
ffffffff804108d5:	44 89 ca             	mov    %r9d,%edx
ffffffff804108d8:	e9 24 e1 ff ff       	jmpq   ffffffff8040ea01 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd31>
ffffffff804108dd:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804108e0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804108e3:	0f 85 07 01 00 00    	jne    ffffffff804109f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2d20>
ffffffff804108e9:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804108ef:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff804108f4:	89 c2                	mov    %eax,%edx
ffffffff804108f6:	e9 ae e0 ff ff       	jmpq   ffffffff8040e9a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xcd9>
ffffffff804108fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80410900:	c7 05 62 d7 00 00 00 	movl   $0x0,0xd762(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410907:	00 00 00 
      current_row_++;
ffffffff8041090a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041090d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041090f:	89 3d 53 d7 00 00    	mov    %edi,0xd753(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410915:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410919:	0f 85 e8 de ff ff    	jne    ffffffff8040e807 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb37>
ffffffff8041091f:	39 f1                	cmp    %esi,%ecx
ffffffff80410921:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410924:	e9 e6 de ff ff       	jmpq   ffffffff8040e80f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb3f>
ffffffff80410929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410930:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80410934:	76 51                	jbe    ffffffff80410987 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2cb7>
ffffffff80410936:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041093b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410940:	31 ed                	xor    %ebp,%ebp
ffffffff80410942:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410949:	45 85 d2             	test   %r10d,%r10d
ffffffff8041094c:	74 2b                	je     ffffffff80410979 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ca9>
ffffffff8041094e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410958:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041095f:	80 
ffffffff80410960:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410967:	41 80 
ffffffff80410969:	48 89 e8             	mov    %rbp,%rax
ffffffff8041096c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410970:	49 39 c5             	cmp    %rax,%r13
ffffffff80410973:	75 e3                	jne    ffffffff80410958 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c88>
ffffffff80410975:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410979:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410980:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
ffffffff80410985:	75 b9                	jne    ffffffff80410940 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2c70>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410987:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff8041098c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041098f:	74 18                	je     ffffffff804109a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2cd9>
ffffffff80410991:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410998:	31 ed                	xor    %ebp,%ebp
ffffffff8041099a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8041099e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804109a2:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff804109a7:	75 ef                	jne    ffffffff80410998 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2cc8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804109a9:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804109ac:	83 ef 01             	sub    $0x1,%edi
ffffffff804109af:	44 39 d2             	cmp    %r10d,%edx
ffffffff804109b2:	89 3d b0 d6 00 00    	mov    %edi,0xd6b0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804109b8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804109bc:	44 39 ca             	cmp    %r9d,%edx
ffffffff804109bf:	0f 87 d8 dd ff ff    	ja     ffffffff8040e79d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xacd>
ffffffff804109c5:	44 89 ca             	mov    %r9d,%edx
ffffffff804109c8:	e9 14 de ff ff       	jmpq   ffffffff8040e7e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb11>
ffffffff804109cd:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804109d0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804109d3:	75 2b                	jne    ffffffff80410a00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2d30>
ffffffff804109d5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804109db:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff804109e0:	89 c2                	mov    %eax,%edx
ffffffff804109e2:	e9 9a dd ff ff       	jmpq   ffffffff8040e781 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xab1>
ffffffff804109e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804109ee:	00 00 
ffffffff804109f0:	89 ce                	mov    %ecx,%esi
ffffffff804109f2:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804109f8:	e9 a5 df ff ff       	jmpq   ffffffff8040e9a2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xcd2>
ffffffff804109fd:	0f 1f 00             	nopl   (%rax)
ffffffff80410a00:	89 ce                	mov    %ecx,%esi
ffffffff80410a02:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410a08:	e9 6d dd ff ff       	jmpq   ffffffff8040e77a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xaaa>
ffffffff80410a0d:	0f 1f 00             	nopl   (%rax)
ffffffff80410a10:	41 89 f2             	mov    %esi,%r10d
ffffffff80410a13:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff80410a1a:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80410a1d:	48 39 c1             	cmp    %rax,%rcx
ffffffff80410a20:	0f 85 2a de ff ff    	jne    ffffffff8040e850 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb80>
ffffffff80410a26:	e9 66 de ff ff       	jmpq   ffffffff8040e891 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xbc1>
ffffffff80410a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80410a30:	41 89 fa             	mov    %edi,%r10d
ffffffff80410a33:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff80410a3a:	44 89 d7             	mov    %r10d,%edi
ffffffff80410a3d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80410a40:	0f 85 4a e2 ff ff    	jne    ffffffff8040ec90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xfc0>
ffffffff80410a46:	e9 86 e2 ff ff       	jmpq   ffffffff8040ecd1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1001>
ffffffff80410a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80410a50:	41 89 f2             	mov    %esi,%r10d
ffffffff80410a53:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff80410a5a:	44 89 d6             	mov    %r10d,%esi
ffffffff80410a5d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80410a60:	0f 85 0a e0 ff ff    	jne    ffffffff8040ea70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xda0>
ffffffff80410a66:	e9 46 e0 ff ff       	jmpq   ffffffff8040eab1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xde1>
ffffffff80410a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410a70:	44 39 d2             	cmp    %r10d,%edx
ffffffff80410a73:	73 44                	jae    ffffffff80410ab9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2de9>
ffffffff80410a75:	41 89 f8             	mov    %edi,%r8d
ffffffff80410a78:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff80410a7d:	89 d3                	mov    %edx,%ebx
ffffffff80410a7f:	4f 8d 0c 80          	lea    (%r8,%r8,4),%r9
ffffffff80410a83:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80410a87:	41 29 d6             	sub    %edx,%r14d
ffffffff80410a8a:	4e 8d 44 0b 08       	lea    0x8(%rbx,%r9,1),%r8
ffffffff80410a8f:	49 01 d9             	add    %rbx,%r9
ffffffff80410a92:	4d 01 f1             	add    %r14,%r9
ffffffff80410a95:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410a9c:	80 
ffffffff80410a9d:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff80410aa4:	80 
ffffffff80410aa5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80410aa8:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410aab:	49 83 c0 02          	add    $0x2,%r8
ffffffff80410aaf:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410ab4:	4c 39 c2             	cmp    %r8,%rdx
ffffffff80410ab7:	75 ef                	jne    ffffffff80410aa8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2dd8>
        current_col_ = 0;
ffffffff80410ab9:	c7 05 a9 d5 00 00 00 	movl   $0x0,0xd5a9(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410ac0:	00 00 00 
        current_row_++;
ffffffff80410ac3:	83 c7 01             	add    $0x1,%edi
ffffffff80410ac6:	31 d2                	xor    %edx,%edx
ffffffff80410ac8:	89 3d 9a d5 00 00    	mov    %edi,0xd59a(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410ace:	e9 54 df ff ff       	jmpq   ffffffff8040ea27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd57>
ffffffff80410ad3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410ad8:	41 39 d2             	cmp    %edx,%r10d
ffffffff80410adb:	76 44                	jbe    ffffffff80410b21 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2e51>
ffffffff80410add:	41 89 f8             	mov    %edi,%r8d
ffffffff80410ae0:	89 d3                	mov    %edx,%ebx
ffffffff80410ae2:	4f 8d 04 80          	lea    (%r8,%r8,4),%r8
ffffffff80410ae6:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80410aea:	4e 8d 4c 03 08       	lea    0x8(%rbx,%r8,1),%r9
ffffffff80410aef:	49 01 d8             	add    %rbx,%r8
ffffffff80410af2:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
ffffffff80410af6:	4f 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%r9
ffffffff80410afd:	80 
ffffffff80410afe:	29 d3                	sub    %edx,%ebx
ffffffff80410b00:	49 01 d8             	add    %rbx,%r8
ffffffff80410b03:	4b 8d 94 00 72 e0 41 	lea    -0x7fbe1f8e(%r8,%r8,1),%rdx
ffffffff80410b0a:	80 
ffffffff80410b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410b10:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410b13:	49 83 c1 02          	add    $0x2,%r9
ffffffff80410b17:	66 45 89 71 fe       	mov    %r14w,-0x2(%r9)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410b1c:	4c 39 ca             	cmp    %r9,%rdx
ffffffff80410b1f:	75 ef                	jne    ffffffff80410b10 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2e40>
        current_col_ = 0;
ffffffff80410b21:	c7 05 41 d5 00 00 00 	movl   $0x0,0xd541(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410b28:	00 00 00 
        current_row_++;
ffffffff80410b2b:	83 c7 01             	add    $0x1,%edi
ffffffff80410b2e:	31 d2                	xor    %edx,%edx
ffffffff80410b30:	89 3d 32 d5 00 00    	mov    %edi,0xd532(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410b36:	e9 cc dc ff ff       	jmpq   ffffffff8040e807 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb37>
ffffffff80410b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410b40:	41 39 d2             	cmp    %edx,%r10d
ffffffff80410b43:	76 44                	jbe    ffffffff80410b89 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2eb9>
ffffffff80410b45:	41 89 f0             	mov    %esi,%r8d
ffffffff80410b48:	89 d3                	mov    %edx,%ebx
ffffffff80410b4a:	4f 8d 04 80          	lea    (%r8,%r8,4),%r8
ffffffff80410b4e:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80410b52:	4e 8d 4c 03 08       	lea    0x8(%rbx,%r8,1),%r9
ffffffff80410b57:	49 01 d8             	add    %rbx,%r8
ffffffff80410b5a:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
ffffffff80410b5e:	4f 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%r9
ffffffff80410b65:	80 
ffffffff80410b66:	29 d3                	sub    %edx,%ebx
ffffffff80410b68:	49 01 d8             	add    %rbx,%r8
ffffffff80410b6b:	4b 8d 94 00 72 e0 41 	lea    -0x7fbe1f8e(%r8,%r8,1),%rdx
ffffffff80410b72:	80 
ffffffff80410b73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410b78:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410b7b:	49 83 c1 02          	add    $0x2,%r9
ffffffff80410b7f:	66 45 89 71 fe       	mov    %r14w,-0x2(%r9)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410b84:	4c 39 ca             	cmp    %r9,%rdx
ffffffff80410b87:	75 ef                	jne    ffffffff80410b78 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ea8>
        current_col_ = 0;
ffffffff80410b89:	c7 05 d9 d4 00 00 00 	movl   $0x0,0xd4d9(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410b90:	00 00 00 
        current_row_++;
ffffffff80410b93:	83 c6 01             	add    $0x1,%esi
ffffffff80410b96:	31 d2                	xor    %edx,%edx
ffffffff80410b98:	89 35 ca d4 00 00    	mov    %esi,0xd4ca(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410b9e:	e9 a4 e0 ff ff       	jmpq   ffffffff8040ec47 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf77>
ffffffff80410ba3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80410ba8:	c7 05 ba d4 00 00 00 	movl   $0x0,0xd4ba(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410baf:	00 00 00 
      current_row_++;
ffffffff80410bb2:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410bb5:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80410bb7:	89 3d ab d4 00 00    	mov    %edi,0xd4ab(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410bbd:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410bc1:	0f 85 70 e7 ff ff    	jne    ffffffff8040f337 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1667>
ffffffff80410bc7:	39 f1                	cmp    %esi,%ecx
ffffffff80410bc9:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410bcc:	e9 6e e7 ff ff       	jmpq   ffffffff8040f33f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x166f>
ffffffff80410bd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410bd8:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80410bdc:	76 51                	jbe    ffffffff80410c2f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f5f>
ffffffff80410bde:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff80410be3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410be8:	31 ed                	xor    %ebp,%ebp
ffffffff80410bea:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410bf1:	45 85 d2             	test   %r10d,%r10d
ffffffff80410bf4:	74 2b                	je     ffffffff80410c21 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f51>
ffffffff80410bf6:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410c00:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff80410c07:	80 
ffffffff80410c08:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410c0f:	41 80 
ffffffff80410c11:	48 89 e8             	mov    %rbp,%rax
ffffffff80410c14:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410c18:	4c 39 e8             	cmp    %r13,%rax
ffffffff80410c1b:	75 e3                	jne    ffffffff80410c00 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f30>
ffffffff80410c1d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410c21:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410c28:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
ffffffff80410c2d:	75 b9                	jne    ffffffff80410be8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f18>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410c2f:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff80410c34:	45 85 d2             	test   %r10d,%r10d
ffffffff80410c37:	74 18                	je     ffffffff80410c51 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f81>
ffffffff80410c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410c40:	31 ed                	xor    %ebp,%ebp
ffffffff80410c42:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80410c46:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410c4a:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff80410c4f:	75 ef                	jne    ffffffff80410c40 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2f70>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410c51:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff80410c54:	83 ef 01             	sub    $0x1,%edi
ffffffff80410c57:	44 39 d2             	cmp    %r10d,%edx
ffffffff80410c5a:	89 3d 08 d4 00 00    	mov    %edi,0xd408(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410c60:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410c64:	41 39 d1             	cmp    %edx,%r9d
ffffffff80410c67:	0f 82 68 e6 ff ff    	jb     ffffffff8040f2d5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1605>
ffffffff80410c6d:	44 89 ca             	mov    %r9d,%edx
ffffffff80410c70:	e9 9c e6 ff ff       	jmpq   ffffffff8040f311 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1641>
ffffffff80410c75:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff80410c78:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff80410c7b:	75 43                	jne    ffffffff80410cc0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2ff0>
ffffffff80410c7d:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410c83:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80410c88:	89 c2                	mov    %eax,%edx
ffffffff80410c8a:	e9 2a e6 ff ff       	jmpq   ffffffff8040f2b9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x15e9>
ffffffff80410c8f:	90                   	nop
      current_col_ = 0;
ffffffff80410c90:	c7 05 d2 d3 00 00 00 	movl   $0x0,0xd3d2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410c97:	00 00 00 
      current_row_++;
ffffffff80410c9a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410c9d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80410c9f:	89 3d c3 d3 00 00    	mov    %edi,0xd3c3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410ca5:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410ca9:	0f 85 68 e4 ff ff    	jne    ffffffff8040f117 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1447>
ffffffff80410caf:	39 f1                	cmp    %esi,%ecx
ffffffff80410cb1:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410cb4:	e9 66 e4 ff ff       	jmpq   ffffffff8040f11f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x144f>
ffffffff80410cb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80410cc0:	89 ce                	mov    %ecx,%esi
ffffffff80410cc2:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410cc8:	e9 e5 e5 ff ff       	jmpq   ffffffff8040f2b2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x15e2>
ffffffff80410ccd:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410cd0:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80410cd4:	76 51                	jbe    ffffffff80410d27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3057>
ffffffff80410cd6:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff80410cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410ce0:	31 ed                	xor    %ebp,%ebp
ffffffff80410ce2:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410ce9:	45 85 d2             	test   %r10d,%r10d
ffffffff80410cec:	74 2b                	je     ffffffff80410d19 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3049>
ffffffff80410cee:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410cf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410cf8:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff80410cff:	80 
ffffffff80410d00:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410d07:	41 80 
ffffffff80410d09:	48 89 e8             	mov    %rbp,%rax
ffffffff80410d0c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410d10:	49 39 c5             	cmp    %rax,%r13
ffffffff80410d13:	75 e3                	jne    ffffffff80410cf8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3028>
ffffffff80410d15:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410d19:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410d20:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff80410d25:	75 b9                	jne    ffffffff80410ce0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3010>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410d27:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff80410d2c:	45 85 d2             	test   %r10d,%r10d
ffffffff80410d2f:	74 18                	je     ffffffff80410d49 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3079>
ffffffff80410d31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410d38:	31 ed                	xor    %ebp,%ebp
ffffffff80410d3a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80410d3e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410d42:	48 3b 5c 24 18       	cmp    0x18(%rsp),%rbx
ffffffff80410d47:	75 ef                	jne    ffffffff80410d38 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3068>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410d49:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff80410d4c:	83 ef 01             	sub    $0x1,%edi
ffffffff80410d4f:	44 39 d2             	cmp    %r10d,%edx
ffffffff80410d52:	89 3d 10 d3 00 00    	mov    %edi,0xd310(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410d58:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410d5c:	41 39 d1             	cmp    %edx,%r9d
ffffffff80410d5f:	0f 82 50 e3 ff ff    	jb     ffffffff8040f0b5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x13e5>
ffffffff80410d65:	44 89 ca             	mov    %r9d,%edx
ffffffff80410d68:	e9 84 e3 ff ff       	jmpq   ffffffff8040f0f1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1421>
ffffffff80410d6d:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff80410d70:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff80410d73:	0f 85 07 01 00 00    	jne    ffffffff80410e80 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x31b0>
ffffffff80410d79:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410d7f:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80410d84:	89 c2                	mov    %eax,%edx
ffffffff80410d86:	e9 0e e3 ff ff       	jmpq   ffffffff8040f099 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x13c9>
ffffffff80410d8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80410d90:	c7 05 d2 d2 00 00 00 	movl   $0x0,0xd2d2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410d97:	00 00 00 
      current_row_++;
ffffffff80410d9a:	83 c6 01             	add    $0x1,%esi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410d9d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80410d9f:	89 35 c3 d2 00 00    	mov    %esi,0xd2c3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80410da5:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80410da9:	0f 85 48 e1 ff ff    	jne    ffffffff8040eef7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1227>
ffffffff80410daf:	39 f9                	cmp    %edi,%ecx
ffffffff80410db1:	0f 47 cf             	cmova  %edi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80410db4:	e9 46 e1 ff ff       	jmpq   ffffffff8040eeff <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x122f>
ffffffff80410db9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410dc0:	83 fe 01             	cmp    $0x1,%esi
ffffffff80410dc3:	76 52                	jbe    ffffffff80410e17 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3147>
ffffffff80410dc5:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff80410dca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410dd0:	31 ed                	xor    %ebp,%ebp
ffffffff80410dd2:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80410dd9:	45 85 d2             	test   %r10d,%r10d
ffffffff80410ddc:	74 2b                	je     ffffffff80410e09 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3139>
ffffffff80410dde:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80410de2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80410de8:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff80410def:	80 
ffffffff80410df0:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80410df7:	41 80 
ffffffff80410df9:	48 89 e8             	mov    %rbp,%rax
ffffffff80410dfc:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80410e00:	49 39 c5             	cmp    %rax,%r13
ffffffff80410e03:	75 e3                	jne    ffffffff80410de8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3118>
ffffffff80410e05:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80410e09:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80410e10:	48 3b 5c 24 18       	cmp    0x18(%rsp),%rbx
ffffffff80410e15:	75 b9                	jne    ffffffff80410dd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3100>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410e17:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff80410e1c:	45 85 d2             	test   %r10d,%r10d
ffffffff80410e1f:	74 18                	je     ffffffff80410e39 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3169>
ffffffff80410e21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80410e28:	31 ed                	xor    %ebp,%ebp
ffffffff80410e2a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80410e2e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80410e32:	48 3b 5c 24 20       	cmp    0x20(%rsp),%rbx
ffffffff80410e37:	75 ef                	jne    ffffffff80410e28 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3158>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410e39:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff80410e3c:	83 ee 01             	sub    $0x1,%esi
ffffffff80410e3f:	44 39 d2             	cmp    %r10d,%edx
ffffffff80410e42:	89 35 20 d2 00 00    	mov    %esi,0xd220(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410e48:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80410e4c:	44 39 ca             	cmp    %r9d,%edx
ffffffff80410e4f:	0f 87 38 e0 ff ff    	ja     ffffffff8040ee8d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x11bd>
ffffffff80410e55:	44 89 ca             	mov    %r9d,%edx
ffffffff80410e58:	e9 74 e0 ff ff       	jmpq   ffffffff8040eed1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1201>
ffffffff80410e5d:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff80410e60:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff80410e63:	75 2b                	jne    ffffffff80410e90 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x31c0>
ffffffff80410e65:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410e6b:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff80410e70:	89 c2                	mov    %eax,%edx
ffffffff80410e72:	e9 fa df ff ff       	jmpq   ffffffff8040ee71 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x11a1>
ffffffff80410e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80410e7e:	00 00 
ffffffff80410e80:	89 ce                	mov    %ecx,%esi
ffffffff80410e82:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410e88:	e9 05 e2 ff ff       	jmpq   ffffffff8040f092 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x13c2>
ffffffff80410e8d:	0f 1f 00             	nopl   (%rax)
ffffffff80410e90:	89 cf                	mov    %ecx,%edi
ffffffff80410e92:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80410e98:	e9 cd df ff ff       	jmpq   ffffffff8040ee6a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x119a>
ffffffff80410e9d:	0f 1f 00             	nopl   (%rax)
ffffffff80410ea0:	41 89 fa             	mov    %edi,%r10d
ffffffff80410ea3:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff80410eaa:	44 89 d7             	mov    %r10d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80410ead:	48 39 c8             	cmp    %rcx,%rax
ffffffff80410eb0:	0f 85 8a e0 ff ff    	jne    ffffffff8040ef40 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1270>
ffffffff80410eb6:	e9 c6 e0 ff ff       	jmpq   ffffffff8040ef81 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x12b1>
ffffffff80410ebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80410ec0:	41 89 f2             	mov    %esi,%r10d
ffffffff80410ec3:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff80410eca:	44 89 d6             	mov    %r10d,%esi
ffffffff80410ecd:	48 39 c8             	cmp    %rcx,%rax
ffffffff80410ed0:	0f 85 aa e4 ff ff    	jne    ffffffff8040f380 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x16b0>
ffffffff80410ed6:	e9 e6 e4 ff ff       	jmpq   ffffffff8040f3c1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x16f1>
ffffffff80410edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80410ee0:	41 89 f2             	mov    %esi,%r10d
ffffffff80410ee3:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff80410eea:	44 89 d6             	mov    %r10d,%esi
ffffffff80410eed:	48 39 c1             	cmp    %rax,%rcx
ffffffff80410ef0:	0f 85 6a e2 ff ff    	jne    ffffffff8040f160 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1490>
ffffffff80410ef6:	e9 a6 e2 ff ff       	jmpq   ffffffff8040f1a1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x14d1>
ffffffff80410efb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410f00:	41 39 d2             	cmp    %edx,%r10d
ffffffff80410f03:	76 44                	jbe    ffffffff80410f49 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3279>
ffffffff80410f05:	41 89 f8             	mov    %edi,%r8d
ffffffff80410f08:	89 d3                	mov    %edx,%ebx
ffffffff80410f0a:	4f 8d 04 80          	lea    (%r8,%r8,4),%r8
ffffffff80410f0e:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80410f12:	4e 8d 4c 03 08       	lea    0x8(%rbx,%r8,1),%r9
ffffffff80410f17:	49 01 d8             	add    %rbx,%r8
ffffffff80410f1a:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
ffffffff80410f1e:	4f 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%r9
ffffffff80410f25:	80 
ffffffff80410f26:	29 d3                	sub    %edx,%ebx
ffffffff80410f28:	49 01 d8             	add    %rbx,%r8
ffffffff80410f2b:	4b 8d 94 00 72 e0 41 	lea    -0x7fbe1f8e(%r8,%r8,1),%rdx
ffffffff80410f32:	80 
ffffffff80410f33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80410f38:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410f3b:	49 83 c1 02          	add    $0x2,%r9
ffffffff80410f3f:	66 45 89 71 fe       	mov    %r14w,-0x2(%r9)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410f44:	4c 39 ca             	cmp    %r9,%rdx
ffffffff80410f47:	75 ef                	jne    ffffffff80410f38 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3268>
        current_col_ = 0;
ffffffff80410f49:	c7 05 19 d1 00 00 00 	movl   $0x0,0xd119(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410f50:	00 00 00 
        current_row_++;
ffffffff80410f53:	83 c7 01             	add    $0x1,%edi
ffffffff80410f56:	31 d2                	xor    %edx,%edx
ffffffff80410f58:	89 3d 0a d1 00 00    	mov    %edi,0xd10a(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410f5e:	e9 b4 e1 ff ff       	jmpq   ffffffff8040f117 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1447>
ffffffff80410f63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410f68:	41 39 d2             	cmp    %edx,%r10d
ffffffff80410f6b:	76 44                	jbe    ffffffff80410fb1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x32e1>
ffffffff80410f6d:	41 89 f0             	mov    %esi,%r8d
ffffffff80410f70:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff80410f75:	41 89 d1             	mov    %edx,%r9d
ffffffff80410f78:	4b 8d 1c 80          	lea    (%r8,%r8,4),%rbx
ffffffff80410f7c:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80410f80:	41 29 d6             	sub    %edx,%r14d
ffffffff80410f83:	4d 8d 44 19 08       	lea    0x8(%r9,%rbx,1),%r8
ffffffff80410f88:	49 01 d9             	add    %rbx,%r9
ffffffff80410f8b:	4d 01 f1             	add    %r14,%r9
ffffffff80410f8e:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410f95:	80 
ffffffff80410f96:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff80410f9d:	80 
ffffffff80410f9e:	66 90                	xchg   %ax,%ax
          text_buffer_[current_row_][i] = 0;
ffffffff80410fa0:	45 31 f6             	xor    %r14d,%r14d
ffffffff80410fa3:	49 83 c0 02          	add    $0x2,%r8
ffffffff80410fa7:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410fac:	49 39 d0             	cmp    %rdx,%r8
ffffffff80410faf:	75 ef                	jne    ffffffff80410fa0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x32d0>
        current_col_ = 0;
ffffffff80410fb1:	c7 05 b1 d0 00 00 00 	movl   $0x0,0xd0b1(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80410fb8:	00 00 00 
        current_row_++;
ffffffff80410fbb:	83 c6 01             	add    $0x1,%esi
ffffffff80410fbe:	31 d2                	xor    %edx,%edx
ffffffff80410fc0:	89 35 a2 d0 00 00    	mov    %esi,0xd0a2(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80410fc6:	e9 2c df ff ff       	jmpq   ffffffff8040eef7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1227>
ffffffff80410fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80410fd0:	41 39 d2             	cmp    %edx,%r10d
ffffffff80410fd3:	76 44                	jbe    ffffffff80411019 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3349>
ffffffff80410fd5:	41 89 f8             	mov    %edi,%r8d
ffffffff80410fd8:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff80410fdd:	89 d3                	mov    %edx,%ebx
ffffffff80410fdf:	4f 8d 0c 80          	lea    (%r8,%r8,4),%r9
ffffffff80410fe3:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80410fe7:	41 29 d6             	sub    %edx,%r14d
ffffffff80410fea:	4e 8d 44 0b 08       	lea    0x8(%rbx,%r9,1),%r8
ffffffff80410fef:	49 01 d9             	add    %rbx,%r9
ffffffff80410ff2:	4d 01 f1             	add    %r14,%r9
ffffffff80410ff5:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80410ffc:	80 
ffffffff80410ffd:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff80411004:	80 
ffffffff80411005:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80411008:	45 31 f6             	xor    %r14d,%r14d
ffffffff8041100b:	49 83 c0 02          	add    $0x2,%r8
ffffffff8041100f:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411014:	4c 39 c2             	cmp    %r8,%rdx
ffffffff80411017:	75 ef                	jne    ffffffff80411008 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3338>
        current_col_ = 0;
ffffffff80411019:	c7 05 49 d0 00 00 00 	movl   $0x0,0xd049(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411020:	00 00 00 
        current_row_++;
ffffffff80411023:	83 c7 01             	add    $0x1,%edi
ffffffff80411026:	31 d2                	xor    %edx,%edx
ffffffff80411028:	89 3d 3a d0 00 00    	mov    %edi,0xd03a(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041102e:	e9 04 e3 ff ff       	jmpq   ffffffff8040f337 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1667>
ffffffff80411033:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80411038:	c7 05 2a d0 00 00 00 	movl   $0x0,0xd02a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041103f:	00 00 00 
      current_row_++;
ffffffff80411042:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80411045:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80411047:	89 3d 1b d0 00 00    	mov    %edi,0xd01b(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041104d:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80411051:	0f 85 d0 e9 ff ff    	jne    ffffffff8040fa27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1d57>
ffffffff80411057:	39 f1                	cmp    %esi,%ecx
ffffffff80411059:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff8041105c:	e9 ce e9 ff ff       	jmpq   ffffffff8040fa2f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1d5f>
ffffffff80411061:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411068:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff8041106c:	76 51                	jbe    ffffffff804110bf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x33ef>
ffffffff8041106e:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff80411073:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411078:	31 ed                	xor    %ebp,%ebp
ffffffff8041107a:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80411081:	45 85 d2             	test   %r10d,%r10d
ffffffff80411084:	74 2b                	je     ffffffff804110b1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x33e1>
ffffffff80411086:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff8041108a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411090:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff80411097:	80 
ffffffff80411098:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff8041109f:	41 80 
ffffffff804110a1:	48 89 e8             	mov    %rbp,%rax
ffffffff804110a4:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804110a8:	4c 39 e8             	cmp    %r13,%rax
ffffffff804110ab:	75 e3                	jne    ffffffff80411090 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x33c0>
ffffffff804110ad:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff804110b1:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804110b8:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff804110bd:	75 b9                	jne    ffffffff80411078 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x33a8>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804110bf:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff804110c4:	45 85 d2             	test   %r10d,%r10d
ffffffff804110c7:	74 18                	je     ffffffff804110e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3411>
ffffffff804110c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804110d0:	31 ed                	xor    %ebp,%ebp
ffffffff804110d2:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804110d6:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804110da:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff804110df:	75 ef                	jne    ffffffff804110d0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3400>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804110e1:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804110e4:	83 ef 01             	sub    $0x1,%edi
ffffffff804110e7:	44 39 d2             	cmp    %r10d,%edx
ffffffff804110ea:	89 3d 78 cf 00 00    	mov    %edi,0xcf78(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804110f0:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804110f4:	44 39 ca             	cmp    %r9d,%edx
ffffffff804110f7:	0f 87 c8 e8 ff ff    	ja     ffffffff8040f9c5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1cf5>
ffffffff804110fd:	44 89 ca             	mov    %r9d,%edx
ffffffff80411100:	e9 fc e8 ff ff       	jmpq   ffffffff8040fa01 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1d31>
ffffffff80411105:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff80411108:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff8041110b:	75 43                	jne    ffffffff80411150 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3480>
ffffffff8041110d:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80411113:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80411118:	89 c2                	mov    %eax,%edx
ffffffff8041111a:	e9 8a e8 ff ff       	jmpq   ffffffff8040f9a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1cd9>
ffffffff8041111f:	90                   	nop
      current_col_ = 0;
ffffffff80411120:	c7 05 42 cf 00 00 00 	movl   $0x0,0xcf42(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411127:	00 00 00 
      current_row_++;
ffffffff8041112a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041112d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041112f:	89 3d 33 cf 00 00    	mov    %edi,0xcf33(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80411135:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80411139:	0f 85 c8 e6 ff ff    	jne    ffffffff8040f807 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b37>
ffffffff8041113f:	39 f1                	cmp    %esi,%ecx
ffffffff80411141:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80411144:	e9 c6 e6 ff ff       	jmpq   ffffffff8040f80f <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b3f>
ffffffff80411149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80411150:	89 ce                	mov    %ecx,%esi
ffffffff80411152:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80411158:	e9 45 e8 ff ff       	jmpq   ffffffff8040f9a2 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1cd2>
ffffffff8041115d:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411160:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80411164:	76 51                	jbe    ffffffff804111b7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x34e7>
ffffffff80411166:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411170:	31 ed                	xor    %ebp,%ebp
ffffffff80411172:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80411179:	45 85 d2             	test   %r10d,%r10d
ffffffff8041117c:	74 2b                	je     ffffffff804111a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x34d9>
ffffffff8041117e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80411182:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411188:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041118f:	80 
ffffffff80411190:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80411197:	41 80 
ffffffff80411199:	48 89 e8             	mov    %rbp,%rax
ffffffff8041119c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804111a0:	4c 39 e8             	cmp    %r13,%rax
ffffffff804111a3:	75 e3                	jne    ffffffff80411188 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x34b8>
ffffffff804111a5:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff804111a9:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804111b0:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff804111b5:	75 b9                	jne    ffffffff80411170 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x34a0>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804111b7:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff804111bc:	45 85 d2             	test   %r10d,%r10d
ffffffff804111bf:	74 18                	je     ffffffff804111d9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3509>
ffffffff804111c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804111c8:	31 ed                	xor    %ebp,%ebp
ffffffff804111ca:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804111ce:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804111d2:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff804111d7:	75 ef                	jne    ffffffff804111c8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x34f8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804111d9:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804111dc:	83 ef 01             	sub    $0x1,%edi
ffffffff804111df:	44 39 d2             	cmp    %r10d,%edx
ffffffff804111e2:	89 3d 80 ce 00 00    	mov    %edi,0xce80(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804111e8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804111ec:	44 39 ca             	cmp    %r9d,%edx
ffffffff804111ef:	0f 87 b0 e5 ff ff    	ja     ffffffff8040f7a5 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1ad5>
ffffffff804111f5:	44 89 ca             	mov    %r9d,%edx
ffffffff804111f8:	e9 e4 e5 ff ff       	jmpq   ffffffff8040f7e1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b11>
ffffffff804111fd:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff80411200:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff80411203:	0f 85 07 01 00 00    	jne    ffffffff80411310 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3640>
ffffffff80411209:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff8041120f:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80411214:	89 c2                	mov    %eax,%edx
ffffffff80411216:	e9 6e e5 ff ff       	jmpq   ffffffff8040f789 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1ab9>
ffffffff8041121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80411220:	c7 05 42 ce 00 00 00 	movl   $0x0,0xce42(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411227:	00 00 00 
      current_row_++;
ffffffff8041122a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041122d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041122f:	89 3d 33 ce 00 00    	mov    %edi,0xce33(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80411235:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80411239:	0f 85 a8 e3 ff ff    	jne    ffffffff8040f5e7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1917>
ffffffff8041123f:	39 f1                	cmp    %esi,%ecx
ffffffff80411241:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff80411244:	e9 a6 e3 ff ff       	jmpq   ffffffff8040f5ef <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x191f>
ffffffff80411249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411250:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80411254:	76 51                	jbe    ffffffff804112a7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x35d7>
ffffffff80411256:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411260:	31 ed                	xor    %ebp,%ebp
ffffffff80411262:	4c 8d b3 60 ff ff ff 	lea    -0xa0(%rbx),%r14
ffffffff80411269:	45 85 d2             	test   %r10d,%r10d
ffffffff8041126c:	74 2b                	je     ffffffff80411299 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x35c9>
ffffffff8041126e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80411272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411278:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041127f:	80 
ffffffff80411280:	66 41 89 84 6e 70 e0 	mov    %ax,-0x7fbe1f90(%r14,%rbp,2)
ffffffff80411287:	41 80 
ffffffff80411289:	48 89 e8             	mov    %rbp,%rax
ffffffff8041128c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411290:	4c 39 e8             	cmp    %r13,%rax
ffffffff80411293:	75 e3                	jne    ffffffff80411278 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x35a8>
ffffffff80411295:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80411299:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804112a0:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff804112a5:	75 b9                	jne    ffffffff80411260 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3590>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804112a7:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff804112ac:	45 85 d2             	test   %r10d,%r10d
ffffffff804112af:	74 18                	je     ffffffff804112c9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x35f9>
ffffffff804112b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804112b8:	31 ed                	xor    %ebp,%ebp
ffffffff804112ba:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804112be:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804112c2:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff804112c7:	75 ef                	jne    ffffffff804112b8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x35e8>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804112c9:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff804112cc:	83 ef 01             	sub    $0x1,%edi
ffffffff804112cf:	44 39 d2             	cmp    %r10d,%edx
ffffffff804112d2:	89 3d 90 cd 00 00    	mov    %edi,0xcd90(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804112d8:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804112dc:	41 39 d1             	cmp    %edx,%r9d
ffffffff804112df:	0f 82 98 e2 ff ff    	jb     ffffffff8040f57d <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x18ad>
ffffffff804112e5:	44 89 ca             	mov    %r9d,%edx
ffffffff804112e8:	e9 d4 e2 ff ff       	jmpq   ffffffff8040f5c1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x18f1>
ffffffff804112ed:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804112f0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804112f3:	75 2b                	jne    ffffffff80411320 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3650>
ffffffff804112f5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804112fb:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80411300:	89 c2                	mov    %eax,%edx
ffffffff80411302:	e9 5a e2 ff ff       	jmpq   ffffffff8040f561 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1891>
ffffffff80411307:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041130e:	00 00 
ffffffff80411310:	89 ce                	mov    %ecx,%esi
ffffffff80411312:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80411318:	e9 65 e4 ff ff       	jmpq   ffffffff8040f782 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1ab2>
ffffffff8041131d:	0f 1f 00             	nopl   (%rax)
ffffffff80411320:	89 ce                	mov    %ecx,%esi
ffffffff80411322:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff80411328:	e9 2d e2 ff ff       	jmpq   ffffffff8040f55a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x188a>
ffffffff8041132d:	0f 1f 00             	nopl   (%rax)
ffffffff80411330:	41 89 f2             	mov    %esi,%r10d
ffffffff80411333:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8041133a:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041133d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80411340:	0f 85 ea e2 ff ff    	jne    ffffffff8040f630 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1960>
ffffffff80411346:	e9 26 e3 ff ff       	jmpq   ffffffff8040f671 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x19a1>
ffffffff8041134b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411350:	41 89 f2             	mov    %esi,%r10d
ffffffff80411353:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8041135a:	44 89 d6             	mov    %r10d,%esi
ffffffff8041135d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80411360:	0f 85 0a e7 ff ff    	jne    ffffffff8040fa70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1da0>
ffffffff80411366:	e9 46 e7 ff ff       	jmpq   ffffffff8040fab1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1de1>
ffffffff8041136b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80411370:	41 89 f2             	mov    %esi,%r10d
ffffffff80411373:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8041137a:	44 89 d6             	mov    %r10d,%esi
ffffffff8041137d:	48 39 c8             	cmp    %rcx,%rax
ffffffff80411380:	0f 85 ca e4 ff ff    	jne    ffffffff8040f850 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b80>
ffffffff80411386:	e9 06 e5 ff ff       	jmpq   ffffffff8040f891 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1bc1>
ffffffff8041138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411390:	41 39 d2             	cmp    %edx,%r10d
ffffffff80411393:	76 44                	jbe    ffffffff804113d9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3709>
ffffffff80411395:	41 89 f8             	mov    %edi,%r8d
ffffffff80411398:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff8041139d:	89 d3                	mov    %edx,%ebx
ffffffff8041139f:	4f 8d 0c 80          	lea    (%r8,%r8,4),%r9
ffffffff804113a3:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff804113a7:	41 29 d6             	sub    %edx,%r14d
ffffffff804113aa:	4e 8d 44 0b 08       	lea    0x8(%rbx,%r9,1),%r8
ffffffff804113af:	49 01 d9             	add    %rbx,%r9
ffffffff804113b2:	4d 01 f1             	add    %r14,%r9
ffffffff804113b5:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff804113bc:	80 
ffffffff804113bd:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff804113c4:	80 
ffffffff804113c5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff804113c8:	45 31 f6             	xor    %r14d,%r14d
ffffffff804113cb:	49 83 c0 02          	add    $0x2,%r8
ffffffff804113cf:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804113d4:	4c 39 c2             	cmp    %r8,%rdx
ffffffff804113d7:	75 ef                	jne    ffffffff804113c8 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x36f8>
        current_col_ = 0;
ffffffff804113d9:	c7 05 89 cc 00 00 00 	movl   $0x0,0xcc89(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804113e0:	00 00 00 
        current_row_++;
ffffffff804113e3:	83 c7 01             	add    $0x1,%edi
ffffffff804113e6:	31 d2                	xor    %edx,%edx
ffffffff804113e8:	89 3d 7a cc 00 00    	mov    %edi,0xcc7a(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804113ee:	e9 14 e4 ff ff       	jmpq   ffffffff8040f807 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b37>
ffffffff804113f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804113f8:	44 39 d2             	cmp    %r10d,%edx
ffffffff804113fb:	73 44                	jae    ffffffff80411441 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3771>
ffffffff804113fd:	41 89 f8             	mov    %edi,%r8d
ffffffff80411400:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff80411405:	41 89 d1             	mov    %edx,%r9d
ffffffff80411408:	4b 8d 1c 80          	lea    (%r8,%r8,4),%rbx
ffffffff8041140c:	48 c1 e3 04          	shl    $0x4,%rbx
ffffffff80411410:	41 29 d6             	sub    %edx,%r14d
ffffffff80411413:	4d 8d 44 19 08       	lea    0x8(%r9,%rbx,1),%r8
ffffffff80411418:	49 01 d9             	add    %rbx,%r9
ffffffff8041141b:	4d 01 f1             	add    %r14,%r9
ffffffff8041141e:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80411425:	80 
ffffffff80411426:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff8041142d:	80 
ffffffff8041142e:	66 90                	xchg   %ax,%ax
          text_buffer_[current_row_][i] = 0;
ffffffff80411430:	45 31 f6             	xor    %r14d,%r14d
ffffffff80411433:	49 83 c0 02          	add    $0x2,%r8
ffffffff80411437:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041143c:	4c 39 c2             	cmp    %r8,%rdx
ffffffff8041143f:	75 ef                	jne    ffffffff80411430 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3760>
        current_col_ = 0;
ffffffff80411441:	c7 05 21 cc 00 00 00 	movl   $0x0,0xcc21(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411448:	00 00 00 
        current_row_++;
ffffffff8041144b:	83 c7 01             	add    $0x1,%edi
ffffffff8041144e:	31 d2                	xor    %edx,%edx
ffffffff80411450:	89 3d 12 cc 00 00    	mov    %edi,0xcc12(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411456:	e9 8c e1 ff ff       	jmpq   ffffffff8040f5e7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1917>
ffffffff8041145b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411460:	44 39 d2             	cmp    %r10d,%edx
ffffffff80411463:	73 44                	jae    ffffffff804114a9 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x37d9>
ffffffff80411465:	41 89 f8             	mov    %edi,%r8d
ffffffff80411468:	44 8b 74 24 28       	mov    0x28(%rsp),%r14d
ffffffff8041146d:	89 d3                	mov    %edx,%ebx
ffffffff8041146f:	4f 8d 0c 80          	lea    (%r8,%r8,4),%r9
ffffffff80411473:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80411477:	41 29 d6             	sub    %edx,%r14d
ffffffff8041147a:	4e 8d 44 0b 08       	lea    0x8(%rbx,%r9,1),%r8
ffffffff8041147f:	49 01 d9             	add    %rbx,%r9
ffffffff80411482:	4d 01 f1             	add    %r14,%r9
ffffffff80411485:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff8041148c:	80 
ffffffff8041148d:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff80411494:	80 
ffffffff80411495:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80411498:	45 31 f6             	xor    %r14d,%r14d
ffffffff8041149b:	49 83 c0 02          	add    $0x2,%r8
ffffffff8041149f:	66 45 89 70 fe       	mov    %r14w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804114a4:	4c 39 c2             	cmp    %r8,%rdx
ffffffff804114a7:	75 ef                	jne    ffffffff80411498 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x37c8>
        current_col_ = 0;
ffffffff804114a9:	c7 05 b9 cb 00 00 00 	movl   $0x0,0xcbb9(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804114b0:	00 00 00 
        current_row_++;
ffffffff804114b3:	83 c7 01             	add    $0x1,%edi
ffffffff804114b6:	31 d2                	xor    %edx,%edx
ffffffff804114b8:	89 3d aa cb 00 00    	mov    %edi,0xcbaa(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804114be:	e9 64 e5 ff ff       	jmpq   ffffffff8040fa27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1d57>
ffffffff804114c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff804114c8:	c7 05 9a cb 00 00 00 	movl   $0x0,0xcb9a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804114cf:	00 00 00 
      current_row_++;
ffffffff804114d2:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804114d5:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804114d7:	89 3d 8b cb 00 00    	mov    %edi,0xcb8b(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804114dd:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff804114e1:	0f 85 40 ea ff ff    	jne    ffffffff8040ff27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2257>
ffffffff804114e7:	39 f1                	cmp    %esi,%ecx
    size_ -= min(n, size_);
ffffffff804114e9:	41 89 d1             	mov    %edx,%r9d
ffffffff804114ec:	0f 47 ce             	cmova  %esi,%ecx
    str_ += n;
ffffffff804114ef:	89 ce                	mov    %ecx,%esi
ffffffff804114f1:	49 01 f3             	add    %rsi,%r11
    size_ -= min(n, size_);
ffffffff804114f4:	39 c8                	cmp    %ecx,%eax
ffffffff804114f6:	0f 46 c8             	cmovbe %eax,%ecx
ffffffff804114f9:	29 c8                	sub    %ecx,%eax
ffffffff804114fb:	e9 3e ea ff ff       	jmpq   ffffffff8040ff3e <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x226e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411500:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80411504:	76 51                	jbe    ffffffff80411557 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3887>
ffffffff80411506:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041150b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411510:	31 ed                	xor    %ebp,%ebp
ffffffff80411512:	4c 8d ab 60 ff ff ff 	lea    -0xa0(%rbx),%r13
ffffffff80411519:	45 85 d2             	test   %r10d,%r10d
ffffffff8041151c:	74 2b                	je     ffffffff80411549 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3879>
ffffffff8041151e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80411522:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411528:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041152f:	80 
ffffffff80411530:	66 41 89 84 6d 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%rbp,2)
ffffffff80411537:	41 80 
ffffffff80411539:	48 89 e8             	mov    %rbp,%rax
ffffffff8041153c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411540:	4c 39 f0             	cmp    %r14,%rax
ffffffff80411543:	75 e3                	jne    ffffffff80411528 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3858>
ffffffff80411545:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80411549:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411550:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff80411555:	75 b9                	jne    ffffffff80411510 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3840>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411557:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff8041155c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041155f:	74 18                	je     ffffffff80411579 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x38a9>
ffffffff80411561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80411568:	31 ed                	xor    %ebp,%ebp
ffffffff8041156a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8041156e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411572:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff80411577:	75 ef                	jne    ffffffff80411568 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3898>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411579:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff8041157c:	83 ef 01             	sub    $0x1,%edi
ffffffff8041157f:	44 39 d2             	cmp    %r10d,%edx
ffffffff80411582:	89 3d e0 ca 00 00    	mov    %edi,0xcae0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411588:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041158c:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041158f:	0f 87 28 e9 ff ff    	ja     ffffffff8040febd <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x21ed>
ffffffff80411595:	44 89 ca             	mov    %r9d,%edx
ffffffff80411598:	e9 64 e9 ff ff       	jmpq   ffffffff8040ff01 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2231>
ffffffff8041159d:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804115a0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804115a3:	75 4b                	jne    ffffffff804115f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3920>
ffffffff804115a5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804115ab:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff804115b0:	89 c2                	mov    %eax,%edx
ffffffff804115b2:	e9 ea e8 ff ff       	jmpq   ffffffff8040fea1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x21d1>
ffffffff804115b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804115be:	00 00 
      current_col_ = 0;
ffffffff804115c0:	c7 05 a2 ca 00 00 00 	movl   $0x0,0xcaa2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804115c7:	00 00 00 
      current_row_++;
ffffffff804115ca:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804115cd:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804115cf:	89 3d 93 ca 00 00    	mov    %edi,0xca93(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804115d5:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff804115d9:	0f 85 f8 e6 ff ff    	jne    ffffffff8040fcd7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2007>
ffffffff804115df:	39 f1                	cmp    %esi,%ecx
ffffffff804115e1:	0f 47 ce             	cmova  %esi,%ecx
  constexpr void remove_prefix(size_t n) {
ffffffff804115e4:	e9 f6 e6 ff ff       	jmpq   ffffffff8040fcdf <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x200f>
ffffffff804115e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff804115f0:	89 ce                	mov    %ecx,%esi
ffffffff804115f2:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804115f8:	e9 9d e8 ff ff       	jmpq   ffffffff8040fe9a <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x21ca>
ffffffff804115fd:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411600:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80411604:	76 51                	jbe    ffffffff80411657 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3987>
ffffffff80411606:	bb a0 00 00 00       	mov    $0xa0,%ebx
ffffffff8041160b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411610:	31 ed                	xor    %ebp,%ebp
ffffffff80411612:	4c 8d ab 60 ff ff ff 	lea    -0xa0(%rbx),%r13
ffffffff80411619:	45 85 d2             	test   %r10d,%r10d
ffffffff8041161c:	74 2b                	je     ffffffff80411649 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3979>
ffffffff8041161e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
ffffffff80411622:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80411628:	0f b7 84 6b 70 e0 41 	movzwl -0x7fbe1f90(%rbx,%rbp,2),%eax
ffffffff8041162f:	80 
ffffffff80411630:	66 41 89 84 6d 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%rbp,2)
ffffffff80411637:	41 80 
ffffffff80411639:	48 89 e8             	mov    %rbp,%rax
ffffffff8041163c:	48 83 c5 01          	add    $0x1,%rbp
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80411640:	4c 39 f0             	cmp    %r14,%rax
ffffffff80411643:	75 e3                	jne    ffffffff80411628 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3958>
ffffffff80411645:	8b 44 24 0c          	mov    0xc(%rsp),%eax
ffffffff80411649:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80411650:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
ffffffff80411655:	75 b9                	jne    ffffffff80411610 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3940>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411657:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
ffffffff8041165c:	45 85 d2             	test   %r10d,%r10d
ffffffff8041165f:	74 18                	je     ffffffff80411679 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x39a9>
ffffffff80411661:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80411668:	31 ed                	xor    %ebp,%ebp
ffffffff8041166a:	48 83 c3 02          	add    $0x2,%rbx
ffffffff8041166e:	66 89 6b fe          	mov    %bp,-0x2(%rbx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80411672:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
ffffffff80411677:	75 ef                	jne    ffffffff80411668 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3998>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80411679:	44 01 ca             	add    %r9d,%edx
      current_row_--;
ffffffff8041167c:	83 ef 01             	sub    $0x1,%edi
ffffffff8041167f:	44 39 d2             	cmp    %r10d,%edx
ffffffff80411682:	89 3d e0 c9 00 00    	mov    %edi,0xc9e0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411688:	41 0f 47 d2          	cmova  %r10d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041168c:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041168f:	0f 87 e0 e5 ff ff    	ja     ffffffff8040fc75 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1fa5>
ffffffff80411695:	44 89 ca             	mov    %r9d,%edx
ffffffff80411698:	e9 14 e6 ff ff       	jmpq   ffffffff8040fcb1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1fe1>
ffffffff8041169d:	0f 1f 00             	nopl   (%rax)
    if (count == npos) {
ffffffff804116a0:	83 f9 ff             	cmp    $0xffffffff,%ecx
ffffffff804116a3:	75 1b                	jne    ffffffff804116c0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x39f0>
ffffffff804116a5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804116ab:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff804116b0:	89 c2                	mov    %eax,%edx
ffffffff804116b2:	e9 a2 e5 ff ff       	jmpq   ffffffff8040fc59 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1f89>
ffffffff804116b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804116be:	00 00 
ffffffff804116c0:	89 ce                	mov    %ecx,%esi
ffffffff804116c2:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff804116c8:	e9 85 e5 ff ff       	jmpq   ffffffff8040fc52 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1f82>
ffffffff804116cd:	0f 1f 00             	nopl   (%rax)
ffffffff804116d0:	41 89 f2             	mov    %esi,%r10d
ffffffff804116d3:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff804116da:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804116dd:	48 39 c8             	cmp    %rcx,%rax
ffffffff804116e0:	0f 85 3a e6 ff ff    	jne    ffffffff8040fd20 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2050>
ffffffff804116e6:	e9 76 e6 ff ff       	jmpq   ffffffff8040fd61 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2091>
ffffffff804116eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804116f0:	41 89 f2             	mov    %esi,%r10d
ffffffff804116f3:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff804116fa:	44 89 d6             	mov    %r10d,%esi
ffffffff804116fd:	48 39 c8             	cmp    %rcx,%rax
ffffffff80411700:	0f 85 6a e8 ff ff    	jne    ffffffff8040ff70 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x22a0>
ffffffff80411706:	e9 a6 e8 ff ff       	jmpq   ffffffff8040ffb1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x22e1>
ffffffff8041170b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411710:	41 39 d2             	cmp    %edx,%r10d
ffffffff80411713:	76 44                	jbe    ffffffff80411759 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3a89>
ffffffff80411715:	41 89 f8             	mov    %edi,%r8d
ffffffff80411718:	8b 6c 24 28          	mov    0x28(%rsp),%ebp
ffffffff8041171c:	89 d3                	mov    %edx,%ebx
ffffffff8041171e:	4f 8d 0c 80          	lea    (%r8,%r8,4),%r9
ffffffff80411722:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80411726:	29 d5                	sub    %edx,%ebp
ffffffff80411728:	4e 8d 44 0b 08       	lea    0x8(%rbx,%r9,1),%r8
ffffffff8041172d:	49 01 d9             	add    %rbx,%r9
ffffffff80411730:	49 01 e9             	add    %rbp,%r9
ffffffff80411733:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff8041173a:	80 
ffffffff8041173b:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff80411742:	80 
ffffffff80411743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80411748:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041174b:	49 83 c0 02          	add    $0x2,%r8
ffffffff8041174f:	66 45 89 68 fe       	mov    %r13w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411754:	4c 39 c2             	cmp    %r8,%rdx
ffffffff80411757:	75 ef                	jne    ffffffff80411748 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3a78>
        current_col_ = 0;
ffffffff80411759:	c7 05 09 c9 00 00 00 	movl   $0x0,0xc909(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411760:	00 00 00 
        current_row_++;
ffffffff80411763:	83 c7 01             	add    $0x1,%edi
ffffffff80411766:	31 d2                	xor    %edx,%edx
ffffffff80411768:	89 3d fa c8 00 00    	mov    %edi,0xc8fa(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041176e:	e9 64 e5 ff ff       	jmpq   ffffffff8040fcd7 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2007>
ffffffff80411773:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80411778:	41 39 d2             	cmp    %edx,%r10d
ffffffff8041177b:	76 44                	jbe    ffffffff804117c1 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3af1>
ffffffff8041177d:	41 89 f8             	mov    %edi,%r8d
ffffffff80411780:	8b 6c 24 28          	mov    0x28(%rsp),%ebp
ffffffff80411784:	89 d3                	mov    %edx,%ebx
ffffffff80411786:	4f 8d 0c 80          	lea    (%r8,%r8,4),%r9
ffffffff8041178a:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff8041178e:	29 d5                	sub    %edx,%ebp
ffffffff80411790:	4e 8d 44 0b 08       	lea    0x8(%rbx,%r9,1),%r8
ffffffff80411795:	49 01 d9             	add    %rbx,%r9
ffffffff80411798:	49 01 e9             	add    %rbp,%r9
ffffffff8041179b:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff804117a2:	80 
ffffffff804117a3:	4b 8d 94 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rdx
ffffffff804117aa:	80 
ffffffff804117ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff804117b0:	45 31 c9             	xor    %r9d,%r9d
ffffffff804117b3:	49 83 c0 02          	add    $0x2,%r8
ffffffff804117b7:	66 45 89 48 fe       	mov    %r9w,-0x2(%r8)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804117bc:	4c 39 c2             	cmp    %r8,%rdx
ffffffff804117bf:	75 ef                	jne    ffffffff804117b0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3ae0>
        current_col_ = 0;
ffffffff804117c1:	c7 05 a1 c8 00 00 00 	movl   $0x0,0xc8a1(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804117c8:	00 00 00 
        current_row_++;
ffffffff804117cb:	83 c7 01             	add    $0x1,%edi
ffffffff804117ce:	31 d2                	xor    %edx,%edx
ffffffff804117d0:	89 3d 92 c8 00 00    	mov    %edi,0xc892(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804117d6:	e9 4c e7 ff ff       	jmpq   ffffffff8040ff27 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2257>
ffffffff804117db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    str[0] = 'E';
ffffffff804117e0:	41 bd 45 00 00 00    	mov    $0x45,%r13d
ffffffff804117e6:	4c 8d 7c 24 38       	lea    0x38(%rsp),%r15
ffffffff804117eb:	66 44 89 6c 24 38    	mov    %r13w,0x38(%rsp)
ffffffff804117f1:	e9 bd c9 ff ff       	jmpq   ffffffff8040e1b3 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x4e3>
ffffffff804117f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804117fd:	00 00 00 
ffffffff80411800:	ba 45 00 00 00       	mov    $0x45,%edx
ffffffff80411805:	66 89 54 24 38       	mov    %dx,0x38(%rsp)
ffffffff8041180a:	e9 74 e8 ff ff       	jmpq   ffffffff80410083 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x23b3>
ffffffff8041180f:	90                   	nop
ffffffff80411810:	41 bd 45 00 00 00    	mov    $0x45,%r13d
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80411816:	4c 89 ff             	mov    %r15,%rdi
ffffffff80411819:	66 44 89 6c 24 38    	mov    %r13w,0x38(%rsp)
ffffffff8041181f:	e8 9c b9 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80411824:	85 c0                	test   %eax,%eax
ffffffff80411826:	0f 85 87 d5 ff ff    	jne    ffffffff8040edb3 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x10e3>
ffffffff8041182c:	44 8b 0d 39 c8 00 00 	mov    0xc839(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411833:	8b 35 2f c8 00 00    	mov    0xc82f(%rip),%esi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411839:	e9 d8 d6 ff ff       	jmpq   ffffffff8040ef16 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1246>
ffffffff8041183e:	66 90                	xchg   %ax,%ax
ffffffff80411840:	41 bd 45 00 00 00    	mov    $0x45,%r13d
ffffffff80411846:	4c 89 ff             	mov    %r15,%rdi
ffffffff80411849:	66 44 89 6c 24 38    	mov    %r13w,0x38(%rsp)
ffffffff8041184f:	e8 6c b9 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80411854:	85 c0                	test   %eax,%eax
ffffffff80411856:	0f 85 47 dc ff ff    	jne    ffffffff8040f4a3 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x17d3>
ffffffff8041185c:	8b 3d 06 c8 00 00    	mov    0xc806(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411862:	44 8b 0d 03 c8 00 00 	mov    0xc803(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411869:	e9 98 dd ff ff       	jmpq   ffffffff8040f606 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1936>
ffffffff8041186e:	66 90                	xchg   %ax,%ax
ffffffff80411870:	41 bd 45 00 00 00    	mov    $0x45,%r13d
ffffffff80411876:	4c 89 ff             	mov    %r15,%rdi
ffffffff80411879:	66 44 89 6c 24 38    	mov    %r13w,0x38(%rsp)
ffffffff8041187f:	e8 3c b9 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80411884:	85 c0                	test   %eax,%eax
ffffffff80411886:	0f 85 37 ce ff ff    	jne    ffffffff8040e6c3 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x9f3>
ffffffff8041188c:	44 8b 0d d9 c7 00 00 	mov    0xc7d9(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411893:	8b 3d cf c7 00 00    	mov    0xc7cf(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411899:	e9 88 cf ff ff       	jmpq   ffffffff8040e826 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xb56>
ffffffff8041189e:	66 90                	xchg   %ax,%ax
ffffffff804118a0:	41 bd 45 00 00 00    	mov    $0x45,%r13d
ffffffff804118a6:	4c 89 ff             	mov    %r15,%rdi
ffffffff804118a9:	66 44 89 6c 24 38    	mov    %r13w,0x38(%rsp)
ffffffff804118af:	e8 0c b9 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804118b4:	85 c0                	test   %eax,%eax
ffffffff804118b6:	0f 85 d7 e2 ff ff    	jne    ffffffff8040fb93 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1ec3>
ffffffff804118bc:	8b 3d a6 c7 00 00    	mov    0xc7a6(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804118c2:	44 8b 0d a3 c7 00 00 	mov    0xc7a3(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804118c9:	e9 28 e4 ff ff       	jmpq   ffffffff8040fcf6 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2026>
ffffffff804118ce:	66 90                	xchg   %ax,%ax
ffffffff804118d0:	48 c7 c7 63 b8 41 80 	mov    $0xffffffff8041b863,%rdi
ffffffff804118d7:	e8 e4 b8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    PrintString(s);
ffffffff804118dc:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff804118e1:	48 c7 c6 63 b8 41 80 	mov    $0xffffffff8041b863,%rsi
ffffffff804118e8:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff804118ef:	89 c2                	mov    %eax,%edx
ffffffff804118f1:	e8 9a 8a 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
    vga_output << " [" << kCPUExceptionErrorMessages[int_num] << "]";
ffffffff804118f6:	8b 74 24 0c          	mov    0xc(%rsp),%esi
ffffffff804118fa:	48 8b 2c f5 20 b0 41 	mov    -0x7fbe4fe0(,%rsi,8),%rbp
ffffffff80411901:	80 
ffffffff80411902:	48 89 ef             	mov    %rbp,%rdi
ffffffff80411905:	e8 b6 b8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8041190a:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff8041190f:	48 89 ee             	mov    %rbp,%rsi
ffffffff80411912:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff80411919:	89 c2                	mov    %eax,%edx
ffffffff8041191b:	e8 70 8a 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff80411920:	48 c7 c7 a3 ba 41 80 	mov    $0xffffffff8041baa3,%rdi
ffffffff80411927:	e8 94 b8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff8041192c:	48 c7 c7 60 e0 41 80 	mov    $0xffffffff8041e060,%rdi
ffffffff80411933:	b9 0f 00 00 00       	mov    $0xf,%ecx
ffffffff80411938:	48 c7 c6 a3 ba 41 80 	mov    $0xffffffff8041baa3,%rsi
ffffffff8041193f:	89 c2                	mov    %eax,%edx
ffffffff80411941:	e8 4a 8a 00 00       	callq  ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>
ffffffff80411946:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8041194d:	e8 6e b8 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80411952:	85 c0                	test   %eax,%eax
ffffffff80411954:	0f 85 96 c8 ff ff    	jne    ffffffff8040e1f0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x520>
ffffffff8041195a:	44 8b 0d 0b c7 00 00 	mov    0xc70b(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411961:	8b 3d 01 c7 00 00    	mov    0xc701(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411967:	e9 ea c9 ff ff       	jmpq   ffffffff8040e356 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x686>
ffffffff8041196c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80411970:	44 8b 0d f5 c6 00 00 	mov    0xc6f5(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411977:	8b 3d eb c6 00 00    	mov    0xc6eb(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041197d:	e9 c4 d0 ff ff       	jmpq   ffffffff8040ea46 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xd76>
ffffffff80411982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80411988:	44 8b 0d dd c6 00 00 	mov    0xc6dd(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041198f:	8b 35 d3 c6 00 00    	mov    0xc6d3(%rip),%esi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411995:	e9 cc d2 ff ff       	jmpq   ffffffff8040ec66 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0xf96>
ffffffff8041199a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804119a0:	8b 3d c2 c6 00 00    	mov    0xc6c2(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804119a6:	44 8b 0d bf c6 00 00 	mov    0xc6bf(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804119ad:	e9 84 d7 ff ff       	jmpq   ffffffff8040f136 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1466>
ffffffff804119b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804119b8:	8b 3d aa c6 00 00    	mov    0xc6aa(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804119be:	44 8b 0d a7 c6 00 00 	mov    0xc6a7(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804119c5:	e9 7c e0 ff ff       	jmpq   ffffffff8040fa46 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1d76>
ffffffff804119ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804119d0:	8b 3d 92 c6 00 00    	mov    0xc692(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804119d6:	44 8b 0d 8f c6 00 00 	mov    0xc68f(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804119dd:	e9 64 e5 ff ff       	jmpq   ffffffff8040ff46 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x2276>
ffffffff804119e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804119e8:	8b 35 7a c6 00 00    	mov    0xc67a(%rip),%esi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804119ee:	44 8b 0d 77 c6 00 00 	mov    0xc677(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804119f5:	e9 7c cb ff ff       	jmpq   ffffffff8040e576 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x8a6>
ffffffff804119fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80411a00:	44 8b 0d 65 c6 00 00 	mov    0xc665(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411a07:	8b 3d 5b c6 00 00    	mov    0xc65b(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411a0d:	e9 14 de ff ff       	jmpq   ffffffff8040f826 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1b56>
ffffffff80411a12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80411a18:	44 8b 0d 4d c6 00 00 	mov    0xc64d(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411a1f:	8b 3d 43 c6 00 00    	mov    0xc643(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411a25:	e9 2c d9 ff ff       	jmpq   ffffffff8040f356 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x1686>
ffffffff80411a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80411a30:	44 8b 0d 35 c6 00 00 	mov    0xc635(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411a37:	8b 3d 2b c6 00 00    	mov    0xc62b(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411a3d:	e9 14 c4 ff ff       	jmpq   ffffffff8040de56 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x186>
ffffffff80411a42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80411a48:	44 8b 0d 1d c6 00 00 	mov    0xc61d(%rip),%r9d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411a4f:	8b 3d 13 c6 00 00    	mov    0xc613(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411a55:	e9 1c c6 ff ff       	jmpq   ffffffff8040e076 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj+0x3a6>
ffffffff80411a5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80411a60 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi0EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a60:	41 53                	push   %r11
ffffffff80411a62:	41 52                	push   %r10
ffffffff80411a64:	41 51                	push   %r9
ffffffff80411a66:	41 50                	push   %r8
ffffffff80411a68:	57                   	push   %rdi
ffffffff80411a69:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a6a:	31 f6                	xor    %esi,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a6c:	51                   	push   %rcx
ffffffff80411a6d:	52                   	push   %rdx
ffffffff80411a6e:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a6f:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411a74:	fc                   	cld    
ffffffff80411a75:	e8 56 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411a7a:	58                   	pop    %rax
ffffffff80411a7b:	5a                   	pop    %rdx
ffffffff80411a7c:	59                   	pop    %rcx
ffffffff80411a7d:	5e                   	pop    %rsi
ffffffff80411a7e:	5f                   	pop    %rdi
ffffffff80411a7f:	41 58                	pop    %r8
ffffffff80411a81:	41 59                	pop    %r9
ffffffff80411a83:	41 5a                	pop    %r10
ffffffff80411a85:	41 5b                	pop    %r11
ffffffff80411a87:	48 cf                	iretq  
ffffffff80411a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80411a90 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi1EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a90:	41 53                	push   %r11
ffffffff80411a92:	41 52                	push   %r10
ffffffff80411a94:	41 51                	push   %r9
ffffffff80411a96:	41 50                	push   %r8
ffffffff80411a98:	57                   	push   %rdi
ffffffff80411a99:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411a9a:	be 01 00 00 00       	mov    $0x1,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411a9f:	51                   	push   %rcx
ffffffff80411aa0:	52                   	push   %rdx
ffffffff80411aa1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411aa2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411aa7:	fc                   	cld    
ffffffff80411aa8:	e8 23 c2 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411aad:	58                   	pop    %rax
ffffffff80411aae:	5a                   	pop    %rdx
ffffffff80411aaf:	59                   	pop    %rcx
ffffffff80411ab0:	5e                   	pop    %rsi
ffffffff80411ab1:	5f                   	pop    %rdi
ffffffff80411ab2:	41 58                	pop    %r8
ffffffff80411ab4:	41 59                	pop    %r9
ffffffff80411ab6:	41 5a                	pop    %r10
ffffffff80411ab8:	41 5b                	pop    %r11
ffffffff80411aba:	48 cf                	iretq  
ffffffff80411abc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411ac0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi2EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ac0:	41 53                	push   %r11
ffffffff80411ac2:	41 52                	push   %r10
ffffffff80411ac4:	41 51                	push   %r9
ffffffff80411ac6:	41 50                	push   %r8
ffffffff80411ac8:	57                   	push   %rdi
ffffffff80411ac9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411aca:	be 02 00 00 00       	mov    $0x2,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411acf:	51                   	push   %rcx
ffffffff80411ad0:	52                   	push   %rdx
ffffffff80411ad1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411ad2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411ad7:	fc                   	cld    
ffffffff80411ad8:	e8 f3 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411add:	58                   	pop    %rax
ffffffff80411ade:	5a                   	pop    %rdx
ffffffff80411adf:	59                   	pop    %rcx
ffffffff80411ae0:	5e                   	pop    %rsi
ffffffff80411ae1:	5f                   	pop    %rdi
ffffffff80411ae2:	41 58                	pop    %r8
ffffffff80411ae4:	41 59                	pop    %r9
ffffffff80411ae6:	41 5a                	pop    %r10
ffffffff80411ae8:	41 5b                	pop    %r11
ffffffff80411aea:	48 cf                	iretq  
ffffffff80411aec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411af0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi3EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411af0:	41 53                	push   %r11
ffffffff80411af2:	41 52                	push   %r10
ffffffff80411af4:	41 51                	push   %r9
ffffffff80411af6:	41 50                	push   %r8
ffffffff80411af8:	57                   	push   %rdi
ffffffff80411af9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411afa:	be 03 00 00 00       	mov    $0x3,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411aff:	51                   	push   %rcx
ffffffff80411b00:	52                   	push   %rdx
ffffffff80411b01:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b02:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411b07:	fc                   	cld    
ffffffff80411b08:	e8 c3 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411b0d:	58                   	pop    %rax
ffffffff80411b0e:	5a                   	pop    %rdx
ffffffff80411b0f:	59                   	pop    %rcx
ffffffff80411b10:	5e                   	pop    %rsi
ffffffff80411b11:	5f                   	pop    %rdi
ffffffff80411b12:	41 58                	pop    %r8
ffffffff80411b14:	41 59                	pop    %r9
ffffffff80411b16:	41 5a                	pop    %r10
ffffffff80411b18:	41 5b                	pop    %r11
ffffffff80411b1a:	48 cf                	iretq  
ffffffff80411b1c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411b20 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi4EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b20:	41 53                	push   %r11
ffffffff80411b22:	41 52                	push   %r10
ffffffff80411b24:	41 51                	push   %r9
ffffffff80411b26:	41 50                	push   %r8
ffffffff80411b28:	57                   	push   %rdi
ffffffff80411b29:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b2a:	be 04 00 00 00       	mov    $0x4,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b2f:	51                   	push   %rcx
ffffffff80411b30:	52                   	push   %rdx
ffffffff80411b31:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b32:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411b37:	fc                   	cld    
ffffffff80411b38:	e8 93 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411b3d:	58                   	pop    %rax
ffffffff80411b3e:	5a                   	pop    %rdx
ffffffff80411b3f:	59                   	pop    %rcx
ffffffff80411b40:	5e                   	pop    %rsi
ffffffff80411b41:	5f                   	pop    %rdi
ffffffff80411b42:	41 58                	pop    %r8
ffffffff80411b44:	41 59                	pop    %r9
ffffffff80411b46:	41 5a                	pop    %r10
ffffffff80411b48:	41 5b                	pop    %r11
ffffffff80411b4a:	48 cf                	iretq  
ffffffff80411b4c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411b50 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi5EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b50:	41 53                	push   %r11
ffffffff80411b52:	41 52                	push   %r10
ffffffff80411b54:	41 51                	push   %r9
ffffffff80411b56:	41 50                	push   %r8
ffffffff80411b58:	57                   	push   %rdi
ffffffff80411b59:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b5a:	be 05 00 00 00       	mov    $0x5,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b5f:	51                   	push   %rcx
ffffffff80411b60:	52                   	push   %rdx
ffffffff80411b61:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b62:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411b67:	fc                   	cld    
ffffffff80411b68:	e8 63 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411b6d:	58                   	pop    %rax
ffffffff80411b6e:	5a                   	pop    %rdx
ffffffff80411b6f:	59                   	pop    %rcx
ffffffff80411b70:	5e                   	pop    %rsi
ffffffff80411b71:	5f                   	pop    %rdi
ffffffff80411b72:	41 58                	pop    %r8
ffffffff80411b74:	41 59                	pop    %r9
ffffffff80411b76:	41 5a                	pop    %r10
ffffffff80411b78:	41 5b                	pop    %r11
ffffffff80411b7a:	48 cf                	iretq  
ffffffff80411b7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411b80 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi6EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b80:	41 53                	push   %r11
ffffffff80411b82:	41 52                	push   %r10
ffffffff80411b84:	41 51                	push   %r9
ffffffff80411b86:	41 50                	push   %r8
ffffffff80411b88:	57                   	push   %rdi
ffffffff80411b89:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b8a:	be 06 00 00 00       	mov    $0x6,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411b8f:	51                   	push   %rcx
ffffffff80411b90:	52                   	push   %rdx
ffffffff80411b91:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411b92:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411b97:	fc                   	cld    
ffffffff80411b98:	e8 33 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411b9d:	58                   	pop    %rax
ffffffff80411b9e:	5a                   	pop    %rdx
ffffffff80411b9f:	59                   	pop    %rcx
ffffffff80411ba0:	5e                   	pop    %rsi
ffffffff80411ba1:	5f                   	pop    %rdi
ffffffff80411ba2:	41 58                	pop    %r8
ffffffff80411ba4:	41 59                	pop    %r9
ffffffff80411ba6:	41 5a                	pop    %r10
ffffffff80411ba8:	41 5b                	pop    %r11
ffffffff80411baa:	48 cf                	iretq  
ffffffff80411bac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411bb0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi7EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411bb0:	41 53                	push   %r11
ffffffff80411bb2:	41 52                	push   %r10
ffffffff80411bb4:	41 51                	push   %r9
ffffffff80411bb6:	41 50                	push   %r8
ffffffff80411bb8:	57                   	push   %rdi
ffffffff80411bb9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411bba:	be 07 00 00 00       	mov    $0x7,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411bbf:	51                   	push   %rcx
ffffffff80411bc0:	52                   	push   %rdx
ffffffff80411bc1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411bc2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411bc7:	fc                   	cld    
ffffffff80411bc8:	e8 03 c1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411bcd:	58                   	pop    %rax
ffffffff80411bce:	5a                   	pop    %rdx
ffffffff80411bcf:	59                   	pop    %rcx
ffffffff80411bd0:	5e                   	pop    %rsi
ffffffff80411bd1:	5f                   	pop    %rdi
ffffffff80411bd2:	41 58                	pop    %r8
ffffffff80411bd4:	41 59                	pop    %r9
ffffffff80411bd6:	41 5a                	pop    %r10
ffffffff80411bd8:	41 5b                	pop    %r11
ffffffff80411bda:	48 cf                	iretq  
ffffffff80411bdc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411be0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi9EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411be0:	41 53                	push   %r11
ffffffff80411be2:	41 52                	push   %r10
ffffffff80411be4:	41 51                	push   %r9
ffffffff80411be6:	41 50                	push   %r8
ffffffff80411be8:	57                   	push   %rdi
ffffffff80411be9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411bea:	be 09 00 00 00       	mov    $0x9,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411bef:	51                   	push   %rcx
ffffffff80411bf0:	52                   	push   %rdx
ffffffff80411bf1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411bf2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411bf7:	fc                   	cld    
ffffffff80411bf8:	e8 d3 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411bfd:	58                   	pop    %rax
ffffffff80411bfe:	5a                   	pop    %rdx
ffffffff80411bff:	59                   	pop    %rcx
ffffffff80411c00:	5e                   	pop    %rsi
ffffffff80411c01:	5f                   	pop    %rdi
ffffffff80411c02:	41 58                	pop    %r8
ffffffff80411c04:	41 59                	pop    %r9
ffffffff80411c06:	41 5a                	pop    %r10
ffffffff80411c08:	41 5b                	pop    %r11
ffffffff80411c0a:	48 cf                	iretq  
ffffffff80411c0c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411c10 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi15EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c10:	41 53                	push   %r11
ffffffff80411c12:	41 52                	push   %r10
ffffffff80411c14:	41 51                	push   %r9
ffffffff80411c16:	41 50                	push   %r8
ffffffff80411c18:	57                   	push   %rdi
ffffffff80411c19:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c1a:	be 0f 00 00 00       	mov    $0xf,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c1f:	51                   	push   %rcx
ffffffff80411c20:	52                   	push   %rdx
ffffffff80411c21:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c22:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411c27:	fc                   	cld    
ffffffff80411c28:	e8 a3 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411c2d:	58                   	pop    %rax
ffffffff80411c2e:	5a                   	pop    %rdx
ffffffff80411c2f:	59                   	pop    %rcx
ffffffff80411c30:	5e                   	pop    %rsi
ffffffff80411c31:	5f                   	pop    %rdi
ffffffff80411c32:	41 58                	pop    %r8
ffffffff80411c34:	41 59                	pop    %r9
ffffffff80411c36:	41 5a                	pop    %r10
ffffffff80411c38:	41 5b                	pop    %r11
ffffffff80411c3a:	48 cf                	iretq  
ffffffff80411c3c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411c40 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi16EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c40:	41 53                	push   %r11
ffffffff80411c42:	41 52                	push   %r10
ffffffff80411c44:	41 51                	push   %r9
ffffffff80411c46:	41 50                	push   %r8
ffffffff80411c48:	57                   	push   %rdi
ffffffff80411c49:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c4a:	be 10 00 00 00       	mov    $0x10,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c4f:	51                   	push   %rcx
ffffffff80411c50:	52                   	push   %rdx
ffffffff80411c51:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c52:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411c57:	fc                   	cld    
ffffffff80411c58:	e8 73 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411c5d:	58                   	pop    %rax
ffffffff80411c5e:	5a                   	pop    %rdx
ffffffff80411c5f:	59                   	pop    %rcx
ffffffff80411c60:	5e                   	pop    %rsi
ffffffff80411c61:	5f                   	pop    %rdi
ffffffff80411c62:	41 58                	pop    %r8
ffffffff80411c64:	41 59                	pop    %r9
ffffffff80411c66:	41 5a                	pop    %r10
ffffffff80411c68:	41 5b                	pop    %r11
ffffffff80411c6a:	48 cf                	iretq  
ffffffff80411c6c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411c70 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi18EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c70:	41 53                	push   %r11
ffffffff80411c72:	41 52                	push   %r10
ffffffff80411c74:	41 51                	push   %r9
ffffffff80411c76:	41 50                	push   %r8
ffffffff80411c78:	57                   	push   %rdi
ffffffff80411c79:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c7a:	be 12 00 00 00       	mov    $0x12,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411c7f:	51                   	push   %rcx
ffffffff80411c80:	52                   	push   %rdx
ffffffff80411c81:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411c82:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411c87:	fc                   	cld    
ffffffff80411c88:	e8 43 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411c8d:	58                   	pop    %rax
ffffffff80411c8e:	5a                   	pop    %rdx
ffffffff80411c8f:	59                   	pop    %rcx
ffffffff80411c90:	5e                   	pop    %rsi
ffffffff80411c91:	5f                   	pop    %rdi
ffffffff80411c92:	41 58                	pop    %r8
ffffffff80411c94:	41 59                	pop    %r9
ffffffff80411c96:	41 5a                	pop    %r10
ffffffff80411c98:	41 5b                	pop    %r11
ffffffff80411c9a:	48 cf                	iretq  
ffffffff80411c9c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411ca0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi19EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ca0:	41 53                	push   %r11
ffffffff80411ca2:	41 52                	push   %r10
ffffffff80411ca4:	41 51                	push   %r9
ffffffff80411ca6:	41 50                	push   %r8
ffffffff80411ca8:	57                   	push   %rdi
ffffffff80411ca9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411caa:	be 13 00 00 00       	mov    $0x13,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411caf:	51                   	push   %rcx
ffffffff80411cb0:	52                   	push   %rdx
ffffffff80411cb1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411cb2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411cb7:	fc                   	cld    
ffffffff80411cb8:	e8 13 c0 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411cbd:	58                   	pop    %rax
ffffffff80411cbe:	5a                   	pop    %rdx
ffffffff80411cbf:	59                   	pop    %rcx
ffffffff80411cc0:	5e                   	pop    %rsi
ffffffff80411cc1:	5f                   	pop    %rdi
ffffffff80411cc2:	41 58                	pop    %r8
ffffffff80411cc4:	41 59                	pop    %r9
ffffffff80411cc6:	41 5a                	pop    %r10
ffffffff80411cc8:	41 5b                	pop    %r11
ffffffff80411cca:	48 cf                	iretq  
ffffffff80411ccc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411cd0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi20EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411cd0:	41 53                	push   %r11
ffffffff80411cd2:	41 52                	push   %r10
ffffffff80411cd4:	41 51                	push   %r9
ffffffff80411cd6:	41 50                	push   %r8
ffffffff80411cd8:	57                   	push   %rdi
ffffffff80411cd9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411cda:	be 14 00 00 00       	mov    $0x14,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411cdf:	51                   	push   %rcx
ffffffff80411ce0:	52                   	push   %rdx
ffffffff80411ce1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411ce2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411ce7:	fc                   	cld    
ffffffff80411ce8:	e8 e3 bf ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411ced:	58                   	pop    %rax
ffffffff80411cee:	5a                   	pop    %rdx
ffffffff80411cef:	59                   	pop    %rcx
ffffffff80411cf0:	5e                   	pop    %rsi
ffffffff80411cf1:	5f                   	pop    %rdi
ffffffff80411cf2:	41 58                	pop    %r8
ffffffff80411cf4:	41 59                	pop    %r9
ffffffff80411cf6:	41 5a                	pop    %r10
ffffffff80411cf8:	41 5b                	pop    %r11
ffffffff80411cfa:	48 cf                	iretq  
ffffffff80411cfc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411d00 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi21EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d00:	41 53                	push   %r11
ffffffff80411d02:	41 52                	push   %r10
ffffffff80411d04:	41 51                	push   %r9
ffffffff80411d06:	41 50                	push   %r8
ffffffff80411d08:	57                   	push   %rdi
ffffffff80411d09:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d0a:	be 15 00 00 00       	mov    $0x15,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d0f:	51                   	push   %rcx
ffffffff80411d10:	52                   	push   %rdx
ffffffff80411d11:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d12:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411d17:	fc                   	cld    
ffffffff80411d18:	e8 b3 bf ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411d1d:	58                   	pop    %rax
ffffffff80411d1e:	5a                   	pop    %rdx
ffffffff80411d1f:	59                   	pop    %rcx
ffffffff80411d20:	5e                   	pop    %rsi
ffffffff80411d21:	5f                   	pop    %rdi
ffffffff80411d22:	41 58                	pop    %r8
ffffffff80411d24:	41 59                	pop    %r9
ffffffff80411d26:	41 5a                	pop    %r10
ffffffff80411d28:	41 5b                	pop    %r11
ffffffff80411d2a:	48 cf                	iretq  
ffffffff80411d2c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411d30 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi22EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d30:	41 53                	push   %r11
ffffffff80411d32:	41 52                	push   %r10
ffffffff80411d34:	41 51                	push   %r9
ffffffff80411d36:	41 50                	push   %r8
ffffffff80411d38:	57                   	push   %rdi
ffffffff80411d39:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d3a:	be 16 00 00 00       	mov    $0x16,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d3f:	51                   	push   %rcx
ffffffff80411d40:	52                   	push   %rdx
ffffffff80411d41:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d42:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411d47:	fc                   	cld    
ffffffff80411d48:	e8 83 bf ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411d4d:	58                   	pop    %rax
ffffffff80411d4e:	5a                   	pop    %rdx
ffffffff80411d4f:	59                   	pop    %rcx
ffffffff80411d50:	5e                   	pop    %rsi
ffffffff80411d51:	5f                   	pop    %rdi
ffffffff80411d52:	41 58                	pop    %r8
ffffffff80411d54:	41 59                	pop    %r9
ffffffff80411d56:	41 5a                	pop    %r10
ffffffff80411d58:	41 5b                	pop    %r11
ffffffff80411d5a:	48 cf                	iretq  
ffffffff80411d5c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411d60 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi23EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d60:	41 53                	push   %r11
ffffffff80411d62:	41 52                	push   %r10
ffffffff80411d64:	41 51                	push   %r9
ffffffff80411d66:	41 50                	push   %r8
ffffffff80411d68:	57                   	push   %rdi
ffffffff80411d69:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d6a:	be 17 00 00 00       	mov    $0x17,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d6f:	51                   	push   %rcx
ffffffff80411d70:	52                   	push   %rdx
ffffffff80411d71:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d72:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411d77:	fc                   	cld    
ffffffff80411d78:	e8 53 bf ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411d7d:	58                   	pop    %rax
ffffffff80411d7e:	5a                   	pop    %rdx
ffffffff80411d7f:	59                   	pop    %rcx
ffffffff80411d80:	5e                   	pop    %rsi
ffffffff80411d81:	5f                   	pop    %rdi
ffffffff80411d82:	41 58                	pop    %r8
ffffffff80411d84:	41 59                	pop    %r9
ffffffff80411d86:	41 5a                	pop    %r10
ffffffff80411d88:	41 5b                	pop    %r11
ffffffff80411d8a:	48 cf                	iretq  
ffffffff80411d8c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411d90 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi24EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d90:	41 53                	push   %r11
ffffffff80411d92:	41 52                	push   %r10
ffffffff80411d94:	41 51                	push   %r9
ffffffff80411d96:	41 50                	push   %r8
ffffffff80411d98:	57                   	push   %rdi
ffffffff80411d99:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411d9a:	be 18 00 00 00       	mov    $0x18,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411d9f:	51                   	push   %rcx
ffffffff80411da0:	52                   	push   %rdx
ffffffff80411da1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411da2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411da7:	fc                   	cld    
ffffffff80411da8:	e8 23 bf ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411dad:	58                   	pop    %rax
ffffffff80411dae:	5a                   	pop    %rdx
ffffffff80411daf:	59                   	pop    %rcx
ffffffff80411db0:	5e                   	pop    %rsi
ffffffff80411db1:	5f                   	pop    %rdi
ffffffff80411db2:	41 58                	pop    %r8
ffffffff80411db4:	41 59                	pop    %r9
ffffffff80411db6:	41 5a                	pop    %r10
ffffffff80411db8:	41 5b                	pop    %r11
ffffffff80411dba:	48 cf                	iretq  
ffffffff80411dbc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411dc0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi25EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411dc0:	41 53                	push   %r11
ffffffff80411dc2:	41 52                	push   %r10
ffffffff80411dc4:	41 51                	push   %r9
ffffffff80411dc6:	41 50                	push   %r8
ffffffff80411dc8:	57                   	push   %rdi
ffffffff80411dc9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411dca:	be 19 00 00 00       	mov    $0x19,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411dcf:	51                   	push   %rcx
ffffffff80411dd0:	52                   	push   %rdx
ffffffff80411dd1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411dd2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411dd7:	fc                   	cld    
ffffffff80411dd8:	e8 f3 be ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411ddd:	58                   	pop    %rax
ffffffff80411dde:	5a                   	pop    %rdx
ffffffff80411ddf:	59                   	pop    %rcx
ffffffff80411de0:	5e                   	pop    %rsi
ffffffff80411de1:	5f                   	pop    %rdi
ffffffff80411de2:	41 58                	pop    %r8
ffffffff80411de4:	41 59                	pop    %r9
ffffffff80411de6:	41 5a                	pop    %r10
ffffffff80411de8:	41 5b                	pop    %r11
ffffffff80411dea:	48 cf                	iretq  
ffffffff80411dec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411df0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi26EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411df0:	41 53                	push   %r11
ffffffff80411df2:	41 52                	push   %r10
ffffffff80411df4:	41 51                	push   %r9
ffffffff80411df6:	41 50                	push   %r8
ffffffff80411df8:	57                   	push   %rdi
ffffffff80411df9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411dfa:	be 1a 00 00 00       	mov    $0x1a,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411dff:	51                   	push   %rcx
ffffffff80411e00:	52                   	push   %rdx
ffffffff80411e01:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411e02:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411e07:	fc                   	cld    
ffffffff80411e08:	e8 c3 be ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411e0d:	58                   	pop    %rax
ffffffff80411e0e:	5a                   	pop    %rdx
ffffffff80411e0f:	59                   	pop    %rcx
ffffffff80411e10:	5e                   	pop    %rsi
ffffffff80411e11:	5f                   	pop    %rdi
ffffffff80411e12:	41 58                	pop    %r8
ffffffff80411e14:	41 59                	pop    %r9
ffffffff80411e16:	41 5a                	pop    %r10
ffffffff80411e18:	41 5b                	pop    %r11
ffffffff80411e1a:	48 cf                	iretq  
ffffffff80411e1c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411e20 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi27EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411e20:	41 53                	push   %r11
ffffffff80411e22:	41 52                	push   %r10
ffffffff80411e24:	41 51                	push   %r9
ffffffff80411e26:	41 50                	push   %r8
ffffffff80411e28:	57                   	push   %rdi
ffffffff80411e29:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411e2a:	be 1b 00 00 00       	mov    $0x1b,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411e2f:	51                   	push   %rcx
ffffffff80411e30:	52                   	push   %rdx
ffffffff80411e31:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411e32:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411e37:	fc                   	cld    
ffffffff80411e38:	e8 93 be ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411e3d:	58                   	pop    %rax
ffffffff80411e3e:	5a                   	pop    %rdx
ffffffff80411e3f:	59                   	pop    %rcx
ffffffff80411e40:	5e                   	pop    %rsi
ffffffff80411e41:	5f                   	pop    %rdi
ffffffff80411e42:	41 58                	pop    %r8
ffffffff80411e44:	41 59                	pop    %r9
ffffffff80411e46:	41 5a                	pop    %r10
ffffffff80411e48:	41 5b                	pop    %r11
ffffffff80411e4a:	48 cf                	iretq  
ffffffff80411e4c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411e50 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi28EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411e50:	41 53                	push   %r11
ffffffff80411e52:	41 52                	push   %r10
ffffffff80411e54:	41 51                	push   %r9
ffffffff80411e56:	41 50                	push   %r8
ffffffff80411e58:	57                   	push   %rdi
ffffffff80411e59:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411e5a:	be 1c 00 00 00       	mov    $0x1c,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411e5f:	51                   	push   %rcx
ffffffff80411e60:	52                   	push   %rdx
ffffffff80411e61:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411e62:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411e67:	fc                   	cld    
ffffffff80411e68:	e8 63 be ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411e6d:	58                   	pop    %rax
ffffffff80411e6e:	5a                   	pop    %rdx
ffffffff80411e6f:	59                   	pop    %rcx
ffffffff80411e70:	5e                   	pop    %rsi
ffffffff80411e71:	5f                   	pop    %rdi
ffffffff80411e72:	41 58                	pop    %r8
ffffffff80411e74:	41 59                	pop    %r9
ffffffff80411e76:	41 5a                	pop    %r10
ffffffff80411e78:	41 5b                	pop    %r11
ffffffff80411e7a:	48 cf                	iretq  
ffffffff80411e7c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411e80 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi29EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411e80:	41 53                	push   %r11
ffffffff80411e82:	41 52                	push   %r10
ffffffff80411e84:	41 51                	push   %r9
ffffffff80411e86:	41 50                	push   %r8
ffffffff80411e88:	57                   	push   %rdi
ffffffff80411e89:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411e8a:	be 1d 00 00 00       	mov    $0x1d,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411e8f:	51                   	push   %rcx
ffffffff80411e90:	52                   	push   %rdx
ffffffff80411e91:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411e92:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411e97:	fc                   	cld    
ffffffff80411e98:	e8 33 be ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411e9d:	58                   	pop    %rax
ffffffff80411e9e:	5a                   	pop    %rdx
ffffffff80411e9f:	59                   	pop    %rcx
ffffffff80411ea0:	5e                   	pop    %rsi
ffffffff80411ea1:	5f                   	pop    %rdi
ffffffff80411ea2:	41 58                	pop    %r8
ffffffff80411ea4:	41 59                	pop    %r9
ffffffff80411ea6:	41 5a                	pop    %r10
ffffffff80411ea8:	41 5b                	pop    %r11
ffffffff80411eaa:	48 cf                	iretq  
ffffffff80411eac:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411eb0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi30EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411eb0:	41 53                	push   %r11
ffffffff80411eb2:	41 52                	push   %r10
ffffffff80411eb4:	41 51                	push   %r9
ffffffff80411eb6:	41 50                	push   %r8
ffffffff80411eb8:	57                   	push   %rdi
ffffffff80411eb9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411eba:	be 1e 00 00 00       	mov    $0x1e,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ebf:	51                   	push   %rcx
ffffffff80411ec0:	52                   	push   %rdx
ffffffff80411ec1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411ec2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411ec7:	fc                   	cld    
ffffffff80411ec8:	e8 03 be ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411ecd:	58                   	pop    %rax
ffffffff80411ece:	5a                   	pop    %rdx
ffffffff80411ecf:	59                   	pop    %rcx
ffffffff80411ed0:	5e                   	pop    %rsi
ffffffff80411ed1:	5f                   	pop    %rdi
ffffffff80411ed2:	41 58                	pop    %r8
ffffffff80411ed4:	41 59                	pop    %r9
ffffffff80411ed6:	41 5a                	pop    %r10
ffffffff80411ed8:	41 5b                	pop    %r11
ffffffff80411eda:	48 cf                	iretq  
ffffffff80411edc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411ee0 <_ZN6Kernel12_GLOBAL__N_119CPUInterruptHandlerILi31EEEvPNS_23CPUInterruptHandlerArgsE>:
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411ee0:	41 53                	push   %r11
ffffffff80411ee2:	41 52                	push   %r10
ffffffff80411ee4:	41 51                	push   %r9
ffffffff80411ee6:	41 50                	push   %r8
ffffffff80411ee8:	57                   	push   %rdi
ffffffff80411ee9:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411eea:	be 1f 00 00 00       	mov    $0x1f,%esi
__attribute__((interrupt)) void CPUInterruptHandler(
ffffffff80411eef:	51                   	push   %rcx
ffffffff80411ef0:	52                   	push   %rdx
ffffffff80411ef1:	50                   	push   %rax
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411ef2:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
ffffffff80411ef7:	fc                   	cld    
ffffffff80411ef8:	e8 d3 bd ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
}
ffffffff80411efd:	58                   	pop    %rax
ffffffff80411efe:	5a                   	pop    %rdx
ffffffff80411eff:	59                   	pop    %rcx
ffffffff80411f00:	5e                   	pop    %rsi
ffffffff80411f01:	5f                   	pop    %rdi
ffffffff80411f02:	41 58                	pop    %r8
ffffffff80411f04:	41 59                	pop    %r9
ffffffff80411f06:	41 5a                	pop    %r10
ffffffff80411f08:	41 5b                	pop    %r11
ffffffff80411f0a:	48 cf                	iretq  
ffffffff80411f0c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80411f10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80411f10:	41 57                	push   %r15
ffffffff80411f12:	41 56                	push   %r14
ffffffff80411f14:	41 55                	push   %r13
ffffffff80411f16:	41 54                	push   %r12
ffffffff80411f18:	41 53                	push   %r11
ffffffff80411f1a:	41 52                	push   %r10
ffffffff80411f1c:	41 51                	push   %r9
ffffffff80411f1e:	41 50                	push   %r8
ffffffff80411f20:	55                   	push   %rbp
ffffffff80411f21:	57                   	push   %rdi
ffffffff80411f22:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411f23:	be 08 00 00 00       	mov    $0x8,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80411f28:	53                   	push   %rbx
ffffffff80411f29:	51                   	push   %rcx
ffffffff80411f2a:	52                   	push   %rdx
ffffffff80411f2b:	50                   	push   %rax
ffffffff80411f2c:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80411f30:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
ffffffff80411f37:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80411f38:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
ffffffff80411f3f:	00 
ffffffff80411f40:	fc                   	cld    
ffffffff80411f41:	e8 8a bd ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
ffffffff80411f46:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff80411f4d:	e8 6e b2 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80411f52:	85 c0                	test   %eax,%eax
ffffffff80411f54:	0f 84 a6 0b 00 00    	je     ffffffff80412b00 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xbf0>
ffffffff80411f5a:	44 8b 2d ff c0 00 00 	mov    0xc0ff(%rip),%r13d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80411f61:	44 8b 0d fc c0 00 00 	mov    0xc0fc(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80411f68:	49 c7 c2 66 b8 41 80 	mov    $0xffffffff8041b866,%r10
ffffffff80411f6f:	44 8b 05 f6 c0 00 00 	mov    0xc0f6(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80411f76:	8b 3d ec c0 00 00    	mov    0xc0ec(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80411f7c:	41 8d 55 fe          	lea    -0x2(%r13),%edx
ffffffff80411f80:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
ffffffff80411f84:	45 89 ee             	mov    %r13d,%r14d
ffffffff80411f87:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80411f8b:	44 89 7c 24 2c       	mov    %r15d,0x2c(%rsp)
ffffffff80411f90:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80411f94:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
ffffffff80411f9b:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff80411f9f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80411fa3:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80411fa8:	48 89 d6             	mov    %rdx,%rsi
ffffffff80411fab:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80411faf:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80411fb3:	4c 01 fa             	add    %r15,%rdx
ffffffff80411fb6:	48 8d 8e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rcx
ffffffff80411fbd:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80411fc2:	48 8d 8c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rcx
ffffffff80411fc9:	80 
ffffffff80411fca:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff80411fcf:	90                   	nop
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80411fd0:	44 89 ce             	mov    %r9d,%esi
ffffffff80411fd3:	44 29 c6             	sub    %r8d,%esi
ffffffff80411fd6:	39 c6                	cmp    %eax,%esi
ffffffff80411fd8:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80411fdb:	39 f0                	cmp    %esi,%eax
ffffffff80411fdd:	89 f2                	mov    %esi,%edx
ffffffff80411fdf:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80411fe2:	85 d2                	test   %edx,%edx
ffffffff80411fe4:	0f 84 46 07 00 00    	je     ffffffff80412730 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80411fea:	83 ea 01             	sub    $0x1,%edx
ffffffff80411fed:	31 ed                	xor    %ebp,%ebp
ffffffff80411fef:	eb 17                	jmp    ffffffff80412008 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xf8>
ffffffff80411ff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80411ff8:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
ffffffff80411ffc:	48 39 d5             	cmp    %rdx,%rbp
ffffffff80411fff:	0f 84 2b 07 00 00    	je     ffffffff80412730 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80412005:	48 89 cd             	mov    %rcx,%rbp
      if (str_[i] == c) {
ffffffff80412008:	41 80 3c 2a 0a       	cmpb   $0xa,(%r10,%rbp,1)
ffffffff8041200d:	89 e9                	mov    %ebp,%ecx
ffffffff8041200f:	75 e7                	jne    ffffffff80411ff8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xe8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80412011:	39 c8                	cmp    %ecx,%eax
ffffffff80412013:	89 ca                	mov    %ecx,%edx
ffffffff80412015:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80412018:	44 39 f7             	cmp    %r14d,%edi
ffffffff8041201b:	0f 84 37 06 00 00    	je     ffffffff80412658 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412021:	44 01 c2             	add    %r8d,%edx
ffffffff80412024:	44 39 ca             	cmp    %r9d,%edx
ffffffff80412027:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff8041202b:	41 39 d0             	cmp    %edx,%r8d
ffffffff8041202e:	0f 83 b9 06 00 00    	jae    ffffffff804126ed <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7dd>
ffffffff80412034:	45 89 c3             	mov    %r8d,%r11d
ffffffff80412037:	41 f7 d3             	not    %r11d
ffffffff8041203a:	45 8d 24 13          	lea    (%r11,%rdx,1),%r12d
ffffffff8041203e:	41 89 fb             	mov    %edi,%r11d
ffffffff80412041:	4f 8d 1c 9b          	lea    (%r11,%r11,4),%r11
ffffffff80412045:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80412049:	4d 01 d8             	add    %r11,%r8
ffffffff8041204c:	45 31 db             	xor    %r11d,%r11d
ffffffff8041204f:	4d 01 c0             	add    %r8,%r8
ffffffff80412052:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412058:	66 47 0f be 2c 1a    	movsbw (%r10,%r11,1),%r13w
ffffffff8041205e:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff80412064:	66 47 89 ac 58 70 e0 	mov    %r13w,-0x7fbe1f90(%r8,%r11,2)
ffffffff8041206b:	41 80 
ffffffff8041206d:	4d 89 dd             	mov    %r11,%r13
ffffffff80412070:	49 83 c3 01          	add    $0x1,%r11
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412074:	4d 39 e5             	cmp    %r12,%r13
ffffffff80412077:	75 df                	jne    ffffffff80412058 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x148>
    if (current_col_ == num_cols_) {
ffffffff80412079:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041207c:	0f 84 7e 06 00 00    	je     ffffffff80412700 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7f0>
    current_col_ = i;
ffffffff80412082:	89 15 e4 bf 00 00    	mov    %edx,0xbfe4(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412088:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff8041208b:	0f 84 8d 06 00 00    	je     ffffffff8041271e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x80e>
ffffffff80412091:	85 d2                	test   %edx,%edx
ffffffff80412093:	74 09                	je     ffffffff8041209e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80412095:	83 ff 18             	cmp    $0x18,%edi
ffffffff80412098:	0f 86 e2 06 00 00    	jbe    ffffffff80412780 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x870>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041209e:	83 c1 01             	add    $0x1,%ecx
ffffffff804120a1:	39 f1                	cmp    %esi,%ecx
ffffffff804120a3:	0f 46 f1             	cmovbe %ecx,%esi
    str_ += n;
ffffffff804120a6:	89 f1                	mov    %esi,%ecx
    size_ -= min(n, size_);
ffffffff804120a8:	41 89 d0             	mov    %edx,%r8d
    str_ += n;
ffffffff804120ab:	49 01 ca             	add    %rcx,%r10
    size_ -= min(n, size_);
ffffffff804120ae:	39 c6                	cmp    %eax,%esi
ffffffff804120b0:	0f 47 f0             	cmova  %eax,%esi
ffffffff804120b3:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff804120b5:	85 c0                	test   %eax,%eax
ffffffff804120b7:	0f 85 13 ff ff ff    	jne    ffffffff80411fd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xc0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804120bd:	85 ff                	test   %edi,%edi
ffffffff804120bf:	74 6a                	je     ffffffff8041212b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff804120c1:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804120c4:	44 8b 15 99 bf 00 00 	mov    0xbf99(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804120cb:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff804120d2:	31 c9                	xor    %ecx,%ecx
ffffffff804120d4:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff804120d8:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804120dc:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff804120e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804120e8:	48 89 f5             	mov    %rsi,%rbp
ffffffff804120eb:	89 ca                	mov    %ecx,%edx
ffffffff804120ed:	46 8d 0c 11          	lea    (%rcx,%r10,1),%r9d
ffffffff804120f1:	45 85 d2             	test   %r10d,%r10d
ffffffff804120f4:	0f 84 66 06 00 00    	je     ffffffff80412760 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x850>
ffffffff804120fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412100:	44 0f b7 5d 00       	movzwl 0x0(%rbp),%r11d
ffffffff80412105:	89 d1                	mov    %edx,%ecx
ffffffff80412107:	83 c2 01             	add    $0x1,%edx
ffffffff8041210a:	48 83 c5 02          	add    $0x2,%rbp
ffffffff8041210e:	66 44 89 9c 09 00 80 	mov    %r11w,0xb8000(%rcx,%rcx,1)
ffffffff80412115:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412117:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041211a:	75 e4                	jne    ffffffff80412100 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1f0>
ffffffff8041211c:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80412123:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412126:	48 39 f0             	cmp    %rsi,%rax
ffffffff80412129:	75 bd                	jne    ffffffff804120e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
    if (current_col_ != 0) {
ffffffff8041212b:	45 85 c0             	test   %r8d,%r8d
ffffffff8041212e:	74 38                	je     ffffffff80412168 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412130:	8b 35 2e bf 00 00    	mov    0xbf2e(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412136:	85 f6                	test   %esi,%esi
ffffffff80412138:	74 2e                	je     ffffffff80412168 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8041213a:	89 fa                	mov    %edi,%edx
ffffffff8041213c:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff80412140:	0f af d6             	imul   %esi,%edx
ffffffff80412143:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80412147:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8041214d:	01 d6                	add    %edx,%esi
ffffffff8041214f:	90                   	nop
ffffffff80412150:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80412153:	89 d7                	mov    %edx,%edi
ffffffff80412155:	83 c2 01             	add    $0x1,%edx
ffffffff80412158:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041215c:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80412163:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412164:	39 f2                	cmp    %esi,%edx
ffffffff80412166:	75 e8                	jne    ffffffff80412150 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412168:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8041216d:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff80412170:	48 89 da             	mov    %rbx,%rdx
    num_len++;
ffffffff80412173:	89 c6                	mov    %eax,%esi
    buffer[i] = num % base;
ffffffff80412175:	83 e2 0f             	and    $0xf,%edx
ffffffff80412178:	88 54 04 4b          	mov    %dl,0x4b(%rsp,%rax,1)
ffffffff8041217c:	48 89 da             	mov    %rbx,%rdx
    num /= base;
ffffffff8041217f:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80412183:	48 83 fa 0f          	cmp    $0xf,%rdx
ffffffff80412187:	76 0f                	jbe    ffffffff80412198 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
ffffffff80412189:	48 83 c0 01          	add    $0x1,%rax
  for (size_t i = 0; i < size; i++) {
ffffffff8041218d:	48 83 f8 15          	cmp    $0x15,%rax
ffffffff80412191:	75 dd                	jne    ffffffff80412170 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x260>
ffffffff80412193:	be 14 00 00 00       	mov    $0x14,%esi
  if (num != 0) {
ffffffff80412198:	48 85 db             	test   %rbx,%rbx
ffffffff8041219b:	0f 85 2f 09 00 00    	jne    ffffffff80412ad0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xbc0>
ffffffff804121a1:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
ffffffff804121a6:	89 f7                	mov    %esi,%edi
    str[offset++] = '0';
ffffffff804121a8:	66 c7 44 24 38 30 78 	movw   $0x7830,0x38(%rsp)
ffffffff804121af:	48 01 df             	add    %rbx,%rdi
ffffffff804121b2:	48 89 da             	mov    %rbx,%rdx
    if (buffer[num_len - i - 1] >= 10) {
ffffffff804121b5:	8d 4c 1e ff          	lea    -0x1(%rsi,%rbx,1),%ecx
ffffffff804121b9:	eb 14                	jmp    ffffffff804121cf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff804121bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff804121c0:	83 c0 37             	add    $0x37,%eax
ffffffff804121c3:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804121c7:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff804121ca:	48 39 d7             	cmp    %rdx,%rdi
ffffffff804121cd:	74 1c                	je     ffffffff804121eb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x2db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff804121cf:	89 c8                	mov    %ecx,%eax
ffffffff804121d1:	29 d0                	sub    %edx,%eax
ffffffff804121d3:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff804121d8:	3c 09                	cmp    $0x9,%al
ffffffff804121da:	7f e4                	jg     ffffffff804121c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff804121dc:	83 c0 30             	add    $0x30,%eax
ffffffff804121df:	48 83 c2 01          	add    $0x1,%rdx
ffffffff804121e3:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff804121e6:	48 39 d7             	cmp    %rdx,%rdi
ffffffff804121e9:	75 e4                	jne    ffffffff804121cf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
  str[num_len + offset] = 0;
ffffffff804121eb:	8d 46 02             	lea    0x2(%rsi),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804121ee:	48 89 df             	mov    %rbx,%rdi
ffffffff804121f1:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff804121f6:	e8 c5 af ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff804121fb:	85 c0                	test   %eax,%eax
ffffffff804121fd:	0f 84 e9 08 00 00    	je     ffffffff80412aec <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xbdc>
ffffffff80412203:	44 8b 25 56 be 00 00 	mov    0xbe56(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041220a:	44 8b 0d 53 be 00 00 	mov    0xbe53(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412211:	49 89 d8             	mov    %rbx,%r8
ffffffff80412214:	8b 2d 52 be 00 00    	mov    0xbe52(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041221a:	8b 0d 48 be 00 00    	mov    0xbe48(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412220:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80412225:	45 8d 69 ff          	lea    -0x1(%r9),%r13d
ffffffff80412229:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041222d:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80412232:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80412236:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff8041223d:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80412242:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80412246:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff8041224b:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041224e:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80412252:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80412256:	4c 01 ea             	add    %r13,%rdx
ffffffff80412259:	48 8d be 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rdi
ffffffff80412260:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80412265:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff8041226c:	80 
ffffffff8041226d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80412272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412278:	44 89 ce             	mov    %r9d,%esi
ffffffff8041227b:	89 c2                	mov    %eax,%edx
ffffffff8041227d:	29 ee                	sub    %ebp,%esi
ffffffff8041227f:	39 c6                	cmp    %eax,%esi
ffffffff80412281:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80412284:	39 c6                	cmp    %eax,%esi
ffffffff80412286:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80412289:	85 d2                	test   %edx,%edx
ffffffff8041228b:	0f 84 07 07 00 00    	je     ffffffff80412998 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80412291:	83 ea 01             	sub    $0x1,%edx
ffffffff80412294:	31 db                	xor    %ebx,%ebx
ffffffff80412296:	eb 18                	jmp    ffffffff804122b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a0>
ffffffff80412298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041229f:	00 
ffffffff804122a0:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff804122a4:	48 39 da             	cmp    %rbx,%rdx
ffffffff804122a7:	0f 84 eb 06 00 00    	je     ffffffff80412998 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff804122ad:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff804122b0:	41 80 3c 18 0a       	cmpb   $0xa,(%r8,%rbx,1)
ffffffff804122b5:	89 df                	mov    %ebx,%edi
ffffffff804122b7:	75 e7                	jne    ffffffff804122a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x390>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804122b9:	39 f8                	cmp    %edi,%eax
ffffffff804122bb:	89 fa                	mov    %edi,%edx
ffffffff804122bd:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff804122c0:	41 39 cc             	cmp    %ecx,%r12d
ffffffff804122c3:	0f 84 37 06 00 00    	je     ffffffff80412900 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804122c9:	01 ea                	add    %ebp,%edx
ffffffff804122cb:	44 39 ca             	cmp    %r9d,%edx
ffffffff804122ce:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff804122d2:	39 ea                	cmp    %ebp,%edx
ffffffff804122d4:	0f 86 b1 06 00 00    	jbe    ffffffff8041298b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa7b>
ffffffff804122da:	41 89 ea             	mov    %ebp,%r10d
ffffffff804122dd:	41 f7 d2             	not    %r10d
ffffffff804122e0:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff804122e4:	41 89 ca             	mov    %ecx,%r10d
ffffffff804122e7:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff804122eb:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff804122ef:	4c 01 d5             	add    %r10,%rbp
ffffffff804122f2:	45 31 d2             	xor    %r10d,%r10d
ffffffff804122f5:	48 01 ed             	add    %rbp,%rbp
ffffffff804122f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804122ff:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412300:	66 47 0f be 34 10    	movsbw (%r8,%r10,1),%r14w
ffffffff80412306:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8041230c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80412313:	41 80 
ffffffff80412315:	4d 89 d6             	mov    %r10,%r14
ffffffff80412318:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041231c:	4d 39 de             	cmp    %r11,%r14
ffffffff8041231f:	75 df                	jne    ffffffff80412300 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3f0>
    if (current_col_ == num_cols_) {
ffffffff80412321:	41 39 d1             	cmp    %edx,%r9d
ffffffff80412324:	0f 84 ae 05 00 00    	je     ffffffff804128d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c8>
    current_col_ = i;
ffffffff8041232a:	89 15 3c bd 00 00    	mov    %edx,0xbd3c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412330:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80412333:	0f 84 bd 05 00 00    	je     ffffffff804128f6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9e6>
ffffffff80412339:	85 d2                	test   %edx,%edx
ffffffff8041233b:	74 09                	je     ffffffff80412346 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff8041233d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80412340:	0f 86 2a 07 00 00    	jbe    ffffffff80412a70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80412346:	83 c7 01             	add    $0x1,%edi
ffffffff80412349:	39 f7                	cmp    %esi,%edi
ffffffff8041234b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff8041234e:	89 f7                	mov    %esi,%edi
    size_ -= min(n, size_);
ffffffff80412350:	89 d5                	mov    %edx,%ebp
    str_ += n;
ffffffff80412352:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff80412355:	39 f0                	cmp    %esi,%eax
ffffffff80412357:	0f 46 f0             	cmovbe %eax,%esi
ffffffff8041235a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff8041235c:	85 c0                	test   %eax,%eax
ffffffff8041235e:	0f 85 14 ff ff ff    	jne    ffffffff80412278 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x368>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412364:	85 c9                	test   %ecx,%ecx
ffffffff80412366:	74 6a                	je     ffffffff804123d2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff80412368:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041236b:	44 8b 0d f2 bc 00 00 	mov    0xbcf2(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412372:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80412379:	31 ff                	xor    %edi,%edi
ffffffff8041237b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041237f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80412383:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80412389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80412390:	48 89 f3             	mov    %rsi,%rbx
ffffffff80412393:	89 fa                	mov    %edi,%edx
ffffffff80412395:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80412399:	45 85 c9             	test   %r9d,%r9d
ffffffff8041239c:	0f 84 2e 06 00 00    	je     ffffffff804129d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xac0>
ffffffff804123a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804123a8:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff804123ac:	89 d7                	mov    %edx,%edi
ffffffff804123ae:	83 c2 01             	add    $0x1,%edx
ffffffff804123b1:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804123b5:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff804123bc:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804123be:	41 39 d0             	cmp    %edx,%r8d
ffffffff804123c1:	75 e5                	jne    ffffffff804123a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x498>
ffffffff804123c3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804123ca:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804123cd:	48 39 c6             	cmp    %rax,%rsi
ffffffff804123d0:	75 be                	jne    ffffffff80412390 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
    if (current_col_ != 0) {
ffffffff804123d2:	85 ed                	test   %ebp,%ebp
ffffffff804123d4:	74 3a                	je     ffffffff80412410 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804123d6:	8b 35 88 bc 00 00    	mov    0xbc88(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804123dc:	85 f6                	test   %esi,%esi
ffffffff804123de:	74 30                	je     ffffffff80412410 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804123e0:	89 f2                	mov    %esi,%edx
ffffffff804123e2:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff804123e6:	0f af d1             	imul   %ecx,%edx
ffffffff804123e9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804123ed:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff804123f3:	01 d6                	add    %edx,%esi
ffffffff804123f5:	0f 1f 00             	nopl   (%rax)
ffffffff804123f8:	0f b7 08             	movzwl (%rax),%ecx
ffffffff804123fb:	89 d7                	mov    %edx,%edi
ffffffff804123fd:	83 c2 01             	add    $0x1,%edx
ffffffff80412400:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412404:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff8041240b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041240c:	39 d6                	cmp    %edx,%esi
ffffffff8041240e:	75 e8                	jne    ffffffff804123f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x4e8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80412410:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80412417:	e8 a4 ad ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8041241c:	85 c0                	test   %eax,%eax
ffffffff8041241e:	0f 84 f4 06 00 00    	je     ffffffff80412b18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xc08>
ffffffff80412424:	44 8b 25 35 bc 00 00 	mov    0xbc35(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041242b:	44 8b 05 32 bc 00 00 	mov    0xbc32(%rip),%r8d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412432:	49 c7 c1 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r9
ffffffff80412439:	8b 2d 2d bc 00 00    	mov    0xbc2d(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041243f:	8b 0d 23 bc 00 00    	mov    0xbc23(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412445:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8041244a:	45 8d 68 ff          	lea    -0x1(%r8),%r13d
ffffffff8041244e:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80412452:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80412457:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8041245b:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff80412462:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80412467:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041246b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff80412470:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412473:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80412477:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8041247b:	4c 01 ea             	add    %r13,%rdx
ffffffff8041247e:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff80412485:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8041248a:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff80412491:	80 
ffffffff80412492:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff80412497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041249e:	00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804124a0:	44 89 c6             	mov    %r8d,%esi
ffffffff804124a3:	89 c2                	mov    %eax,%edx
ffffffff804124a5:	29 ee                	sub    %ebp,%esi
ffffffff804124a7:	39 c6                	cmp    %eax,%esi
ffffffff804124a9:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804124ac:	39 c6                	cmp    %eax,%esi
ffffffff804124ae:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff804124b1:	85 d2                	test   %edx,%edx
ffffffff804124b3:	0f 84 ff 03 00 00    	je     ffffffff804128b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff804124b9:	83 ea 01             	sub    $0x1,%edx
ffffffff804124bc:	31 db                	xor    %ebx,%ebx
ffffffff804124be:	eb 10                	jmp    ffffffff804124d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c0>
ffffffff804124c0:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff804124c4:	48 39 da             	cmp    %rbx,%rdx
ffffffff804124c7:	0f 84 eb 03 00 00    	je     ffffffff804128b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff804124cd:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff804124d0:	41 80 3c 19 0a       	cmpb   $0xa,(%r9,%rbx,1)
ffffffff804124d5:	89 df                	mov    %ebx,%edi
ffffffff804124d7:	75 e7                	jne    ffffffff804124c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804124d9:	39 f8                	cmp    %edi,%eax
ffffffff804124db:	89 fa                	mov    %edi,%edx
ffffffff804124dd:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff804124e0:	41 39 cc             	cmp    %ecx,%r12d
ffffffff804124e3:	0f 84 37 03 00 00    	je     ffffffff80412820 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804124e9:	01 ea                	add    %ebp,%edx
ffffffff804124eb:	44 39 c2             	cmp    %r8d,%edx
ffffffff804124ee:	41 0f 47 d0          	cmova  %r8d,%edx
ffffffff804124f2:	39 ea                	cmp    %ebp,%edx
ffffffff804124f4:	0f 86 b1 03 00 00    	jbe    ffffffff804128ab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x99b>
ffffffff804124fa:	41 89 ea             	mov    %ebp,%r10d
ffffffff804124fd:	41 f7 d2             	not    %r10d
ffffffff80412500:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80412504:	41 89 ca             	mov    %ecx,%r10d
ffffffff80412507:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff8041250b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff8041250f:	4c 01 d5             	add    %r10,%rbp
ffffffff80412512:	45 31 d2             	xor    %r10d,%r10d
ffffffff80412515:	48 01 ed             	add    %rbp,%rbp
ffffffff80412518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041251f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412520:	66 47 0f be 34 11    	movsbw (%r9,%r10,1),%r14w
ffffffff80412526:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8041252c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80412533:	41 80 
ffffffff80412535:	4d 89 d6             	mov    %r10,%r14
ffffffff80412538:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041253c:	4d 39 f3             	cmp    %r14,%r11
ffffffff8041253f:	75 df                	jne    ffffffff80412520 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x610>
    if (current_col_ == num_cols_) {
ffffffff80412541:	41 39 d0             	cmp    %edx,%r8d
ffffffff80412544:	0f 84 a6 02 00 00    	je     ffffffff804127f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8e0>
    current_col_ = i;
ffffffff8041254a:	89 15 1c bb 00 00    	mov    %edx,0xbb1c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412550:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80412553:	0f 84 b5 02 00 00    	je     ffffffff8041280e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8fe>
ffffffff80412559:	85 d2                	test   %edx,%edx
ffffffff8041255b:	74 09                	je     ffffffff80412566 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff8041255d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80412560:	0f 86 aa 04 00 00    	jbe    ffffffff80412a10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb00>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80412566:	83 c7 01             	add    $0x1,%edi
ffffffff80412569:	39 f7                	cmp    %esi,%edi
ffffffff8041256b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff8041256e:	89 f7                	mov    %esi,%edi
ffffffff80412570:	89 d5                	mov    %edx,%ebp
ffffffff80412572:	49 01 f9             	add    %rdi,%r9
    size_ -= min(n, size_);
ffffffff80412575:	39 c6                	cmp    %eax,%esi
ffffffff80412577:	0f 47 f0             	cmova  %eax,%esi
ffffffff8041257a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff8041257c:	85 c0                	test   %eax,%eax
ffffffff8041257e:	0f 85 1c ff ff ff    	jne    ffffffff804124a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412584:	85 c9                	test   %ecx,%ecx
ffffffff80412586:	74 6a                	je     ffffffff804125f2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80412588:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041258b:	44 8b 0d d2 ba 00 00 	mov    0xbad2(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412592:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80412599:	31 ff                	xor    %edi,%edi
ffffffff8041259b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041259f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804125a3:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff804125a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff804125b0:	48 89 f3             	mov    %rsi,%rbx
ffffffff804125b3:	89 fa                	mov    %edi,%edx
ffffffff804125b5:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff804125b9:	45 85 c9             	test   %r9d,%r9d
ffffffff804125bc:	0f 84 2e 04 00 00    	je     ffffffff804129f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xae0>
ffffffff804125c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804125c8:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff804125cc:	89 d7                	mov    %edx,%edi
ffffffff804125ce:	83 c2 01             	add    $0x1,%edx
ffffffff804125d1:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804125d5:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff804125dc:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804125de:	41 39 d0             	cmp    %edx,%r8d
ffffffff804125e1:	75 e5                	jne    ffffffff804125c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6b8>
ffffffff804125e3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804125ea:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804125ed:	48 39 f0             	cmp    %rsi,%rax
ffffffff804125f0:	75 be                	jne    ffffffff804125b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
    if (current_col_ != 0) {
ffffffff804125f2:	85 ed                	test   %ebp,%ebp
ffffffff804125f4:	74 3a                	je     ffffffff80412630 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804125f6:	8b 35 68 ba 00 00    	mov    0xba68(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804125fc:	85 f6                	test   %esi,%esi
ffffffff804125fe:	74 30                	je     ffffffff80412630 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80412600:	89 f2                	mov    %esi,%edx
ffffffff80412602:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80412606:	0f af d1             	imul   %ecx,%edx
ffffffff80412609:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041260d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80412613:	01 d6                	add    %edx,%esi
ffffffff80412615:	0f 1f 00             	nopl   (%rax)
ffffffff80412618:	0f b7 08             	movzwl (%rax),%ecx
ffffffff8041261b:	89 d7                	mov    %edx,%edi
ffffffff8041261d:	83 c2 01             	add    $0x1,%edx
ffffffff80412620:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412624:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff8041262b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041262c:	39 d6                	cmp    %edx,%esi
ffffffff8041262e:	75 e8                	jne    ffffffff80412618 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x708>
}
ffffffff80412630:	48 83 c4 68          	add    $0x68,%rsp
ffffffff80412634:	58                   	pop    %rax
ffffffff80412635:	5a                   	pop    %rdx
ffffffff80412636:	59                   	pop    %rcx
ffffffff80412637:	5b                   	pop    %rbx
ffffffff80412638:	5e                   	pop    %rsi
ffffffff80412639:	5f                   	pop    %rdi
ffffffff8041263a:	5d                   	pop    %rbp
ffffffff8041263b:	41 58                	pop    %r8
ffffffff8041263d:	41 59                	pop    %r9
ffffffff8041263f:	41 5a                	pop    %r10
ffffffff80412641:	41 5b                	pop    %r11
ffffffff80412643:	41 5c                	pop    %r12
ffffffff80412645:	41 5d                	pop    %r13
ffffffff80412647:	41 5e                	pop    %r14
ffffffff80412649:	41 5f                	pop    %r15
ffffffff8041264b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041264f:	48 cf                	iretq  
ffffffff80412651:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412658:	83 ff 01             	cmp    $0x1,%edi
ffffffff8041265b:	76 53                	jbe    ffffffff804126b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a0>
ffffffff8041265d:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80412663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412668:	45 31 e4             	xor    %r12d,%r12d
ffffffff8041266b:	4d 8d ab 60 ff ff ff 	lea    -0xa0(%r11),%r13
ffffffff80412672:	45 85 c9             	test   %r9d,%r9d
ffffffff80412675:	74 2b                	je     ffffffff804126a2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x792>
ffffffff80412677:	89 44 24 08          	mov    %eax,0x8(%rsp)
ffffffff8041267b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80412680:	43 0f b7 84 63 70 e0 	movzwl -0x7fbe1f90(%r11,%r12,2),%eax
ffffffff80412687:	41 80 
ffffffff80412689:	66 43 89 84 65 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%r12,2)
ffffffff80412690:	41 80 
ffffffff80412692:	4c 89 e0             	mov    %r12,%rax
ffffffff80412695:	49 83 c4 01          	add    $0x1,%r12
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412699:	49 39 c7             	cmp    %rax,%r15
ffffffff8041269c:	75 e2                	jne    ffffffff80412680 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff8041269e:	8b 44 24 08          	mov    0x8(%rsp),%eax
ffffffff804126a2:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804126a9:	4c 3b 5c 24 20       	cmp    0x20(%rsp),%r11
ffffffff804126ae:	75 b8                	jne    ffffffff80412668 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804126b0:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff804126b5:	45 85 c9             	test   %r9d,%r9d
ffffffff804126b8:	74 17                	je     ffffffff804126d1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c1>
ffffffff804126ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804126c0:	66 41 c7 03 00 00    	movw   $0x0,(%r11)
ffffffff804126c6:	49 83 c3 02          	add    $0x2,%r11
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804126ca:	4c 3b 5c 24 18       	cmp    0x18(%rsp),%r11
ffffffff804126cf:	75 ef                	jne    ffffffff804126c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804126d1:	44 01 c2             	add    %r8d,%edx
      current_row_--;
ffffffff804126d4:	83 ef 01             	sub    $0x1,%edi
ffffffff804126d7:	44 39 ca             	cmp    %r9d,%edx
ffffffff804126da:	89 3d 88 b9 00 00    	mov    %edi,0xb988(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804126e0:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804126e4:	41 39 d0             	cmp    %edx,%r8d
ffffffff804126e7:	0f 82 47 f9 ff ff    	jb     ffffffff80412034 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x124>
ffffffff804126ed:	44 89 c2             	mov    %r8d,%edx
    if (current_col_ == num_cols_) {
ffffffff804126f0:	44 39 ca             	cmp    %r9d,%edx
ffffffff804126f3:	0f 85 89 f9 ff ff    	jne    ffffffff80412082 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x172>
ffffffff804126f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80412700:	c7 05 62 b9 00 00 00 	movl   $0x0,0xb962(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412707:	00 00 00 
      current_row_++;
ffffffff8041270a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041270d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041270f:	89 3d 53 b9 00 00    	mov    %edi,0xb953(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412715:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80412718:	0f 85 80 f9 ff ff    	jne    ffffffff8041209e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff8041271e:	39 ce                	cmp    %ecx,%esi
ffffffff80412720:	0f 47 f1             	cmova  %ecx,%esi
ffffffff80412723:	e9 7e f9 ff ff       	jmpq   ffffffff804120a6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x196>
ffffffff80412728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041272f:	00 
    if (count == npos) {
ffffffff80412730:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80412733:	75 1b                	jne    ffffffff80412750 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x840>
ffffffff80412735:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff8041273a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff8041273f:	89 c2                	mov    %eax,%edx
ffffffff80412741:	e9 d2 f8 ff ff       	jmpq   ffffffff80412018 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x108>
ffffffff80412746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041274d:	00 00 00 
ffffffff80412750:	89 f1                	mov    %esi,%ecx
ffffffff80412752:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80412757:	e9 b5 f8 ff ff       	jmpq   ffffffff80412011 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x101>
ffffffff8041275c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80412760:	41 89 c9             	mov    %ecx,%r9d
ffffffff80412763:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041276a:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041276d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80412770:	0f 85 72 f9 ff ff    	jne    ffffffff804120e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
ffffffff80412776:	e9 b0 f9 ff ff       	jmpq   ffffffff8041212b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff8041277b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80412780:	44 39 ca             	cmp    %r9d,%edx
ffffffff80412783:	73 4a                	jae    ffffffff804127cf <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8bf>
ffffffff80412785:	89 fd                	mov    %edi,%ebp
ffffffff80412787:	41 89 d3             	mov    %edx,%r11d
ffffffff8041278a:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
ffffffff8041278f:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80412793:	4d 8d 44 2b 08       	lea    0x8(%r11,%rbp,1),%r8
ffffffff80412798:	4c 01 dd             	add    %r11,%rbp
ffffffff8041279b:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
ffffffff804127a0:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff804127a7:	80 
ffffffff804127a8:	41 29 d3             	sub    %edx,%r11d
ffffffff804127ab:	4c 01 dd             	add    %r11,%rbp
ffffffff804127ae:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff804127b5:	80 
ffffffff804127b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804127bd:	00 00 00 
          text_buffer_[current_row_][i] = 0;
ffffffff804127c0:	66 41 c7 00 00 00    	movw   $0x0,(%r8)
ffffffff804127c6:	49 83 c0 02          	add    $0x2,%r8
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804127ca:	49 39 d0             	cmp    %rdx,%r8
ffffffff804127cd:	75 f1                	jne    ffffffff804127c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b0>
        current_col_ = 0;
ffffffff804127cf:	c7 05 93 b8 00 00 00 	movl   $0x0,0xb893(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804127d6:	00 00 00 
        current_row_++;
ffffffff804127d9:	83 c7 01             	add    $0x1,%edi
ffffffff804127dc:	31 d2                	xor    %edx,%edx
ffffffff804127de:	89 3d 84 b8 00 00    	mov    %edi,0xb884(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804127e4:	e9 b5 f8 ff ff       	jmpq   ffffffff8041209e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff804127e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff804127f0:	c7 05 72 b8 00 00 00 	movl   $0x0,0xb872(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804127f7:	00 00 00 
      current_row_++;
ffffffff804127fa:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804127fd:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804127ff:	89 0d 63 b8 00 00    	mov    %ecx,0xb863(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412805:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80412808:	0f 85 58 fd ff ff    	jne    ffffffff80412566 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff8041280e:	39 fe                	cmp    %edi,%esi
ffffffff80412810:	0f 47 f7             	cmova  %edi,%esi
  constexpr void remove_prefix(size_t n) {
ffffffff80412813:	e9 56 fd ff ff       	jmpq   ffffffff8041256e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x65e>
ffffffff80412818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041281f:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412820:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80412824:	76 46                	jbe    ffffffff8041286c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x95c>
ffffffff80412826:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff8041282c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412830:	45 31 db             	xor    %r11d,%r11d
ffffffff80412833:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff8041283a:	45 85 c0             	test   %r8d,%r8d
ffffffff8041283d:	74 1f                	je     ffffffff8041285e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x94e>
ffffffff8041283f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80412840:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80412847:	41 80 
ffffffff80412849:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80412850:	41 80 
ffffffff80412852:	4d 89 df             	mov    %r11,%r15
ffffffff80412855:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412859:	4d 39 ef             	cmp    %r13,%r15
ffffffff8041285c:	75 e2                	jne    ffffffff80412840 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x930>
ffffffff8041285e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412865:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff8041286a:	75 c4                	jne    ffffffff80412830 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041286c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80412871:	45 85 c0             	test   %r8d,%r8d
ffffffff80412874:	74 1b                	je     ffffffff80412891 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x981>
ffffffff80412876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041287d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80412880:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80412886:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041288a:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041288f:	75 ef                	jne    ffffffff80412880 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x970>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412891:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80412893:	83 e9 01             	sub    $0x1,%ecx
ffffffff80412896:	44 39 c2             	cmp    %r8d,%edx
ffffffff80412899:	89 0d c9 b7 00 00    	mov    %ecx,0xb7c9(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041289f:	41 0f 47 d0          	cmova  %r8d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804128a3:	39 ea                	cmp    %ebp,%edx
ffffffff804128a5:	0f 87 4f fc ff ff    	ja     ffffffff804124fa <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5ea>
ffffffff804128ab:	89 ea                	mov    %ebp,%edx
ffffffff804128ad:	e9 8f fc ff ff       	jmpq   ffffffff80412541 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x631>
ffffffff804128b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (count == npos) {
ffffffff804128b8:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff804128bb:	0f 85 ef 00 00 00    	jne    ffffffff804129b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
ffffffff804128c1:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804128c6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff804128cb:	89 c2                	mov    %eax,%edx
ffffffff804128cd:	e9 0e fc ff ff       	jmpq   ffffffff804124e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5d0>
ffffffff804128d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff804128d8:	c7 05 8a b7 00 00 00 	movl   $0x0,0xb78a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804128df:	00 00 00 
      current_row_++;
ffffffff804128e2:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804128e5:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804128e7:	89 0d 7b b7 00 00    	mov    %ecx,0xb77b(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804128ed:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804128f0:	0f 85 50 fa ff ff    	jne    ffffffff80412346 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff804128f6:	39 fe                	cmp    %edi,%esi
ffffffff804128f8:	0f 47 f7             	cmova  %edi,%esi
ffffffff804128fb:	e9 4e fa ff ff       	jmpq   ffffffff8041234e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x43e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412900:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80412904:	76 46                	jbe    ffffffff8041294c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa3c>
ffffffff80412906:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff8041290c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412910:	45 31 db             	xor    %r11d,%r11d
ffffffff80412913:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff8041291a:	45 85 c9             	test   %r9d,%r9d
ffffffff8041291d:	74 1f                	je     ffffffff8041293e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa2e>
ffffffff8041291f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80412920:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80412927:	41 80 
ffffffff80412929:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80412930:	41 80 
ffffffff80412932:	4d 89 df             	mov    %r11,%r15
ffffffff80412935:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412939:	4d 39 ef             	cmp    %r13,%r15
ffffffff8041293c:	75 e2                	jne    ffffffff80412920 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff8041293e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80412945:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041294a:	75 c4                	jne    ffffffff80412910 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa00>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041294c:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
ffffffff80412951:	45 85 c9             	test   %r9d,%r9d
ffffffff80412954:	74 1b                	je     ffffffff80412971 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa61>
ffffffff80412956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041295d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80412960:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80412966:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041296a:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
ffffffff8041296f:	75 ef                	jne    ffffffff80412960 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xa50>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412971:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80412973:	83 e9 01             	sub    $0x1,%ecx
ffffffff80412976:	44 39 ca             	cmp    %r9d,%edx
ffffffff80412979:	89 0d e9 b6 00 00    	mov    %ecx,0xb6e9(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041297f:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412983:	39 ea                	cmp    %ebp,%edx
ffffffff80412985:	0f 87 4f f9 ff ff    	ja     ffffffff804122da <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3ca>
ffffffff8041298b:	89 ea                	mov    %ebp,%edx
ffffffff8041298d:	e9 8f f9 ff ff       	jmpq   ffffffff80412321 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x411>
ffffffff80412992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80412998:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff8041299b:	75 23                	jne    ffffffff804129c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xab0>
ffffffff8041299d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804129a2:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff804129a7:	89 c2                	mov    %eax,%edx
ffffffff804129a9:	e9 12 f9 ff ff       	jmpq   ffffffff804122c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b0>
ffffffff804129ae:	66 90                	xchg   %ax,%ax
ffffffff804129b0:	89 f7                	mov    %esi,%edi
ffffffff804129b2:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804129b7:	e9 1d fb ff ff       	jmpq   ffffffff804124d9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c9>
ffffffff804129bc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804129c0:	89 f7                	mov    %esi,%edi
ffffffff804129c2:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804129c7:	e9 ed f8 ff ff       	jmpq   ffffffff804122b9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a9>
ffffffff804129cc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804129d0:	41 89 f8             	mov    %edi,%r8d
ffffffff804129d3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804129da:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804129dd:	48 39 c6             	cmp    %rax,%rsi
ffffffff804129e0:	0f 85 aa f9 ff ff    	jne    ffffffff80412390 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
ffffffff804129e6:	e9 e7 f9 ff ff       	jmpq   ffffffff804123d2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff804129eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804129f0:	41 89 f8             	mov    %edi,%r8d
ffffffff804129f3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804129fa:	44 89 c7             	mov    %r8d,%edi
ffffffff804129fd:	48 39 f0             	cmp    %rsi,%rax
ffffffff80412a00:	0f 85 aa fb ff ff    	jne    ffffffff804125b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
ffffffff80412a06:	e9 e7 fb ff ff       	jmpq   ffffffff804125f2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80412a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80412a10:	41 39 d0             	cmp    %edx,%r8d
ffffffff80412a13:	76 41                	jbe    ffffffff80412a56 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb46>
ffffffff80412a15:	89 cb                	mov    %ecx,%ebx
ffffffff80412a17:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff80412a1c:	41 89 d2             	mov    %edx,%r10d
ffffffff80412a1f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80412a23:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80412a27:	41 29 d7             	sub    %edx,%r15d
ffffffff80412a2a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff80412a2f:	4c 01 d5             	add    %r10,%rbp
ffffffff80412a32:	4c 01 fd             	add    %r15,%rbp
ffffffff80412a35:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80412a3c:	80 
ffffffff80412a3d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80412a44:	80 
ffffffff80412a45:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80412a48:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff80412a4d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80412a51:	48 39 da             	cmp    %rbx,%rdx
ffffffff80412a54:	75 f2                	jne    ffffffff80412a48 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb38>
        current_col_ = 0;
ffffffff80412a56:	c7 05 0c b6 00 00 00 	movl   $0x0,0xb60c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412a5d:	00 00 00 
        current_row_++;
ffffffff80412a60:	83 c1 01             	add    $0x1,%ecx
ffffffff80412a63:	31 d2                	xor    %edx,%edx
ffffffff80412a65:	89 0d fd b5 00 00    	mov    %ecx,0xb5fd(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412a6b:	e9 f6 fa ff ff       	jmpq   ffffffff80412566 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80412a70:	41 39 d1             	cmp    %edx,%r9d
ffffffff80412a73:	76 41                	jbe    ffffffff80412ab6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xba6>
ffffffff80412a75:	89 cb                	mov    %ecx,%ebx
ffffffff80412a77:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff80412a7c:	41 89 d2             	mov    %edx,%r10d
ffffffff80412a7f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80412a83:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80412a87:	41 29 d7             	sub    %edx,%r15d
ffffffff80412a8a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff80412a8f:	4c 01 d5             	add    %r10,%rbp
ffffffff80412a92:	4c 01 fd             	add    %r15,%rbp
ffffffff80412a95:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80412a9c:	80 
ffffffff80412a9d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80412aa4:	80 
ffffffff80412aa5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80412aa8:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff80412aad:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80412ab1:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80412ab4:	75 f2                	jne    ffffffff80412aa8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0xb98>
        current_col_ = 0;
ffffffff80412ab6:	c7 05 ac b5 00 00 00 	movl   $0x0,0xb5ac(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412abd:	00 00 00 
        current_row_++;
ffffffff80412ac0:	83 c1 01             	add    $0x1,%ecx
ffffffff80412ac3:	31 d2                	xor    %edx,%edx
ffffffff80412ac5:	89 0d 9d b5 00 00    	mov    %ecx,0xb59d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412acb:	e9 76 f8 ff ff       	jmpq   ffffffff80412346 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80412ad0:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
    str[0] = 'E';
ffffffff80412ad5:	66 c7 44 24 38 45 00 	movw   $0x45,0x38(%rsp)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80412adc:	48 89 df             	mov    %rbx,%rdi
ffffffff80412adf:	e8 dc a6 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80412ae4:	85 c0                	test   %eax,%eax
ffffffff80412ae6:	0f 85 17 f7 ff ff    	jne    ffffffff80412203 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x2f3>
ffffffff80412aec:	8b 2d 7a b5 00 00    	mov    0xb57a(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412af2:	8b 0d 70 b5 00 00    	mov    0xb570(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412af8:	e9 67 f8 ff ff       	jmpq   ffffffff80412364 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x454>
ffffffff80412afd:	0f 1f 00             	nopl   (%rax)
ffffffff80412b00:	44 8b 05 65 b5 00 00 	mov    0xb565(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412b07:	8b 3d 5b b5 00 00    	mov    0xb55b(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412b0d:	e9 ab f5 ff ff       	jmpq   ffffffff804120bd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x1ad>
ffffffff80412b12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80412b18:	8b 0d 4a b5 00 00    	mov    0xb54a(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412b1e:	8b 2d 48 b5 00 00    	mov    0xb548(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412b24:	e9 5b fa ff ff       	jmpq   ffffffff80412584 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi8EEEvPNS_23CPUInterruptHandlerArgsEm+0x674>
ffffffff80412b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80412b30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80412b30:	41 57                	push   %r15
ffffffff80412b32:	41 56                	push   %r14
ffffffff80412b34:	41 55                	push   %r13
ffffffff80412b36:	41 54                	push   %r12
ffffffff80412b38:	41 53                	push   %r11
ffffffff80412b3a:	41 52                	push   %r10
ffffffff80412b3c:	41 51                	push   %r9
ffffffff80412b3e:	41 50                	push   %r8
ffffffff80412b40:	55                   	push   %rbp
ffffffff80412b41:	57                   	push   %rdi
ffffffff80412b42:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80412b43:	be 0a 00 00 00       	mov    $0xa,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80412b48:	53                   	push   %rbx
ffffffff80412b49:	51                   	push   %rcx
ffffffff80412b4a:	52                   	push   %rdx
ffffffff80412b4b:	50                   	push   %rax
ffffffff80412b4c:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80412b50:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
ffffffff80412b57:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80412b58:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
ffffffff80412b5f:	00 
ffffffff80412b60:	fc                   	cld    
ffffffff80412b61:	e8 6a b1 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
ffffffff80412b66:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff80412b6d:	e8 4e a6 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80412b72:	85 c0                	test   %eax,%eax
ffffffff80412b74:	0f 84 a6 0b 00 00    	je     ffffffff80413720 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xbf0>
ffffffff80412b7a:	44 8b 2d df b4 00 00 	mov    0xb4df(%rip),%r13d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80412b81:	44 8b 0d dc b4 00 00 	mov    0xb4dc(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412b88:	49 c7 c2 66 b8 41 80 	mov    $0xffffffff8041b866,%r10
ffffffff80412b8f:	44 8b 05 d6 b4 00 00 	mov    0xb4d6(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412b96:	8b 3d cc b4 00 00    	mov    0xb4cc(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412b9c:	41 8d 55 fe          	lea    -0x2(%r13),%edx
ffffffff80412ba0:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
ffffffff80412ba4:	45 89 ee             	mov    %r13d,%r14d
ffffffff80412ba7:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80412bab:	44 89 7c 24 2c       	mov    %r15d,0x2c(%rsp)
ffffffff80412bb0:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80412bb4:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
ffffffff80412bbb:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff80412bbf:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80412bc3:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80412bc8:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412bcb:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80412bcf:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80412bd3:	4c 01 fa             	add    %r15,%rdx
ffffffff80412bd6:	48 8d 8e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rcx
ffffffff80412bdd:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80412be2:	48 8d 8c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rcx
ffffffff80412be9:	80 
ffffffff80412bea:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff80412bef:	90                   	nop
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412bf0:	44 89 ce             	mov    %r9d,%esi
ffffffff80412bf3:	44 29 c6             	sub    %r8d,%esi
ffffffff80412bf6:	39 c6                	cmp    %eax,%esi
ffffffff80412bf8:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80412bfb:	39 f0                	cmp    %esi,%eax
ffffffff80412bfd:	89 f2                	mov    %esi,%edx
ffffffff80412bff:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80412c02:	85 d2                	test   %edx,%edx
ffffffff80412c04:	0f 84 46 07 00 00    	je     ffffffff80413350 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80412c0a:	83 ea 01             	sub    $0x1,%edx
ffffffff80412c0d:	31 ed                	xor    %ebp,%ebp
ffffffff80412c0f:	eb 17                	jmp    ffffffff80412c28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xf8>
ffffffff80412c11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80412c18:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
ffffffff80412c1c:	48 39 d5             	cmp    %rdx,%rbp
ffffffff80412c1f:	0f 84 2b 07 00 00    	je     ffffffff80413350 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80412c25:	48 89 cd             	mov    %rcx,%rbp
      if (str_[i] == c) {
ffffffff80412c28:	41 80 3c 2a 0a       	cmpb   $0xa,(%r10,%rbp,1)
ffffffff80412c2d:	89 e9                	mov    %ebp,%ecx
ffffffff80412c2f:	75 e7                	jne    ffffffff80412c18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xe8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80412c31:	39 c8                	cmp    %ecx,%eax
ffffffff80412c33:	89 ca                	mov    %ecx,%edx
ffffffff80412c35:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80412c38:	44 39 f7             	cmp    %r14d,%edi
ffffffff80412c3b:	0f 84 37 06 00 00    	je     ffffffff80413278 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412c41:	44 01 c2             	add    %r8d,%edx
ffffffff80412c44:	44 39 ca             	cmp    %r9d,%edx
ffffffff80412c47:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80412c4b:	41 39 d0             	cmp    %edx,%r8d
ffffffff80412c4e:	0f 83 b9 06 00 00    	jae    ffffffff8041330d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7dd>
ffffffff80412c54:	45 89 c3             	mov    %r8d,%r11d
ffffffff80412c57:	41 f7 d3             	not    %r11d
ffffffff80412c5a:	45 8d 24 13          	lea    (%r11,%rdx,1),%r12d
ffffffff80412c5e:	41 89 fb             	mov    %edi,%r11d
ffffffff80412c61:	4f 8d 1c 9b          	lea    (%r11,%r11,4),%r11
ffffffff80412c65:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80412c69:	4d 01 d8             	add    %r11,%r8
ffffffff80412c6c:	45 31 db             	xor    %r11d,%r11d
ffffffff80412c6f:	4d 01 c0             	add    %r8,%r8
ffffffff80412c72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412c78:	66 47 0f be 2c 1a    	movsbw (%r10,%r11,1),%r13w
ffffffff80412c7e:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff80412c84:	66 47 89 ac 58 70 e0 	mov    %r13w,-0x7fbe1f90(%r8,%r11,2)
ffffffff80412c8b:	41 80 
ffffffff80412c8d:	4d 89 dd             	mov    %r11,%r13
ffffffff80412c90:	49 83 c3 01          	add    $0x1,%r11
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412c94:	4d 39 e5             	cmp    %r12,%r13
ffffffff80412c97:	75 df                	jne    ffffffff80412c78 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x148>
    if (current_col_ == num_cols_) {
ffffffff80412c99:	44 39 ca             	cmp    %r9d,%edx
ffffffff80412c9c:	0f 84 7e 06 00 00    	je     ffffffff80413320 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7f0>
    current_col_ = i;
ffffffff80412ca2:	89 15 c4 b3 00 00    	mov    %edx,0xb3c4(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412ca8:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80412cab:	0f 84 8d 06 00 00    	je     ffffffff8041333e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x80e>
ffffffff80412cb1:	85 d2                	test   %edx,%edx
ffffffff80412cb3:	74 09                	je     ffffffff80412cbe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80412cb5:	83 ff 18             	cmp    $0x18,%edi
ffffffff80412cb8:	0f 86 e2 06 00 00    	jbe    ffffffff804133a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x870>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80412cbe:	83 c1 01             	add    $0x1,%ecx
ffffffff80412cc1:	39 f1                	cmp    %esi,%ecx
ffffffff80412cc3:	0f 46 f1             	cmovbe %ecx,%esi
    str_ += n;
ffffffff80412cc6:	89 f1                	mov    %esi,%ecx
    size_ -= min(n, size_);
ffffffff80412cc8:	41 89 d0             	mov    %edx,%r8d
    str_ += n;
ffffffff80412ccb:	49 01 ca             	add    %rcx,%r10
    size_ -= min(n, size_);
ffffffff80412cce:	39 c6                	cmp    %eax,%esi
ffffffff80412cd0:	0f 47 f0             	cmova  %eax,%esi
ffffffff80412cd3:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80412cd5:	85 c0                	test   %eax,%eax
ffffffff80412cd7:	0f 85 13 ff ff ff    	jne    ffffffff80412bf0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xc0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412cdd:	85 ff                	test   %edi,%edi
ffffffff80412cdf:	74 6a                	je     ffffffff80412d4b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80412ce1:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412ce4:	44 8b 15 79 b3 00 00 	mov    0xb379(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412ceb:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80412cf2:	31 c9                	xor    %ecx,%ecx
ffffffff80412cf4:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80412cf8:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80412cfc:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80412d02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80412d08:	48 89 f5             	mov    %rsi,%rbp
ffffffff80412d0b:	89 ca                	mov    %ecx,%edx
ffffffff80412d0d:	46 8d 0c 11          	lea    (%rcx,%r10,1),%r9d
ffffffff80412d11:	45 85 d2             	test   %r10d,%r10d
ffffffff80412d14:	0f 84 66 06 00 00    	je     ffffffff80413380 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x850>
ffffffff80412d1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412d20:	44 0f b7 5d 00       	movzwl 0x0(%rbp),%r11d
ffffffff80412d25:	89 d1                	mov    %edx,%ecx
ffffffff80412d27:	83 c2 01             	add    $0x1,%edx
ffffffff80412d2a:	48 83 c5 02          	add    $0x2,%rbp
ffffffff80412d2e:	66 44 89 9c 09 00 80 	mov    %r11w,0xb8000(%rcx,%rcx,1)
ffffffff80412d35:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412d37:	44 39 ca             	cmp    %r9d,%edx
ffffffff80412d3a:	75 e4                	jne    ffffffff80412d20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1f0>
ffffffff80412d3c:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80412d43:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412d46:	48 39 f0             	cmp    %rsi,%rax
ffffffff80412d49:	75 bd                	jne    ffffffff80412d08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
    if (current_col_ != 0) {
ffffffff80412d4b:	45 85 c0             	test   %r8d,%r8d
ffffffff80412d4e:	74 38                	je     ffffffff80412d88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412d50:	8b 35 0e b3 00 00    	mov    0xb30e(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412d56:	85 f6                	test   %esi,%esi
ffffffff80412d58:	74 2e                	je     ffffffff80412d88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80412d5a:	89 fa                	mov    %edi,%edx
ffffffff80412d5c:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff80412d60:	0f af d6             	imul   %esi,%edx
ffffffff80412d63:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80412d67:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80412d6d:	01 d6                	add    %edx,%esi
ffffffff80412d6f:	90                   	nop
ffffffff80412d70:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80412d73:	89 d7                	mov    %edx,%edi
ffffffff80412d75:	83 c2 01             	add    $0x1,%edx
ffffffff80412d78:	48 83 c0 02          	add    $0x2,%rax
ffffffff80412d7c:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80412d83:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412d84:	39 f2                	cmp    %esi,%edx
ffffffff80412d86:	75 e8                	jne    ffffffff80412d70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412d88:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80412d8d:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff80412d90:	48 89 da             	mov    %rbx,%rdx
    num_len++;
ffffffff80412d93:	89 c6                	mov    %eax,%esi
    buffer[i] = num % base;
ffffffff80412d95:	83 e2 0f             	and    $0xf,%edx
ffffffff80412d98:	88 54 04 4b          	mov    %dl,0x4b(%rsp,%rax,1)
ffffffff80412d9c:	48 89 da             	mov    %rbx,%rdx
    num /= base;
ffffffff80412d9f:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80412da3:	48 83 fa 0f          	cmp    $0xf,%rdx
ffffffff80412da7:	76 0f                	jbe    ffffffff80412db8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
ffffffff80412da9:	48 83 c0 01          	add    $0x1,%rax
  for (size_t i = 0; i < size; i++) {
ffffffff80412dad:	48 83 f8 15          	cmp    $0x15,%rax
ffffffff80412db1:	75 dd                	jne    ffffffff80412d90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x260>
ffffffff80412db3:	be 14 00 00 00       	mov    $0x14,%esi
  if (num != 0) {
ffffffff80412db8:	48 85 db             	test   %rbx,%rbx
ffffffff80412dbb:	0f 85 2f 09 00 00    	jne    ffffffff804136f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xbc0>
ffffffff80412dc1:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
ffffffff80412dc6:	89 f7                	mov    %esi,%edi
    str[offset++] = '0';
ffffffff80412dc8:	66 c7 44 24 38 30 78 	movw   $0x7830,0x38(%rsp)
ffffffff80412dcf:	48 01 df             	add    %rbx,%rdi
ffffffff80412dd2:	48 89 da             	mov    %rbx,%rdx
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80412dd5:	8d 4c 1e ff          	lea    -0x1(%rsi,%rbx,1),%ecx
ffffffff80412dd9:	eb 14                	jmp    ffffffff80412def <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff80412ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80412de0:	83 c0 37             	add    $0x37,%eax
ffffffff80412de3:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412de7:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80412dea:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80412ded:	74 1c                	je     ffffffff80412e0b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x2db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80412def:	89 c8                	mov    %ecx,%eax
ffffffff80412df1:	29 d0                	sub    %edx,%eax
ffffffff80412df3:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff80412df8:	3c 09                	cmp    $0x9,%al
ffffffff80412dfa:	7f e4                	jg     ffffffff80412de0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80412dfc:	83 c0 30             	add    $0x30,%eax
ffffffff80412dff:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80412e03:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80412e06:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80412e09:	75 e4                	jne    ffffffff80412def <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
  str[num_len + offset] = 0;
ffffffff80412e0b:	8d 46 02             	lea    0x2(%rsi),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80412e0e:	48 89 df             	mov    %rbx,%rdi
ffffffff80412e11:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff80412e16:	e8 a5 a3 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80412e1b:	85 c0                	test   %eax,%eax
ffffffff80412e1d:	0f 84 e9 08 00 00    	je     ffffffff8041370c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xbdc>
ffffffff80412e23:	44 8b 25 36 b2 00 00 	mov    0xb236(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80412e2a:	44 8b 0d 33 b2 00 00 	mov    0xb233(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412e31:	49 89 d8             	mov    %rbx,%r8
ffffffff80412e34:	8b 2d 32 b2 00 00    	mov    0xb232(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80412e3a:	8b 0d 28 b2 00 00    	mov    0xb228(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80412e40:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80412e45:	45 8d 69 ff          	lea    -0x1(%r9),%r13d
ffffffff80412e49:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80412e4d:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80412e52:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80412e56:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff80412e5d:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80412e62:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80412e66:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80412e6b:	48 89 d6             	mov    %rdx,%rsi
ffffffff80412e6e:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80412e72:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80412e76:	4c 01 ea             	add    %r13,%rdx
ffffffff80412e79:	48 8d be 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rdi
ffffffff80412e80:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80412e85:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff80412e8c:	80 
ffffffff80412e8d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80412e92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80412e98:	44 89 ce             	mov    %r9d,%esi
ffffffff80412e9b:	89 c2                	mov    %eax,%edx
ffffffff80412e9d:	29 ee                	sub    %ebp,%esi
ffffffff80412e9f:	39 c6                	cmp    %eax,%esi
ffffffff80412ea1:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80412ea4:	39 c6                	cmp    %eax,%esi
ffffffff80412ea6:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80412ea9:	85 d2                	test   %edx,%edx
ffffffff80412eab:	0f 84 07 07 00 00    	je     ffffffff804135b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80412eb1:	83 ea 01             	sub    $0x1,%edx
ffffffff80412eb4:	31 db                	xor    %ebx,%ebx
ffffffff80412eb6:	eb 18                	jmp    ffffffff80412ed0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a0>
ffffffff80412eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80412ebf:	00 
ffffffff80412ec0:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80412ec4:	48 39 da             	cmp    %rbx,%rdx
ffffffff80412ec7:	0f 84 eb 06 00 00    	je     ffffffff804135b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80412ecd:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80412ed0:	41 80 3c 18 0a       	cmpb   $0xa,(%r8,%rbx,1)
ffffffff80412ed5:	89 df                	mov    %ebx,%edi
ffffffff80412ed7:	75 e7                	jne    ffffffff80412ec0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x390>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80412ed9:	39 f8                	cmp    %edi,%eax
ffffffff80412edb:	89 fa                	mov    %edi,%edx
ffffffff80412edd:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80412ee0:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80412ee3:	0f 84 37 06 00 00    	je     ffffffff80413520 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412ee9:	01 ea                	add    %ebp,%edx
ffffffff80412eeb:	44 39 ca             	cmp    %r9d,%edx
ffffffff80412eee:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80412ef2:	39 ea                	cmp    %ebp,%edx
ffffffff80412ef4:	0f 86 b1 06 00 00    	jbe    ffffffff804135ab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa7b>
ffffffff80412efa:	41 89 ea             	mov    %ebp,%r10d
ffffffff80412efd:	41 f7 d2             	not    %r10d
ffffffff80412f00:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80412f04:	41 89 ca             	mov    %ecx,%r10d
ffffffff80412f07:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff80412f0b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff80412f0f:	4c 01 d5             	add    %r10,%rbp
ffffffff80412f12:	45 31 d2             	xor    %r10d,%r10d
ffffffff80412f15:	48 01 ed             	add    %rbp,%rbp
ffffffff80412f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80412f1f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80412f20:	66 47 0f be 34 10    	movsbw (%r8,%r10,1),%r14w
ffffffff80412f26:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80412f2c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80412f33:	41 80 
ffffffff80412f35:	4d 89 d6             	mov    %r10,%r14
ffffffff80412f38:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80412f3c:	4d 39 de             	cmp    %r11,%r14
ffffffff80412f3f:	75 df                	jne    ffffffff80412f20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3f0>
    if (current_col_ == num_cols_) {
ffffffff80412f41:	41 39 d1             	cmp    %edx,%r9d
ffffffff80412f44:	0f 84 ae 05 00 00    	je     ffffffff804134f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c8>
    current_col_ = i;
ffffffff80412f4a:	89 15 1c b1 00 00    	mov    %edx,0xb11c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80412f50:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80412f53:	0f 84 bd 05 00 00    	je     ffffffff80413516 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9e6>
ffffffff80412f59:	85 d2                	test   %edx,%edx
ffffffff80412f5b:	74 09                	je     ffffffff80412f66 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80412f5d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80412f60:	0f 86 2a 07 00 00    	jbe    ffffffff80413690 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80412f66:	83 c7 01             	add    $0x1,%edi
ffffffff80412f69:	39 f7                	cmp    %esi,%edi
ffffffff80412f6b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff80412f6e:	89 f7                	mov    %esi,%edi
    size_ -= min(n, size_);
ffffffff80412f70:	89 d5                	mov    %edx,%ebp
    str_ += n;
ffffffff80412f72:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff80412f75:	39 f0                	cmp    %esi,%eax
ffffffff80412f77:	0f 46 f0             	cmovbe %eax,%esi
ffffffff80412f7a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80412f7c:	85 c0                	test   %eax,%eax
ffffffff80412f7e:	0f 85 14 ff ff ff    	jne    ffffffff80412e98 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x368>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412f84:	85 c9                	test   %ecx,%ecx
ffffffff80412f86:	74 6a                	je     ffffffff80412ff2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff80412f88:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412f8b:	44 8b 0d d2 b0 00 00 	mov    0xb0d2(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412f92:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80412f99:	31 ff                	xor    %edi,%edi
ffffffff80412f9b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80412f9f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80412fa3:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80412fa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80412fb0:	48 89 f3             	mov    %rsi,%rbx
ffffffff80412fb3:	89 fa                	mov    %edi,%edx
ffffffff80412fb5:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80412fb9:	45 85 c9             	test   %r9d,%r9d
ffffffff80412fbc:	0f 84 2e 06 00 00    	je     ffffffff804135f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xac0>
ffffffff80412fc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80412fc8:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff80412fcc:	89 d7                	mov    %edx,%edi
ffffffff80412fce:	83 c2 01             	add    $0x1,%edx
ffffffff80412fd1:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80412fd5:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff80412fdc:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80412fde:	41 39 d0             	cmp    %edx,%r8d
ffffffff80412fe1:	75 e5                	jne    ffffffff80412fc8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x498>
ffffffff80412fe3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80412fea:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80412fed:	48 39 c6             	cmp    %rax,%rsi
ffffffff80412ff0:	75 be                	jne    ffffffff80412fb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
    if (current_col_ != 0) {
ffffffff80412ff2:	85 ed                	test   %ebp,%ebp
ffffffff80412ff4:	74 3a                	je     ffffffff80413030 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80412ff6:	8b 35 68 b0 00 00    	mov    0xb068(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80412ffc:	85 f6                	test   %esi,%esi
ffffffff80412ffe:	74 30                	je     ffffffff80413030 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80413000:	89 f2                	mov    %esi,%edx
ffffffff80413002:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80413006:	0f af d1             	imul   %ecx,%edx
ffffffff80413009:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041300d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80413013:	01 d6                	add    %edx,%esi
ffffffff80413015:	0f 1f 00             	nopl   (%rax)
ffffffff80413018:	0f b7 08             	movzwl (%rax),%ecx
ffffffff8041301b:	89 d7                	mov    %edx,%edi
ffffffff8041301d:	83 c2 01             	add    $0x1,%edx
ffffffff80413020:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413024:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff8041302b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041302c:	39 d6                	cmp    %edx,%esi
ffffffff8041302e:	75 e8                	jne    ffffffff80413018 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x4e8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80413030:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80413037:	e8 84 a1 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8041303c:	85 c0                	test   %eax,%eax
ffffffff8041303e:	0f 84 f4 06 00 00    	je     ffffffff80413738 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xc08>
ffffffff80413044:	44 8b 25 15 b0 00 00 	mov    0xb015(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041304b:	44 8b 05 12 b0 00 00 	mov    0xb012(%rip),%r8d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413052:	49 c7 c1 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r9
ffffffff80413059:	8b 2d 0d b0 00 00    	mov    0xb00d(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041305f:	8b 0d 03 b0 00 00    	mov    0xb003(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413065:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff8041306a:	45 8d 68 ff          	lea    -0x1(%r8),%r13d
ffffffff8041306e:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80413072:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80413077:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8041307b:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff80413082:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80413087:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041308b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff80413090:	48 89 d6             	mov    %rdx,%rsi
ffffffff80413093:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80413097:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8041309b:	4c 01 ea             	add    %r13,%rdx
ffffffff8041309e:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff804130a5:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff804130aa:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff804130b1:	80 
ffffffff804130b2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff804130b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804130be:	00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804130c0:	44 89 c6             	mov    %r8d,%esi
ffffffff804130c3:	89 c2                	mov    %eax,%edx
ffffffff804130c5:	29 ee                	sub    %ebp,%esi
ffffffff804130c7:	39 c6                	cmp    %eax,%esi
ffffffff804130c9:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804130cc:	39 c6                	cmp    %eax,%esi
ffffffff804130ce:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff804130d1:	85 d2                	test   %edx,%edx
ffffffff804130d3:	0f 84 ff 03 00 00    	je     ffffffff804134d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff804130d9:	83 ea 01             	sub    $0x1,%edx
ffffffff804130dc:	31 db                	xor    %ebx,%ebx
ffffffff804130de:	eb 10                	jmp    ffffffff804130f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c0>
ffffffff804130e0:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff804130e4:	48 39 da             	cmp    %rbx,%rdx
ffffffff804130e7:	0f 84 eb 03 00 00    	je     ffffffff804134d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff804130ed:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff804130f0:	41 80 3c 19 0a       	cmpb   $0xa,(%r9,%rbx,1)
ffffffff804130f5:	89 df                	mov    %ebx,%edi
ffffffff804130f7:	75 e7                	jne    ffffffff804130e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804130f9:	39 f8                	cmp    %edi,%eax
ffffffff804130fb:	89 fa                	mov    %edi,%edx
ffffffff804130fd:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80413100:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80413103:	0f 84 37 03 00 00    	je     ffffffff80413440 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413109:	01 ea                	add    %ebp,%edx
ffffffff8041310b:	44 39 c2             	cmp    %r8d,%edx
ffffffff8041310e:	41 0f 47 d0          	cmova  %r8d,%edx
ffffffff80413112:	39 ea                	cmp    %ebp,%edx
ffffffff80413114:	0f 86 b1 03 00 00    	jbe    ffffffff804134cb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x99b>
ffffffff8041311a:	41 89 ea             	mov    %ebp,%r10d
ffffffff8041311d:	41 f7 d2             	not    %r10d
ffffffff80413120:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80413124:	41 89 ca             	mov    %ecx,%r10d
ffffffff80413127:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff8041312b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff8041312f:	4c 01 d5             	add    %r10,%rbp
ffffffff80413132:	45 31 d2             	xor    %r10d,%r10d
ffffffff80413135:	48 01 ed             	add    %rbp,%rbp
ffffffff80413138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041313f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80413140:	66 47 0f be 34 11    	movsbw (%r9,%r10,1),%r14w
ffffffff80413146:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8041314c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80413153:	41 80 
ffffffff80413155:	4d 89 d6             	mov    %r10,%r14
ffffffff80413158:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041315c:	4d 39 f3             	cmp    %r14,%r11
ffffffff8041315f:	75 df                	jne    ffffffff80413140 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x610>
    if (current_col_ == num_cols_) {
ffffffff80413161:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413164:	0f 84 a6 02 00 00    	je     ffffffff80413410 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8e0>
    current_col_ = i;
ffffffff8041316a:	89 15 fc ae 00 00    	mov    %edx,0xaefc(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413170:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80413173:	0f 84 b5 02 00 00    	je     ffffffff8041342e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8fe>
ffffffff80413179:	85 d2                	test   %edx,%edx
ffffffff8041317b:	74 09                	je     ffffffff80413186 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff8041317d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80413180:	0f 86 aa 04 00 00    	jbe    ffffffff80413630 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb00>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80413186:	83 c7 01             	add    $0x1,%edi
ffffffff80413189:	39 f7                	cmp    %esi,%edi
ffffffff8041318b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff8041318e:	89 f7                	mov    %esi,%edi
ffffffff80413190:	89 d5                	mov    %edx,%ebp
ffffffff80413192:	49 01 f9             	add    %rdi,%r9
    size_ -= min(n, size_);
ffffffff80413195:	39 c6                	cmp    %eax,%esi
ffffffff80413197:	0f 47 f0             	cmova  %eax,%esi
ffffffff8041319a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff8041319c:	85 c0                	test   %eax,%eax
ffffffff8041319e:	0f 85 1c ff ff ff    	jne    ffffffff804130c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804131a4:	85 c9                	test   %ecx,%ecx
ffffffff804131a6:	74 6a                	je     ffffffff80413212 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff804131a8:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804131ab:	44 8b 0d b2 ae 00 00 	mov    0xaeb2(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804131b2:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff804131b9:	31 ff                	xor    %edi,%edi
ffffffff804131bb:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff804131bf:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804131c3:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff804131c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff804131d0:	48 89 f3             	mov    %rsi,%rbx
ffffffff804131d3:	89 fa                	mov    %edi,%edx
ffffffff804131d5:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff804131d9:	45 85 c9             	test   %r9d,%r9d
ffffffff804131dc:	0f 84 2e 04 00 00    	je     ffffffff80413610 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xae0>
ffffffff804131e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804131e8:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff804131ec:	89 d7                	mov    %edx,%edi
ffffffff804131ee:	83 c2 01             	add    $0x1,%edx
ffffffff804131f1:	48 83 c3 02          	add    $0x2,%rbx
ffffffff804131f5:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff804131fc:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804131fe:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413201:	75 e5                	jne    ffffffff804131e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6b8>
ffffffff80413203:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041320a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041320d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80413210:	75 be                	jne    ffffffff804131d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
    if (current_col_ != 0) {
ffffffff80413212:	85 ed                	test   %ebp,%ebp
ffffffff80413214:	74 3a                	je     ffffffff80413250 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413216:	8b 35 48 ae 00 00    	mov    0xae48(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041321c:	85 f6                	test   %esi,%esi
ffffffff8041321e:	74 30                	je     ffffffff80413250 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80413220:	89 f2                	mov    %esi,%edx
ffffffff80413222:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80413226:	0f af d1             	imul   %ecx,%edx
ffffffff80413229:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041322d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80413233:	01 d6                	add    %edx,%esi
ffffffff80413235:	0f 1f 00             	nopl   (%rax)
ffffffff80413238:	0f b7 08             	movzwl (%rax),%ecx
ffffffff8041323b:	89 d7                	mov    %edx,%edi
ffffffff8041323d:	83 c2 01             	add    $0x1,%edx
ffffffff80413240:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413244:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff8041324b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041324c:	39 d6                	cmp    %edx,%esi
ffffffff8041324e:	75 e8                	jne    ffffffff80413238 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x708>
}
ffffffff80413250:	48 83 c4 68          	add    $0x68,%rsp
ffffffff80413254:	58                   	pop    %rax
ffffffff80413255:	5a                   	pop    %rdx
ffffffff80413256:	59                   	pop    %rcx
ffffffff80413257:	5b                   	pop    %rbx
ffffffff80413258:	5e                   	pop    %rsi
ffffffff80413259:	5f                   	pop    %rdi
ffffffff8041325a:	5d                   	pop    %rbp
ffffffff8041325b:	41 58                	pop    %r8
ffffffff8041325d:	41 59                	pop    %r9
ffffffff8041325f:	41 5a                	pop    %r10
ffffffff80413261:	41 5b                	pop    %r11
ffffffff80413263:	41 5c                	pop    %r12
ffffffff80413265:	41 5d                	pop    %r13
ffffffff80413267:	41 5e                	pop    %r14
ffffffff80413269:	41 5f                	pop    %r15
ffffffff8041326b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041326f:	48 cf                	iretq  
ffffffff80413271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413278:	83 ff 01             	cmp    $0x1,%edi
ffffffff8041327b:	76 53                	jbe    ffffffff804132d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a0>
ffffffff8041327d:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80413283:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413288:	45 31 e4             	xor    %r12d,%r12d
ffffffff8041328b:	4d 8d ab 60 ff ff ff 	lea    -0xa0(%r11),%r13
ffffffff80413292:	45 85 c9             	test   %r9d,%r9d
ffffffff80413295:	74 2b                	je     ffffffff804132c2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x792>
ffffffff80413297:	89 44 24 08          	mov    %eax,0x8(%rsp)
ffffffff8041329b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804132a0:	43 0f b7 84 63 70 e0 	movzwl -0x7fbe1f90(%r11,%r12,2),%eax
ffffffff804132a7:	41 80 
ffffffff804132a9:	66 43 89 84 65 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%r12,2)
ffffffff804132b0:	41 80 
ffffffff804132b2:	4c 89 e0             	mov    %r12,%rax
ffffffff804132b5:	49 83 c4 01          	add    $0x1,%r12
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804132b9:	49 39 c7             	cmp    %rax,%r15
ffffffff804132bc:	75 e2                	jne    ffffffff804132a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff804132be:	8b 44 24 08          	mov    0x8(%rsp),%eax
ffffffff804132c2:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804132c9:	4c 3b 5c 24 20       	cmp    0x20(%rsp),%r11
ffffffff804132ce:	75 b8                	jne    ffffffff80413288 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804132d0:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff804132d5:	45 85 c9             	test   %r9d,%r9d
ffffffff804132d8:	74 17                	je     ffffffff804132f1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c1>
ffffffff804132da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804132e0:	66 41 c7 03 00 00    	movw   $0x0,(%r11)
ffffffff804132e6:	49 83 c3 02          	add    $0x2,%r11
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804132ea:	4c 3b 5c 24 18       	cmp    0x18(%rsp),%r11
ffffffff804132ef:	75 ef                	jne    ffffffff804132e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804132f1:	44 01 c2             	add    %r8d,%edx
      current_row_--;
ffffffff804132f4:	83 ef 01             	sub    $0x1,%edi
ffffffff804132f7:	44 39 ca             	cmp    %r9d,%edx
ffffffff804132fa:	89 3d 68 ad 00 00    	mov    %edi,0xad68(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413300:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413304:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413307:	0f 82 47 f9 ff ff    	jb     ffffffff80412c54 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x124>
ffffffff8041330d:	44 89 c2             	mov    %r8d,%edx
    if (current_col_ == num_cols_) {
ffffffff80413310:	44 39 ca             	cmp    %r9d,%edx
ffffffff80413313:	0f 85 89 f9 ff ff    	jne    ffffffff80412ca2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x172>
ffffffff80413319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80413320:	c7 05 42 ad 00 00 00 	movl   $0x0,0xad42(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413327:	00 00 00 
      current_row_++;
ffffffff8041332a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041332d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041332f:	89 3d 33 ad 00 00    	mov    %edi,0xad33(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413335:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80413338:	0f 85 80 f9 ff ff    	jne    ffffffff80412cbe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff8041333e:	39 ce                	cmp    %ecx,%esi
ffffffff80413340:	0f 47 f1             	cmova  %ecx,%esi
ffffffff80413343:	e9 7e f9 ff ff       	jmpq   ffffffff80412cc6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x196>
ffffffff80413348:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041334f:	00 
    if (count == npos) {
ffffffff80413350:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80413353:	75 1b                	jne    ffffffff80413370 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x840>
ffffffff80413355:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff8041335a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff8041335f:	89 c2                	mov    %eax,%edx
ffffffff80413361:	e9 d2 f8 ff ff       	jmpq   ffffffff80412c38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x108>
ffffffff80413366:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041336d:	00 00 00 
ffffffff80413370:	89 f1                	mov    %esi,%ecx
ffffffff80413372:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80413377:	e9 b5 f8 ff ff       	jmpq   ffffffff80412c31 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x101>
ffffffff8041337c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80413380:	41 89 c9             	mov    %ecx,%r9d
ffffffff80413383:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041338a:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041338d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80413390:	0f 85 72 f9 ff ff    	jne    ffffffff80412d08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
ffffffff80413396:	e9 b0 f9 ff ff       	jmpq   ffffffff80412d4b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff8041339b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804133a0:	44 39 ca             	cmp    %r9d,%edx
ffffffff804133a3:	73 4a                	jae    ffffffff804133ef <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8bf>
ffffffff804133a5:	89 fd                	mov    %edi,%ebp
ffffffff804133a7:	41 89 d3             	mov    %edx,%r11d
ffffffff804133aa:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
ffffffff804133af:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804133b3:	4d 8d 44 2b 08       	lea    0x8(%r11,%rbp,1),%r8
ffffffff804133b8:	4c 01 dd             	add    %r11,%rbp
ffffffff804133bb:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
ffffffff804133c0:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff804133c7:	80 
ffffffff804133c8:	41 29 d3             	sub    %edx,%r11d
ffffffff804133cb:	4c 01 dd             	add    %r11,%rbp
ffffffff804133ce:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff804133d5:	80 
ffffffff804133d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804133dd:	00 00 00 
          text_buffer_[current_row_][i] = 0;
ffffffff804133e0:	66 41 c7 00 00 00    	movw   $0x0,(%r8)
ffffffff804133e6:	49 83 c0 02          	add    $0x2,%r8
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804133ea:	49 39 d0             	cmp    %rdx,%r8
ffffffff804133ed:	75 f1                	jne    ffffffff804133e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b0>
        current_col_ = 0;
ffffffff804133ef:	c7 05 73 ac 00 00 00 	movl   $0x0,0xac73(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804133f6:	00 00 00 
        current_row_++;
ffffffff804133f9:	83 c7 01             	add    $0x1,%edi
ffffffff804133fc:	31 d2                	xor    %edx,%edx
ffffffff804133fe:	89 3d 64 ac 00 00    	mov    %edi,0xac64(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413404:	e9 b5 f8 ff ff       	jmpq   ffffffff80412cbe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80413409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80413410:	c7 05 52 ac 00 00 00 	movl   $0x0,0xac52(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413417:	00 00 00 
      current_row_++;
ffffffff8041341a:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041341d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041341f:	89 0d 43 ac 00 00    	mov    %ecx,0xac43(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413425:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80413428:	0f 85 58 fd ff ff    	jne    ffffffff80413186 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff8041342e:	39 fe                	cmp    %edi,%esi
ffffffff80413430:	0f 47 f7             	cmova  %edi,%esi
  constexpr void remove_prefix(size_t n) {
ffffffff80413433:	e9 56 fd ff ff       	jmpq   ffffffff8041318e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x65e>
ffffffff80413438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041343f:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413440:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80413444:	76 46                	jbe    ffffffff8041348c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x95c>
ffffffff80413446:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff8041344c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413450:	45 31 db             	xor    %r11d,%r11d
ffffffff80413453:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff8041345a:	45 85 c0             	test   %r8d,%r8d
ffffffff8041345d:	74 1f                	je     ffffffff8041347e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x94e>
ffffffff8041345f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413460:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80413467:	41 80 
ffffffff80413469:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80413470:	41 80 
ffffffff80413472:	4d 89 df             	mov    %r11,%r15
ffffffff80413475:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413479:	4d 39 ef             	cmp    %r13,%r15
ffffffff8041347c:	75 e2                	jne    ffffffff80413460 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x930>
ffffffff8041347e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413485:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff8041348a:	75 c4                	jne    ffffffff80413450 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041348c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80413491:	45 85 c0             	test   %r8d,%r8d
ffffffff80413494:	74 1b                	je     ffffffff804134b1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x981>
ffffffff80413496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041349d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804134a0:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff804134a6:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804134aa:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff804134af:	75 ef                	jne    ffffffff804134a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x970>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804134b1:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff804134b3:	83 e9 01             	sub    $0x1,%ecx
ffffffff804134b6:	44 39 c2             	cmp    %r8d,%edx
ffffffff804134b9:	89 0d a9 ab 00 00    	mov    %ecx,0xaba9(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804134bf:	41 0f 47 d0          	cmova  %r8d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804134c3:	39 ea                	cmp    %ebp,%edx
ffffffff804134c5:	0f 87 4f fc ff ff    	ja     ffffffff8041311a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5ea>
ffffffff804134cb:	89 ea                	mov    %ebp,%edx
ffffffff804134cd:	e9 8f fc ff ff       	jmpq   ffffffff80413161 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x631>
ffffffff804134d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (count == npos) {
ffffffff804134d8:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff804134db:	0f 85 ef 00 00 00    	jne    ffffffff804135d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
ffffffff804134e1:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804134e6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff804134eb:	89 c2                	mov    %eax,%edx
ffffffff804134ed:	e9 0e fc ff ff       	jmpq   ffffffff80413100 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5d0>
ffffffff804134f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff804134f8:	c7 05 6a ab 00 00 00 	movl   $0x0,0xab6a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804134ff:	00 00 00 
      current_row_++;
ffffffff80413502:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413505:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80413507:	89 0d 5b ab 00 00    	mov    %ecx,0xab5b(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041350d:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80413510:	0f 85 50 fa ff ff    	jne    ffffffff80412f66 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80413516:	39 fe                	cmp    %edi,%esi
ffffffff80413518:	0f 47 f7             	cmova  %edi,%esi
ffffffff8041351b:	e9 4e fa ff ff       	jmpq   ffffffff80412f6e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x43e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413520:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80413524:	76 46                	jbe    ffffffff8041356c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa3c>
ffffffff80413526:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff8041352c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413530:	45 31 db             	xor    %r11d,%r11d
ffffffff80413533:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff8041353a:	45 85 c9             	test   %r9d,%r9d
ffffffff8041353d:	74 1f                	je     ffffffff8041355e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa2e>
ffffffff8041353f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413540:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80413547:	41 80 
ffffffff80413549:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80413550:	41 80 
ffffffff80413552:	4d 89 df             	mov    %r11,%r15
ffffffff80413555:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413559:	4d 39 ef             	cmp    %r13,%r15
ffffffff8041355c:	75 e2                	jne    ffffffff80413540 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff8041355e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413565:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041356a:	75 c4                	jne    ffffffff80413530 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa00>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041356c:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
ffffffff80413571:	45 85 c9             	test   %r9d,%r9d
ffffffff80413574:	74 1b                	je     ffffffff80413591 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa61>
ffffffff80413576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041357d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80413580:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80413586:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041358a:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
ffffffff8041358f:	75 ef                	jne    ffffffff80413580 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xa50>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413591:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80413593:	83 e9 01             	sub    $0x1,%ecx
ffffffff80413596:	44 39 ca             	cmp    %r9d,%edx
ffffffff80413599:	89 0d c9 aa 00 00    	mov    %ecx,0xaac9(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041359f:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804135a3:	39 ea                	cmp    %ebp,%edx
ffffffff804135a5:	0f 87 4f f9 ff ff    	ja     ffffffff80412efa <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3ca>
ffffffff804135ab:	89 ea                	mov    %ebp,%edx
ffffffff804135ad:	e9 8f f9 ff ff       	jmpq   ffffffff80412f41 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x411>
ffffffff804135b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804135b8:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff804135bb:	75 23                	jne    ffffffff804135e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xab0>
ffffffff804135bd:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804135c2:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff804135c7:	89 c2                	mov    %eax,%edx
ffffffff804135c9:	e9 12 f9 ff ff       	jmpq   ffffffff80412ee0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b0>
ffffffff804135ce:	66 90                	xchg   %ax,%ax
ffffffff804135d0:	89 f7                	mov    %esi,%edi
ffffffff804135d2:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804135d7:	e9 1d fb ff ff       	jmpq   ffffffff804130f9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c9>
ffffffff804135dc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804135e0:	89 f7                	mov    %esi,%edi
ffffffff804135e2:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804135e7:	e9 ed f8 ff ff       	jmpq   ffffffff80412ed9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a9>
ffffffff804135ec:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804135f0:	41 89 f8             	mov    %edi,%r8d
ffffffff804135f3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804135fa:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804135fd:	48 39 c6             	cmp    %rax,%rsi
ffffffff80413600:	0f 85 aa f9 ff ff    	jne    ffffffff80412fb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
ffffffff80413606:	e9 e7 f9 ff ff       	jmpq   ffffffff80412ff2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff8041360b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80413610:	41 89 f8             	mov    %edi,%r8d
ffffffff80413613:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041361a:	44 89 c7             	mov    %r8d,%edi
ffffffff8041361d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80413620:	0f 85 aa fb ff ff    	jne    ffffffff804131d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
ffffffff80413626:	e9 e7 fb ff ff       	jmpq   ffffffff80413212 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff8041362b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413630:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413633:	76 41                	jbe    ffffffff80413676 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb46>
ffffffff80413635:	89 cb                	mov    %ecx,%ebx
ffffffff80413637:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff8041363c:	41 89 d2             	mov    %edx,%r10d
ffffffff8041363f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80413643:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80413647:	41 29 d7             	sub    %edx,%r15d
ffffffff8041364a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff8041364f:	4c 01 d5             	add    %r10,%rbp
ffffffff80413652:	4c 01 fd             	add    %r15,%rbp
ffffffff80413655:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff8041365c:	80 
ffffffff8041365d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80413664:	80 
ffffffff80413665:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80413668:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff8041366d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413671:	48 39 da             	cmp    %rbx,%rdx
ffffffff80413674:	75 f2                	jne    ffffffff80413668 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb38>
        current_col_ = 0;
ffffffff80413676:	c7 05 ec a9 00 00 00 	movl   $0x0,0xa9ec(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041367d:	00 00 00 
        current_row_++;
ffffffff80413680:	83 c1 01             	add    $0x1,%ecx
ffffffff80413683:	31 d2                	xor    %edx,%edx
ffffffff80413685:	89 0d dd a9 00 00    	mov    %ecx,0xa9dd(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041368b:	e9 f6 fa ff ff       	jmpq   ffffffff80413186 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413690:	41 39 d1             	cmp    %edx,%r9d
ffffffff80413693:	76 41                	jbe    ffffffff804136d6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xba6>
ffffffff80413695:	89 cb                	mov    %ecx,%ebx
ffffffff80413697:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff8041369c:	41 89 d2             	mov    %edx,%r10d
ffffffff8041369f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff804136a3:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804136a7:	41 29 d7             	sub    %edx,%r15d
ffffffff804136aa:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff804136af:	4c 01 d5             	add    %r10,%rbp
ffffffff804136b2:	4c 01 fd             	add    %r15,%rbp
ffffffff804136b5:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff804136bc:	80 
ffffffff804136bd:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff804136c4:	80 
ffffffff804136c5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff804136c8:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff804136cd:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804136d1:	48 39 d3             	cmp    %rdx,%rbx
ffffffff804136d4:	75 f2                	jne    ffffffff804136c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0xb98>
        current_col_ = 0;
ffffffff804136d6:	c7 05 8c a9 00 00 00 	movl   $0x0,0xa98c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804136dd:	00 00 00 
        current_row_++;
ffffffff804136e0:	83 c1 01             	add    $0x1,%ecx
ffffffff804136e3:	31 d2                	xor    %edx,%edx
ffffffff804136e5:	89 0d 7d a9 00 00    	mov    %ecx,0xa97d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804136eb:	e9 76 f8 ff ff       	jmpq   ffffffff80412f66 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff804136f0:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
    str[0] = 'E';
ffffffff804136f5:	66 c7 44 24 38 45 00 	movw   $0x45,0x38(%rsp)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804136fc:	48 89 df             	mov    %rbx,%rdi
ffffffff804136ff:	e8 bc 9a ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80413704:	85 c0                	test   %eax,%eax
ffffffff80413706:	0f 85 17 f7 ff ff    	jne    ffffffff80412e23 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x2f3>
ffffffff8041370c:	8b 2d 5a a9 00 00    	mov    0xa95a(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413712:	8b 0d 50 a9 00 00    	mov    0xa950(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413718:	e9 67 f8 ff ff       	jmpq   ffffffff80412f84 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x454>
ffffffff8041371d:	0f 1f 00             	nopl   (%rax)
ffffffff80413720:	44 8b 05 45 a9 00 00 	mov    0xa945(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413727:	8b 3d 3b a9 00 00    	mov    0xa93b(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041372d:	e9 ab f5 ff ff       	jmpq   ffffffff80412cdd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x1ad>
ffffffff80413732:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80413738:	8b 0d 2a a9 00 00    	mov    0xa92a(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041373e:	8b 2d 28 a9 00 00    	mov    0xa928(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413744:	e9 5b fa ff ff       	jmpq   ffffffff804131a4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi10EEEvPNS_23CPUInterruptHandlerArgsEm+0x674>
ffffffff80413749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80413750 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80413750:	41 57                	push   %r15
ffffffff80413752:	41 56                	push   %r14
ffffffff80413754:	41 55                	push   %r13
ffffffff80413756:	41 54                	push   %r12
ffffffff80413758:	41 53                	push   %r11
ffffffff8041375a:	41 52                	push   %r10
ffffffff8041375c:	41 51                	push   %r9
ffffffff8041375e:	41 50                	push   %r8
ffffffff80413760:	55                   	push   %rbp
ffffffff80413761:	57                   	push   %rdi
ffffffff80413762:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80413763:	be 0b 00 00 00       	mov    $0xb,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80413768:	53                   	push   %rbx
ffffffff80413769:	51                   	push   %rcx
ffffffff8041376a:	52                   	push   %rdx
ffffffff8041376b:	50                   	push   %rax
ffffffff8041376c:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80413770:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
ffffffff80413777:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80413778:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
ffffffff8041377f:	00 
ffffffff80413780:	fc                   	cld    
ffffffff80413781:	e8 4a a5 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
ffffffff80413786:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff8041378d:	e8 2e 9a ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80413792:	85 c0                	test   %eax,%eax
ffffffff80413794:	0f 84 a6 0b 00 00    	je     ffffffff80414340 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xbf0>
ffffffff8041379a:	44 8b 2d bf a8 00 00 	mov    0xa8bf(%rip),%r13d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804137a1:	44 8b 0d bc a8 00 00 	mov    0xa8bc(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804137a8:	49 c7 c2 66 b8 41 80 	mov    $0xffffffff8041b866,%r10
ffffffff804137af:	44 8b 05 b6 a8 00 00 	mov    0xa8b6(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804137b6:	8b 3d ac a8 00 00    	mov    0xa8ac(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804137bc:	41 8d 55 fe          	lea    -0x2(%r13),%edx
ffffffff804137c0:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
ffffffff804137c4:	45 89 ee             	mov    %r13d,%r14d
ffffffff804137c7:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804137cb:	44 89 7c 24 2c       	mov    %r15d,0x2c(%rsp)
ffffffff804137d0:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff804137d4:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
ffffffff804137db:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff804137df:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804137e3:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff804137e8:	48 89 d6             	mov    %rdx,%rsi
ffffffff804137eb:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804137ef:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804137f3:	4c 01 fa             	add    %r15,%rdx
ffffffff804137f6:	48 8d 8e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rcx
ffffffff804137fd:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80413802:	48 8d 8c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rcx
ffffffff80413809:	80 
ffffffff8041380a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8041380f:	90                   	nop
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80413810:	44 89 ce             	mov    %r9d,%esi
ffffffff80413813:	44 29 c6             	sub    %r8d,%esi
ffffffff80413816:	39 c6                	cmp    %eax,%esi
ffffffff80413818:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041381b:	39 f0                	cmp    %esi,%eax
ffffffff8041381d:	89 f2                	mov    %esi,%edx
ffffffff8041381f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80413822:	85 d2                	test   %edx,%edx
ffffffff80413824:	0f 84 46 07 00 00    	je     ffffffff80413f70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff8041382a:	83 ea 01             	sub    $0x1,%edx
ffffffff8041382d:	31 ed                	xor    %ebp,%ebp
ffffffff8041382f:	eb 17                	jmp    ffffffff80413848 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xf8>
ffffffff80413831:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80413838:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
ffffffff8041383c:	48 39 d5             	cmp    %rdx,%rbp
ffffffff8041383f:	0f 84 2b 07 00 00    	je     ffffffff80413f70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80413845:	48 89 cd             	mov    %rcx,%rbp
      if (str_[i] == c) {
ffffffff80413848:	41 80 3c 2a 0a       	cmpb   $0xa,(%r10,%rbp,1)
ffffffff8041384d:	89 e9                	mov    %ebp,%ecx
ffffffff8041384f:	75 e7                	jne    ffffffff80413838 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xe8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413851:	39 c8                	cmp    %ecx,%eax
ffffffff80413853:	89 ca                	mov    %ecx,%edx
ffffffff80413855:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80413858:	44 39 f7             	cmp    %r14d,%edi
ffffffff8041385b:	0f 84 37 06 00 00    	je     ffffffff80413e98 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413861:	44 01 c2             	add    %r8d,%edx
ffffffff80413864:	44 39 ca             	cmp    %r9d,%edx
ffffffff80413867:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff8041386b:	41 39 d0             	cmp    %edx,%r8d
ffffffff8041386e:	0f 83 b9 06 00 00    	jae    ffffffff80413f2d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7dd>
ffffffff80413874:	45 89 c3             	mov    %r8d,%r11d
ffffffff80413877:	41 f7 d3             	not    %r11d
ffffffff8041387a:	45 8d 24 13          	lea    (%r11,%rdx,1),%r12d
ffffffff8041387e:	41 89 fb             	mov    %edi,%r11d
ffffffff80413881:	4f 8d 1c 9b          	lea    (%r11,%r11,4),%r11
ffffffff80413885:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80413889:	4d 01 d8             	add    %r11,%r8
ffffffff8041388c:	45 31 db             	xor    %r11d,%r11d
ffffffff8041388f:	4d 01 c0             	add    %r8,%r8
ffffffff80413892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80413898:	66 47 0f be 2c 1a    	movsbw (%r10,%r11,1),%r13w
ffffffff8041389e:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff804138a4:	66 47 89 ac 58 70 e0 	mov    %r13w,-0x7fbe1f90(%r8,%r11,2)
ffffffff804138ab:	41 80 
ffffffff804138ad:	4d 89 dd             	mov    %r11,%r13
ffffffff804138b0:	49 83 c3 01          	add    $0x1,%r11
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804138b4:	4d 39 e5             	cmp    %r12,%r13
ffffffff804138b7:	75 df                	jne    ffffffff80413898 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x148>
    if (current_col_ == num_cols_) {
ffffffff804138b9:	44 39 ca             	cmp    %r9d,%edx
ffffffff804138bc:	0f 84 7e 06 00 00    	je     ffffffff80413f40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7f0>
    current_col_ = i;
ffffffff804138c2:	89 15 a4 a7 00 00    	mov    %edx,0xa7a4(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804138c8:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff804138cb:	0f 84 8d 06 00 00    	je     ffffffff80413f5e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x80e>
ffffffff804138d1:	85 d2                	test   %edx,%edx
ffffffff804138d3:	74 09                	je     ffffffff804138de <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff804138d5:	83 ff 18             	cmp    $0x18,%edi
ffffffff804138d8:	0f 86 e2 06 00 00    	jbe    ffffffff80413fc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x870>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804138de:	83 c1 01             	add    $0x1,%ecx
ffffffff804138e1:	39 f1                	cmp    %esi,%ecx
ffffffff804138e3:	0f 46 f1             	cmovbe %ecx,%esi
    str_ += n;
ffffffff804138e6:	89 f1                	mov    %esi,%ecx
    size_ -= min(n, size_);
ffffffff804138e8:	41 89 d0             	mov    %edx,%r8d
    str_ += n;
ffffffff804138eb:	49 01 ca             	add    %rcx,%r10
    size_ -= min(n, size_);
ffffffff804138ee:	39 c6                	cmp    %eax,%esi
ffffffff804138f0:	0f 47 f0             	cmova  %eax,%esi
ffffffff804138f3:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff804138f5:	85 c0                	test   %eax,%eax
ffffffff804138f7:	0f 85 13 ff ff ff    	jne    ffffffff80413810 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xc0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804138fd:	85 ff                	test   %edi,%edi
ffffffff804138ff:	74 6a                	je     ffffffff8041396b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80413901:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413904:	44 8b 15 59 a7 00 00 	mov    0xa759(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041390b:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80413912:	31 c9                	xor    %ecx,%ecx
ffffffff80413914:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80413918:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041391c:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80413922:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80413928:	48 89 f5             	mov    %rsi,%rbp
ffffffff8041392b:	89 ca                	mov    %ecx,%edx
ffffffff8041392d:	46 8d 0c 11          	lea    (%rcx,%r10,1),%r9d
ffffffff80413931:	45 85 d2             	test   %r10d,%r10d
ffffffff80413934:	0f 84 66 06 00 00    	je     ffffffff80413fa0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x850>
ffffffff8041393a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80413940:	44 0f b7 5d 00       	movzwl 0x0(%rbp),%r11d
ffffffff80413945:	89 d1                	mov    %edx,%ecx
ffffffff80413947:	83 c2 01             	add    $0x1,%edx
ffffffff8041394a:	48 83 c5 02          	add    $0x2,%rbp
ffffffff8041394e:	66 44 89 9c 09 00 80 	mov    %r11w,0xb8000(%rcx,%rcx,1)
ffffffff80413955:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413957:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041395a:	75 e4                	jne    ffffffff80413940 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1f0>
ffffffff8041395c:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80413963:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413966:	48 39 f0             	cmp    %rsi,%rax
ffffffff80413969:	75 bd                	jne    ffffffff80413928 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
    if (current_col_ != 0) {
ffffffff8041396b:	45 85 c0             	test   %r8d,%r8d
ffffffff8041396e:	74 38                	je     ffffffff804139a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413970:	8b 35 ee a6 00 00    	mov    0xa6ee(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413976:	85 f6                	test   %esi,%esi
ffffffff80413978:	74 2e                	je     ffffffff804139a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8041397a:	89 fa                	mov    %edi,%edx
ffffffff8041397c:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff80413980:	0f af d6             	imul   %esi,%edx
ffffffff80413983:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80413987:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff8041398d:	01 d6                	add    %edx,%esi
ffffffff8041398f:	90                   	nop
ffffffff80413990:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80413993:	89 d7                	mov    %edx,%edi
ffffffff80413995:	83 c2 01             	add    $0x1,%edx
ffffffff80413998:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041399c:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff804139a3:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804139a4:	39 f2                	cmp    %esi,%edx
ffffffff804139a6:	75 e8                	jne    ffffffff80413990 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804139a8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff804139ad:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff804139b0:	48 89 da             	mov    %rbx,%rdx
    num_len++;
ffffffff804139b3:	89 c6                	mov    %eax,%esi
    buffer[i] = num % base;
ffffffff804139b5:	83 e2 0f             	and    $0xf,%edx
ffffffff804139b8:	88 54 04 4b          	mov    %dl,0x4b(%rsp,%rax,1)
ffffffff804139bc:	48 89 da             	mov    %rbx,%rdx
    num /= base;
ffffffff804139bf:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff804139c3:	48 83 fa 0f          	cmp    $0xf,%rdx
ffffffff804139c7:	76 0f                	jbe    ffffffff804139d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
ffffffff804139c9:	48 83 c0 01          	add    $0x1,%rax
  for (size_t i = 0; i < size; i++) {
ffffffff804139cd:	48 83 f8 15          	cmp    $0x15,%rax
ffffffff804139d1:	75 dd                	jne    ffffffff804139b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x260>
ffffffff804139d3:	be 14 00 00 00       	mov    $0x14,%esi
  if (num != 0) {
ffffffff804139d8:	48 85 db             	test   %rbx,%rbx
ffffffff804139db:	0f 85 2f 09 00 00    	jne    ffffffff80414310 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xbc0>
ffffffff804139e1:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
ffffffff804139e6:	89 f7                	mov    %esi,%edi
    str[offset++] = '0';
ffffffff804139e8:	66 c7 44 24 38 30 78 	movw   $0x7830,0x38(%rsp)
ffffffff804139ef:	48 01 df             	add    %rbx,%rdi
ffffffff804139f2:	48 89 da             	mov    %rbx,%rdx
    if (buffer[num_len - i - 1] >= 10) {
ffffffff804139f5:	8d 4c 1e ff          	lea    -0x1(%rsi,%rbx,1),%ecx
ffffffff804139f9:	eb 14                	jmp    ffffffff80413a0f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff804139fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80413a00:	83 c0 37             	add    $0x37,%eax
ffffffff80413a03:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80413a07:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80413a0a:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80413a0d:	74 1c                	je     ffffffff80413a2b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x2db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80413a0f:	89 c8                	mov    %ecx,%eax
ffffffff80413a11:	29 d0                	sub    %edx,%eax
ffffffff80413a13:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff80413a18:	3c 09                	cmp    $0x9,%al
ffffffff80413a1a:	7f e4                	jg     ffffffff80413a00 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80413a1c:	83 c0 30             	add    $0x30,%eax
ffffffff80413a1f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80413a23:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80413a26:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80413a29:	75 e4                	jne    ffffffff80413a0f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
  str[num_len + offset] = 0;
ffffffff80413a2b:	8d 46 02             	lea    0x2(%rsi),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80413a2e:	48 89 df             	mov    %rbx,%rdi
ffffffff80413a31:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff80413a36:	e8 85 97 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80413a3b:	85 c0                	test   %eax,%eax
ffffffff80413a3d:	0f 84 e9 08 00 00    	je     ffffffff8041432c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xbdc>
ffffffff80413a43:	44 8b 25 16 a6 00 00 	mov    0xa616(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80413a4a:	44 8b 0d 13 a6 00 00 	mov    0xa613(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413a51:	49 89 d8             	mov    %rbx,%r8
ffffffff80413a54:	8b 2d 12 a6 00 00    	mov    0xa612(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413a5a:	8b 0d 08 a6 00 00    	mov    0xa608(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413a60:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80413a65:	45 8d 69 ff          	lea    -0x1(%r9),%r13d
ffffffff80413a69:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80413a6d:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80413a72:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80413a76:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff80413a7d:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80413a82:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80413a86:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80413a8b:	48 89 d6             	mov    %rdx,%rsi
ffffffff80413a8e:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80413a92:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80413a96:	4c 01 ea             	add    %r13,%rdx
ffffffff80413a99:	48 8d be 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rdi
ffffffff80413aa0:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80413aa5:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff80413aac:	80 
ffffffff80413aad:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80413ab2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80413ab8:	44 89 ce             	mov    %r9d,%esi
ffffffff80413abb:	89 c2                	mov    %eax,%edx
ffffffff80413abd:	29 ee                	sub    %ebp,%esi
ffffffff80413abf:	39 c6                	cmp    %eax,%esi
ffffffff80413ac1:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80413ac4:	39 c6                	cmp    %eax,%esi
ffffffff80413ac6:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80413ac9:	85 d2                	test   %edx,%edx
ffffffff80413acb:	0f 84 07 07 00 00    	je     ffffffff804141d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80413ad1:	83 ea 01             	sub    $0x1,%edx
ffffffff80413ad4:	31 db                	xor    %ebx,%ebx
ffffffff80413ad6:	eb 18                	jmp    ffffffff80413af0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a0>
ffffffff80413ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80413adf:	00 
ffffffff80413ae0:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80413ae4:	48 39 da             	cmp    %rbx,%rdx
ffffffff80413ae7:	0f 84 eb 06 00 00    	je     ffffffff804141d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80413aed:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80413af0:	41 80 3c 18 0a       	cmpb   $0xa,(%r8,%rbx,1)
ffffffff80413af5:	89 df                	mov    %ebx,%edi
ffffffff80413af7:	75 e7                	jne    ffffffff80413ae0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x390>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413af9:	39 f8                	cmp    %edi,%eax
ffffffff80413afb:	89 fa                	mov    %edi,%edx
ffffffff80413afd:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80413b00:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80413b03:	0f 84 37 06 00 00    	je     ffffffff80414140 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413b09:	01 ea                	add    %ebp,%edx
ffffffff80413b0b:	44 39 ca             	cmp    %r9d,%edx
ffffffff80413b0e:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80413b12:	39 ea                	cmp    %ebp,%edx
ffffffff80413b14:	0f 86 b1 06 00 00    	jbe    ffffffff804141cb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa7b>
ffffffff80413b1a:	41 89 ea             	mov    %ebp,%r10d
ffffffff80413b1d:	41 f7 d2             	not    %r10d
ffffffff80413b20:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80413b24:	41 89 ca             	mov    %ecx,%r10d
ffffffff80413b27:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff80413b2b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff80413b2f:	4c 01 d5             	add    %r10,%rbp
ffffffff80413b32:	45 31 d2             	xor    %r10d,%r10d
ffffffff80413b35:	48 01 ed             	add    %rbp,%rbp
ffffffff80413b38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80413b3f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80413b40:	66 47 0f be 34 10    	movsbw (%r8,%r10,1),%r14w
ffffffff80413b46:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80413b4c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80413b53:	41 80 
ffffffff80413b55:	4d 89 d6             	mov    %r10,%r14
ffffffff80413b58:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413b5c:	4d 39 de             	cmp    %r11,%r14
ffffffff80413b5f:	75 df                	jne    ffffffff80413b40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3f0>
    if (current_col_ == num_cols_) {
ffffffff80413b61:	41 39 d1             	cmp    %edx,%r9d
ffffffff80413b64:	0f 84 ae 05 00 00    	je     ffffffff80414118 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c8>
    current_col_ = i;
ffffffff80413b6a:	89 15 fc a4 00 00    	mov    %edx,0xa4fc(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413b70:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80413b73:	0f 84 bd 05 00 00    	je     ffffffff80414136 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9e6>
ffffffff80413b79:	85 d2                	test   %edx,%edx
ffffffff80413b7b:	74 09                	je     ffffffff80413b86 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80413b7d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80413b80:	0f 86 2a 07 00 00    	jbe    ffffffff804142b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80413b86:	83 c7 01             	add    $0x1,%edi
ffffffff80413b89:	39 f7                	cmp    %esi,%edi
ffffffff80413b8b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff80413b8e:	89 f7                	mov    %esi,%edi
    size_ -= min(n, size_);
ffffffff80413b90:	89 d5                	mov    %edx,%ebp
    str_ += n;
ffffffff80413b92:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff80413b95:	39 f0                	cmp    %esi,%eax
ffffffff80413b97:	0f 46 f0             	cmovbe %eax,%esi
ffffffff80413b9a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80413b9c:	85 c0                	test   %eax,%eax
ffffffff80413b9e:	0f 85 14 ff ff ff    	jne    ffffffff80413ab8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x368>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413ba4:	85 c9                	test   %ecx,%ecx
ffffffff80413ba6:	74 6a                	je     ffffffff80413c12 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff80413ba8:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413bab:	44 8b 0d b2 a4 00 00 	mov    0xa4b2(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413bb2:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80413bb9:	31 ff                	xor    %edi,%edi
ffffffff80413bbb:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80413bbf:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80413bc3:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80413bc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80413bd0:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413bd3:	89 fa                	mov    %edi,%edx
ffffffff80413bd5:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80413bd9:	45 85 c9             	test   %r9d,%r9d
ffffffff80413bdc:	0f 84 2e 06 00 00    	je     ffffffff80414210 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xac0>
ffffffff80413be2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80413be8:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff80413bec:	89 d7                	mov    %edx,%edi
ffffffff80413bee:	83 c2 01             	add    $0x1,%edx
ffffffff80413bf1:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80413bf5:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff80413bfc:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413bfe:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413c01:	75 e5                	jne    ffffffff80413be8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x498>
ffffffff80413c03:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80413c0a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413c0d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80413c10:	75 be                	jne    ffffffff80413bd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
    if (current_col_ != 0) {
ffffffff80413c12:	85 ed                	test   %ebp,%ebp
ffffffff80413c14:	74 3a                	je     ffffffff80413c50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413c16:	8b 35 48 a4 00 00    	mov    0xa448(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413c1c:	85 f6                	test   %esi,%esi
ffffffff80413c1e:	74 30                	je     ffffffff80413c50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80413c20:	89 f2                	mov    %esi,%edx
ffffffff80413c22:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80413c26:	0f af d1             	imul   %ecx,%edx
ffffffff80413c29:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80413c2d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80413c33:	01 d6                	add    %edx,%esi
ffffffff80413c35:	0f 1f 00             	nopl   (%rax)
ffffffff80413c38:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80413c3b:	89 d7                	mov    %edx,%edi
ffffffff80413c3d:	83 c2 01             	add    $0x1,%edx
ffffffff80413c40:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413c44:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80413c4b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413c4c:	39 d6                	cmp    %edx,%esi
ffffffff80413c4e:	75 e8                	jne    ffffffff80413c38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x4e8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80413c50:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80413c57:	e8 64 95 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80413c5c:	85 c0                	test   %eax,%eax
ffffffff80413c5e:	0f 84 f4 06 00 00    	je     ffffffff80414358 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xc08>
ffffffff80413c64:	44 8b 25 f5 a3 00 00 	mov    0xa3f5(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80413c6b:	44 8b 05 f2 a3 00 00 	mov    0xa3f2(%rip),%r8d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413c72:	49 c7 c1 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r9
ffffffff80413c79:	8b 2d ed a3 00 00    	mov    0xa3ed(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413c7f:	8b 0d e3 a3 00 00    	mov    0xa3e3(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413c85:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80413c8a:	45 8d 68 ff          	lea    -0x1(%r8),%r13d
ffffffff80413c8e:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80413c92:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80413c97:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80413c9b:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff80413ca2:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80413ca7:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80413cab:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff80413cb0:	48 89 d6             	mov    %rdx,%rsi
ffffffff80413cb3:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80413cb7:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80413cbb:	4c 01 ea             	add    %r13,%rdx
ffffffff80413cbe:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff80413cc5:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80413cca:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff80413cd1:	80 
ffffffff80413cd2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff80413cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80413cde:	00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80413ce0:	44 89 c6             	mov    %r8d,%esi
ffffffff80413ce3:	89 c2                	mov    %eax,%edx
ffffffff80413ce5:	29 ee                	sub    %ebp,%esi
ffffffff80413ce7:	39 c6                	cmp    %eax,%esi
ffffffff80413ce9:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80413cec:	39 c6                	cmp    %eax,%esi
ffffffff80413cee:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80413cf1:	85 d2                	test   %edx,%edx
ffffffff80413cf3:	0f 84 ff 03 00 00    	je     ffffffff804140f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff80413cf9:	83 ea 01             	sub    $0x1,%edx
ffffffff80413cfc:	31 db                	xor    %ebx,%ebx
ffffffff80413cfe:	eb 10                	jmp    ffffffff80413d10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c0>
ffffffff80413d00:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80413d04:	48 39 da             	cmp    %rbx,%rdx
ffffffff80413d07:	0f 84 eb 03 00 00    	je     ffffffff804140f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff80413d0d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80413d10:	41 80 3c 19 0a       	cmpb   $0xa,(%r9,%rbx,1)
ffffffff80413d15:	89 df                	mov    %ebx,%edi
ffffffff80413d17:	75 e7                	jne    ffffffff80413d00 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80413d19:	39 f8                	cmp    %edi,%eax
ffffffff80413d1b:	89 fa                	mov    %edi,%edx
ffffffff80413d1d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80413d20:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80413d23:	0f 84 37 03 00 00    	je     ffffffff80414060 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413d29:	01 ea                	add    %ebp,%edx
ffffffff80413d2b:	44 39 c2             	cmp    %r8d,%edx
ffffffff80413d2e:	41 0f 47 d0          	cmova  %r8d,%edx
ffffffff80413d32:	39 ea                	cmp    %ebp,%edx
ffffffff80413d34:	0f 86 b1 03 00 00    	jbe    ffffffff804140eb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x99b>
ffffffff80413d3a:	41 89 ea             	mov    %ebp,%r10d
ffffffff80413d3d:	41 f7 d2             	not    %r10d
ffffffff80413d40:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80413d44:	41 89 ca             	mov    %ecx,%r10d
ffffffff80413d47:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff80413d4b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff80413d4f:	4c 01 d5             	add    %r10,%rbp
ffffffff80413d52:	45 31 d2             	xor    %r10d,%r10d
ffffffff80413d55:	48 01 ed             	add    %rbp,%rbp
ffffffff80413d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80413d5f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80413d60:	66 47 0f be 34 11    	movsbw (%r9,%r10,1),%r14w
ffffffff80413d66:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80413d6c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80413d73:	41 80 
ffffffff80413d75:	4d 89 d6             	mov    %r10,%r14
ffffffff80413d78:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413d7c:	4d 39 f3             	cmp    %r14,%r11
ffffffff80413d7f:	75 df                	jne    ffffffff80413d60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x610>
    if (current_col_ == num_cols_) {
ffffffff80413d81:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413d84:	0f 84 a6 02 00 00    	je     ffffffff80414030 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8e0>
    current_col_ = i;
ffffffff80413d8a:	89 15 dc a2 00 00    	mov    %edx,0xa2dc(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413d90:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80413d93:	0f 84 b5 02 00 00    	je     ffffffff8041404e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8fe>
ffffffff80413d99:	85 d2                	test   %edx,%edx
ffffffff80413d9b:	74 09                	je     ffffffff80413da6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff80413d9d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80413da0:	0f 86 aa 04 00 00    	jbe    ffffffff80414250 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb00>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80413da6:	83 c7 01             	add    $0x1,%edi
ffffffff80413da9:	39 f7                	cmp    %esi,%edi
ffffffff80413dab:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff80413dae:	89 f7                	mov    %esi,%edi
ffffffff80413db0:	89 d5                	mov    %edx,%ebp
ffffffff80413db2:	49 01 f9             	add    %rdi,%r9
    size_ -= min(n, size_);
ffffffff80413db5:	39 c6                	cmp    %eax,%esi
ffffffff80413db7:	0f 47 f0             	cmova  %eax,%esi
ffffffff80413dba:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80413dbc:	85 c0                	test   %eax,%eax
ffffffff80413dbe:	0f 85 1c ff ff ff    	jne    ffffffff80413ce0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413dc4:	85 c9                	test   %ecx,%ecx
ffffffff80413dc6:	74 6a                	je     ffffffff80413e32 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80413dc8:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413dcb:	44 8b 0d 92 a2 00 00 	mov    0xa292(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413dd2:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80413dd9:	31 ff                	xor    %edi,%edi
ffffffff80413ddb:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80413ddf:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80413de3:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80413de9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80413df0:	48 89 f3             	mov    %rsi,%rbx
ffffffff80413df3:	89 fa                	mov    %edi,%edx
ffffffff80413df5:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80413df9:	45 85 c9             	test   %r9d,%r9d
ffffffff80413dfc:	0f 84 2e 04 00 00    	je     ffffffff80414230 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xae0>
ffffffff80413e02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80413e08:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff80413e0c:	89 d7                	mov    %edx,%edi
ffffffff80413e0e:	83 c2 01             	add    $0x1,%edx
ffffffff80413e11:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80413e15:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff80413e1c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413e1e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413e21:	75 e5                	jne    ffffffff80413e08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6b8>
ffffffff80413e23:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80413e2a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413e2d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80413e30:	75 be                	jne    ffffffff80413df0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
    if (current_col_ != 0) {
ffffffff80413e32:	85 ed                	test   %ebp,%ebp
ffffffff80413e34:	74 3a                	je     ffffffff80413e70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413e36:	8b 35 28 a2 00 00    	mov    0xa228(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80413e3c:	85 f6                	test   %esi,%esi
ffffffff80413e3e:	74 30                	je     ffffffff80413e70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80413e40:	89 f2                	mov    %esi,%edx
ffffffff80413e42:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80413e46:	0f af d1             	imul   %ecx,%edx
ffffffff80413e49:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80413e4d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80413e53:	01 d6                	add    %edx,%esi
ffffffff80413e55:	0f 1f 00             	nopl   (%rax)
ffffffff80413e58:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80413e5b:	89 d7                	mov    %edx,%edi
ffffffff80413e5d:	83 c2 01             	add    $0x1,%edx
ffffffff80413e60:	48 83 c0 02          	add    $0x2,%rax
ffffffff80413e64:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80413e6b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413e6c:	39 d6                	cmp    %edx,%esi
ffffffff80413e6e:	75 e8                	jne    ffffffff80413e58 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x708>
}
ffffffff80413e70:	48 83 c4 68          	add    $0x68,%rsp
ffffffff80413e74:	58                   	pop    %rax
ffffffff80413e75:	5a                   	pop    %rdx
ffffffff80413e76:	59                   	pop    %rcx
ffffffff80413e77:	5b                   	pop    %rbx
ffffffff80413e78:	5e                   	pop    %rsi
ffffffff80413e79:	5f                   	pop    %rdi
ffffffff80413e7a:	5d                   	pop    %rbp
ffffffff80413e7b:	41 58                	pop    %r8
ffffffff80413e7d:	41 59                	pop    %r9
ffffffff80413e7f:	41 5a                	pop    %r10
ffffffff80413e81:	41 5b                	pop    %r11
ffffffff80413e83:	41 5c                	pop    %r12
ffffffff80413e85:	41 5d                	pop    %r13
ffffffff80413e87:	41 5e                	pop    %r14
ffffffff80413e89:	41 5f                	pop    %r15
ffffffff80413e8b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80413e8f:	48 cf                	iretq  
ffffffff80413e91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413e98:	83 ff 01             	cmp    $0x1,%edi
ffffffff80413e9b:	76 53                	jbe    ffffffff80413ef0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a0>
ffffffff80413e9d:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80413ea3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413ea8:	45 31 e4             	xor    %r12d,%r12d
ffffffff80413eab:	4d 8d ab 60 ff ff ff 	lea    -0xa0(%r11),%r13
ffffffff80413eb2:	45 85 c9             	test   %r9d,%r9d
ffffffff80413eb5:	74 2b                	je     ffffffff80413ee2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x792>
ffffffff80413eb7:	89 44 24 08          	mov    %eax,0x8(%rsp)
ffffffff80413ebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80413ec0:	43 0f b7 84 63 70 e0 	movzwl -0x7fbe1f90(%r11,%r12,2),%eax
ffffffff80413ec7:	41 80 
ffffffff80413ec9:	66 43 89 84 65 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%r12,2)
ffffffff80413ed0:	41 80 
ffffffff80413ed2:	4c 89 e0             	mov    %r12,%rax
ffffffff80413ed5:	49 83 c4 01          	add    $0x1,%r12
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80413ed9:	49 39 c7             	cmp    %rax,%r15
ffffffff80413edc:	75 e2                	jne    ffffffff80413ec0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80413ede:	8b 44 24 08          	mov    0x8(%rsp),%eax
ffffffff80413ee2:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80413ee9:	4c 3b 5c 24 20       	cmp    0x20(%rsp),%r11
ffffffff80413eee:	75 b8                	jne    ffffffff80413ea8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413ef0:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80413ef5:	45 85 c9             	test   %r9d,%r9d
ffffffff80413ef8:	74 17                	je     ffffffff80413f11 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c1>
ffffffff80413efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80413f00:	66 41 c7 03 00 00    	movw   $0x0,(%r11)
ffffffff80413f06:	49 83 c3 02          	add    $0x2,%r11
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80413f0a:	4c 3b 5c 24 18       	cmp    0x18(%rsp),%r11
ffffffff80413f0f:	75 ef                	jne    ffffffff80413f00 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413f11:	44 01 c2             	add    %r8d,%edx
      current_row_--;
ffffffff80413f14:	83 ef 01             	sub    $0x1,%edi
ffffffff80413f17:	44 39 ca             	cmp    %r9d,%edx
ffffffff80413f1a:	89 3d 48 a1 00 00    	mov    %edi,0xa148(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80413f20:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80413f24:	41 39 d0             	cmp    %edx,%r8d
ffffffff80413f27:	0f 82 47 f9 ff ff    	jb     ffffffff80413874 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x124>
ffffffff80413f2d:	44 89 c2             	mov    %r8d,%edx
    if (current_col_ == num_cols_) {
ffffffff80413f30:	44 39 ca             	cmp    %r9d,%edx
ffffffff80413f33:	0f 85 89 f9 ff ff    	jne    ffffffff804138c2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x172>
ffffffff80413f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80413f40:	c7 05 22 a1 00 00 00 	movl   $0x0,0xa122(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80413f47:	00 00 00 
      current_row_++;
ffffffff80413f4a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413f4d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80413f4f:	89 3d 13 a1 00 00    	mov    %edi,0xa113(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80413f55:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80413f58:	0f 85 80 f9 ff ff    	jne    ffffffff804138de <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80413f5e:	39 ce                	cmp    %ecx,%esi
ffffffff80413f60:	0f 47 f1             	cmova  %ecx,%esi
ffffffff80413f63:	e9 7e f9 ff ff       	jmpq   ffffffff804138e6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x196>
ffffffff80413f68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80413f6f:	00 
    if (count == npos) {
ffffffff80413f70:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80413f73:	75 1b                	jne    ffffffff80413f90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x840>
ffffffff80413f75:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80413f7a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff80413f7f:	89 c2                	mov    %eax,%edx
ffffffff80413f81:	e9 d2 f8 ff ff       	jmpq   ffffffff80413858 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x108>
ffffffff80413f86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80413f8d:	00 00 00 
ffffffff80413f90:	89 f1                	mov    %esi,%ecx
ffffffff80413f92:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80413f97:	e9 b5 f8 ff ff       	jmpq   ffffffff80413851 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x101>
ffffffff80413f9c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80413fa0:	41 89 c9             	mov    %ecx,%r9d
ffffffff80413fa3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80413faa:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80413fad:	48 39 f0             	cmp    %rsi,%rax
ffffffff80413fb0:	0f 85 72 f9 ff ff    	jne    ffffffff80413928 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
ffffffff80413fb6:	e9 b0 f9 ff ff       	jmpq   ffffffff8041396b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80413fbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80413fc0:	44 39 ca             	cmp    %r9d,%edx
ffffffff80413fc3:	73 4a                	jae    ffffffff8041400f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8bf>
ffffffff80413fc5:	89 fd                	mov    %edi,%ebp
ffffffff80413fc7:	41 89 d3             	mov    %edx,%r11d
ffffffff80413fca:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
ffffffff80413fcf:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80413fd3:	4d 8d 44 2b 08       	lea    0x8(%r11,%rbp,1),%r8
ffffffff80413fd8:	4c 01 dd             	add    %r11,%rbp
ffffffff80413fdb:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
ffffffff80413fe0:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80413fe7:	80 
ffffffff80413fe8:	41 29 d3             	sub    %edx,%r11d
ffffffff80413feb:	4c 01 dd             	add    %r11,%rbp
ffffffff80413fee:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80413ff5:	80 
ffffffff80413ff6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80413ffd:	00 00 00 
          text_buffer_[current_row_][i] = 0;
ffffffff80414000:	66 41 c7 00 00 00    	movw   $0x0,(%r8)
ffffffff80414006:	49 83 c0 02          	add    $0x2,%r8
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041400a:	49 39 d0             	cmp    %rdx,%r8
ffffffff8041400d:	75 f1                	jne    ffffffff80414000 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b0>
        current_col_ = 0;
ffffffff8041400f:	c7 05 53 a0 00 00 00 	movl   $0x0,0xa053(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414016:	00 00 00 
        current_row_++;
ffffffff80414019:	83 c7 01             	add    $0x1,%edi
ffffffff8041401c:	31 d2                	xor    %edx,%edx
ffffffff8041401e:	89 3d 44 a0 00 00    	mov    %edi,0xa044(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414024:	e9 b5 f8 ff ff       	jmpq   ffffffff804138de <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80414029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80414030:	c7 05 32 a0 00 00 00 	movl   $0x0,0xa032(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414037:	00 00 00 
      current_row_++;
ffffffff8041403a:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041403d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041403f:	89 0d 23 a0 00 00    	mov    %ecx,0xa023(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414045:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80414048:	0f 85 58 fd ff ff    	jne    ffffffff80413da6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff8041404e:	39 fe                	cmp    %edi,%esi
ffffffff80414050:	0f 47 f7             	cmova  %edi,%esi
  constexpr void remove_prefix(size_t n) {
ffffffff80414053:	e9 56 fd ff ff       	jmpq   ffffffff80413dae <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x65e>
ffffffff80414058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041405f:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414060:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80414064:	76 46                	jbe    ffffffff804140ac <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x95c>
ffffffff80414066:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff8041406c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414070:	45 31 db             	xor    %r11d,%r11d
ffffffff80414073:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff8041407a:	45 85 c0             	test   %r8d,%r8d
ffffffff8041407d:	74 1f                	je     ffffffff8041409e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x94e>
ffffffff8041407f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80414080:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80414087:	41 80 
ffffffff80414089:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80414090:	41 80 
ffffffff80414092:	4d 89 df             	mov    %r11,%r15
ffffffff80414095:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414099:	4d 39 ef             	cmp    %r13,%r15
ffffffff8041409c:	75 e2                	jne    ffffffff80414080 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x930>
ffffffff8041409e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804140a5:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff804140aa:	75 c4                	jne    ffffffff80414070 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804140ac:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff804140b1:	45 85 c0             	test   %r8d,%r8d
ffffffff804140b4:	74 1b                	je     ffffffff804140d1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x981>
ffffffff804140b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804140bd:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804140c0:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff804140c6:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804140ca:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff804140cf:	75 ef                	jne    ffffffff804140c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x970>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804140d1:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff804140d3:	83 e9 01             	sub    $0x1,%ecx
ffffffff804140d6:	44 39 c2             	cmp    %r8d,%edx
ffffffff804140d9:	89 0d 89 9f 00 00    	mov    %ecx,0x9f89(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804140df:	41 0f 47 d0          	cmova  %r8d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804140e3:	39 ea                	cmp    %ebp,%edx
ffffffff804140e5:	0f 87 4f fc ff ff    	ja     ffffffff80413d3a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5ea>
ffffffff804140eb:	89 ea                	mov    %ebp,%edx
ffffffff804140ed:	e9 8f fc ff ff       	jmpq   ffffffff80413d81 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x631>
ffffffff804140f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (count == npos) {
ffffffff804140f8:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff804140fb:	0f 85 ef 00 00 00    	jne    ffffffff804141f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
ffffffff80414101:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80414106:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff8041410b:	89 c2                	mov    %eax,%edx
ffffffff8041410d:	e9 0e fc ff ff       	jmpq   ffffffff80413d20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5d0>
ffffffff80414112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80414118:	c7 05 4a 9f 00 00 00 	movl   $0x0,0x9f4a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041411f:	00 00 00 
      current_row_++;
ffffffff80414122:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414125:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80414127:	89 0d 3b 9f 00 00    	mov    %ecx,0x9f3b(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041412d:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80414130:	0f 85 50 fa ff ff    	jne    ffffffff80413b86 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80414136:	39 fe                	cmp    %edi,%esi
ffffffff80414138:	0f 47 f7             	cmova  %edi,%esi
ffffffff8041413b:	e9 4e fa ff ff       	jmpq   ffffffff80413b8e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x43e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414140:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80414144:	76 46                	jbe    ffffffff8041418c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa3c>
ffffffff80414146:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff8041414c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414150:	45 31 db             	xor    %r11d,%r11d
ffffffff80414153:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff8041415a:	45 85 c9             	test   %r9d,%r9d
ffffffff8041415d:	74 1f                	je     ffffffff8041417e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa2e>
ffffffff8041415f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80414160:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80414167:	41 80 
ffffffff80414169:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80414170:	41 80 
ffffffff80414172:	4d 89 df             	mov    %r11,%r15
ffffffff80414175:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414179:	4d 39 ef             	cmp    %r13,%r15
ffffffff8041417c:	75 e2                	jne    ffffffff80414160 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff8041417e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414185:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041418a:	75 c4                	jne    ffffffff80414150 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa00>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041418c:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
ffffffff80414191:	45 85 c9             	test   %r9d,%r9d
ffffffff80414194:	74 1b                	je     ffffffff804141b1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa61>
ffffffff80414196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041419d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804141a0:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff804141a6:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804141aa:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
ffffffff804141af:	75 ef                	jne    ffffffff804141a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xa50>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804141b1:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff804141b3:	83 e9 01             	sub    $0x1,%ecx
ffffffff804141b6:	44 39 ca             	cmp    %r9d,%edx
ffffffff804141b9:	89 0d a9 9e 00 00    	mov    %ecx,0x9ea9(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804141bf:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804141c3:	39 ea                	cmp    %ebp,%edx
ffffffff804141c5:	0f 87 4f f9 ff ff    	ja     ffffffff80413b1a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3ca>
ffffffff804141cb:	89 ea                	mov    %ebp,%edx
ffffffff804141cd:	e9 8f f9 ff ff       	jmpq   ffffffff80413b61 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x411>
ffffffff804141d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804141d8:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff804141db:	75 23                	jne    ffffffff80414200 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xab0>
ffffffff804141dd:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804141e2:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff804141e7:	89 c2                	mov    %eax,%edx
ffffffff804141e9:	e9 12 f9 ff ff       	jmpq   ffffffff80413b00 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b0>
ffffffff804141ee:	66 90                	xchg   %ax,%ax
ffffffff804141f0:	89 f7                	mov    %esi,%edi
ffffffff804141f2:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff804141f7:	e9 1d fb ff ff       	jmpq   ffffffff80413d19 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c9>
ffffffff804141fc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414200:	89 f7                	mov    %esi,%edi
ffffffff80414202:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80414207:	e9 ed f8 ff ff       	jmpq   ffffffff80413af9 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a9>
ffffffff8041420c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414210:	41 89 f8             	mov    %edi,%r8d
ffffffff80414213:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041421a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041421d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80414220:	0f 85 aa f9 ff ff    	jne    ffffffff80413bd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
ffffffff80414226:	e9 e7 f9 ff ff       	jmpq   ffffffff80413c12 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff8041422b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80414230:	41 89 f8             	mov    %edi,%r8d
ffffffff80414233:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041423a:	44 89 c7             	mov    %r8d,%edi
ffffffff8041423d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80414240:	0f 85 aa fb ff ff    	jne    ffffffff80413df0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
ffffffff80414246:	e9 e7 fb ff ff       	jmpq   ffffffff80413e32 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff8041424b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414250:	41 39 d0             	cmp    %edx,%r8d
ffffffff80414253:	76 41                	jbe    ffffffff80414296 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb46>
ffffffff80414255:	89 cb                	mov    %ecx,%ebx
ffffffff80414257:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff8041425c:	41 89 d2             	mov    %edx,%r10d
ffffffff8041425f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80414263:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80414267:	41 29 d7             	sub    %edx,%r15d
ffffffff8041426a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff8041426f:	4c 01 d5             	add    %r10,%rbp
ffffffff80414272:	4c 01 fd             	add    %r15,%rbp
ffffffff80414275:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff8041427c:	80 
ffffffff8041427d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80414284:	80 
ffffffff80414285:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80414288:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff8041428d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414291:	48 39 da             	cmp    %rbx,%rdx
ffffffff80414294:	75 f2                	jne    ffffffff80414288 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb38>
        current_col_ = 0;
ffffffff80414296:	c7 05 cc 9d 00 00 00 	movl   $0x0,0x9dcc(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041429d:	00 00 00 
        current_row_++;
ffffffff804142a0:	83 c1 01             	add    $0x1,%ecx
ffffffff804142a3:	31 d2                	xor    %edx,%edx
ffffffff804142a5:	89 0d bd 9d 00 00    	mov    %ecx,0x9dbd(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804142ab:	e9 f6 fa ff ff       	jmpq   ffffffff80413da6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804142b0:	41 39 d1             	cmp    %edx,%r9d
ffffffff804142b3:	76 41                	jbe    ffffffff804142f6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xba6>
ffffffff804142b5:	89 cb                	mov    %ecx,%ebx
ffffffff804142b7:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff804142bc:	41 89 d2             	mov    %edx,%r10d
ffffffff804142bf:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff804142c3:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804142c7:	41 29 d7             	sub    %edx,%r15d
ffffffff804142ca:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff804142cf:	4c 01 d5             	add    %r10,%rbp
ffffffff804142d2:	4c 01 fd             	add    %r15,%rbp
ffffffff804142d5:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff804142dc:	80 
ffffffff804142dd:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff804142e4:	80 
ffffffff804142e5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff804142e8:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff804142ed:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804142f1:	48 39 d3             	cmp    %rdx,%rbx
ffffffff804142f4:	75 f2                	jne    ffffffff804142e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0xb98>
        current_col_ = 0;
ffffffff804142f6:	c7 05 6c 9d 00 00 00 	movl   $0x0,0x9d6c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804142fd:	00 00 00 
        current_row_++;
ffffffff80414300:	83 c1 01             	add    $0x1,%ecx
ffffffff80414303:	31 d2                	xor    %edx,%edx
ffffffff80414305:	89 0d 5d 9d 00 00    	mov    %ecx,0x9d5d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041430b:	e9 76 f8 ff ff       	jmpq   ffffffff80413b86 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80414310:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
    str[0] = 'E';
ffffffff80414315:	66 c7 44 24 38 45 00 	movw   $0x45,0x38(%rsp)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041431c:	48 89 df             	mov    %rbx,%rdi
ffffffff8041431f:	e8 9c 8e ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80414324:	85 c0                	test   %eax,%eax
ffffffff80414326:	0f 85 17 f7 ff ff    	jne    ffffffff80413a43 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x2f3>
ffffffff8041432c:	8b 2d 3a 9d 00 00    	mov    0x9d3a(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414332:	8b 0d 30 9d 00 00    	mov    0x9d30(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414338:	e9 67 f8 ff ff       	jmpq   ffffffff80413ba4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x454>
ffffffff8041433d:	0f 1f 00             	nopl   (%rax)
ffffffff80414340:	44 8b 05 25 9d 00 00 	mov    0x9d25(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414347:	8b 3d 1b 9d 00 00    	mov    0x9d1b(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041434d:	e9 ab f5 ff ff       	jmpq   ffffffff804138fd <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x1ad>
ffffffff80414352:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80414358:	8b 0d 0a 9d 00 00    	mov    0x9d0a(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041435e:	8b 2d 08 9d 00 00    	mov    0x9d08(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414364:	e9 5b fa ff ff       	jmpq   ffffffff80413dc4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi11EEEvPNS_23CPUInterruptHandlerArgsEm+0x674>
ffffffff80414369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80414370 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414370:	41 57                	push   %r15
ffffffff80414372:	41 56                	push   %r14
ffffffff80414374:	41 55                	push   %r13
ffffffff80414376:	41 54                	push   %r12
ffffffff80414378:	41 53                	push   %r11
ffffffff8041437a:	41 52                	push   %r10
ffffffff8041437c:	41 51                	push   %r9
ffffffff8041437e:	41 50                	push   %r8
ffffffff80414380:	55                   	push   %rbp
ffffffff80414381:	57                   	push   %rdi
ffffffff80414382:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414383:	be 0c 00 00 00       	mov    $0xc,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414388:	53                   	push   %rbx
ffffffff80414389:	51                   	push   %rcx
ffffffff8041438a:	52                   	push   %rdx
ffffffff8041438b:	50                   	push   %rax
ffffffff8041438c:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80414390:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
ffffffff80414397:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414398:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
ffffffff8041439f:	00 
ffffffff804143a0:	fc                   	cld    
ffffffff804143a1:	e8 2a 99 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
ffffffff804143a6:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff804143ad:	e8 0e 8e ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff804143b2:	85 c0                	test   %eax,%eax
ffffffff804143b4:	0f 84 a6 0b 00 00    	je     ffffffff80414f60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xbf0>
ffffffff804143ba:	44 8b 2d 9f 9c 00 00 	mov    0x9c9f(%rip),%r13d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804143c1:	44 8b 0d 9c 9c 00 00 	mov    0x9c9c(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804143c8:	49 c7 c2 66 b8 41 80 	mov    $0xffffffff8041b866,%r10
ffffffff804143cf:	44 8b 05 96 9c 00 00 	mov    0x9c96(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804143d6:	8b 3d 8c 9c 00 00    	mov    0x9c8c(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804143dc:	41 8d 55 fe          	lea    -0x2(%r13),%edx
ffffffff804143e0:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
ffffffff804143e4:	45 89 ee             	mov    %r13d,%r14d
ffffffff804143e7:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804143eb:	44 89 7c 24 2c       	mov    %r15d,0x2c(%rsp)
ffffffff804143f0:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff804143f4:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
ffffffff804143fb:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff804143ff:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80414403:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80414408:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041440b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041440f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80414413:	4c 01 fa             	add    %r15,%rdx
ffffffff80414416:	48 8d 8e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rcx
ffffffff8041441d:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80414422:	48 8d 8c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rcx
ffffffff80414429:	80 
ffffffff8041442a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8041442f:	90                   	nop
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80414430:	44 89 ce             	mov    %r9d,%esi
ffffffff80414433:	44 29 c6             	sub    %r8d,%esi
ffffffff80414436:	39 c6                	cmp    %eax,%esi
ffffffff80414438:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041443b:	39 f0                	cmp    %esi,%eax
ffffffff8041443d:	89 f2                	mov    %esi,%edx
ffffffff8041443f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80414442:	85 d2                	test   %edx,%edx
ffffffff80414444:	0f 84 46 07 00 00    	je     ffffffff80414b90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff8041444a:	83 ea 01             	sub    $0x1,%edx
ffffffff8041444d:	31 ed                	xor    %ebp,%ebp
ffffffff8041444f:	eb 17                	jmp    ffffffff80414468 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xf8>
ffffffff80414451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80414458:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
ffffffff8041445c:	48 39 d5             	cmp    %rdx,%rbp
ffffffff8041445f:	0f 84 2b 07 00 00    	je     ffffffff80414b90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80414465:	48 89 cd             	mov    %rcx,%rbp
      if (str_[i] == c) {
ffffffff80414468:	41 80 3c 2a 0a       	cmpb   $0xa,(%r10,%rbp,1)
ffffffff8041446d:	89 e9                	mov    %ebp,%ecx
ffffffff8041446f:	75 e7                	jne    ffffffff80414458 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xe8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80414471:	39 c8                	cmp    %ecx,%eax
ffffffff80414473:	89 ca                	mov    %ecx,%edx
ffffffff80414475:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80414478:	44 39 f7             	cmp    %r14d,%edi
ffffffff8041447b:	0f 84 37 06 00 00    	je     ffffffff80414ab8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414481:	44 01 c2             	add    %r8d,%edx
ffffffff80414484:	44 39 ca             	cmp    %r9d,%edx
ffffffff80414487:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff8041448b:	41 39 d0             	cmp    %edx,%r8d
ffffffff8041448e:	0f 83 b9 06 00 00    	jae    ffffffff80414b4d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7dd>
ffffffff80414494:	45 89 c3             	mov    %r8d,%r11d
ffffffff80414497:	41 f7 d3             	not    %r11d
ffffffff8041449a:	45 8d 24 13          	lea    (%r11,%rdx,1),%r12d
ffffffff8041449e:	41 89 fb             	mov    %edi,%r11d
ffffffff804144a1:	4f 8d 1c 9b          	lea    (%r11,%r11,4),%r11
ffffffff804144a5:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff804144a9:	4d 01 d8             	add    %r11,%r8
ffffffff804144ac:	45 31 db             	xor    %r11d,%r11d
ffffffff804144af:	4d 01 c0             	add    %r8,%r8
ffffffff804144b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804144b8:	66 47 0f be 2c 1a    	movsbw (%r10,%r11,1),%r13w
ffffffff804144be:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff804144c4:	66 47 89 ac 58 70 e0 	mov    %r13w,-0x7fbe1f90(%r8,%r11,2)
ffffffff804144cb:	41 80 
ffffffff804144cd:	4d 89 dd             	mov    %r11,%r13
ffffffff804144d0:	49 83 c3 01          	add    $0x1,%r11
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804144d4:	4d 39 e5             	cmp    %r12,%r13
ffffffff804144d7:	75 df                	jne    ffffffff804144b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x148>
    if (current_col_ == num_cols_) {
ffffffff804144d9:	44 39 ca             	cmp    %r9d,%edx
ffffffff804144dc:	0f 84 7e 06 00 00    	je     ffffffff80414b60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7f0>
    current_col_ = i;
ffffffff804144e2:	89 15 84 9b 00 00    	mov    %edx,0x9b84(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804144e8:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff804144eb:	0f 84 8d 06 00 00    	je     ffffffff80414b7e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x80e>
ffffffff804144f1:	85 d2                	test   %edx,%edx
ffffffff804144f3:	74 09                	je     ffffffff804144fe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff804144f5:	83 ff 18             	cmp    $0x18,%edi
ffffffff804144f8:	0f 86 e2 06 00 00    	jbe    ffffffff80414be0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x870>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804144fe:	83 c1 01             	add    $0x1,%ecx
ffffffff80414501:	39 f1                	cmp    %esi,%ecx
ffffffff80414503:	0f 46 f1             	cmovbe %ecx,%esi
    str_ += n;
ffffffff80414506:	89 f1                	mov    %esi,%ecx
    size_ -= min(n, size_);
ffffffff80414508:	41 89 d0             	mov    %edx,%r8d
    str_ += n;
ffffffff8041450b:	49 01 ca             	add    %rcx,%r10
    size_ -= min(n, size_);
ffffffff8041450e:	39 c6                	cmp    %eax,%esi
ffffffff80414510:	0f 47 f0             	cmova  %eax,%esi
ffffffff80414513:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80414515:	85 c0                	test   %eax,%eax
ffffffff80414517:	0f 85 13 ff ff ff    	jne    ffffffff80414430 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xc0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041451d:	85 ff                	test   %edi,%edi
ffffffff8041451f:	74 6a                	je     ffffffff8041458b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80414521:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414524:	44 8b 15 39 9b 00 00 	mov    0x9b39(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041452b:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80414532:	31 c9                	xor    %ecx,%ecx
ffffffff80414534:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80414538:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041453c:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80414542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80414548:	48 89 f5             	mov    %rsi,%rbp
ffffffff8041454b:	89 ca                	mov    %ecx,%edx
ffffffff8041454d:	46 8d 0c 11          	lea    (%rcx,%r10,1),%r9d
ffffffff80414551:	45 85 d2             	test   %r10d,%r10d
ffffffff80414554:	0f 84 66 06 00 00    	je     ffffffff80414bc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x850>
ffffffff8041455a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80414560:	44 0f b7 5d 00       	movzwl 0x0(%rbp),%r11d
ffffffff80414565:	89 d1                	mov    %edx,%ecx
ffffffff80414567:	83 c2 01             	add    $0x1,%edx
ffffffff8041456a:	48 83 c5 02          	add    $0x2,%rbp
ffffffff8041456e:	66 44 89 9c 09 00 80 	mov    %r11w,0xb8000(%rcx,%rcx,1)
ffffffff80414575:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414577:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041457a:	75 e4                	jne    ffffffff80414560 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1f0>
ffffffff8041457c:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80414583:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414586:	48 39 f0             	cmp    %rsi,%rax
ffffffff80414589:	75 bd                	jne    ffffffff80414548 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
    if (current_col_ != 0) {
ffffffff8041458b:	45 85 c0             	test   %r8d,%r8d
ffffffff8041458e:	74 38                	je     ffffffff804145c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414590:	8b 35 ce 9a 00 00    	mov    0x9ace(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80414596:	85 f6                	test   %esi,%esi
ffffffff80414598:	74 2e                	je     ffffffff804145c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8041459a:	89 fa                	mov    %edi,%edx
ffffffff8041459c:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff804145a0:	0f af d6             	imul   %esi,%edx
ffffffff804145a3:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804145a7:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff804145ad:	01 d6                	add    %edx,%esi
ffffffff804145af:	90                   	nop
ffffffff804145b0:	0f b7 08             	movzwl (%rax),%ecx
ffffffff804145b3:	89 d7                	mov    %edx,%edi
ffffffff804145b5:	83 c2 01             	add    $0x1,%edx
ffffffff804145b8:	48 83 c0 02          	add    $0x2,%rax
ffffffff804145bc:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff804145c3:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804145c4:	39 f2                	cmp    %esi,%edx
ffffffff804145c6:	75 e8                	jne    ffffffff804145b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804145c8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff804145cd:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff804145d0:	48 89 da             	mov    %rbx,%rdx
    num_len++;
ffffffff804145d3:	89 c6                	mov    %eax,%esi
    buffer[i] = num % base;
ffffffff804145d5:	83 e2 0f             	and    $0xf,%edx
ffffffff804145d8:	88 54 04 4b          	mov    %dl,0x4b(%rsp,%rax,1)
ffffffff804145dc:	48 89 da             	mov    %rbx,%rdx
    num /= base;
ffffffff804145df:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff804145e3:	48 83 fa 0f          	cmp    $0xf,%rdx
ffffffff804145e7:	76 0f                	jbe    ffffffff804145f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
ffffffff804145e9:	48 83 c0 01          	add    $0x1,%rax
  for (size_t i = 0; i < size; i++) {
ffffffff804145ed:	48 83 f8 15          	cmp    $0x15,%rax
ffffffff804145f1:	75 dd                	jne    ffffffff804145d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x260>
ffffffff804145f3:	be 14 00 00 00       	mov    $0x14,%esi
  if (num != 0) {
ffffffff804145f8:	48 85 db             	test   %rbx,%rbx
ffffffff804145fb:	0f 85 2f 09 00 00    	jne    ffffffff80414f30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xbc0>
ffffffff80414601:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
ffffffff80414606:	89 f7                	mov    %esi,%edi
    str[offset++] = '0';
ffffffff80414608:	66 c7 44 24 38 30 78 	movw   $0x7830,0x38(%rsp)
ffffffff8041460f:	48 01 df             	add    %rbx,%rdi
ffffffff80414612:	48 89 da             	mov    %rbx,%rdx
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80414615:	8d 4c 1e ff          	lea    -0x1(%rsi,%rbx,1),%ecx
ffffffff80414619:	eb 14                	jmp    ffffffff8041462f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff8041461b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80414620:	83 c0 37             	add    $0x37,%eax
ffffffff80414623:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414627:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8041462a:	48 39 d7             	cmp    %rdx,%rdi
ffffffff8041462d:	74 1c                	je     ffffffff8041464b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x2db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8041462f:	89 c8                	mov    %ecx,%eax
ffffffff80414631:	29 d0                	sub    %edx,%eax
ffffffff80414633:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff80414638:	3c 09                	cmp    $0x9,%al
ffffffff8041463a:	7f e4                	jg     ffffffff80414620 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8041463c:	83 c0 30             	add    $0x30,%eax
ffffffff8041463f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80414643:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80414646:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80414649:	75 e4                	jne    ffffffff8041462f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
  str[num_len + offset] = 0;
ffffffff8041464b:	8d 46 02             	lea    0x2(%rsi),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041464e:	48 89 df             	mov    %rbx,%rdi
ffffffff80414651:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff80414656:	e8 65 8b ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8041465b:	85 c0                	test   %eax,%eax
ffffffff8041465d:	0f 84 e9 08 00 00    	je     ffffffff80414f4c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xbdc>
ffffffff80414663:	44 8b 25 f6 99 00 00 	mov    0x99f6(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041466a:	44 8b 0d f3 99 00 00 	mov    0x99f3(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80414671:	49 89 d8             	mov    %rbx,%r8
ffffffff80414674:	8b 2d f2 99 00 00    	mov    0x99f2(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041467a:	8b 0d e8 99 00 00    	mov    0x99e8(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414680:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80414685:	45 8d 69 ff          	lea    -0x1(%r9),%r13d
ffffffff80414689:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041468d:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80414692:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80414696:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff8041469d:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff804146a2:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804146a6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff804146ab:	48 89 d6             	mov    %rdx,%rsi
ffffffff804146ae:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804146b2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804146b6:	4c 01 ea             	add    %r13,%rdx
ffffffff804146b9:	48 8d be 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rdi
ffffffff804146c0:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff804146c5:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff804146cc:	80 
ffffffff804146cd:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff804146d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804146d8:	44 89 ce             	mov    %r9d,%esi
ffffffff804146db:	89 c2                	mov    %eax,%edx
ffffffff804146dd:	29 ee                	sub    %ebp,%esi
ffffffff804146df:	39 c6                	cmp    %eax,%esi
ffffffff804146e1:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff804146e4:	39 c6                	cmp    %eax,%esi
ffffffff804146e6:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff804146e9:	85 d2                	test   %edx,%edx
ffffffff804146eb:	0f 84 07 07 00 00    	je     ffffffff80414df8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff804146f1:	83 ea 01             	sub    $0x1,%edx
ffffffff804146f4:	31 db                	xor    %ebx,%ebx
ffffffff804146f6:	eb 18                	jmp    ffffffff80414710 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a0>
ffffffff804146f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804146ff:	00 
ffffffff80414700:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80414704:	48 39 da             	cmp    %rbx,%rdx
ffffffff80414707:	0f 84 eb 06 00 00    	je     ffffffff80414df8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff8041470d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80414710:	41 80 3c 18 0a       	cmpb   $0xa,(%r8,%rbx,1)
ffffffff80414715:	89 df                	mov    %ebx,%edi
ffffffff80414717:	75 e7                	jne    ffffffff80414700 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x390>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80414719:	39 f8                	cmp    %edi,%eax
ffffffff8041471b:	89 fa                	mov    %edi,%edx
ffffffff8041471d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80414720:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80414723:	0f 84 37 06 00 00    	je     ffffffff80414d60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414729:	01 ea                	add    %ebp,%edx
ffffffff8041472b:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041472e:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80414732:	39 ea                	cmp    %ebp,%edx
ffffffff80414734:	0f 86 b1 06 00 00    	jbe    ffffffff80414deb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa7b>
ffffffff8041473a:	41 89 ea             	mov    %ebp,%r10d
ffffffff8041473d:	41 f7 d2             	not    %r10d
ffffffff80414740:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80414744:	41 89 ca             	mov    %ecx,%r10d
ffffffff80414747:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff8041474b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff8041474f:	4c 01 d5             	add    %r10,%rbp
ffffffff80414752:	45 31 d2             	xor    %r10d,%r10d
ffffffff80414755:	48 01 ed             	add    %rbp,%rbp
ffffffff80414758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041475f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80414760:	66 47 0f be 34 10    	movsbw (%r8,%r10,1),%r14w
ffffffff80414766:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8041476c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80414773:	41 80 
ffffffff80414775:	4d 89 d6             	mov    %r10,%r14
ffffffff80414778:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041477c:	4d 39 de             	cmp    %r11,%r14
ffffffff8041477f:	75 df                	jne    ffffffff80414760 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3f0>
    if (current_col_ == num_cols_) {
ffffffff80414781:	41 39 d1             	cmp    %edx,%r9d
ffffffff80414784:	0f 84 ae 05 00 00    	je     ffffffff80414d38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c8>
    current_col_ = i;
ffffffff8041478a:	89 15 dc 98 00 00    	mov    %edx,0x98dc(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414790:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80414793:	0f 84 bd 05 00 00    	je     ffffffff80414d56 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9e6>
ffffffff80414799:	85 d2                	test   %edx,%edx
ffffffff8041479b:	74 09                	je     ffffffff804147a6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff8041479d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff804147a0:	0f 86 2a 07 00 00    	jbe    ffffffff80414ed0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804147a6:	83 c7 01             	add    $0x1,%edi
ffffffff804147a9:	39 f7                	cmp    %esi,%edi
ffffffff804147ab:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff804147ae:	89 f7                	mov    %esi,%edi
    size_ -= min(n, size_);
ffffffff804147b0:	89 d5                	mov    %edx,%ebp
    str_ += n;
ffffffff804147b2:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff804147b5:	39 f0                	cmp    %esi,%eax
ffffffff804147b7:	0f 46 f0             	cmovbe %eax,%esi
ffffffff804147ba:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff804147bc:	85 c0                	test   %eax,%eax
ffffffff804147be:	0f 85 14 ff ff ff    	jne    ffffffff804146d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x368>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804147c4:	85 c9                	test   %ecx,%ecx
ffffffff804147c6:	74 6a                	je     ffffffff80414832 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff804147c8:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804147cb:	44 8b 0d 92 98 00 00 	mov    0x9892(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804147d2:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff804147d9:	31 ff                	xor    %edi,%edi
ffffffff804147db:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff804147df:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804147e3:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff804147e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff804147f0:	48 89 f3             	mov    %rsi,%rbx
ffffffff804147f3:	89 fa                	mov    %edi,%edx
ffffffff804147f5:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff804147f9:	45 85 c9             	test   %r9d,%r9d
ffffffff804147fc:	0f 84 2e 06 00 00    	je     ffffffff80414e30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xac0>
ffffffff80414802:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80414808:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff8041480c:	89 d7                	mov    %edx,%edi
ffffffff8041480e:	83 c2 01             	add    $0x1,%edx
ffffffff80414811:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80414815:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff8041481c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041481e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80414821:	75 e5                	jne    ffffffff80414808 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x498>
ffffffff80414823:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041482a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041482d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80414830:	75 be                	jne    ffffffff804147f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
    if (current_col_ != 0) {
ffffffff80414832:	85 ed                	test   %ebp,%ebp
ffffffff80414834:	74 3a                	je     ffffffff80414870 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414836:	8b 35 28 98 00 00    	mov    0x9828(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041483c:	85 f6                	test   %esi,%esi
ffffffff8041483e:	74 30                	je     ffffffff80414870 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80414840:	89 f2                	mov    %esi,%edx
ffffffff80414842:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80414846:	0f af d1             	imul   %ecx,%edx
ffffffff80414849:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041484d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80414853:	01 d6                	add    %edx,%esi
ffffffff80414855:	0f 1f 00             	nopl   (%rax)
ffffffff80414858:	0f b7 08             	movzwl (%rax),%ecx
ffffffff8041485b:	89 d7                	mov    %edx,%edi
ffffffff8041485d:	83 c2 01             	add    $0x1,%edx
ffffffff80414860:	48 83 c0 02          	add    $0x2,%rax
ffffffff80414864:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff8041486b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041486c:	39 d6                	cmp    %edx,%esi
ffffffff8041486e:	75 e8                	jne    ffffffff80414858 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x4e8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80414870:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80414877:	e8 44 89 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8041487c:	85 c0                	test   %eax,%eax
ffffffff8041487e:	0f 84 f4 06 00 00    	je     ffffffff80414f78 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xc08>
ffffffff80414884:	44 8b 25 d5 97 00 00 	mov    0x97d5(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041488b:	44 8b 05 d2 97 00 00 	mov    0x97d2(%rip),%r8d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80414892:	49 c7 c1 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r9
ffffffff80414899:	8b 2d cd 97 00 00    	mov    0x97cd(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041489f:	8b 0d c3 97 00 00    	mov    0x97c3(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804148a5:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff804148aa:	45 8d 68 ff          	lea    -0x1(%r8),%r13d
ffffffff804148ae:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804148b2:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff804148b7:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff804148bb:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff804148c2:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff804148c7:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804148cb:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff804148d0:	48 89 d6             	mov    %rdx,%rsi
ffffffff804148d3:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804148d7:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804148db:	4c 01 ea             	add    %r13,%rdx
ffffffff804148de:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff804148e5:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff804148ea:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff804148f1:	80 
ffffffff804148f2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff804148f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804148fe:	00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80414900:	44 89 c6             	mov    %r8d,%esi
ffffffff80414903:	89 c2                	mov    %eax,%edx
ffffffff80414905:	29 ee                	sub    %ebp,%esi
ffffffff80414907:	39 c6                	cmp    %eax,%esi
ffffffff80414909:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041490c:	39 c6                	cmp    %eax,%esi
ffffffff8041490e:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80414911:	85 d2                	test   %edx,%edx
ffffffff80414913:	0f 84 ff 03 00 00    	je     ffffffff80414d18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff80414919:	83 ea 01             	sub    $0x1,%edx
ffffffff8041491c:	31 db                	xor    %ebx,%ebx
ffffffff8041491e:	eb 10                	jmp    ffffffff80414930 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c0>
ffffffff80414920:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80414924:	48 39 da             	cmp    %rbx,%rdx
ffffffff80414927:	0f 84 eb 03 00 00    	je     ffffffff80414d18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff8041492d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80414930:	41 80 3c 19 0a       	cmpb   $0xa,(%r9,%rbx,1)
ffffffff80414935:	89 df                	mov    %ebx,%edi
ffffffff80414937:	75 e7                	jne    ffffffff80414920 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80414939:	39 f8                	cmp    %edi,%eax
ffffffff8041493b:	89 fa                	mov    %edi,%edx
ffffffff8041493d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80414940:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80414943:	0f 84 37 03 00 00    	je     ffffffff80414c80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414949:	01 ea                	add    %ebp,%edx
ffffffff8041494b:	44 39 c2             	cmp    %r8d,%edx
ffffffff8041494e:	41 0f 47 d0          	cmova  %r8d,%edx
ffffffff80414952:	39 ea                	cmp    %ebp,%edx
ffffffff80414954:	0f 86 b1 03 00 00    	jbe    ffffffff80414d0b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x99b>
ffffffff8041495a:	41 89 ea             	mov    %ebp,%r10d
ffffffff8041495d:	41 f7 d2             	not    %r10d
ffffffff80414960:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80414964:	41 89 ca             	mov    %ecx,%r10d
ffffffff80414967:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff8041496b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff8041496f:	4c 01 d5             	add    %r10,%rbp
ffffffff80414972:	45 31 d2             	xor    %r10d,%r10d
ffffffff80414975:	48 01 ed             	add    %rbp,%rbp
ffffffff80414978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041497f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80414980:	66 47 0f be 34 11    	movsbw (%r9,%r10,1),%r14w
ffffffff80414986:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8041498c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80414993:	41 80 
ffffffff80414995:	4d 89 d6             	mov    %r10,%r14
ffffffff80414998:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041499c:	4d 39 f3             	cmp    %r14,%r11
ffffffff8041499f:	75 df                	jne    ffffffff80414980 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x610>
    if (current_col_ == num_cols_) {
ffffffff804149a1:	41 39 d0             	cmp    %edx,%r8d
ffffffff804149a4:	0f 84 a6 02 00 00    	je     ffffffff80414c50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8e0>
    current_col_ = i;
ffffffff804149aa:	89 15 bc 96 00 00    	mov    %edx,0x96bc(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804149b0:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804149b3:	0f 84 b5 02 00 00    	je     ffffffff80414c6e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8fe>
ffffffff804149b9:	85 d2                	test   %edx,%edx
ffffffff804149bb:	74 09                	je     ffffffff804149c6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff804149bd:	83 f9 18             	cmp    $0x18,%ecx
ffffffff804149c0:	0f 86 aa 04 00 00    	jbe    ffffffff80414e70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb00>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804149c6:	83 c7 01             	add    $0x1,%edi
ffffffff804149c9:	39 f7                	cmp    %esi,%edi
ffffffff804149cb:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff804149ce:	89 f7                	mov    %esi,%edi
ffffffff804149d0:	89 d5                	mov    %edx,%ebp
ffffffff804149d2:	49 01 f9             	add    %rdi,%r9
    size_ -= min(n, size_);
ffffffff804149d5:	39 c6                	cmp    %eax,%esi
ffffffff804149d7:	0f 47 f0             	cmova  %eax,%esi
ffffffff804149da:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff804149dc:	85 c0                	test   %eax,%eax
ffffffff804149de:	0f 85 1c ff ff ff    	jne    ffffffff80414900 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804149e4:	85 c9                	test   %ecx,%ecx
ffffffff804149e6:	74 6a                	je     ffffffff80414a52 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff804149e8:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804149eb:	44 8b 0d 72 96 00 00 	mov    0x9672(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804149f2:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff804149f9:	31 ff                	xor    %edi,%edi
ffffffff804149fb:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff804149ff:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80414a03:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80414a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80414a10:	48 89 f3             	mov    %rsi,%rbx
ffffffff80414a13:	89 fa                	mov    %edi,%edx
ffffffff80414a15:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80414a19:	45 85 c9             	test   %r9d,%r9d
ffffffff80414a1c:	0f 84 2e 04 00 00    	je     ffffffff80414e50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xae0>
ffffffff80414a22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80414a28:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff80414a2c:	89 d7                	mov    %edx,%edi
ffffffff80414a2e:	83 c2 01             	add    $0x1,%edx
ffffffff80414a31:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80414a35:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff80414a3c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414a3e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80414a41:	75 e5                	jne    ffffffff80414a28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6b8>
ffffffff80414a43:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80414a4a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414a4d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80414a50:	75 be                	jne    ffffffff80414a10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
    if (current_col_ != 0) {
ffffffff80414a52:	85 ed                	test   %ebp,%ebp
ffffffff80414a54:	74 3a                	je     ffffffff80414a90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414a56:	8b 35 08 96 00 00    	mov    0x9608(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80414a5c:	85 f6                	test   %esi,%esi
ffffffff80414a5e:	74 30                	je     ffffffff80414a90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80414a60:	89 f2                	mov    %esi,%edx
ffffffff80414a62:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80414a66:	0f af d1             	imul   %ecx,%edx
ffffffff80414a69:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80414a6d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80414a73:	01 d6                	add    %edx,%esi
ffffffff80414a75:	0f 1f 00             	nopl   (%rax)
ffffffff80414a78:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80414a7b:	89 d7                	mov    %edx,%edi
ffffffff80414a7d:	83 c2 01             	add    $0x1,%edx
ffffffff80414a80:	48 83 c0 02          	add    $0x2,%rax
ffffffff80414a84:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80414a8b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414a8c:	39 d6                	cmp    %edx,%esi
ffffffff80414a8e:	75 e8                	jne    ffffffff80414a78 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x708>
}
ffffffff80414a90:	48 83 c4 68          	add    $0x68,%rsp
ffffffff80414a94:	58                   	pop    %rax
ffffffff80414a95:	5a                   	pop    %rdx
ffffffff80414a96:	59                   	pop    %rcx
ffffffff80414a97:	5b                   	pop    %rbx
ffffffff80414a98:	5e                   	pop    %rsi
ffffffff80414a99:	5f                   	pop    %rdi
ffffffff80414a9a:	5d                   	pop    %rbp
ffffffff80414a9b:	41 58                	pop    %r8
ffffffff80414a9d:	41 59                	pop    %r9
ffffffff80414a9f:	41 5a                	pop    %r10
ffffffff80414aa1:	41 5b                	pop    %r11
ffffffff80414aa3:	41 5c                	pop    %r12
ffffffff80414aa5:	41 5d                	pop    %r13
ffffffff80414aa7:	41 5e                	pop    %r14
ffffffff80414aa9:	41 5f                	pop    %r15
ffffffff80414aab:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80414aaf:	48 cf                	iretq  
ffffffff80414ab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414ab8:	83 ff 01             	cmp    $0x1,%edi
ffffffff80414abb:	76 53                	jbe    ffffffff80414b10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a0>
ffffffff80414abd:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80414ac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414ac8:	45 31 e4             	xor    %r12d,%r12d
ffffffff80414acb:	4d 8d ab 60 ff ff ff 	lea    -0xa0(%r11),%r13
ffffffff80414ad2:	45 85 c9             	test   %r9d,%r9d
ffffffff80414ad5:	74 2b                	je     ffffffff80414b02 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x792>
ffffffff80414ad7:	89 44 24 08          	mov    %eax,0x8(%rsp)
ffffffff80414adb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80414ae0:	43 0f b7 84 63 70 e0 	movzwl -0x7fbe1f90(%r11,%r12,2),%eax
ffffffff80414ae7:	41 80 
ffffffff80414ae9:	66 43 89 84 65 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%r12,2)
ffffffff80414af0:	41 80 
ffffffff80414af2:	4c 89 e0             	mov    %r12,%rax
ffffffff80414af5:	49 83 c4 01          	add    $0x1,%r12
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414af9:	49 39 c7             	cmp    %rax,%r15
ffffffff80414afc:	75 e2                	jne    ffffffff80414ae0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80414afe:	8b 44 24 08          	mov    0x8(%rsp),%eax
ffffffff80414b02:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414b09:	4c 3b 5c 24 20       	cmp    0x20(%rsp),%r11
ffffffff80414b0e:	75 b8                	jne    ffffffff80414ac8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414b10:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80414b15:	45 85 c9             	test   %r9d,%r9d
ffffffff80414b18:	74 17                	je     ffffffff80414b31 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c1>
ffffffff80414b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80414b20:	66 41 c7 03 00 00    	movw   $0x0,(%r11)
ffffffff80414b26:	49 83 c3 02          	add    $0x2,%r11
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414b2a:	4c 3b 5c 24 18       	cmp    0x18(%rsp),%r11
ffffffff80414b2f:	75 ef                	jne    ffffffff80414b20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414b31:	44 01 c2             	add    %r8d,%edx
      current_row_--;
ffffffff80414b34:	83 ef 01             	sub    $0x1,%edi
ffffffff80414b37:	44 39 ca             	cmp    %r9d,%edx
ffffffff80414b3a:	89 3d 28 95 00 00    	mov    %edi,0x9528(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414b40:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414b44:	41 39 d0             	cmp    %edx,%r8d
ffffffff80414b47:	0f 82 47 f9 ff ff    	jb     ffffffff80414494 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x124>
ffffffff80414b4d:	44 89 c2             	mov    %r8d,%edx
    if (current_col_ == num_cols_) {
ffffffff80414b50:	44 39 ca             	cmp    %r9d,%edx
ffffffff80414b53:	0f 85 89 f9 ff ff    	jne    ffffffff804144e2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x172>
ffffffff80414b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80414b60:	c7 05 02 95 00 00 00 	movl   $0x0,0x9502(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414b67:	00 00 00 
      current_row_++;
ffffffff80414b6a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414b6d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80414b6f:	89 3d f3 94 00 00    	mov    %edi,0x94f3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414b75:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80414b78:	0f 85 80 f9 ff ff    	jne    ffffffff804144fe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80414b7e:	39 ce                	cmp    %ecx,%esi
ffffffff80414b80:	0f 47 f1             	cmova  %ecx,%esi
ffffffff80414b83:	e9 7e f9 ff ff       	jmpq   ffffffff80414506 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x196>
ffffffff80414b88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80414b8f:	00 
    if (count == npos) {
ffffffff80414b90:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80414b93:	75 1b                	jne    ffffffff80414bb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x840>
ffffffff80414b95:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80414b9a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff80414b9f:	89 c2                	mov    %eax,%edx
ffffffff80414ba1:	e9 d2 f8 ff ff       	jmpq   ffffffff80414478 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x108>
ffffffff80414ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80414bad:	00 00 00 
ffffffff80414bb0:	89 f1                	mov    %esi,%ecx
ffffffff80414bb2:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80414bb7:	e9 b5 f8 ff ff       	jmpq   ffffffff80414471 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x101>
ffffffff80414bbc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414bc0:	41 89 c9             	mov    %ecx,%r9d
ffffffff80414bc3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80414bca:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414bcd:	48 39 f0             	cmp    %rsi,%rax
ffffffff80414bd0:	0f 85 72 f9 ff ff    	jne    ffffffff80414548 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
ffffffff80414bd6:	e9 b0 f9 ff ff       	jmpq   ffffffff8041458b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80414bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414be0:	44 39 ca             	cmp    %r9d,%edx
ffffffff80414be3:	73 4a                	jae    ffffffff80414c2f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8bf>
ffffffff80414be5:	89 fd                	mov    %edi,%ebp
ffffffff80414be7:	41 89 d3             	mov    %edx,%r11d
ffffffff80414bea:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
ffffffff80414bef:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80414bf3:	4d 8d 44 2b 08       	lea    0x8(%r11,%rbp,1),%r8
ffffffff80414bf8:	4c 01 dd             	add    %r11,%rbp
ffffffff80414bfb:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
ffffffff80414c00:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80414c07:	80 
ffffffff80414c08:	41 29 d3             	sub    %edx,%r11d
ffffffff80414c0b:	4c 01 dd             	add    %r11,%rbp
ffffffff80414c0e:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80414c15:	80 
ffffffff80414c16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80414c1d:	00 00 00 
          text_buffer_[current_row_][i] = 0;
ffffffff80414c20:	66 41 c7 00 00 00    	movw   $0x0,(%r8)
ffffffff80414c26:	49 83 c0 02          	add    $0x2,%r8
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414c2a:	49 39 d0             	cmp    %rdx,%r8
ffffffff80414c2d:	75 f1                	jne    ffffffff80414c20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b0>
        current_col_ = 0;
ffffffff80414c2f:	c7 05 33 94 00 00 00 	movl   $0x0,0x9433(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414c36:	00 00 00 
        current_row_++;
ffffffff80414c39:	83 c7 01             	add    $0x1,%edi
ffffffff80414c3c:	31 d2                	xor    %edx,%edx
ffffffff80414c3e:	89 3d 24 94 00 00    	mov    %edi,0x9424(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414c44:	e9 b5 f8 ff ff       	jmpq   ffffffff804144fe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80414c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80414c50:	c7 05 12 94 00 00 00 	movl   $0x0,0x9412(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414c57:	00 00 00 
      current_row_++;
ffffffff80414c5a:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414c5d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80414c5f:	89 0d 03 94 00 00    	mov    %ecx,0x9403(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414c65:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80414c68:	0f 85 58 fd ff ff    	jne    ffffffff804149c6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff80414c6e:	39 fe                	cmp    %edi,%esi
ffffffff80414c70:	0f 47 f7             	cmova  %edi,%esi
  constexpr void remove_prefix(size_t n) {
ffffffff80414c73:	e9 56 fd ff ff       	jmpq   ffffffff804149ce <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x65e>
ffffffff80414c78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80414c7f:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414c80:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80414c84:	76 46                	jbe    ffffffff80414ccc <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x95c>
ffffffff80414c86:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff80414c8c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414c90:	45 31 db             	xor    %r11d,%r11d
ffffffff80414c93:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff80414c9a:	45 85 c0             	test   %r8d,%r8d
ffffffff80414c9d:	74 1f                	je     ffffffff80414cbe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x94e>
ffffffff80414c9f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80414ca0:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80414ca7:	41 80 
ffffffff80414ca9:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80414cb0:	41 80 
ffffffff80414cb2:	4d 89 df             	mov    %r11,%r15
ffffffff80414cb5:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414cb9:	4d 39 ef             	cmp    %r13,%r15
ffffffff80414cbc:	75 e2                	jne    ffffffff80414ca0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x930>
ffffffff80414cbe:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414cc5:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff80414cca:	75 c4                	jne    ffffffff80414c90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414ccc:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80414cd1:	45 85 c0             	test   %r8d,%r8d
ffffffff80414cd4:	74 1b                	je     ffffffff80414cf1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x981>
ffffffff80414cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80414cdd:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80414ce0:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80414ce6:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414cea:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff80414cef:	75 ef                	jne    ffffffff80414ce0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x970>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414cf1:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80414cf3:	83 e9 01             	sub    $0x1,%ecx
ffffffff80414cf6:	44 39 c2             	cmp    %r8d,%edx
ffffffff80414cf9:	89 0d 69 93 00 00    	mov    %ecx,0x9369(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414cff:	41 0f 47 d0          	cmova  %r8d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414d03:	39 ea                	cmp    %ebp,%edx
ffffffff80414d05:	0f 87 4f fc ff ff    	ja     ffffffff8041495a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5ea>
ffffffff80414d0b:	89 ea                	mov    %ebp,%edx
ffffffff80414d0d:	e9 8f fc ff ff       	jmpq   ffffffff804149a1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x631>
ffffffff80414d12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (count == npos) {
ffffffff80414d18:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80414d1b:	0f 85 ef 00 00 00    	jne    ffffffff80414e10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
ffffffff80414d21:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80414d26:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff80414d2b:	89 c2                	mov    %eax,%edx
ffffffff80414d2d:	e9 0e fc ff ff       	jmpq   ffffffff80414940 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5d0>
ffffffff80414d32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80414d38:	c7 05 2a 93 00 00 00 	movl   $0x0,0x932a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414d3f:	00 00 00 
      current_row_++;
ffffffff80414d42:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414d45:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80414d47:	89 0d 1b 93 00 00    	mov    %ecx,0x931b(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80414d4d:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80414d50:	0f 85 50 fa ff ff    	jne    ffffffff804147a6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80414d56:	39 fe                	cmp    %edi,%esi
ffffffff80414d58:	0f 47 f7             	cmova  %edi,%esi
ffffffff80414d5b:	e9 4e fa ff ff       	jmpq   ffffffff804147ae <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x43e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414d60:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80414d64:	76 46                	jbe    ffffffff80414dac <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa3c>
ffffffff80414d66:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff80414d6c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414d70:	45 31 db             	xor    %r11d,%r11d
ffffffff80414d73:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff80414d7a:	45 85 c9             	test   %r9d,%r9d
ffffffff80414d7d:	74 1f                	je     ffffffff80414d9e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa2e>
ffffffff80414d7f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80414d80:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80414d87:	41 80 
ffffffff80414d89:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80414d90:	41 80 
ffffffff80414d92:	4d 89 df             	mov    %r11,%r15
ffffffff80414d95:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80414d99:	4d 39 ef             	cmp    %r13,%r15
ffffffff80414d9c:	75 e2                	jne    ffffffff80414d80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff80414d9e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80414da5:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff80414daa:	75 c4                	jne    ffffffff80414d70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa00>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414dac:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
ffffffff80414db1:	45 85 c9             	test   %r9d,%r9d
ffffffff80414db4:	74 1b                	je     ffffffff80414dd1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa61>
ffffffff80414db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80414dbd:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80414dc0:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80414dc6:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80414dca:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
ffffffff80414dcf:	75 ef                	jne    ffffffff80414dc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xa50>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414dd1:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80414dd3:	83 e9 01             	sub    $0x1,%ecx
ffffffff80414dd6:	44 39 ca             	cmp    %r9d,%edx
ffffffff80414dd9:	89 0d 89 92 00 00    	mov    %ecx,0x9289(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414ddf:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80414de3:	39 ea                	cmp    %ebp,%edx
ffffffff80414de5:	0f 87 4f f9 ff ff    	ja     ffffffff8041473a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3ca>
ffffffff80414deb:	89 ea                	mov    %ebp,%edx
ffffffff80414ded:	e9 8f f9 ff ff       	jmpq   ffffffff80414781 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x411>
ffffffff80414df2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80414df8:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80414dfb:	75 23                	jne    ffffffff80414e20 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xab0>
ffffffff80414dfd:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80414e02:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff80414e07:	89 c2                	mov    %eax,%edx
ffffffff80414e09:	e9 12 f9 ff ff       	jmpq   ffffffff80414720 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b0>
ffffffff80414e0e:	66 90                	xchg   %ax,%ax
ffffffff80414e10:	89 f7                	mov    %esi,%edi
ffffffff80414e12:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80414e17:	e9 1d fb ff ff       	jmpq   ffffffff80414939 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c9>
ffffffff80414e1c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414e20:	89 f7                	mov    %esi,%edi
ffffffff80414e22:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80414e27:	e9 ed f8 ff ff       	jmpq   ffffffff80414719 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a9>
ffffffff80414e2c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80414e30:	41 89 f8             	mov    %edi,%r8d
ffffffff80414e33:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80414e3a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80414e3d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80414e40:	0f 85 aa f9 ff ff    	jne    ffffffff804147f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
ffffffff80414e46:	e9 e7 f9 ff ff       	jmpq   ffffffff80414832 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff80414e4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80414e50:	41 89 f8             	mov    %edi,%r8d
ffffffff80414e53:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80414e5a:	44 89 c7             	mov    %r8d,%edi
ffffffff80414e5d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80414e60:	0f 85 aa fb ff ff    	jne    ffffffff80414a10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
ffffffff80414e66:	e9 e7 fb ff ff       	jmpq   ffffffff80414a52 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80414e6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414e70:	41 39 d0             	cmp    %edx,%r8d
ffffffff80414e73:	76 41                	jbe    ffffffff80414eb6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb46>
ffffffff80414e75:	89 cb                	mov    %ecx,%ebx
ffffffff80414e77:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff80414e7c:	41 89 d2             	mov    %edx,%r10d
ffffffff80414e7f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80414e83:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80414e87:	41 29 d7             	sub    %edx,%r15d
ffffffff80414e8a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff80414e8f:	4c 01 d5             	add    %r10,%rbp
ffffffff80414e92:	4c 01 fd             	add    %r15,%rbp
ffffffff80414e95:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80414e9c:	80 
ffffffff80414e9d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80414ea4:	80 
ffffffff80414ea5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80414ea8:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff80414ead:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414eb1:	48 39 da             	cmp    %rbx,%rdx
ffffffff80414eb4:	75 f2                	jne    ffffffff80414ea8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb38>
        current_col_ = 0;
ffffffff80414eb6:	c7 05 ac 91 00 00 00 	movl   $0x0,0x91ac(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414ebd:	00 00 00 
        current_row_++;
ffffffff80414ec0:	83 c1 01             	add    $0x1,%ecx
ffffffff80414ec3:	31 d2                	xor    %edx,%edx
ffffffff80414ec5:	89 0d 9d 91 00 00    	mov    %ecx,0x919d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414ecb:	e9 f6 fa ff ff       	jmpq   ffffffff804149c6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414ed0:	41 39 d1             	cmp    %edx,%r9d
ffffffff80414ed3:	76 41                	jbe    ffffffff80414f16 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xba6>
ffffffff80414ed5:	89 cb                	mov    %ecx,%ebx
ffffffff80414ed7:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff80414edc:	41 89 d2             	mov    %edx,%r10d
ffffffff80414edf:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80414ee3:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80414ee7:	41 29 d7             	sub    %edx,%r15d
ffffffff80414eea:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff80414eef:	4c 01 d5             	add    %r10,%rbp
ffffffff80414ef2:	4c 01 fd             	add    %r15,%rbp
ffffffff80414ef5:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80414efc:	80 
ffffffff80414efd:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80414f04:	80 
ffffffff80414f05:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80414f08:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff80414f0d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80414f11:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80414f14:	75 f2                	jne    ffffffff80414f08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0xb98>
        current_col_ = 0;
ffffffff80414f16:	c7 05 4c 91 00 00 00 	movl   $0x0,0x914c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414f1d:	00 00 00 
        current_row_++;
ffffffff80414f20:	83 c1 01             	add    $0x1,%ecx
ffffffff80414f23:	31 d2                	xor    %edx,%edx
ffffffff80414f25:	89 0d 3d 91 00 00    	mov    %ecx,0x913d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414f2b:	e9 76 f8 ff ff       	jmpq   ffffffff804147a6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80414f30:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
    str[0] = 'E';
ffffffff80414f35:	66 c7 44 24 38 45 00 	movw   $0x45,0x38(%rsp)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80414f3c:	48 89 df             	mov    %rbx,%rdi
ffffffff80414f3f:	e8 7c 82 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80414f44:	85 c0                	test   %eax,%eax
ffffffff80414f46:	0f 85 17 f7 ff ff    	jne    ffffffff80414663 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x2f3>
ffffffff80414f4c:	8b 2d 1a 91 00 00    	mov    0x911a(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414f52:	8b 0d 10 91 00 00    	mov    0x9110(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414f58:	e9 67 f8 ff ff       	jmpq   ffffffff804147c4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x454>
ffffffff80414f5d:	0f 1f 00             	nopl   (%rax)
ffffffff80414f60:	44 8b 05 05 91 00 00 	mov    0x9105(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414f67:	8b 3d fb 90 00 00    	mov    0x90fb(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414f6d:	e9 ab f5 ff ff       	jmpq   ffffffff8041451d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x1ad>
ffffffff80414f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80414f78:	8b 0d ea 90 00 00    	mov    0x90ea(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414f7e:	8b 2d e8 90 00 00    	mov    0x90e8(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414f84:	e9 5b fa ff ff       	jmpq   ffffffff804149e4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi12EEEvPNS_23CPUInterruptHandlerArgsEm+0x674>
ffffffff80414f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80414f90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414f90:	41 57                	push   %r15
ffffffff80414f92:	41 56                	push   %r14
ffffffff80414f94:	41 55                	push   %r13
ffffffff80414f96:	41 54                	push   %r12
ffffffff80414f98:	41 53                	push   %r11
ffffffff80414f9a:	41 52                	push   %r10
ffffffff80414f9c:	41 51                	push   %r9
ffffffff80414f9e:	41 50                	push   %r8
ffffffff80414fa0:	55                   	push   %rbp
ffffffff80414fa1:	57                   	push   %rdi
ffffffff80414fa2:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414fa3:	be 0d 00 00 00       	mov    $0xd,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80414fa8:	53                   	push   %rbx
ffffffff80414fa9:	51                   	push   %rcx
ffffffff80414faa:	52                   	push   %rdx
ffffffff80414fab:	50                   	push   %rax
ffffffff80414fac:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80414fb0:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
ffffffff80414fb7:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80414fb8:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
ffffffff80414fbf:	00 
ffffffff80414fc0:	fc                   	cld    
ffffffff80414fc1:	e8 0a 8d ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
ffffffff80414fc6:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff80414fcd:	e8 ee 81 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80414fd2:	85 c0                	test   %eax,%eax
ffffffff80414fd4:	0f 84 a6 0b 00 00    	je     ffffffff80415b80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xbf0>
ffffffff80414fda:	44 8b 2d 7f 90 00 00 	mov    0x907f(%rip),%r13d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80414fe1:	44 8b 0d 7c 90 00 00 	mov    0x907c(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80414fe8:	49 c7 c2 66 b8 41 80 	mov    $0xffffffff8041b866,%r10
ffffffff80414fef:	44 8b 05 76 90 00 00 	mov    0x9076(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80414ff6:	8b 3d 6c 90 00 00    	mov    0x906c(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80414ffc:	41 8d 55 fe          	lea    -0x2(%r13),%edx
ffffffff80415000:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
ffffffff80415004:	45 89 ee             	mov    %r13d,%r14d
ffffffff80415007:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041500b:	44 89 7c 24 2c       	mov    %r15d,0x2c(%rsp)
ffffffff80415010:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80415014:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
ffffffff8041501b:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff8041501f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80415023:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80415028:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041502b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041502f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80415033:	4c 01 fa             	add    %r15,%rdx
ffffffff80415036:	48 8d 8e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rcx
ffffffff8041503d:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80415042:	48 8d 8c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rcx
ffffffff80415049:	80 
ffffffff8041504a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8041504f:	90                   	nop
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80415050:	44 89 ce             	mov    %r9d,%esi
ffffffff80415053:	44 29 c6             	sub    %r8d,%esi
ffffffff80415056:	39 c6                	cmp    %eax,%esi
ffffffff80415058:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041505b:	39 f0                	cmp    %esi,%eax
ffffffff8041505d:	89 f2                	mov    %esi,%edx
ffffffff8041505f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80415062:	85 d2                	test   %edx,%edx
ffffffff80415064:	0f 84 46 07 00 00    	je     ffffffff804157b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff8041506a:	83 ea 01             	sub    $0x1,%edx
ffffffff8041506d:	31 ed                	xor    %ebp,%ebp
ffffffff8041506f:	eb 17                	jmp    ffffffff80415088 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xf8>
ffffffff80415071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80415078:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
ffffffff8041507c:	48 39 d5             	cmp    %rdx,%rbp
ffffffff8041507f:	0f 84 2b 07 00 00    	je     ffffffff804157b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80415085:	48 89 cd             	mov    %rcx,%rbp
      if (str_[i] == c) {
ffffffff80415088:	41 80 3c 2a 0a       	cmpb   $0xa,(%r10,%rbp,1)
ffffffff8041508d:	89 e9                	mov    %ebp,%ecx
ffffffff8041508f:	75 e7                	jne    ffffffff80415078 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xe8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415091:	39 c8                	cmp    %ecx,%eax
ffffffff80415093:	89 ca                	mov    %ecx,%edx
ffffffff80415095:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80415098:	44 39 f7             	cmp    %r14d,%edi
ffffffff8041509b:	0f 84 37 06 00 00    	je     ffffffff804156d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804150a1:	44 01 c2             	add    %r8d,%edx
ffffffff804150a4:	44 39 ca             	cmp    %r9d,%edx
ffffffff804150a7:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff804150ab:	41 39 d0             	cmp    %edx,%r8d
ffffffff804150ae:	0f 83 b9 06 00 00    	jae    ffffffff8041576d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7dd>
ffffffff804150b4:	45 89 c3             	mov    %r8d,%r11d
ffffffff804150b7:	41 f7 d3             	not    %r11d
ffffffff804150ba:	45 8d 24 13          	lea    (%r11,%rdx,1),%r12d
ffffffff804150be:	41 89 fb             	mov    %edi,%r11d
ffffffff804150c1:	4f 8d 1c 9b          	lea    (%r11,%r11,4),%r11
ffffffff804150c5:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff804150c9:	4d 01 d8             	add    %r11,%r8
ffffffff804150cc:	45 31 db             	xor    %r11d,%r11d
ffffffff804150cf:	4d 01 c0             	add    %r8,%r8
ffffffff804150d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804150d8:	66 47 0f be 2c 1a    	movsbw (%r10,%r11,1),%r13w
ffffffff804150de:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff804150e4:	66 47 89 ac 58 70 e0 	mov    %r13w,-0x7fbe1f90(%r8,%r11,2)
ffffffff804150eb:	41 80 
ffffffff804150ed:	4d 89 dd             	mov    %r11,%r13
ffffffff804150f0:	49 83 c3 01          	add    $0x1,%r11
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804150f4:	4d 39 e5             	cmp    %r12,%r13
ffffffff804150f7:	75 df                	jne    ffffffff804150d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x148>
    if (current_col_ == num_cols_) {
ffffffff804150f9:	44 39 ca             	cmp    %r9d,%edx
ffffffff804150fc:	0f 84 7e 06 00 00    	je     ffffffff80415780 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7f0>
    current_col_ = i;
ffffffff80415102:	89 15 64 8f 00 00    	mov    %edx,0x8f64(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415108:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff8041510b:	0f 84 8d 06 00 00    	je     ffffffff8041579e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x80e>
ffffffff80415111:	85 d2                	test   %edx,%edx
ffffffff80415113:	74 09                	je     ffffffff8041511e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80415115:	83 ff 18             	cmp    $0x18,%edi
ffffffff80415118:	0f 86 e2 06 00 00    	jbe    ffffffff80415800 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x870>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041511e:	83 c1 01             	add    $0x1,%ecx
ffffffff80415121:	39 f1                	cmp    %esi,%ecx
ffffffff80415123:	0f 46 f1             	cmovbe %ecx,%esi
    str_ += n;
ffffffff80415126:	89 f1                	mov    %esi,%ecx
    size_ -= min(n, size_);
ffffffff80415128:	41 89 d0             	mov    %edx,%r8d
    str_ += n;
ffffffff8041512b:	49 01 ca             	add    %rcx,%r10
    size_ -= min(n, size_);
ffffffff8041512e:	39 c6                	cmp    %eax,%esi
ffffffff80415130:	0f 47 f0             	cmova  %eax,%esi
ffffffff80415133:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80415135:	85 c0                	test   %eax,%eax
ffffffff80415137:	0f 85 13 ff ff ff    	jne    ffffffff80415050 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xc0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041513d:	85 ff                	test   %edi,%edi
ffffffff8041513f:	74 6a                	je     ffffffff804151ab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80415141:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415144:	44 8b 15 19 8f 00 00 	mov    0x8f19(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041514b:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80415152:	31 c9                	xor    %ecx,%ecx
ffffffff80415154:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80415158:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041515c:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80415162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80415168:	48 89 f5             	mov    %rsi,%rbp
ffffffff8041516b:	89 ca                	mov    %ecx,%edx
ffffffff8041516d:	46 8d 0c 11          	lea    (%rcx,%r10,1),%r9d
ffffffff80415171:	45 85 d2             	test   %r10d,%r10d
ffffffff80415174:	0f 84 66 06 00 00    	je     ffffffff804157e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x850>
ffffffff8041517a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80415180:	44 0f b7 5d 00       	movzwl 0x0(%rbp),%r11d
ffffffff80415185:	89 d1                	mov    %edx,%ecx
ffffffff80415187:	83 c2 01             	add    $0x1,%edx
ffffffff8041518a:	48 83 c5 02          	add    $0x2,%rbp
ffffffff8041518e:	66 44 89 9c 09 00 80 	mov    %r11w,0xb8000(%rcx,%rcx,1)
ffffffff80415195:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415197:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041519a:	75 e4                	jne    ffffffff80415180 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1f0>
ffffffff8041519c:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804151a3:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804151a6:	48 39 f0             	cmp    %rsi,%rax
ffffffff804151a9:	75 bd                	jne    ffffffff80415168 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
    if (current_col_ != 0) {
ffffffff804151ab:	45 85 c0             	test   %r8d,%r8d
ffffffff804151ae:	74 38                	je     ffffffff804151e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804151b0:	8b 35 ae 8e 00 00    	mov    0x8eae(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804151b6:	85 f6                	test   %esi,%esi
ffffffff804151b8:	74 2e                	je     ffffffff804151e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804151ba:	89 fa                	mov    %edi,%edx
ffffffff804151bc:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff804151c0:	0f af d6             	imul   %esi,%edx
ffffffff804151c3:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804151c7:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff804151cd:	01 d6                	add    %edx,%esi
ffffffff804151cf:	90                   	nop
ffffffff804151d0:	0f b7 08             	movzwl (%rax),%ecx
ffffffff804151d3:	89 d7                	mov    %edx,%edi
ffffffff804151d5:	83 c2 01             	add    $0x1,%edx
ffffffff804151d8:	48 83 c0 02          	add    $0x2,%rax
ffffffff804151dc:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff804151e3:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804151e4:	39 f2                	cmp    %esi,%edx
ffffffff804151e6:	75 e8                	jne    ffffffff804151d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804151e8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff804151ed:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff804151f0:	48 89 da             	mov    %rbx,%rdx
    num_len++;
ffffffff804151f3:	89 c6                	mov    %eax,%esi
    buffer[i] = num % base;
ffffffff804151f5:	83 e2 0f             	and    $0xf,%edx
ffffffff804151f8:	88 54 04 4b          	mov    %dl,0x4b(%rsp,%rax,1)
ffffffff804151fc:	48 89 da             	mov    %rbx,%rdx
    num /= base;
ffffffff804151ff:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80415203:	48 83 fa 0f          	cmp    $0xf,%rdx
ffffffff80415207:	76 0f                	jbe    ffffffff80415218 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
ffffffff80415209:	48 83 c0 01          	add    $0x1,%rax
  for (size_t i = 0; i < size; i++) {
ffffffff8041520d:	48 83 f8 15          	cmp    $0x15,%rax
ffffffff80415211:	75 dd                	jne    ffffffff804151f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x260>
ffffffff80415213:	be 14 00 00 00       	mov    $0x14,%esi
  if (num != 0) {
ffffffff80415218:	48 85 db             	test   %rbx,%rbx
ffffffff8041521b:	0f 85 2f 09 00 00    	jne    ffffffff80415b50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xbc0>
ffffffff80415221:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
ffffffff80415226:	89 f7                	mov    %esi,%edi
    str[offset++] = '0';
ffffffff80415228:	66 c7 44 24 38 30 78 	movw   $0x7830,0x38(%rsp)
ffffffff8041522f:	48 01 df             	add    %rbx,%rdi
ffffffff80415232:	48 89 da             	mov    %rbx,%rdx
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80415235:	8d 4c 1e ff          	lea    -0x1(%rsi,%rbx,1),%ecx
ffffffff80415239:	eb 14                	jmp    ffffffff8041524f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff8041523b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80415240:	83 c0 37             	add    $0x37,%eax
ffffffff80415243:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415247:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff8041524a:	48 39 d7             	cmp    %rdx,%rdi
ffffffff8041524d:	74 1c                	je     ffffffff8041526b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x2db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff8041524f:	89 c8                	mov    %ecx,%eax
ffffffff80415251:	29 d0                	sub    %edx,%eax
ffffffff80415253:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff80415258:	3c 09                	cmp    $0x9,%al
ffffffff8041525a:	7f e4                	jg     ffffffff80415240 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff8041525c:	83 c0 30             	add    $0x30,%eax
ffffffff8041525f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415263:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80415266:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80415269:	75 e4                	jne    ffffffff8041524f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
  str[num_len + offset] = 0;
ffffffff8041526b:	8d 46 02             	lea    0x2(%rsi),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041526e:	48 89 df             	mov    %rbx,%rdi
ffffffff80415271:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff80415276:	e8 45 7f ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8041527b:	85 c0                	test   %eax,%eax
ffffffff8041527d:	0f 84 e9 08 00 00    	je     ffffffff80415b6c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xbdc>
ffffffff80415283:	44 8b 25 d6 8d 00 00 	mov    0x8dd6(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041528a:	44 8b 0d d3 8d 00 00 	mov    0x8dd3(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80415291:	49 89 d8             	mov    %rbx,%r8
ffffffff80415294:	8b 2d d2 8d 00 00    	mov    0x8dd2(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041529a:	8b 0d c8 8d 00 00    	mov    0x8dc8(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804152a0:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff804152a5:	45 8d 69 ff          	lea    -0x1(%r9),%r13d
ffffffff804152a9:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804152ad:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff804152b2:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff804152b6:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff804152bd:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff804152c2:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804152c6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff804152cb:	48 89 d6             	mov    %rdx,%rsi
ffffffff804152ce:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804152d2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804152d6:	4c 01 ea             	add    %r13,%rdx
ffffffff804152d9:	48 8d be 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rdi
ffffffff804152e0:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff804152e5:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff804152ec:	80 
ffffffff804152ed:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff804152f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff804152f8:	44 89 ce             	mov    %r9d,%esi
ffffffff804152fb:	89 c2                	mov    %eax,%edx
ffffffff804152fd:	29 ee                	sub    %ebp,%esi
ffffffff804152ff:	39 c6                	cmp    %eax,%esi
ffffffff80415301:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80415304:	39 c6                	cmp    %eax,%esi
ffffffff80415306:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80415309:	85 d2                	test   %edx,%edx
ffffffff8041530b:	0f 84 07 07 00 00    	je     ffffffff80415a18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80415311:	83 ea 01             	sub    $0x1,%edx
ffffffff80415314:	31 db                	xor    %ebx,%ebx
ffffffff80415316:	eb 18                	jmp    ffffffff80415330 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a0>
ffffffff80415318:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041531f:	00 
ffffffff80415320:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80415324:	48 39 da             	cmp    %rbx,%rdx
ffffffff80415327:	0f 84 eb 06 00 00    	je     ffffffff80415a18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff8041532d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80415330:	41 80 3c 18 0a       	cmpb   $0xa,(%r8,%rbx,1)
ffffffff80415335:	89 df                	mov    %ebx,%edi
ffffffff80415337:	75 e7                	jne    ffffffff80415320 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x390>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415339:	39 f8                	cmp    %edi,%eax
ffffffff8041533b:	89 fa                	mov    %edi,%edx
ffffffff8041533d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80415340:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80415343:	0f 84 37 06 00 00    	je     ffffffff80415980 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415349:	01 ea                	add    %ebp,%edx
ffffffff8041534b:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041534e:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80415352:	39 ea                	cmp    %ebp,%edx
ffffffff80415354:	0f 86 b1 06 00 00    	jbe    ffffffff80415a0b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa7b>
ffffffff8041535a:	41 89 ea             	mov    %ebp,%r10d
ffffffff8041535d:	41 f7 d2             	not    %r10d
ffffffff80415360:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80415364:	41 89 ca             	mov    %ecx,%r10d
ffffffff80415367:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff8041536b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff8041536f:	4c 01 d5             	add    %r10,%rbp
ffffffff80415372:	45 31 d2             	xor    %r10d,%r10d
ffffffff80415375:	48 01 ed             	add    %rbp,%rbp
ffffffff80415378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041537f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80415380:	66 47 0f be 34 10    	movsbw (%r8,%r10,1),%r14w
ffffffff80415386:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff8041538c:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80415393:	41 80 
ffffffff80415395:	4d 89 d6             	mov    %r10,%r14
ffffffff80415398:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041539c:	4d 39 de             	cmp    %r11,%r14
ffffffff8041539f:	75 df                	jne    ffffffff80415380 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3f0>
    if (current_col_ == num_cols_) {
ffffffff804153a1:	41 39 d1             	cmp    %edx,%r9d
ffffffff804153a4:	0f 84 ae 05 00 00    	je     ffffffff80415958 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c8>
    current_col_ = i;
ffffffff804153aa:	89 15 bc 8c 00 00    	mov    %edx,0x8cbc(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804153b0:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804153b3:	0f 84 bd 05 00 00    	je     ffffffff80415976 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9e6>
ffffffff804153b9:	85 d2                	test   %edx,%edx
ffffffff804153bb:	74 09                	je     ffffffff804153c6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff804153bd:	83 f9 18             	cmp    $0x18,%ecx
ffffffff804153c0:	0f 86 2a 07 00 00    	jbe    ffffffff80415af0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804153c6:	83 c7 01             	add    $0x1,%edi
ffffffff804153c9:	39 f7                	cmp    %esi,%edi
ffffffff804153cb:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff804153ce:	89 f7                	mov    %esi,%edi
    size_ -= min(n, size_);
ffffffff804153d0:	89 d5                	mov    %edx,%ebp
    str_ += n;
ffffffff804153d2:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff804153d5:	39 f0                	cmp    %esi,%eax
ffffffff804153d7:	0f 46 f0             	cmovbe %eax,%esi
ffffffff804153da:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff804153dc:	85 c0                	test   %eax,%eax
ffffffff804153de:	0f 85 14 ff ff ff    	jne    ffffffff804152f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x368>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804153e4:	85 c9                	test   %ecx,%ecx
ffffffff804153e6:	74 6a                	je     ffffffff80415452 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff804153e8:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804153eb:	44 8b 0d 72 8c 00 00 	mov    0x8c72(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804153f2:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff804153f9:	31 ff                	xor    %edi,%edi
ffffffff804153fb:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff804153ff:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80415403:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80415409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80415410:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415413:	89 fa                	mov    %edi,%edx
ffffffff80415415:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80415419:	45 85 c9             	test   %r9d,%r9d
ffffffff8041541c:	0f 84 2e 06 00 00    	je     ffffffff80415a50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xac0>
ffffffff80415422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80415428:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff8041542c:	89 d7                	mov    %edx,%edi
ffffffff8041542e:	83 c2 01             	add    $0x1,%edx
ffffffff80415431:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80415435:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff8041543c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041543e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80415441:	75 e5                	jne    ffffffff80415428 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x498>
ffffffff80415443:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041544a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041544d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80415450:	75 be                	jne    ffffffff80415410 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
    if (current_col_ != 0) {
ffffffff80415452:	85 ed                	test   %ebp,%ebp
ffffffff80415454:	74 3a                	je     ffffffff80415490 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415456:	8b 35 08 8c 00 00    	mov    0x8c08(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041545c:	85 f6                	test   %esi,%esi
ffffffff8041545e:	74 30                	je     ffffffff80415490 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415460:	89 f2                	mov    %esi,%edx
ffffffff80415462:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80415466:	0f af d1             	imul   %ecx,%edx
ffffffff80415469:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041546d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80415473:	01 d6                	add    %edx,%esi
ffffffff80415475:	0f 1f 00             	nopl   (%rax)
ffffffff80415478:	0f b7 08             	movzwl (%rax),%ecx
ffffffff8041547b:	89 d7                	mov    %edx,%edi
ffffffff8041547d:	83 c2 01             	add    $0x1,%edx
ffffffff80415480:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415484:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff8041548b:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041548c:	39 d6                	cmp    %edx,%esi
ffffffff8041548e:	75 e8                	jne    ffffffff80415478 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x4e8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80415490:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80415497:	e8 24 7d ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff8041549c:	85 c0                	test   %eax,%eax
ffffffff8041549e:	0f 84 f4 06 00 00    	je     ffffffff80415b98 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xc08>
ffffffff804154a4:	44 8b 25 b5 8b 00 00 	mov    0x8bb5(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804154ab:	44 8b 05 b2 8b 00 00 	mov    0x8bb2(%rip),%r8d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804154b2:	49 c7 c1 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r9
ffffffff804154b9:	8b 2d ad 8b 00 00    	mov    0x8bad(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804154bf:	8b 0d a3 8b 00 00    	mov    0x8ba3(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804154c5:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff804154ca:	45 8d 68 ff          	lea    -0x1(%r8),%r13d
ffffffff804154ce:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804154d2:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff804154d7:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff804154db:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff804154e2:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff804154e7:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804154eb:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff804154f0:	48 89 d6             	mov    %rdx,%rsi
ffffffff804154f3:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804154f7:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804154fb:	4c 01 ea             	add    %r13,%rdx
ffffffff804154fe:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff80415505:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8041550a:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff80415511:	80 
ffffffff80415512:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff80415517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041551e:	00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80415520:	44 89 c6             	mov    %r8d,%esi
ffffffff80415523:	89 c2                	mov    %eax,%edx
ffffffff80415525:	29 ee                	sub    %ebp,%esi
ffffffff80415527:	39 c6                	cmp    %eax,%esi
ffffffff80415529:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041552c:	39 c6                	cmp    %eax,%esi
ffffffff8041552e:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80415531:	85 d2                	test   %edx,%edx
ffffffff80415533:	0f 84 ff 03 00 00    	je     ffffffff80415938 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff80415539:	83 ea 01             	sub    $0x1,%edx
ffffffff8041553c:	31 db                	xor    %ebx,%ebx
ffffffff8041553e:	eb 10                	jmp    ffffffff80415550 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c0>
ffffffff80415540:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80415544:	48 39 da             	cmp    %rbx,%rdx
ffffffff80415547:	0f 84 eb 03 00 00    	je     ffffffff80415938 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff8041554d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80415550:	41 80 3c 19 0a       	cmpb   $0xa,(%r9,%rbx,1)
ffffffff80415555:	89 df                	mov    %ebx,%edi
ffffffff80415557:	75 e7                	jne    ffffffff80415540 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415559:	39 f8                	cmp    %edi,%eax
ffffffff8041555b:	89 fa                	mov    %edi,%edx
ffffffff8041555d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80415560:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80415563:	0f 84 37 03 00 00    	je     ffffffff804158a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415569:	01 ea                	add    %ebp,%edx
ffffffff8041556b:	44 39 c2             	cmp    %r8d,%edx
ffffffff8041556e:	41 0f 47 d0          	cmova  %r8d,%edx
ffffffff80415572:	39 ea                	cmp    %ebp,%edx
ffffffff80415574:	0f 86 b1 03 00 00    	jbe    ffffffff8041592b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x99b>
ffffffff8041557a:	41 89 ea             	mov    %ebp,%r10d
ffffffff8041557d:	41 f7 d2             	not    %r10d
ffffffff80415580:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80415584:	41 89 ca             	mov    %ecx,%r10d
ffffffff80415587:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff8041558b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff8041558f:	4c 01 d5             	add    %r10,%rbp
ffffffff80415592:	45 31 d2             	xor    %r10d,%r10d
ffffffff80415595:	48 01 ed             	add    %rbp,%rbp
ffffffff80415598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041559f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804155a0:	66 47 0f be 34 11    	movsbw (%r9,%r10,1),%r14w
ffffffff804155a6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff804155ac:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff804155b3:	41 80 
ffffffff804155b5:	4d 89 d6             	mov    %r10,%r14
ffffffff804155b8:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804155bc:	4d 39 f3             	cmp    %r14,%r11
ffffffff804155bf:	75 df                	jne    ffffffff804155a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x610>
    if (current_col_ == num_cols_) {
ffffffff804155c1:	41 39 d0             	cmp    %edx,%r8d
ffffffff804155c4:	0f 84 a6 02 00 00    	je     ffffffff80415870 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8e0>
    current_col_ = i;
ffffffff804155ca:	89 15 9c 8a 00 00    	mov    %edx,0x8a9c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804155d0:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804155d3:	0f 84 b5 02 00 00    	je     ffffffff8041588e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8fe>
ffffffff804155d9:	85 d2                	test   %edx,%edx
ffffffff804155db:	74 09                	je     ffffffff804155e6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff804155dd:	83 f9 18             	cmp    $0x18,%ecx
ffffffff804155e0:	0f 86 aa 04 00 00    	jbe    ffffffff80415a90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb00>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff804155e6:	83 c7 01             	add    $0x1,%edi
ffffffff804155e9:	39 f7                	cmp    %esi,%edi
ffffffff804155eb:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff804155ee:	89 f7                	mov    %esi,%edi
ffffffff804155f0:	89 d5                	mov    %edx,%ebp
ffffffff804155f2:	49 01 f9             	add    %rdi,%r9
    size_ -= min(n, size_);
ffffffff804155f5:	39 c6                	cmp    %eax,%esi
ffffffff804155f7:	0f 47 f0             	cmova  %eax,%esi
ffffffff804155fa:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff804155fc:	85 c0                	test   %eax,%eax
ffffffff804155fe:	0f 85 1c ff ff ff    	jne    ffffffff80415520 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415604:	85 c9                	test   %ecx,%ecx
ffffffff80415606:	74 6a                	je     ffffffff80415672 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80415608:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041560b:	44 8b 0d 52 8a 00 00 	mov    0x8a52(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80415612:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80415619:	31 ff                	xor    %edi,%edi
ffffffff8041561b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041561f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80415623:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80415629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80415630:	48 89 f3             	mov    %rsi,%rbx
ffffffff80415633:	89 fa                	mov    %edi,%edx
ffffffff80415635:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80415639:	45 85 c9             	test   %r9d,%r9d
ffffffff8041563c:	0f 84 2e 04 00 00    	je     ffffffff80415a70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xae0>
ffffffff80415642:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80415648:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff8041564c:	89 d7                	mov    %edx,%edi
ffffffff8041564e:	83 c2 01             	add    $0x1,%edx
ffffffff80415651:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80415655:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff8041565c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041565e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80415661:	75 e5                	jne    ffffffff80415648 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6b8>
ffffffff80415663:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041566a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041566d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80415670:	75 be                	jne    ffffffff80415630 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
    if (current_col_ != 0) {
ffffffff80415672:	85 ed                	test   %ebp,%ebp
ffffffff80415674:	74 3a                	je     ffffffff804156b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415676:	8b 35 e8 89 00 00    	mov    0x89e8(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041567c:	85 f6                	test   %esi,%esi
ffffffff8041567e:	74 30                	je     ffffffff804156b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415680:	89 f2                	mov    %esi,%edx
ffffffff80415682:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80415686:	0f af d1             	imul   %ecx,%edx
ffffffff80415689:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041568d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80415693:	01 d6                	add    %edx,%esi
ffffffff80415695:	0f 1f 00             	nopl   (%rax)
ffffffff80415698:	0f b7 08             	movzwl (%rax),%ecx
ffffffff8041569b:	89 d7                	mov    %edx,%edi
ffffffff8041569d:	83 c2 01             	add    $0x1,%edx
ffffffff804156a0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804156a4:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff804156ab:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804156ac:	39 d6                	cmp    %edx,%esi
ffffffff804156ae:	75 e8                	jne    ffffffff80415698 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x708>
}
ffffffff804156b0:	48 83 c4 68          	add    $0x68,%rsp
ffffffff804156b4:	58                   	pop    %rax
ffffffff804156b5:	5a                   	pop    %rdx
ffffffff804156b6:	59                   	pop    %rcx
ffffffff804156b7:	5b                   	pop    %rbx
ffffffff804156b8:	5e                   	pop    %rsi
ffffffff804156b9:	5f                   	pop    %rdi
ffffffff804156ba:	5d                   	pop    %rbp
ffffffff804156bb:	41 58                	pop    %r8
ffffffff804156bd:	41 59                	pop    %r9
ffffffff804156bf:	41 5a                	pop    %r10
ffffffff804156c1:	41 5b                	pop    %r11
ffffffff804156c3:	41 5c                	pop    %r12
ffffffff804156c5:	41 5d                	pop    %r13
ffffffff804156c7:	41 5e                	pop    %r14
ffffffff804156c9:	41 5f                	pop    %r15
ffffffff804156cb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff804156cf:	48 cf                	iretq  
ffffffff804156d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804156d8:	83 ff 01             	cmp    $0x1,%edi
ffffffff804156db:	76 53                	jbe    ffffffff80415730 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a0>
ffffffff804156dd:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff804156e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804156e8:	45 31 e4             	xor    %r12d,%r12d
ffffffff804156eb:	4d 8d ab 60 ff ff ff 	lea    -0xa0(%r11),%r13
ffffffff804156f2:	45 85 c9             	test   %r9d,%r9d
ffffffff804156f5:	74 2b                	je     ffffffff80415722 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x792>
ffffffff804156f7:	89 44 24 08          	mov    %eax,0x8(%rsp)
ffffffff804156fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80415700:	43 0f b7 84 63 70 e0 	movzwl -0x7fbe1f90(%r11,%r12,2),%eax
ffffffff80415707:	41 80 
ffffffff80415709:	66 43 89 84 65 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%r12,2)
ffffffff80415710:	41 80 
ffffffff80415712:	4c 89 e0             	mov    %r12,%rax
ffffffff80415715:	49 83 c4 01          	add    $0x1,%r12
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415719:	49 39 c7             	cmp    %rax,%r15
ffffffff8041571c:	75 e2                	jne    ffffffff80415700 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff8041571e:	8b 44 24 08          	mov    0x8(%rsp),%eax
ffffffff80415722:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80415729:	4c 3b 5c 24 20       	cmp    0x20(%rsp),%r11
ffffffff8041572e:	75 b8                	jne    ffffffff804156e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415730:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80415735:	45 85 c9             	test   %r9d,%r9d
ffffffff80415738:	74 17                	je     ffffffff80415751 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c1>
ffffffff8041573a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80415740:	66 41 c7 03 00 00    	movw   $0x0,(%r11)
ffffffff80415746:	49 83 c3 02          	add    $0x2,%r11
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041574a:	4c 3b 5c 24 18       	cmp    0x18(%rsp),%r11
ffffffff8041574f:	75 ef                	jne    ffffffff80415740 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415751:	44 01 c2             	add    %r8d,%edx
      current_row_--;
ffffffff80415754:	83 ef 01             	sub    $0x1,%edi
ffffffff80415757:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041575a:	89 3d 08 89 00 00    	mov    %edi,0x8908(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415760:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415764:	41 39 d0             	cmp    %edx,%r8d
ffffffff80415767:	0f 82 47 f9 ff ff    	jb     ffffffff804150b4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x124>
ffffffff8041576d:	44 89 c2             	mov    %r8d,%edx
    if (current_col_ == num_cols_) {
ffffffff80415770:	44 39 ca             	cmp    %r9d,%edx
ffffffff80415773:	0f 85 89 f9 ff ff    	jne    ffffffff80415102 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x172>
ffffffff80415779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80415780:	c7 05 e2 88 00 00 00 	movl   $0x0,0x88e2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415787:	00 00 00 
      current_row_++;
ffffffff8041578a:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041578d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041578f:	89 3d d3 88 00 00    	mov    %edi,0x88d3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415795:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80415798:	0f 85 80 f9 ff ff    	jne    ffffffff8041511e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff8041579e:	39 ce                	cmp    %ecx,%esi
ffffffff804157a0:	0f 47 f1             	cmova  %ecx,%esi
ffffffff804157a3:	e9 7e f9 ff ff       	jmpq   ffffffff80415126 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x196>
ffffffff804157a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804157af:	00 
    if (count == npos) {
ffffffff804157b0:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff804157b3:	75 1b                	jne    ffffffff804157d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x840>
ffffffff804157b5:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff804157ba:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff804157bf:	89 c2                	mov    %eax,%edx
ffffffff804157c1:	e9 d2 f8 ff ff       	jmpq   ffffffff80415098 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x108>
ffffffff804157c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804157cd:	00 00 00 
ffffffff804157d0:	89 f1                	mov    %esi,%ecx
ffffffff804157d2:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff804157d7:	e9 b5 f8 ff ff       	jmpq   ffffffff80415091 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x101>
ffffffff804157dc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff804157e0:	41 89 c9             	mov    %ecx,%r9d
ffffffff804157e3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804157ea:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804157ed:	48 39 f0             	cmp    %rsi,%rax
ffffffff804157f0:	0f 85 72 f9 ff ff    	jne    ffffffff80415168 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
ffffffff804157f6:	e9 b0 f9 ff ff       	jmpq   ffffffff804151ab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff804157fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415800:	44 39 ca             	cmp    %r9d,%edx
ffffffff80415803:	73 4a                	jae    ffffffff8041584f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8bf>
ffffffff80415805:	89 fd                	mov    %edi,%ebp
ffffffff80415807:	41 89 d3             	mov    %edx,%r11d
ffffffff8041580a:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
ffffffff8041580f:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80415813:	4d 8d 44 2b 08       	lea    0x8(%r11,%rbp,1),%r8
ffffffff80415818:	4c 01 dd             	add    %r11,%rbp
ffffffff8041581b:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
ffffffff80415820:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80415827:	80 
ffffffff80415828:	41 29 d3             	sub    %edx,%r11d
ffffffff8041582b:	4c 01 dd             	add    %r11,%rbp
ffffffff8041582e:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80415835:	80 
ffffffff80415836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041583d:	00 00 00 
          text_buffer_[current_row_][i] = 0;
ffffffff80415840:	66 41 c7 00 00 00    	movw   $0x0,(%r8)
ffffffff80415846:	49 83 c0 02          	add    $0x2,%r8
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041584a:	49 39 d0             	cmp    %rdx,%r8
ffffffff8041584d:	75 f1                	jne    ffffffff80415840 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b0>
        current_col_ = 0;
ffffffff8041584f:	c7 05 13 88 00 00 00 	movl   $0x0,0x8813(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415856:	00 00 00 
        current_row_++;
ffffffff80415859:	83 c7 01             	add    $0x1,%edi
ffffffff8041585c:	31 d2                	xor    %edx,%edx
ffffffff8041585e:	89 3d 04 88 00 00    	mov    %edi,0x8804(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415864:	e9 b5 f8 ff ff       	jmpq   ffffffff8041511e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80415869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80415870:	c7 05 f2 87 00 00 00 	movl   $0x0,0x87f2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415877:	00 00 00 
      current_row_++;
ffffffff8041587a:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041587d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041587f:	89 0d e3 87 00 00    	mov    %ecx,0x87e3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415885:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80415888:	0f 85 58 fd ff ff    	jne    ffffffff804155e6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff8041588e:	39 fe                	cmp    %edi,%esi
ffffffff80415890:	0f 47 f7             	cmova  %edi,%esi
  constexpr void remove_prefix(size_t n) {
ffffffff80415893:	e9 56 fd ff ff       	jmpq   ffffffff804155ee <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x65e>
ffffffff80415898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041589f:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804158a0:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff804158a4:	76 46                	jbe    ffffffff804158ec <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x95c>
ffffffff804158a6:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff804158ac:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804158b0:	45 31 db             	xor    %r11d,%r11d
ffffffff804158b3:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff804158ba:	45 85 c0             	test   %r8d,%r8d
ffffffff804158bd:	74 1f                	je     ffffffff804158de <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x94e>
ffffffff804158bf:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804158c0:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff804158c7:	41 80 
ffffffff804158c9:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff804158d0:	41 80 
ffffffff804158d2:	4d 89 df             	mov    %r11,%r15
ffffffff804158d5:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804158d9:	4d 39 ef             	cmp    %r13,%r15
ffffffff804158dc:	75 e2                	jne    ffffffff804158c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x930>
ffffffff804158de:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804158e5:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff804158ea:	75 c4                	jne    ffffffff804158b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804158ec:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff804158f1:	45 85 c0             	test   %r8d,%r8d
ffffffff804158f4:	74 1b                	je     ffffffff80415911 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x981>
ffffffff804158f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804158fd:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80415900:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80415906:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041590a:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041590f:	75 ef                	jne    ffffffff80415900 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x970>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415911:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80415913:	83 e9 01             	sub    $0x1,%ecx
ffffffff80415916:	44 39 c2             	cmp    %r8d,%edx
ffffffff80415919:	89 0d 49 87 00 00    	mov    %ecx,0x8749(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041591f:	41 0f 47 d0          	cmova  %r8d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415923:	39 ea                	cmp    %ebp,%edx
ffffffff80415925:	0f 87 4f fc ff ff    	ja     ffffffff8041557a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5ea>
ffffffff8041592b:	89 ea                	mov    %ebp,%edx
ffffffff8041592d:	e9 8f fc ff ff       	jmpq   ffffffff804155c1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x631>
ffffffff80415932:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (count == npos) {
ffffffff80415938:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff8041593b:	0f 85 ef 00 00 00    	jne    ffffffff80415a30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
ffffffff80415941:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80415946:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff8041594b:	89 c2                	mov    %eax,%edx
ffffffff8041594d:	e9 0e fc ff ff       	jmpq   ffffffff80415560 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5d0>
ffffffff80415952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80415958:	c7 05 0a 87 00 00 00 	movl   $0x0,0x870a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041595f:	00 00 00 
      current_row_++;
ffffffff80415962:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415965:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80415967:	89 0d fb 86 00 00    	mov    %ecx,0x86fb(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041596d:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80415970:	0f 85 50 fa ff ff    	jne    ffffffff804153c6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80415976:	39 fe                	cmp    %edi,%esi
ffffffff80415978:	0f 47 f7             	cmova  %edi,%esi
ffffffff8041597b:	e9 4e fa ff ff       	jmpq   ffffffff804153ce <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x43e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80415980:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff80415984:	76 46                	jbe    ffffffff804159cc <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa3c>
ffffffff80415986:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff8041598c:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415990:	45 31 db             	xor    %r11d,%r11d
ffffffff80415993:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff8041599a:	45 85 c9             	test   %r9d,%r9d
ffffffff8041599d:	74 1f                	je     ffffffff804159be <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa2e>
ffffffff8041599f:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804159a0:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff804159a7:	41 80 
ffffffff804159a9:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff804159b0:	41 80 
ffffffff804159b2:	4d 89 df             	mov    %r11,%r15
ffffffff804159b5:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804159b9:	4d 39 ef             	cmp    %r13,%r15
ffffffff804159bc:	75 e2                	jne    ffffffff804159a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff804159be:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804159c5:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff804159ca:	75 c4                	jne    ffffffff80415990 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa00>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804159cc:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
ffffffff804159d1:	45 85 c9             	test   %r9d,%r9d
ffffffff804159d4:	74 1b                	je     ffffffff804159f1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa61>
ffffffff804159d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804159dd:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804159e0:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff804159e6:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804159ea:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
ffffffff804159ef:	75 ef                	jne    ffffffff804159e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xa50>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804159f1:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff804159f3:	83 e9 01             	sub    $0x1,%ecx
ffffffff804159f6:	44 39 ca             	cmp    %r9d,%edx
ffffffff804159f9:	89 0d 69 86 00 00    	mov    %ecx,0x8669(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804159ff:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415a03:	39 ea                	cmp    %ebp,%edx
ffffffff80415a05:	0f 87 4f f9 ff ff    	ja     ffffffff8041535a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3ca>
ffffffff80415a0b:	89 ea                	mov    %ebp,%edx
ffffffff80415a0d:	e9 8f f9 ff ff       	jmpq   ffffffff804153a1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x411>
ffffffff80415a12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80415a18:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80415a1b:	75 23                	jne    ffffffff80415a40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xab0>
ffffffff80415a1d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80415a22:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff80415a27:	89 c2                	mov    %eax,%edx
ffffffff80415a29:	e9 12 f9 ff ff       	jmpq   ffffffff80415340 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b0>
ffffffff80415a2e:	66 90                	xchg   %ax,%ax
ffffffff80415a30:	89 f7                	mov    %esi,%edi
ffffffff80415a32:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80415a37:	e9 1d fb ff ff       	jmpq   ffffffff80415559 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c9>
ffffffff80415a3c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415a40:	89 f7                	mov    %esi,%edi
ffffffff80415a42:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80415a47:	e9 ed f8 ff ff       	jmpq   ffffffff80415339 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a9>
ffffffff80415a4c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80415a50:	41 89 f8             	mov    %edi,%r8d
ffffffff80415a53:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80415a5a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415a5d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80415a60:	0f 85 aa f9 ff ff    	jne    ffffffff80415410 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
ffffffff80415a66:	e9 e7 f9 ff ff       	jmpq   ffffffff80415452 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff80415a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80415a70:	41 89 f8             	mov    %edi,%r8d
ffffffff80415a73:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80415a7a:	44 89 c7             	mov    %r8d,%edi
ffffffff80415a7d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80415a80:	0f 85 aa fb ff ff    	jne    ffffffff80415630 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
ffffffff80415a86:	e9 e7 fb ff ff       	jmpq   ffffffff80415672 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80415a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415a90:	41 39 d0             	cmp    %edx,%r8d
ffffffff80415a93:	76 41                	jbe    ffffffff80415ad6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb46>
ffffffff80415a95:	89 cb                	mov    %ecx,%ebx
ffffffff80415a97:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff80415a9c:	41 89 d2             	mov    %edx,%r10d
ffffffff80415a9f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80415aa3:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80415aa7:	41 29 d7             	sub    %edx,%r15d
ffffffff80415aaa:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff80415aaf:	4c 01 d5             	add    %r10,%rbp
ffffffff80415ab2:	4c 01 fd             	add    %r15,%rbp
ffffffff80415ab5:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80415abc:	80 
ffffffff80415abd:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80415ac4:	80 
ffffffff80415ac5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80415ac8:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff80415acd:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415ad1:	48 39 da             	cmp    %rbx,%rdx
ffffffff80415ad4:	75 f2                	jne    ffffffff80415ac8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb38>
        current_col_ = 0;
ffffffff80415ad6:	c7 05 8c 85 00 00 00 	movl   $0x0,0x858c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415add:	00 00 00 
        current_row_++;
ffffffff80415ae0:	83 c1 01             	add    $0x1,%ecx
ffffffff80415ae3:	31 d2                	xor    %edx,%edx
ffffffff80415ae5:	89 0d 7d 85 00 00    	mov    %ecx,0x857d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415aeb:	e9 f6 fa ff ff       	jmpq   ffffffff804155e6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415af0:	41 39 d1             	cmp    %edx,%r9d
ffffffff80415af3:	76 41                	jbe    ffffffff80415b36 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xba6>
ffffffff80415af5:	89 cb                	mov    %ecx,%ebx
ffffffff80415af7:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff80415afc:	41 89 d2             	mov    %edx,%r10d
ffffffff80415aff:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80415b03:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80415b07:	41 29 d7             	sub    %edx,%r15d
ffffffff80415b0a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff80415b0f:	4c 01 d5             	add    %r10,%rbp
ffffffff80415b12:	4c 01 fd             	add    %r15,%rbp
ffffffff80415b15:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff80415b1c:	80 
ffffffff80415b1d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80415b24:	80 
ffffffff80415b25:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80415b28:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff80415b2d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80415b31:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80415b34:	75 f2                	jne    ffffffff80415b28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0xb98>
        current_col_ = 0;
ffffffff80415b36:	c7 05 2c 85 00 00 00 	movl   $0x0,0x852c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415b3d:	00 00 00 
        current_row_++;
ffffffff80415b40:	83 c1 01             	add    $0x1,%ecx
ffffffff80415b43:	31 d2                	xor    %edx,%edx
ffffffff80415b45:	89 0d 1d 85 00 00    	mov    %ecx,0x851d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415b4b:	e9 76 f8 ff ff       	jmpq   ffffffff804153c6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80415b50:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
    str[0] = 'E';
ffffffff80415b55:	66 c7 44 24 38 45 00 	movw   $0x45,0x38(%rsp)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80415b5c:	48 89 df             	mov    %rbx,%rdi
ffffffff80415b5f:	e8 5c 76 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80415b64:	85 c0                	test   %eax,%eax
ffffffff80415b66:	0f 85 17 f7 ff ff    	jne    ffffffff80415283 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x2f3>
ffffffff80415b6c:	8b 2d fa 84 00 00    	mov    0x84fa(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415b72:	8b 0d f0 84 00 00    	mov    0x84f0(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415b78:	e9 67 f8 ff ff       	jmpq   ffffffff804153e4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x454>
ffffffff80415b7d:	0f 1f 00             	nopl   (%rax)
ffffffff80415b80:	44 8b 05 e5 84 00 00 	mov    0x84e5(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415b87:	8b 3d db 84 00 00    	mov    0x84db(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415b8d:	e9 ab f5 ff ff       	jmpq   ffffffff8041513d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x1ad>
ffffffff80415b92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80415b98:	8b 0d ca 84 00 00    	mov    0x84ca(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415b9e:	8b 2d c8 84 00 00    	mov    0x84c8(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415ba4:	e9 5b fa ff ff       	jmpq   ffffffff80415604 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi13EEEvPNS_23CPUInterruptHandlerArgsEm+0x674>
ffffffff80415ba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80415bb0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80415bb0:	41 57                	push   %r15
ffffffff80415bb2:	41 56                	push   %r14
ffffffff80415bb4:	41 55                	push   %r13
ffffffff80415bb6:	41 54                	push   %r12
ffffffff80415bb8:	41 53                	push   %r11
ffffffff80415bba:	41 52                	push   %r10
ffffffff80415bbc:	41 51                	push   %r9
ffffffff80415bbe:	41 50                	push   %r8
ffffffff80415bc0:	55                   	push   %rbp
ffffffff80415bc1:	57                   	push   %rdi
ffffffff80415bc2:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80415bc3:	be 0e 00 00 00       	mov    $0xe,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff80415bc8:	53                   	push   %rbx
ffffffff80415bc9:	51                   	push   %rcx
ffffffff80415bca:	52                   	push   %rdx
ffffffff80415bcb:	50                   	push   %rax
ffffffff80415bcc:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff80415bd0:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
ffffffff80415bd7:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff80415bd8:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
ffffffff80415bdf:	00 
ffffffff80415be0:	fc                   	cld    
ffffffff80415be1:	e8 ea 80 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
ffffffff80415be6:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff80415bed:	e8 ce 75 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80415bf2:	85 c0                	test   %eax,%eax
ffffffff80415bf4:	0f 84 a6 0b 00 00    	je     ffffffff804167a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xbf0>
ffffffff80415bfa:	44 8b 2d 5f 84 00 00 	mov    0x845f(%rip),%r13d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80415c01:	44 8b 0d 5c 84 00 00 	mov    0x845c(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80415c08:	49 c7 c2 66 b8 41 80 	mov    $0xffffffff8041b866,%r10
ffffffff80415c0f:	44 8b 05 56 84 00 00 	mov    0x8456(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415c16:	8b 3d 4c 84 00 00    	mov    0x844c(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415c1c:	41 8d 55 fe          	lea    -0x2(%r13),%edx
ffffffff80415c20:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
ffffffff80415c24:	45 89 ee             	mov    %r13d,%r14d
ffffffff80415c27:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80415c2b:	44 89 7c 24 2c       	mov    %r15d,0x2c(%rsp)
ffffffff80415c30:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80415c34:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
ffffffff80415c3b:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff80415c3f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80415c43:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80415c48:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415c4b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80415c4f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80415c53:	4c 01 fa             	add    %r15,%rdx
ffffffff80415c56:	48 8d 8e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rcx
ffffffff80415c5d:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80415c62:	48 8d 8c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rcx
ffffffff80415c69:	80 
ffffffff80415c6a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff80415c6f:	90                   	nop
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80415c70:	44 89 ce             	mov    %r9d,%esi
ffffffff80415c73:	44 29 c6             	sub    %r8d,%esi
ffffffff80415c76:	39 c6                	cmp    %eax,%esi
ffffffff80415c78:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80415c7b:	39 f0                	cmp    %esi,%eax
ffffffff80415c7d:	89 f2                	mov    %esi,%edx
ffffffff80415c7f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80415c82:	85 d2                	test   %edx,%edx
ffffffff80415c84:	0f 84 46 07 00 00    	je     ffffffff804163d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80415c8a:	83 ea 01             	sub    $0x1,%edx
ffffffff80415c8d:	31 ed                	xor    %ebp,%ebp
ffffffff80415c8f:	eb 17                	jmp    ffffffff80415ca8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xf8>
ffffffff80415c91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80415c98:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
ffffffff80415c9c:	48 39 d5             	cmp    %rdx,%rbp
ffffffff80415c9f:	0f 84 2b 07 00 00    	je     ffffffff804163d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff80415ca5:	48 89 cd             	mov    %rcx,%rbp
      if (str_[i] == c) {
ffffffff80415ca8:	41 80 3c 2a 0a       	cmpb   $0xa,(%r10,%rbp,1)
ffffffff80415cad:	89 e9                	mov    %ebp,%ecx
ffffffff80415caf:	75 e7                	jne    ffffffff80415c98 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xe8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415cb1:	39 c8                	cmp    %ecx,%eax
ffffffff80415cb3:	89 ca                	mov    %ecx,%edx
ffffffff80415cb5:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80415cb8:	44 39 f7             	cmp    %r14d,%edi
ffffffff80415cbb:	0f 84 37 06 00 00    	je     ffffffff804162f8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415cc1:	44 01 c2             	add    %r8d,%edx
ffffffff80415cc4:	44 39 ca             	cmp    %r9d,%edx
ffffffff80415cc7:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80415ccb:	41 39 d0             	cmp    %edx,%r8d
ffffffff80415cce:	0f 83 b9 06 00 00    	jae    ffffffff8041638d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7dd>
ffffffff80415cd4:	45 89 c3             	mov    %r8d,%r11d
ffffffff80415cd7:	41 f7 d3             	not    %r11d
ffffffff80415cda:	45 8d 24 13          	lea    (%r11,%rdx,1),%r12d
ffffffff80415cde:	41 89 fb             	mov    %edi,%r11d
ffffffff80415ce1:	4f 8d 1c 9b          	lea    (%r11,%r11,4),%r11
ffffffff80415ce5:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80415ce9:	4d 01 d8             	add    %r11,%r8
ffffffff80415cec:	45 31 db             	xor    %r11d,%r11d
ffffffff80415cef:	4d 01 c0             	add    %r8,%r8
ffffffff80415cf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80415cf8:	66 47 0f be 2c 1a    	movsbw (%r10,%r11,1),%r13w
ffffffff80415cfe:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff80415d04:	66 47 89 ac 58 70 e0 	mov    %r13w,-0x7fbe1f90(%r8,%r11,2)
ffffffff80415d0b:	41 80 
ffffffff80415d0d:	4d 89 dd             	mov    %r11,%r13
ffffffff80415d10:	49 83 c3 01          	add    $0x1,%r11
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415d14:	4d 39 e5             	cmp    %r12,%r13
ffffffff80415d17:	75 df                	jne    ffffffff80415cf8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x148>
    if (current_col_ == num_cols_) {
ffffffff80415d19:	44 39 ca             	cmp    %r9d,%edx
ffffffff80415d1c:	0f 84 7e 06 00 00    	je     ffffffff804163a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7f0>
    current_col_ = i;
ffffffff80415d22:	89 15 44 83 00 00    	mov    %edx,0x8344(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415d28:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80415d2b:	0f 84 8d 06 00 00    	je     ffffffff804163be <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x80e>
ffffffff80415d31:	85 d2                	test   %edx,%edx
ffffffff80415d33:	74 09                	je     ffffffff80415d3e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80415d35:	83 ff 18             	cmp    $0x18,%edi
ffffffff80415d38:	0f 86 e2 06 00 00    	jbe    ffffffff80416420 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x870>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80415d3e:	83 c1 01             	add    $0x1,%ecx
ffffffff80415d41:	39 f1                	cmp    %esi,%ecx
ffffffff80415d43:	0f 46 f1             	cmovbe %ecx,%esi
    str_ += n;
ffffffff80415d46:	89 f1                	mov    %esi,%ecx
    size_ -= min(n, size_);
ffffffff80415d48:	41 89 d0             	mov    %edx,%r8d
    str_ += n;
ffffffff80415d4b:	49 01 ca             	add    %rcx,%r10
    size_ -= min(n, size_);
ffffffff80415d4e:	39 c6                	cmp    %eax,%esi
ffffffff80415d50:	0f 47 f0             	cmova  %eax,%esi
ffffffff80415d53:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80415d55:	85 c0                	test   %eax,%eax
ffffffff80415d57:	0f 85 13 ff ff ff    	jne    ffffffff80415c70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xc0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415d5d:	85 ff                	test   %edi,%edi
ffffffff80415d5f:	74 6a                	je     ffffffff80415dcb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80415d61:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415d64:	44 8b 15 f9 82 00 00 	mov    0x82f9(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80415d6b:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80415d72:	31 c9                	xor    %ecx,%ecx
ffffffff80415d74:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80415d78:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80415d7c:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80415d82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80415d88:	48 89 f5             	mov    %rsi,%rbp
ffffffff80415d8b:	89 ca                	mov    %ecx,%edx
ffffffff80415d8d:	46 8d 0c 11          	lea    (%rcx,%r10,1),%r9d
ffffffff80415d91:	45 85 d2             	test   %r10d,%r10d
ffffffff80415d94:	0f 84 66 06 00 00    	je     ffffffff80416400 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x850>
ffffffff80415d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80415da0:	44 0f b7 5d 00       	movzwl 0x0(%rbp),%r11d
ffffffff80415da5:	89 d1                	mov    %edx,%ecx
ffffffff80415da7:	83 c2 01             	add    $0x1,%edx
ffffffff80415daa:	48 83 c5 02          	add    $0x2,%rbp
ffffffff80415dae:	66 44 89 9c 09 00 80 	mov    %r11w,0xb8000(%rcx,%rcx,1)
ffffffff80415db5:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415db7:	44 39 ca             	cmp    %r9d,%edx
ffffffff80415dba:	75 e4                	jne    ffffffff80415da0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1f0>
ffffffff80415dbc:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80415dc3:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80415dc6:	48 39 f0             	cmp    %rsi,%rax
ffffffff80415dc9:	75 bd                	jne    ffffffff80415d88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
    if (current_col_ != 0) {
ffffffff80415dcb:	45 85 c0             	test   %r8d,%r8d
ffffffff80415dce:	74 38                	je     ffffffff80415e08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415dd0:	8b 35 8e 82 00 00    	mov    0x828e(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80415dd6:	85 f6                	test   %esi,%esi
ffffffff80415dd8:	74 2e                	je     ffffffff80415e08 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80415dda:	89 fa                	mov    %edi,%edx
ffffffff80415ddc:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff80415de0:	0f af d6             	imul   %esi,%edx
ffffffff80415de3:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80415de7:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80415ded:	01 d6                	add    %edx,%esi
ffffffff80415def:	90                   	nop
ffffffff80415df0:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80415df3:	89 d7                	mov    %edx,%edi
ffffffff80415df5:	83 c2 01             	add    $0x1,%edx
ffffffff80415df8:	48 83 c0 02          	add    $0x2,%rax
ffffffff80415dfc:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80415e03:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80415e04:	39 f2                	cmp    %esi,%edx
ffffffff80415e06:	75 e8                	jne    ffffffff80415df0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80415e08:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80415e0d:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff80415e10:	48 89 da             	mov    %rbx,%rdx
    num_len++;
ffffffff80415e13:	89 c6                	mov    %eax,%esi
    buffer[i] = num % base;
ffffffff80415e15:	83 e2 0f             	and    $0xf,%edx
ffffffff80415e18:	88 54 04 4b          	mov    %dl,0x4b(%rsp,%rax,1)
ffffffff80415e1c:	48 89 da             	mov    %rbx,%rdx
    num /= base;
ffffffff80415e1f:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80415e23:	48 83 fa 0f          	cmp    $0xf,%rdx
ffffffff80415e27:	76 0f                	jbe    ffffffff80415e38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
ffffffff80415e29:	48 83 c0 01          	add    $0x1,%rax
  for (size_t i = 0; i < size; i++) {
ffffffff80415e2d:	48 83 f8 15          	cmp    $0x15,%rax
ffffffff80415e31:	75 dd                	jne    ffffffff80415e10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x260>
ffffffff80415e33:	be 14 00 00 00       	mov    $0x14,%esi
  if (num != 0) {
ffffffff80415e38:	48 85 db             	test   %rbx,%rbx
ffffffff80415e3b:	0f 85 2f 09 00 00    	jne    ffffffff80416770 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xbc0>
ffffffff80415e41:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
ffffffff80415e46:	89 f7                	mov    %esi,%edi
    str[offset++] = '0';
ffffffff80415e48:	66 c7 44 24 38 30 78 	movw   $0x7830,0x38(%rsp)
ffffffff80415e4f:	48 01 df             	add    %rbx,%rdi
ffffffff80415e52:	48 89 da             	mov    %rbx,%rdx
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80415e55:	8d 4c 1e ff          	lea    -0x1(%rsi,%rbx,1),%ecx
ffffffff80415e59:	eb 14                	jmp    ffffffff80415e6f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff80415e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80415e60:	83 c0 37             	add    $0x37,%eax
ffffffff80415e63:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415e67:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80415e6a:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80415e6d:	74 1c                	je     ffffffff80415e8b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x2db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80415e6f:	89 c8                	mov    %ecx,%eax
ffffffff80415e71:	29 d0                	sub    %edx,%eax
ffffffff80415e73:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff80415e78:	3c 09                	cmp    $0x9,%al
ffffffff80415e7a:	7f e4                	jg     ffffffff80415e60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80415e7c:	83 c0 30             	add    $0x30,%eax
ffffffff80415e7f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80415e83:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80415e86:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80415e89:	75 e4                	jne    ffffffff80415e6f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
  str[num_len + offset] = 0;
ffffffff80415e8b:	8d 46 02             	lea    0x2(%rsi),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80415e8e:	48 89 df             	mov    %rbx,%rdi
ffffffff80415e91:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff80415e96:	e8 25 73 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80415e9b:	85 c0                	test   %eax,%eax
ffffffff80415e9d:	0f 84 e9 08 00 00    	je     ffffffff8041678c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xbdc>
ffffffff80415ea3:	44 8b 25 b6 81 00 00 	mov    0x81b6(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80415eaa:	44 8b 0d b3 81 00 00 	mov    0x81b3(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80415eb1:	49 89 d8             	mov    %rbx,%r8
ffffffff80415eb4:	8b 2d b2 81 00 00    	mov    0x81b2(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80415eba:	8b 0d a8 81 00 00    	mov    0x81a8(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80415ec0:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80415ec5:	45 8d 69 ff          	lea    -0x1(%r9),%r13d
ffffffff80415ec9:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80415ecd:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80415ed2:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80415ed6:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff80415edd:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80415ee2:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80415ee6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80415eeb:	48 89 d6             	mov    %rdx,%rsi
ffffffff80415eee:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80415ef2:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80415ef6:	4c 01 ea             	add    %r13,%rdx
ffffffff80415ef9:	48 8d be 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rdi
ffffffff80415f00:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80415f05:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff80415f0c:	80 
ffffffff80415f0d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80415f12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80415f18:	44 89 ce             	mov    %r9d,%esi
ffffffff80415f1b:	89 c2                	mov    %eax,%edx
ffffffff80415f1d:	29 ee                	sub    %ebp,%esi
ffffffff80415f1f:	39 c6                	cmp    %eax,%esi
ffffffff80415f21:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80415f24:	39 c6                	cmp    %eax,%esi
ffffffff80415f26:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80415f29:	85 d2                	test   %edx,%edx
ffffffff80415f2b:	0f 84 07 07 00 00    	je     ffffffff80416638 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80415f31:	83 ea 01             	sub    $0x1,%edx
ffffffff80415f34:	31 db                	xor    %ebx,%ebx
ffffffff80415f36:	eb 18                	jmp    ffffffff80415f50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a0>
ffffffff80415f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80415f3f:	00 
ffffffff80415f40:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80415f44:	48 39 da             	cmp    %rbx,%rdx
ffffffff80415f47:	0f 84 eb 06 00 00    	je     ffffffff80416638 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80415f4d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80415f50:	41 80 3c 18 0a       	cmpb   $0xa,(%r8,%rbx,1)
ffffffff80415f55:	89 df                	mov    %ebx,%edi
ffffffff80415f57:	75 e7                	jne    ffffffff80415f40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x390>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80415f59:	39 f8                	cmp    %edi,%eax
ffffffff80415f5b:	89 fa                	mov    %edi,%edx
ffffffff80415f5d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80415f60:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80415f63:	0f 84 37 06 00 00    	je     ffffffff804165a0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415f69:	01 ea                	add    %ebp,%edx
ffffffff80415f6b:	44 39 ca             	cmp    %r9d,%edx
ffffffff80415f6e:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80415f72:	39 ea                	cmp    %ebp,%edx
ffffffff80415f74:	0f 86 b1 06 00 00    	jbe    ffffffff8041662b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa7b>
ffffffff80415f7a:	41 89 ea             	mov    %ebp,%r10d
ffffffff80415f7d:	41 f7 d2             	not    %r10d
ffffffff80415f80:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80415f84:	41 89 ca             	mov    %ecx,%r10d
ffffffff80415f87:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff80415f8b:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff80415f8f:	4c 01 d5             	add    %r10,%rbp
ffffffff80415f92:	45 31 d2             	xor    %r10d,%r10d
ffffffff80415f95:	48 01 ed             	add    %rbp,%rbp
ffffffff80415f98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80415f9f:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80415fa0:	66 47 0f be 34 10    	movsbw (%r8,%r10,1),%r14w
ffffffff80415fa6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80415fac:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80415fb3:	41 80 
ffffffff80415fb5:	4d 89 d6             	mov    %r10,%r14
ffffffff80415fb8:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80415fbc:	4d 39 de             	cmp    %r11,%r14
ffffffff80415fbf:	75 df                	jne    ffffffff80415fa0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3f0>
    if (current_col_ == num_cols_) {
ffffffff80415fc1:	41 39 d1             	cmp    %edx,%r9d
ffffffff80415fc4:	0f 84 ae 05 00 00    	je     ffffffff80416578 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c8>
    current_col_ = i;
ffffffff80415fca:	89 15 9c 80 00 00    	mov    %edx,0x809c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80415fd0:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80415fd3:	0f 84 bd 05 00 00    	je     ffffffff80416596 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9e6>
ffffffff80415fd9:	85 d2                	test   %edx,%edx
ffffffff80415fdb:	74 09                	je     ffffffff80415fe6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80415fdd:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80415fe0:	0f 86 2a 07 00 00    	jbe    ffffffff80416710 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80415fe6:	83 c7 01             	add    $0x1,%edi
ffffffff80415fe9:	39 f7                	cmp    %esi,%edi
ffffffff80415feb:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff80415fee:	89 f7                	mov    %esi,%edi
    size_ -= min(n, size_);
ffffffff80415ff0:	89 d5                	mov    %edx,%ebp
    str_ += n;
ffffffff80415ff2:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff80415ff5:	39 f0                	cmp    %esi,%eax
ffffffff80415ff7:	0f 46 f0             	cmovbe %eax,%esi
ffffffff80415ffa:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80415ffc:	85 c0                	test   %eax,%eax
ffffffff80415ffe:	0f 85 14 ff ff ff    	jne    ffffffff80415f18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x368>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416004:	85 c9                	test   %ecx,%ecx
ffffffff80416006:	74 6a                	je     ffffffff80416072 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff80416008:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041600b:	44 8b 0d 52 80 00 00 	mov    0x8052(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416012:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80416019:	31 ff                	xor    %edi,%edi
ffffffff8041601b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041601f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80416023:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80416029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80416030:	48 89 f3             	mov    %rsi,%rbx
ffffffff80416033:	89 fa                	mov    %edi,%edx
ffffffff80416035:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80416039:	45 85 c9             	test   %r9d,%r9d
ffffffff8041603c:	0f 84 2e 06 00 00    	je     ffffffff80416670 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xac0>
ffffffff80416042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80416048:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff8041604c:	89 d7                	mov    %edx,%edi
ffffffff8041604e:	83 c2 01             	add    $0x1,%edx
ffffffff80416051:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80416055:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff8041605c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041605e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80416061:	75 e5                	jne    ffffffff80416048 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x498>
ffffffff80416063:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041606a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041606d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80416070:	75 be                	jne    ffffffff80416030 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
    if (current_col_ != 0) {
ffffffff80416072:	85 ed                	test   %ebp,%ebp
ffffffff80416074:	74 3a                	je     ffffffff804160b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416076:	8b 35 e8 7f 00 00    	mov    0x7fe8(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041607c:	85 f6                	test   %esi,%esi
ffffffff8041607e:	74 30                	je     ffffffff804160b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80416080:	89 f2                	mov    %esi,%edx
ffffffff80416082:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80416086:	0f af d1             	imul   %ecx,%edx
ffffffff80416089:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041608d:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80416093:	01 d6                	add    %edx,%esi
ffffffff80416095:	0f 1f 00             	nopl   (%rax)
ffffffff80416098:	0f b7 08             	movzwl (%rax),%ecx
ffffffff8041609b:	89 d7                	mov    %edx,%edi
ffffffff8041609d:	83 c2 01             	add    $0x1,%edx
ffffffff804160a0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804160a4:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff804160ab:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804160ac:	39 d6                	cmp    %edx,%esi
ffffffff804160ae:	75 e8                	jne    ffffffff80416098 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x4e8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804160b0:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff804160b7:	e8 04 71 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff804160bc:	85 c0                	test   %eax,%eax
ffffffff804160be:	0f 84 f4 06 00 00    	je     ffffffff804167b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xc08>
ffffffff804160c4:	44 8b 25 95 7f 00 00 	mov    0x7f95(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804160cb:	44 8b 05 92 7f 00 00 	mov    0x7f92(%rip),%r8d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804160d2:	49 c7 c1 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r9
ffffffff804160d9:	8b 2d 8d 7f 00 00    	mov    0x7f8d(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804160df:	8b 0d 83 7f 00 00    	mov    0x7f83(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804160e5:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff804160ea:	45 8d 68 ff          	lea    -0x1(%r8),%r13d
ffffffff804160ee:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804160f2:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff804160f7:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff804160fb:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff80416102:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80416107:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041610b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff80416110:	48 89 d6             	mov    %rdx,%rsi
ffffffff80416113:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80416117:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff8041611b:	4c 01 ea             	add    %r13,%rdx
ffffffff8041611e:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff80416125:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8041612a:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff80416131:	80 
ffffffff80416132:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff80416137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041613e:	00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80416140:	44 89 c6             	mov    %r8d,%esi
ffffffff80416143:	89 c2                	mov    %eax,%edx
ffffffff80416145:	29 ee                	sub    %ebp,%esi
ffffffff80416147:	39 c6                	cmp    %eax,%esi
ffffffff80416149:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041614c:	39 c6                	cmp    %eax,%esi
ffffffff8041614e:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80416151:	85 d2                	test   %edx,%edx
ffffffff80416153:	0f 84 ff 03 00 00    	je     ffffffff80416558 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff80416159:	83 ea 01             	sub    $0x1,%edx
ffffffff8041615c:	31 db                	xor    %ebx,%ebx
ffffffff8041615e:	eb 10                	jmp    ffffffff80416170 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c0>
ffffffff80416160:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80416164:	48 39 da             	cmp    %rbx,%rdx
ffffffff80416167:	0f 84 eb 03 00 00    	je     ffffffff80416558 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff8041616d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80416170:	41 80 3c 19 0a       	cmpb   $0xa,(%r9,%rbx,1)
ffffffff80416175:	89 df                	mov    %ebx,%edi
ffffffff80416177:	75 e7                	jne    ffffffff80416160 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80416179:	39 f8                	cmp    %edi,%eax
ffffffff8041617b:	89 fa                	mov    %edi,%edx
ffffffff8041617d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80416180:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80416183:	0f 84 37 03 00 00    	je     ffffffff804164c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416189:	01 ea                	add    %ebp,%edx
ffffffff8041618b:	44 39 c2             	cmp    %r8d,%edx
ffffffff8041618e:	41 0f 47 d0          	cmova  %r8d,%edx
ffffffff80416192:	39 ea                	cmp    %ebp,%edx
ffffffff80416194:	0f 86 b1 03 00 00    	jbe    ffffffff8041654b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x99b>
ffffffff8041619a:	41 89 ea             	mov    %ebp,%r10d
ffffffff8041619d:	41 f7 d2             	not    %r10d
ffffffff804161a0:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff804161a4:	41 89 ca             	mov    %ecx,%r10d
ffffffff804161a7:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff804161ab:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff804161af:	4c 01 d5             	add    %r10,%rbp
ffffffff804161b2:	45 31 d2             	xor    %r10d,%r10d
ffffffff804161b5:	48 01 ed             	add    %rbp,%rbp
ffffffff804161b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804161bf:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804161c0:	66 47 0f be 34 11    	movsbw (%r9,%r10,1),%r14w
ffffffff804161c6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff804161cc:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff804161d3:	41 80 
ffffffff804161d5:	4d 89 d6             	mov    %r10,%r14
ffffffff804161d8:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804161dc:	4d 39 f3             	cmp    %r14,%r11
ffffffff804161df:	75 df                	jne    ffffffff804161c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x610>
    if (current_col_ == num_cols_) {
ffffffff804161e1:	41 39 d0             	cmp    %edx,%r8d
ffffffff804161e4:	0f 84 a6 02 00 00    	je     ffffffff80416490 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8e0>
    current_col_ = i;
ffffffff804161ea:	89 15 7c 7e 00 00    	mov    %edx,0x7e7c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804161f0:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804161f3:	0f 84 b5 02 00 00    	je     ffffffff804164ae <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8fe>
ffffffff804161f9:	85 d2                	test   %edx,%edx
ffffffff804161fb:	74 09                	je     ffffffff80416206 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff804161fd:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80416200:	0f 86 aa 04 00 00    	jbe    ffffffff804166b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb00>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80416206:	83 c7 01             	add    $0x1,%edi
ffffffff80416209:	39 f7                	cmp    %esi,%edi
ffffffff8041620b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff8041620e:	89 f7                	mov    %esi,%edi
ffffffff80416210:	89 d5                	mov    %edx,%ebp
ffffffff80416212:	49 01 f9             	add    %rdi,%r9
    size_ -= min(n, size_);
ffffffff80416215:	39 c6                	cmp    %eax,%esi
ffffffff80416217:	0f 47 f0             	cmova  %eax,%esi
ffffffff8041621a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff8041621c:	85 c0                	test   %eax,%eax
ffffffff8041621e:	0f 85 1c ff ff ff    	jne    ffffffff80416140 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416224:	85 c9                	test   %ecx,%ecx
ffffffff80416226:	74 6a                	je     ffffffff80416292 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80416228:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041622b:	44 8b 0d 32 7e 00 00 	mov    0x7e32(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416232:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80416239:	31 ff                	xor    %edi,%edi
ffffffff8041623b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041623f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80416243:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80416249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80416250:	48 89 f3             	mov    %rsi,%rbx
ffffffff80416253:	89 fa                	mov    %edi,%edx
ffffffff80416255:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80416259:	45 85 c9             	test   %r9d,%r9d
ffffffff8041625c:	0f 84 2e 04 00 00    	je     ffffffff80416690 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xae0>
ffffffff80416262:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80416268:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff8041626c:	89 d7                	mov    %edx,%edi
ffffffff8041626e:	83 c2 01             	add    $0x1,%edx
ffffffff80416271:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80416275:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff8041627c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041627e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80416281:	75 e5                	jne    ffffffff80416268 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6b8>
ffffffff80416283:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041628a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041628d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80416290:	75 be                	jne    ffffffff80416250 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
    if (current_col_ != 0) {
ffffffff80416292:	85 ed                	test   %ebp,%ebp
ffffffff80416294:	74 3a                	je     ffffffff804162d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416296:	8b 35 c8 7d 00 00    	mov    0x7dc8(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041629c:	85 f6                	test   %esi,%esi
ffffffff8041629e:	74 30                	je     ffffffff804162d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804162a0:	89 f2                	mov    %esi,%edx
ffffffff804162a2:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff804162a6:	0f af d1             	imul   %ecx,%edx
ffffffff804162a9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804162ad:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff804162b3:	01 d6                	add    %edx,%esi
ffffffff804162b5:	0f 1f 00             	nopl   (%rax)
ffffffff804162b8:	0f b7 08             	movzwl (%rax),%ecx
ffffffff804162bb:	89 d7                	mov    %edx,%edi
ffffffff804162bd:	83 c2 01             	add    $0x1,%edx
ffffffff804162c0:	48 83 c0 02          	add    $0x2,%rax
ffffffff804162c4:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff804162cb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804162cc:	39 d6                	cmp    %edx,%esi
ffffffff804162ce:	75 e8                	jne    ffffffff804162b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x708>
}
ffffffff804162d0:	48 83 c4 68          	add    $0x68,%rsp
ffffffff804162d4:	58                   	pop    %rax
ffffffff804162d5:	5a                   	pop    %rdx
ffffffff804162d6:	59                   	pop    %rcx
ffffffff804162d7:	5b                   	pop    %rbx
ffffffff804162d8:	5e                   	pop    %rsi
ffffffff804162d9:	5f                   	pop    %rdi
ffffffff804162da:	5d                   	pop    %rbp
ffffffff804162db:	41 58                	pop    %r8
ffffffff804162dd:	41 59                	pop    %r9
ffffffff804162df:	41 5a                	pop    %r10
ffffffff804162e1:	41 5b                	pop    %r11
ffffffff804162e3:	41 5c                	pop    %r12
ffffffff804162e5:	41 5d                	pop    %r13
ffffffff804162e7:	41 5e                	pop    %r14
ffffffff804162e9:	41 5f                	pop    %r15
ffffffff804162eb:	48 83 c4 08          	add    $0x8,%rsp
ffffffff804162ef:	48 cf                	iretq  
ffffffff804162f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804162f8:	83 ff 01             	cmp    $0x1,%edi
ffffffff804162fb:	76 53                	jbe    ffffffff80416350 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a0>
ffffffff804162fd:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80416303:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416308:	45 31 e4             	xor    %r12d,%r12d
ffffffff8041630b:	4d 8d ab 60 ff ff ff 	lea    -0xa0(%r11),%r13
ffffffff80416312:	45 85 c9             	test   %r9d,%r9d
ffffffff80416315:	74 2b                	je     ffffffff80416342 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x792>
ffffffff80416317:	89 44 24 08          	mov    %eax,0x8(%rsp)
ffffffff8041631b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80416320:	43 0f b7 84 63 70 e0 	movzwl -0x7fbe1f90(%r11,%r12,2),%eax
ffffffff80416327:	41 80 
ffffffff80416329:	66 43 89 84 65 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%r12,2)
ffffffff80416330:	41 80 
ffffffff80416332:	4c 89 e0             	mov    %r12,%rax
ffffffff80416335:	49 83 c4 01          	add    $0x1,%r12
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416339:	49 39 c7             	cmp    %rax,%r15
ffffffff8041633c:	75 e2                	jne    ffffffff80416320 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff8041633e:	8b 44 24 08          	mov    0x8(%rsp),%eax
ffffffff80416342:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416349:	4c 3b 5c 24 20       	cmp    0x20(%rsp),%r11
ffffffff8041634e:	75 b8                	jne    ffffffff80416308 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416350:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80416355:	45 85 c9             	test   %r9d,%r9d
ffffffff80416358:	74 17                	je     ffffffff80416371 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c1>
ffffffff8041635a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416360:	66 41 c7 03 00 00    	movw   $0x0,(%r11)
ffffffff80416366:	49 83 c3 02          	add    $0x2,%r11
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041636a:	4c 3b 5c 24 18       	cmp    0x18(%rsp),%r11
ffffffff8041636f:	75 ef                	jne    ffffffff80416360 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416371:	44 01 c2             	add    %r8d,%edx
      current_row_--;
ffffffff80416374:	83 ef 01             	sub    $0x1,%edi
ffffffff80416377:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041637a:	89 3d e8 7c 00 00    	mov    %edi,0x7ce8(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416380:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416384:	41 39 d0             	cmp    %edx,%r8d
ffffffff80416387:	0f 82 47 f9 ff ff    	jb     ffffffff80415cd4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x124>
ffffffff8041638d:	44 89 c2             	mov    %r8d,%edx
    if (current_col_ == num_cols_) {
ffffffff80416390:	44 39 ca             	cmp    %r9d,%edx
ffffffff80416393:	0f 85 89 f9 ff ff    	jne    ffffffff80415d22 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x172>
ffffffff80416399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff804163a0:	c7 05 c2 7c 00 00 00 	movl   $0x0,0x7cc2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804163a7:	00 00 00 
      current_row_++;
ffffffff804163aa:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804163ad:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804163af:	89 3d b3 7c 00 00    	mov    %edi,0x7cb3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804163b5:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff804163b8:	0f 85 80 f9 ff ff    	jne    ffffffff80415d3e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff804163be:	39 ce                	cmp    %ecx,%esi
ffffffff804163c0:	0f 47 f1             	cmova  %ecx,%esi
ffffffff804163c3:	e9 7e f9 ff ff       	jmpq   ffffffff80415d46 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x196>
ffffffff804163c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804163cf:	00 
    if (count == npos) {
ffffffff804163d0:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff804163d3:	75 1b                	jne    ffffffff804163f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x840>
ffffffff804163d5:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff804163da:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff804163df:	89 c2                	mov    %eax,%edx
ffffffff804163e1:	e9 d2 f8 ff ff       	jmpq   ffffffff80415cb8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x108>
ffffffff804163e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804163ed:	00 00 00 
ffffffff804163f0:	89 f1                	mov    %esi,%ecx
ffffffff804163f2:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff804163f7:	e9 b5 f8 ff ff       	jmpq   ffffffff80415cb1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x101>
ffffffff804163fc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80416400:	41 89 c9             	mov    %ecx,%r9d
ffffffff80416403:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041640a:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041640d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80416410:	0f 85 72 f9 ff ff    	jne    ffffffff80415d88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
ffffffff80416416:	e9 b0 f9 ff ff       	jmpq   ffffffff80415dcb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff8041641b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416420:	44 39 ca             	cmp    %r9d,%edx
ffffffff80416423:	73 4a                	jae    ffffffff8041646f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8bf>
ffffffff80416425:	89 fd                	mov    %edi,%ebp
ffffffff80416427:	41 89 d3             	mov    %edx,%r11d
ffffffff8041642a:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
ffffffff8041642f:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80416433:	4d 8d 44 2b 08       	lea    0x8(%r11,%rbp,1),%r8
ffffffff80416438:	4c 01 dd             	add    %r11,%rbp
ffffffff8041643b:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
ffffffff80416440:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80416447:	80 
ffffffff80416448:	41 29 d3             	sub    %edx,%r11d
ffffffff8041644b:	4c 01 dd             	add    %r11,%rbp
ffffffff8041644e:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80416455:	80 
ffffffff80416456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041645d:	00 00 00 
          text_buffer_[current_row_][i] = 0;
ffffffff80416460:	66 41 c7 00 00 00    	movw   $0x0,(%r8)
ffffffff80416466:	49 83 c0 02          	add    $0x2,%r8
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041646a:	49 39 d0             	cmp    %rdx,%r8
ffffffff8041646d:	75 f1                	jne    ffffffff80416460 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b0>
        current_col_ = 0;
ffffffff8041646f:	c7 05 f3 7b 00 00 00 	movl   $0x0,0x7bf3(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80416476:	00 00 00 
        current_row_++;
ffffffff80416479:	83 c7 01             	add    $0x1,%edi
ffffffff8041647c:	31 d2                	xor    %edx,%edx
ffffffff8041647e:	89 3d e4 7b 00 00    	mov    %edi,0x7be4(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416484:	e9 b5 f8 ff ff       	jmpq   ffffffff80415d3e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80416489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80416490:	c7 05 d2 7b 00 00 00 	movl   $0x0,0x7bd2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80416497:	00 00 00 
      current_row_++;
ffffffff8041649a:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041649d:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041649f:	89 0d c3 7b 00 00    	mov    %ecx,0x7bc3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804164a5:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804164a8:	0f 85 58 fd ff ff    	jne    ffffffff80416206 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff804164ae:	39 fe                	cmp    %edi,%esi
ffffffff804164b0:	0f 47 f7             	cmova  %edi,%esi
  constexpr void remove_prefix(size_t n) {
ffffffff804164b3:	e9 56 fd ff ff       	jmpq   ffffffff8041620e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x65e>
ffffffff804164b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804164bf:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804164c0:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff804164c4:	76 46                	jbe    ffffffff8041650c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x95c>
ffffffff804164c6:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff804164cc:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804164d0:	45 31 db             	xor    %r11d,%r11d
ffffffff804164d3:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff804164da:	45 85 c0             	test   %r8d,%r8d
ffffffff804164dd:	74 1f                	je     ffffffff804164fe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x94e>
ffffffff804164df:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804164e0:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff804164e7:	41 80 
ffffffff804164e9:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff804164f0:	41 80 
ffffffff804164f2:	4d 89 df             	mov    %r11,%r15
ffffffff804164f5:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804164f9:	4d 39 ef             	cmp    %r13,%r15
ffffffff804164fc:	75 e2                	jne    ffffffff804164e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x930>
ffffffff804164fe:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416505:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff8041650a:	75 c4                	jne    ffffffff804164d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041650c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80416511:	45 85 c0             	test   %r8d,%r8d
ffffffff80416514:	74 1b                	je     ffffffff80416531 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x981>
ffffffff80416516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041651d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416520:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80416526:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041652a:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041652f:	75 ef                	jne    ffffffff80416520 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x970>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416531:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80416533:	83 e9 01             	sub    $0x1,%ecx
ffffffff80416536:	44 39 c2             	cmp    %r8d,%edx
ffffffff80416539:	89 0d 29 7b 00 00    	mov    %ecx,0x7b29(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041653f:	41 0f 47 d0          	cmova  %r8d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416543:	39 ea                	cmp    %ebp,%edx
ffffffff80416545:	0f 87 4f fc ff ff    	ja     ffffffff8041619a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5ea>
ffffffff8041654b:	89 ea                	mov    %ebp,%edx
ffffffff8041654d:	e9 8f fc ff ff       	jmpq   ffffffff804161e1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x631>
ffffffff80416552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (count == npos) {
ffffffff80416558:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff8041655b:	0f 85 ef 00 00 00    	jne    ffffffff80416650 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
ffffffff80416561:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80416566:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff8041656b:	89 c2                	mov    %eax,%edx
ffffffff8041656d:	e9 0e fc ff ff       	jmpq   ffffffff80416180 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5d0>
ffffffff80416572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80416578:	c7 05 ea 7a 00 00 00 	movl   $0x0,0x7aea(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041657f:	00 00 00 
      current_row_++;
ffffffff80416582:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416585:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80416587:	89 0d db 7a 00 00    	mov    %ecx,0x7adb(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041658d:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80416590:	0f 85 50 fa ff ff    	jne    ffffffff80415fe6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80416596:	39 fe                	cmp    %edi,%esi
ffffffff80416598:	0f 47 f7             	cmova  %edi,%esi
ffffffff8041659b:	e9 4e fa ff ff       	jmpq   ffffffff80415fee <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x43e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804165a0:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff804165a4:	76 46                	jbe    ffffffff804165ec <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa3c>
ffffffff804165a6:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff804165ac:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804165b0:	45 31 db             	xor    %r11d,%r11d
ffffffff804165b3:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff804165ba:	45 85 c9             	test   %r9d,%r9d
ffffffff804165bd:	74 1f                	je     ffffffff804165de <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa2e>
ffffffff804165bf:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804165c0:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff804165c7:	41 80 
ffffffff804165c9:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff804165d0:	41 80 
ffffffff804165d2:	4d 89 df             	mov    %r11,%r15
ffffffff804165d5:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804165d9:	4d 39 ef             	cmp    %r13,%r15
ffffffff804165dc:	75 e2                	jne    ffffffff804165c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff804165de:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804165e5:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff804165ea:	75 c4                	jne    ffffffff804165b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa00>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804165ec:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
ffffffff804165f1:	45 85 c9             	test   %r9d,%r9d
ffffffff804165f4:	74 1b                	je     ffffffff80416611 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa61>
ffffffff804165f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804165fd:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416600:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80416606:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041660a:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
ffffffff8041660f:	75 ef                	jne    ffffffff80416600 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xa50>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416611:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80416613:	83 e9 01             	sub    $0x1,%ecx
ffffffff80416616:	44 39 ca             	cmp    %r9d,%edx
ffffffff80416619:	89 0d 49 7a 00 00    	mov    %ecx,0x7a49(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041661f:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416623:	39 ea                	cmp    %ebp,%edx
ffffffff80416625:	0f 87 4f f9 ff ff    	ja     ffffffff80415f7a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3ca>
ffffffff8041662b:	89 ea                	mov    %ebp,%edx
ffffffff8041662d:	e9 8f f9 ff ff       	jmpq   ffffffff80415fc1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x411>
ffffffff80416632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80416638:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff8041663b:	75 23                	jne    ffffffff80416660 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xab0>
ffffffff8041663d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80416642:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff80416647:	89 c2                	mov    %eax,%edx
ffffffff80416649:	e9 12 f9 ff ff       	jmpq   ffffffff80415f60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b0>
ffffffff8041664e:	66 90                	xchg   %ax,%ax
ffffffff80416650:	89 f7                	mov    %esi,%edi
ffffffff80416652:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80416657:	e9 1d fb ff ff       	jmpq   ffffffff80416179 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c9>
ffffffff8041665c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80416660:	89 f7                	mov    %esi,%edi
ffffffff80416662:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80416667:	e9 ed f8 ff ff       	jmpq   ffffffff80415f59 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a9>
ffffffff8041666c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80416670:	41 89 f8             	mov    %edi,%r8d
ffffffff80416673:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041667a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041667d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80416680:	0f 85 aa f9 ff ff    	jne    ffffffff80416030 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
ffffffff80416686:	e9 e7 f9 ff ff       	jmpq   ffffffff80416072 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff8041668b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80416690:	41 89 f8             	mov    %edi,%r8d
ffffffff80416693:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041669a:	44 89 c7             	mov    %r8d,%edi
ffffffff8041669d:	48 39 f0             	cmp    %rsi,%rax
ffffffff804166a0:	0f 85 aa fb ff ff    	jne    ffffffff80416250 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
ffffffff804166a6:	e9 e7 fb ff ff       	jmpq   ffffffff80416292 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff804166ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804166b0:	41 39 d0             	cmp    %edx,%r8d
ffffffff804166b3:	76 41                	jbe    ffffffff804166f6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb46>
ffffffff804166b5:	89 cb                	mov    %ecx,%ebx
ffffffff804166b7:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff804166bc:	41 89 d2             	mov    %edx,%r10d
ffffffff804166bf:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff804166c3:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804166c7:	41 29 d7             	sub    %edx,%r15d
ffffffff804166ca:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff804166cf:	4c 01 d5             	add    %r10,%rbp
ffffffff804166d2:	4c 01 fd             	add    %r15,%rbp
ffffffff804166d5:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff804166dc:	80 
ffffffff804166dd:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff804166e4:	80 
ffffffff804166e5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff804166e8:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff804166ed:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804166f1:	48 39 da             	cmp    %rbx,%rdx
ffffffff804166f4:	75 f2                	jne    ffffffff804166e8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb38>
        current_col_ = 0;
ffffffff804166f6:	c7 05 6c 79 00 00 00 	movl   $0x0,0x796c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804166fd:	00 00 00 
        current_row_++;
ffffffff80416700:	83 c1 01             	add    $0x1,%ecx
ffffffff80416703:	31 d2                	xor    %edx,%edx
ffffffff80416705:	89 0d 5d 79 00 00    	mov    %ecx,0x795d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041670b:	e9 f6 fa ff ff       	jmpq   ffffffff80416206 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416710:	41 39 d1             	cmp    %edx,%r9d
ffffffff80416713:	76 41                	jbe    ffffffff80416756 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xba6>
ffffffff80416715:	89 cb                	mov    %ecx,%ebx
ffffffff80416717:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff8041671c:	41 89 d2             	mov    %edx,%r10d
ffffffff8041671f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80416723:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80416727:	41 29 d7             	sub    %edx,%r15d
ffffffff8041672a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff8041672f:	4c 01 d5             	add    %r10,%rbp
ffffffff80416732:	4c 01 fd             	add    %r15,%rbp
ffffffff80416735:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff8041673c:	80 
ffffffff8041673d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80416744:	80 
ffffffff80416745:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80416748:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff8041674d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80416751:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80416754:	75 f2                	jne    ffffffff80416748 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0xb98>
        current_col_ = 0;
ffffffff80416756:	c7 05 0c 79 00 00 00 	movl   $0x0,0x790c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041675d:	00 00 00 
        current_row_++;
ffffffff80416760:	83 c1 01             	add    $0x1,%ecx
ffffffff80416763:	31 d2                	xor    %edx,%edx
ffffffff80416765:	89 0d fd 78 00 00    	mov    %ecx,0x78fd(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041676b:	e9 76 f8 ff ff       	jmpq   ffffffff80415fe6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80416770:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
    str[0] = 'E';
ffffffff80416775:	66 c7 44 24 38 45 00 	movw   $0x45,0x38(%rsp)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041677c:	48 89 df             	mov    %rbx,%rdi
ffffffff8041677f:	e8 3c 6a ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80416784:	85 c0                	test   %eax,%eax
ffffffff80416786:	0f 85 17 f7 ff ff    	jne    ffffffff80415ea3 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x2f3>
ffffffff8041678c:	8b 2d da 78 00 00    	mov    0x78da(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80416792:	8b 0d d0 78 00 00    	mov    0x78d0(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416798:	e9 67 f8 ff ff       	jmpq   ffffffff80416004 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x454>
ffffffff8041679d:	0f 1f 00             	nopl   (%rax)
ffffffff804167a0:	44 8b 05 c5 78 00 00 	mov    0x78c5(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804167a7:	8b 3d bb 78 00 00    	mov    0x78bb(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804167ad:	e9 ab f5 ff ff       	jmpq   ffffffff80415d5d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x1ad>
ffffffff804167b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804167b8:	8b 0d aa 78 00 00    	mov    0x78aa(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804167be:	8b 2d a8 78 00 00    	mov    0x78a8(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804167c4:	e9 5b fa ff ff       	jmpq   ffffffff80416224 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi14EEEvPNS_23CPUInterruptHandlerArgsEm+0x674>
ffffffff804167c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff804167d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm>:
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff804167d0:	41 57                	push   %r15
ffffffff804167d2:	41 56                	push   %r14
ffffffff804167d4:	41 55                	push   %r13
ffffffff804167d6:	41 54                	push   %r12
ffffffff804167d8:	41 53                	push   %r11
ffffffff804167da:	41 52                	push   %r10
ffffffff804167dc:	41 51                	push   %r9
ffffffff804167de:	41 50                	push   %r8
ffffffff804167e0:	55                   	push   %rbp
ffffffff804167e1:	57                   	push   %rdi
ffffffff804167e2:	56                   	push   %rsi
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804167e3:	be 11 00 00 00       	mov    $0x11,%esi
__attribute__((interrupt)) void CPUInterruptHandlerWithErrorCode(
ffffffff804167e8:	53                   	push   %rbx
ffffffff804167e9:	51                   	push   %rcx
ffffffff804167ea:	52                   	push   %rdx
ffffffff804167eb:	50                   	push   %rax
ffffffff804167ec:	48 83 ec 68          	sub    $0x68,%rsp
ffffffff804167f0:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
ffffffff804167f7:	00 
  PrintCPUInterruptFrame(args, INT_NUM);
ffffffff804167f8:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
ffffffff804167ff:	00 
ffffffff80416800:	fc                   	cld    
ffffffff80416801:	e8 ca 74 ff ff       	callq  ffffffff8040dcd0 <_ZN6Kernel12_GLOBAL__N_122PrintCPUInterruptFrameEPNS_23CPUInterruptHandlerArgsEj>
ffffffff80416806:	48 c7 c7 66 b8 41 80 	mov    $0xffffffff8041b866,%rdi
ffffffff8041680d:	e8 ae 69 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
ffffffff80416812:	85 c0                	test   %eax,%eax
ffffffff80416814:	0f 84 a6 0b 00 00    	je     ffffffff804173c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xbf0>
ffffffff8041681a:	44 8b 2d 3f 78 00 00 	mov    0x783f(%rip),%r13d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80416821:	44 8b 0d 3c 78 00 00 	mov    0x783c(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416828:	49 c7 c2 66 b8 41 80 	mov    $0xffffffff8041b866,%r10
ffffffff8041682f:	44 8b 05 36 78 00 00 	mov    0x7836(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80416836:	8b 3d 2c 78 00 00    	mov    0x782c(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041683c:	41 8d 55 fe          	lea    -0x2(%r13),%edx
ffffffff80416840:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
ffffffff80416844:	45 89 ee             	mov    %r13d,%r14d
ffffffff80416847:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041684b:	44 89 7c 24 2c       	mov    %r15d,0x2c(%rsp)
ffffffff80416850:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80416854:	48 8d 8a 40 01 00 00 	lea    0x140(%rdx),%rcx
ffffffff8041685b:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff8041685f:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80416863:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
ffffffff80416868:	48 89 d6             	mov    %rdx,%rsi
ffffffff8041686b:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041686f:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80416873:	4c 01 fa             	add    %r15,%rdx
ffffffff80416876:	48 8d 8e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rcx
ffffffff8041687d:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
ffffffff80416882:	48 8d 8c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rcx
ffffffff80416889:	80 
ffffffff8041688a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8041688f:	90                   	nop
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80416890:	44 89 ce             	mov    %r9d,%esi
ffffffff80416893:	44 29 c6             	sub    %r8d,%esi
ffffffff80416896:	39 c6                	cmp    %eax,%esi
ffffffff80416898:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041689b:	39 f0                	cmp    %esi,%eax
ffffffff8041689d:	89 f2                	mov    %esi,%edx
ffffffff8041689f:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff804168a2:	85 d2                	test   %edx,%edx
ffffffff804168a4:	0f 84 46 07 00 00    	je     ffffffff80416ff0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff804168aa:	83 ea 01             	sub    $0x1,%edx
ffffffff804168ad:	31 ed                	xor    %ebp,%ebp
ffffffff804168af:	eb 17                	jmp    ffffffff804168c8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xf8>
ffffffff804168b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff804168b8:	48 8d 4d 01          	lea    0x1(%rbp),%rcx
ffffffff804168bc:	48 39 d5             	cmp    %rdx,%rbp
ffffffff804168bf:	0f 84 2b 07 00 00    	je     ffffffff80416ff0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x820>
ffffffff804168c5:	48 89 cd             	mov    %rcx,%rbp
      if (str_[i] == c) {
ffffffff804168c8:	41 80 3c 2a 0a       	cmpb   $0xa,(%r10,%rbp,1)
ffffffff804168cd:	89 e9                	mov    %ebp,%ecx
ffffffff804168cf:	75 e7                	jne    ffffffff804168b8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xe8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff804168d1:	39 c8                	cmp    %ecx,%eax
ffffffff804168d3:	89 ca                	mov    %ecx,%edx
ffffffff804168d5:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff804168d8:	44 39 f7             	cmp    %r14d,%edi
ffffffff804168db:	0f 84 37 06 00 00    	je     ffffffff80416f18 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x748>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804168e1:	44 01 c2             	add    %r8d,%edx
ffffffff804168e4:	44 39 ca             	cmp    %r9d,%edx
ffffffff804168e7:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff804168eb:	41 39 d0             	cmp    %edx,%r8d
ffffffff804168ee:	0f 83 b9 06 00 00    	jae    ffffffff80416fad <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7dd>
ffffffff804168f4:	45 89 c3             	mov    %r8d,%r11d
ffffffff804168f7:	41 f7 d3             	not    %r11d
ffffffff804168fa:	45 8d 24 13          	lea    (%r11,%rdx,1),%r12d
ffffffff804168fe:	41 89 fb             	mov    %edi,%r11d
ffffffff80416901:	4f 8d 1c 9b          	lea    (%r11,%r11,4),%r11
ffffffff80416905:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80416909:	4d 01 d8             	add    %r11,%r8
ffffffff8041690c:	45 31 db             	xor    %r11d,%r11d
ffffffff8041690f:	4d 01 c0             	add    %r8,%r8
ffffffff80416912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80416918:	66 47 0f be 2c 1a    	movsbw (%r10,%r11,1),%r13w
ffffffff8041691e:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff80416924:	66 47 89 ac 58 70 e0 	mov    %r13w,-0x7fbe1f90(%r8,%r11,2)
ffffffff8041692b:	41 80 
ffffffff8041692d:	4d 89 dd             	mov    %r11,%r13
ffffffff80416930:	49 83 c3 01          	add    $0x1,%r11
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416934:	4d 39 e5             	cmp    %r12,%r13
ffffffff80416937:	75 df                	jne    ffffffff80416918 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x148>
    if (current_col_ == num_cols_) {
ffffffff80416939:	44 39 ca             	cmp    %r9d,%edx
ffffffff8041693c:	0f 84 7e 06 00 00    	je     ffffffff80416fc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7f0>
    current_col_ = i;
ffffffff80416942:	89 15 24 77 00 00    	mov    %edx,0x7724(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416948:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff8041694b:	0f 84 8d 06 00 00    	je     ffffffff80416fde <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x80e>
ffffffff80416951:	85 d2                	test   %edx,%edx
ffffffff80416953:	74 09                	je     ffffffff8041695e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80416955:	83 ff 18             	cmp    $0x18,%edi
ffffffff80416958:	0f 86 e2 06 00 00    	jbe    ffffffff80417040 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x870>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041695e:	83 c1 01             	add    $0x1,%ecx
ffffffff80416961:	39 f1                	cmp    %esi,%ecx
ffffffff80416963:	0f 46 f1             	cmovbe %ecx,%esi
    str_ += n;
ffffffff80416966:	89 f1                	mov    %esi,%ecx
    size_ -= min(n, size_);
ffffffff80416968:	41 89 d0             	mov    %edx,%r8d
    str_ += n;
ffffffff8041696b:	49 01 ca             	add    %rcx,%r10
    size_ -= min(n, size_);
ffffffff8041696e:	39 c6                	cmp    %eax,%esi
ffffffff80416970:	0f 47 f0             	cmova  %eax,%esi
ffffffff80416973:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80416975:	85 c0                	test   %eax,%eax
ffffffff80416977:	0f 85 13 ff ff ff    	jne    ffffffff80416890 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xc0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041697d:	85 ff                	test   %edi,%edi
ffffffff8041697f:	74 6a                	je     ffffffff804169eb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff80416981:	8d 47 ff             	lea    -0x1(%rdi),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416984:	44 8b 15 d9 76 00 00 	mov    0x76d9(%rip),%r10d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041698b:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80416992:	31 c9                	xor    %ecx,%ecx
ffffffff80416994:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80416998:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041699c:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff804169a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804169a8:	48 89 f5             	mov    %rsi,%rbp
ffffffff804169ab:	89 ca                	mov    %ecx,%edx
ffffffff804169ad:	46 8d 0c 11          	lea    (%rcx,%r10,1),%r9d
ffffffff804169b1:	45 85 d2             	test   %r10d,%r10d
ffffffff804169b4:	0f 84 66 06 00 00    	je     ffffffff80417020 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x850>
ffffffff804169ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804169c0:	44 0f b7 5d 00       	movzwl 0x0(%rbp),%r11d
ffffffff804169c5:	89 d1                	mov    %edx,%ecx
ffffffff804169c7:	83 c2 01             	add    $0x1,%edx
ffffffff804169ca:	48 83 c5 02          	add    $0x2,%rbp
ffffffff804169ce:	66 44 89 9c 09 00 80 	mov    %r11w,0xb8000(%rcx,%rcx,1)
ffffffff804169d5:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804169d7:	44 39 ca             	cmp    %r9d,%edx
ffffffff804169da:	75 e4                	jne    ffffffff804169c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1f0>
ffffffff804169dc:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804169e3:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804169e6:	48 39 f0             	cmp    %rsi,%rax
ffffffff804169e9:	75 bd                	jne    ffffffff804169a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
    if (current_col_ != 0) {
ffffffff804169eb:	45 85 c0             	test   %r8d,%r8d
ffffffff804169ee:	74 38                	je     ffffffff80416a28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804169f0:	8b 35 6e 76 00 00    	mov    0x766e(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804169f6:	85 f6                	test   %esi,%esi
ffffffff804169f8:	74 2e                	je     ffffffff80416a28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804169fa:	89 fa                	mov    %edi,%edx
ffffffff804169fc:	48 8d 04 bf          	lea    (%rdi,%rdi,4),%rax
ffffffff80416a00:	0f af d6             	imul   %esi,%edx
ffffffff80416a03:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80416a07:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80416a0d:	01 d6                	add    %edx,%esi
ffffffff80416a0f:	90                   	nop
ffffffff80416a10:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80416a13:	89 d7                	mov    %edx,%edi
ffffffff80416a15:	83 c2 01             	add    $0x1,%edx
ffffffff80416a18:	48 83 c0 02          	add    $0x2,%rax
ffffffff80416a1c:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80416a23:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416a24:	39 f2                	cmp    %esi,%edx
ffffffff80416a26:	75 e8                	jne    ffffffff80416a10 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x240>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416a28:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80416a2d:	0f 1f 00             	nopl   (%rax)
    buffer[i] = num % base;
ffffffff80416a30:	48 89 da             	mov    %rbx,%rdx
    num_len++;
ffffffff80416a33:	89 c6                	mov    %eax,%esi
    buffer[i] = num % base;
ffffffff80416a35:	83 e2 0f             	and    $0xf,%edx
ffffffff80416a38:	88 54 04 4b          	mov    %dl,0x4b(%rsp,%rax,1)
ffffffff80416a3c:	48 89 da             	mov    %rbx,%rdx
    num /= base;
ffffffff80416a3f:	48 c1 eb 04          	shr    $0x4,%rbx
    if (num == 0) {
ffffffff80416a43:	48 83 fa 0f          	cmp    $0xf,%rdx
ffffffff80416a47:	76 0f                	jbe    ffffffff80416a58 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x288>
ffffffff80416a49:	48 83 c0 01          	add    $0x1,%rax
  for (size_t i = 0; i < size; i++) {
ffffffff80416a4d:	48 83 f8 15          	cmp    $0x15,%rax
ffffffff80416a51:	75 dd                	jne    ffffffff80416a30 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x260>
ffffffff80416a53:	be 14 00 00 00       	mov    $0x14,%esi
  if (num != 0) {
ffffffff80416a58:	48 85 db             	test   %rbx,%rbx
ffffffff80416a5b:	0f 85 2f 09 00 00    	jne    ffffffff80417390 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xbc0>
ffffffff80416a61:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
ffffffff80416a66:	89 f7                	mov    %esi,%edi
    str[offset++] = '0';
ffffffff80416a68:	66 c7 44 24 38 30 78 	movw   $0x7830,0x38(%rsp)
ffffffff80416a6f:	48 01 df             	add    %rbx,%rdi
ffffffff80416a72:	48 89 da             	mov    %rbx,%rdx
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80416a75:	8d 4c 1e ff          	lea    -0x1(%rsi,%rbx,1),%ecx
ffffffff80416a79:	eb 14                	jmp    ffffffff80416a8f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
ffffffff80416a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      str[i + offset] = 'A' + buffer[num_len - i - 1] - 10;
ffffffff80416a80:	83 c0 37             	add    $0x37,%eax
ffffffff80416a83:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80416a87:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80416a8a:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80416a8d:	74 1c                	je     ffffffff80416aab <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x2db>
    if (buffer[num_len - i - 1] >= 10) {
ffffffff80416a8f:	89 c8                	mov    %ecx,%eax
ffffffff80416a91:	29 d0                	sub    %edx,%eax
ffffffff80416a93:	0f b6 44 04 4c       	movzbl 0x4c(%rsp,%rax,1),%eax
ffffffff80416a98:	3c 09                	cmp    $0x9,%al
ffffffff80416a9a:	7f e4                	jg     ffffffff80416a80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x2b0>
      str[i + offset] = '0' + buffer[num_len - i - 1];
ffffffff80416a9c:	83 c0 30             	add    $0x30,%eax
ffffffff80416a9f:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80416aa3:	88 42 01             	mov    %al,0x1(%rdx)
  for (size_t i = 0; i < num_len; i++) {
ffffffff80416aa6:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80416aa9:	75 e4                	jne    ffffffff80416a8f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x2bf>
  str[num_len + offset] = 0;
ffffffff80416aab:	8d 46 02             	lea    0x2(%rsi),%eax
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80416aae:	48 89 df             	mov    %rbx,%rdi
ffffffff80416ab1:	c6 44 04 38 00       	movb   $0x0,0x38(%rsp,%rax,1)
ffffffff80416ab6:	e8 05 67 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80416abb:	85 c0                	test   %eax,%eax
ffffffff80416abd:	0f 84 e9 08 00 00    	je     ffffffff804173ac <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xbdc>
ffffffff80416ac3:	44 8b 25 96 75 00 00 	mov    0x7596(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80416aca:	44 8b 0d 93 75 00 00 	mov    0x7593(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416ad1:	49 89 d8             	mov    %rbx,%r8
ffffffff80416ad4:	8b 2d 92 75 00 00    	mov    0x7592(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80416ada:	8b 0d 88 75 00 00    	mov    0x7588(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416ae0:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80416ae5:	45 8d 69 ff          	lea    -0x1(%r9),%r13d
ffffffff80416ae9:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80416aed:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80416af2:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80416af6:	48 8d ba 40 01 00 00 	lea    0x140(%rdx),%rdi
ffffffff80416afd:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80416b02:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80416b06:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
ffffffff80416b0b:	48 89 d6             	mov    %rdx,%rsi
ffffffff80416b0e:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80416b12:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80416b16:	4c 01 ea             	add    %r13,%rdx
ffffffff80416b19:	48 8d be 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rdi
ffffffff80416b20:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
ffffffff80416b25:	48 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rdi
ffffffff80416b2c:	80 
ffffffff80416b2d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80416b32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80416b38:	44 89 ce             	mov    %r9d,%esi
ffffffff80416b3b:	89 c2                	mov    %eax,%edx
ffffffff80416b3d:	29 ee                	sub    %ebp,%esi
ffffffff80416b3f:	39 c6                	cmp    %eax,%esi
ffffffff80416b41:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80416b44:	39 c6                	cmp    %eax,%esi
ffffffff80416b46:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80416b49:	85 d2                	test   %edx,%edx
ffffffff80416b4b:	0f 84 07 07 00 00    	je     ffffffff80417258 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80416b51:	83 ea 01             	sub    $0x1,%edx
ffffffff80416b54:	31 db                	xor    %ebx,%ebx
ffffffff80416b56:	eb 18                	jmp    ffffffff80416b70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a0>
ffffffff80416b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80416b5f:	00 
ffffffff80416b60:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80416b64:	48 39 da             	cmp    %rbx,%rdx
ffffffff80416b67:	0f 84 eb 06 00 00    	je     ffffffff80417258 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa88>
ffffffff80416b6d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80416b70:	41 80 3c 18 0a       	cmpb   $0xa,(%r8,%rbx,1)
ffffffff80416b75:	89 df                	mov    %ebx,%edi
ffffffff80416b77:	75 e7                	jne    ffffffff80416b60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x390>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80416b79:	39 f8                	cmp    %edi,%eax
ffffffff80416b7b:	89 fa                	mov    %edi,%edx
ffffffff80416b7d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80416b80:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80416b83:	0f 84 37 06 00 00    	je     ffffffff804171c0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9f0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416b89:	01 ea                	add    %ebp,%edx
ffffffff80416b8b:	44 39 ca             	cmp    %r9d,%edx
ffffffff80416b8e:	41 0f 47 d1          	cmova  %r9d,%edx
ffffffff80416b92:	39 ea                	cmp    %ebp,%edx
ffffffff80416b94:	0f 86 b1 06 00 00    	jbe    ffffffff8041724b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa7b>
ffffffff80416b9a:	41 89 ea             	mov    %ebp,%r10d
ffffffff80416b9d:	41 f7 d2             	not    %r10d
ffffffff80416ba0:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80416ba4:	41 89 ca             	mov    %ecx,%r10d
ffffffff80416ba7:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff80416bab:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff80416baf:	4c 01 d5             	add    %r10,%rbp
ffffffff80416bb2:	45 31 d2             	xor    %r10d,%r10d
ffffffff80416bb5:	48 01 ed             	add    %rbp,%rbp
ffffffff80416bb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80416bbf:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80416bc0:	66 47 0f be 34 10    	movsbw (%r8,%r10,1),%r14w
ffffffff80416bc6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80416bcc:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80416bd3:	41 80 
ffffffff80416bd5:	4d 89 d6             	mov    %r10,%r14
ffffffff80416bd8:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416bdc:	4d 39 de             	cmp    %r11,%r14
ffffffff80416bdf:	75 df                	jne    ffffffff80416bc0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3f0>
    if (current_col_ == num_cols_) {
ffffffff80416be1:	41 39 d1             	cmp    %edx,%r9d
ffffffff80416be4:	0f 84 ae 05 00 00    	je     ffffffff80417198 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9c8>
    current_col_ = i;
ffffffff80416bea:	89 15 7c 74 00 00    	mov    %edx,0x747c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416bf0:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80416bf3:	0f 84 bd 05 00 00    	je     ffffffff804171b6 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9e6>
ffffffff80416bf9:	85 d2                	test   %edx,%edx
ffffffff80416bfb:	74 09                	je     ffffffff80416c06 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80416bfd:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80416c00:	0f 86 2a 07 00 00    	jbe    ffffffff80417330 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb60>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80416c06:	83 c7 01             	add    $0x1,%edi
ffffffff80416c09:	39 f7                	cmp    %esi,%edi
ffffffff80416c0b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff80416c0e:	89 f7                	mov    %esi,%edi
    size_ -= min(n, size_);
ffffffff80416c10:	89 d5                	mov    %edx,%ebp
    str_ += n;
ffffffff80416c12:	49 01 f8             	add    %rdi,%r8
    size_ -= min(n, size_);
ffffffff80416c15:	39 f0                	cmp    %esi,%eax
ffffffff80416c17:	0f 46 f0             	cmovbe %eax,%esi
ffffffff80416c1a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80416c1c:	85 c0                	test   %eax,%eax
ffffffff80416c1e:	0f 85 14 ff ff ff    	jne    ffffffff80416b38 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x368>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416c24:	85 c9                	test   %ecx,%ecx
ffffffff80416c26:	74 6a                	je     ffffffff80416c92 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff80416c28:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416c2b:	44 8b 0d 32 74 00 00 	mov    0x7432(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416c32:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80416c39:	31 ff                	xor    %edi,%edi
ffffffff80416c3b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80416c3f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80416c43:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80416c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80416c50:	48 89 f3             	mov    %rsi,%rbx
ffffffff80416c53:	89 fa                	mov    %edi,%edx
ffffffff80416c55:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80416c59:	45 85 c9             	test   %r9d,%r9d
ffffffff80416c5c:	0f 84 2e 06 00 00    	je     ffffffff80417290 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xac0>
ffffffff80416c62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80416c68:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff80416c6c:	89 d7                	mov    %edx,%edi
ffffffff80416c6e:	83 c2 01             	add    $0x1,%edx
ffffffff80416c71:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80416c75:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff80416c7c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416c7e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80416c81:	75 e5                	jne    ffffffff80416c68 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x498>
ffffffff80416c83:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80416c8a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416c8d:	48 39 c6             	cmp    %rax,%rsi
ffffffff80416c90:	75 be                	jne    ffffffff80416c50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
    if (current_col_ != 0) {
ffffffff80416c92:	85 ed                	test   %ebp,%ebp
ffffffff80416c94:	74 3a                	je     ffffffff80416cd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416c96:	8b 35 c8 73 00 00    	mov    0x73c8(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416c9c:	85 f6                	test   %esi,%esi
ffffffff80416c9e:	74 30                	je     ffffffff80416cd0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x500>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80416ca0:	89 f2                	mov    %esi,%edx
ffffffff80416ca2:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80416ca6:	0f af d1             	imul   %ecx,%edx
ffffffff80416ca9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80416cad:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80416cb3:	01 d6                	add    %edx,%esi
ffffffff80416cb5:	0f 1f 00             	nopl   (%rax)
ffffffff80416cb8:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80416cbb:	89 d7                	mov    %edx,%edi
ffffffff80416cbd:	83 c2 01             	add    $0x1,%edx
ffffffff80416cc0:	48 83 c0 02          	add    $0x2,%rax
ffffffff80416cc4:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80416ccb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416ccc:	39 d6                	cmp    %edx,%esi
ffffffff80416cce:	75 e8                	jne    ffffffff80416cb8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x4e8>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff80416cd0:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff80416cd7:	e8 e4 64 ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff80416cdc:	85 c0                	test   %eax,%eax
ffffffff80416cde:	0f 84 f4 06 00 00    	je     ffffffff804173d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xc08>
ffffffff80416ce4:	44 8b 25 75 73 00 00 	mov    0x7375(%rip),%r12d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80416ceb:	44 8b 05 72 73 00 00 	mov    0x7372(%rip),%r8d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416cf2:	49 c7 c1 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r9
ffffffff80416cf9:	8b 2d 6d 73 00 00    	mov    0x736d(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80416cff:	8b 0d 63 73 00 00    	mov    0x7363(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416d05:	41 8d 54 24 fe       	lea    -0x2(%r12),%edx
ffffffff80416d0a:	45 8d 68 ff          	lea    -0x1(%r8),%r13d
ffffffff80416d0e:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80416d12:	44 89 6c 24 20       	mov    %r13d,0x20(%rsp)
ffffffff80416d17:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80416d1b:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff80416d22:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
ffffffff80416d27:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80416d2b:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
ffffffff80416d30:	48 89 d6             	mov    %rdx,%rsi
ffffffff80416d33:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80416d37:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80416d3b:	4c 01 ea             	add    %r13,%rdx
ffffffff80416d3e:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff80416d45:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80416d4a:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff80416d51:	80 
ffffffff80416d52:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff80416d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80416d5e:	00 00 
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80416d60:	44 89 c6             	mov    %r8d,%esi
ffffffff80416d63:	89 c2                	mov    %eax,%edx
ffffffff80416d65:	29 ee                	sub    %ebp,%esi
ffffffff80416d67:	39 c6                	cmp    %eax,%esi
ffffffff80416d69:	0f 47 f0             	cmova  %eax,%esi
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80416d6c:	39 c6                	cmp    %eax,%esi
ffffffff80416d6e:	0f 46 d6             	cmovbe %esi,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff80416d71:	85 d2                	test   %edx,%edx
ffffffff80416d73:	0f 84 ff 03 00 00    	je     ffffffff80417178 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff80416d79:	83 ea 01             	sub    $0x1,%edx
ffffffff80416d7c:	31 db                	xor    %ebx,%ebx
ffffffff80416d7e:	eb 10                	jmp    ffffffff80416d90 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c0>
ffffffff80416d80:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
ffffffff80416d84:	48 39 da             	cmp    %rbx,%rdx
ffffffff80416d87:	0f 84 eb 03 00 00    	je     ffffffff80417178 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x9a8>
ffffffff80416d8d:	48 89 fb             	mov    %rdi,%rbx
      if (str_[i] == c) {
ffffffff80416d90:	41 80 3c 19 0a       	cmpb   $0xa,(%r9,%rbx,1)
ffffffff80416d95:	89 df                	mov    %ebx,%edi
ffffffff80416d97:	75 e7                	jne    ffffffff80416d80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5b0>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff80416d99:	39 f8                	cmp    %edi,%eax
ffffffff80416d9b:	89 fa                	mov    %edi,%edx
ffffffff80416d9d:	0f 46 d0             	cmovbe %eax,%edx
    if (current_row_ == num_rows_) {
ffffffff80416da0:	41 39 cc             	cmp    %ecx,%r12d
ffffffff80416da3:	0f 84 37 03 00 00    	je     ffffffff804170e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x910>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416da9:	01 ea                	add    %ebp,%edx
ffffffff80416dab:	44 39 c2             	cmp    %r8d,%edx
ffffffff80416dae:	41 0f 47 d0          	cmova  %r8d,%edx
ffffffff80416db2:	39 ea                	cmp    %ebp,%edx
ffffffff80416db4:	0f 86 b1 03 00 00    	jbe    ffffffff8041716b <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x99b>
ffffffff80416dba:	41 89 ea             	mov    %ebp,%r10d
ffffffff80416dbd:	41 f7 d2             	not    %r10d
ffffffff80416dc0:	45 8d 1c 12          	lea    (%r10,%rdx,1),%r11d
ffffffff80416dc4:	41 89 ca             	mov    %ecx,%r10d
ffffffff80416dc7:	4f 8d 14 92          	lea    (%r10,%r10,4),%r10
ffffffff80416dcb:	49 c1 e2 04          	shl    $0x4,%r10
ffffffff80416dcf:	4c 01 d5             	add    %r10,%rbp
ffffffff80416dd2:	45 31 d2             	xor    %r10d,%r10d
ffffffff80416dd5:	48 01 ed             	add    %rbp,%rbp
ffffffff80416dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80416ddf:	00 
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80416de0:	66 47 0f be 34 11    	movsbw (%r9,%r10,1),%r14w
ffffffff80416de6:	66 41 81 ce 00 0f    	or     $0xf00,%r14w
ffffffff80416dec:	66 46 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%rbp,%r10,2)
ffffffff80416df3:	41 80 
ffffffff80416df5:	4d 89 d6             	mov    %r10,%r14
ffffffff80416df8:	49 83 c2 01          	add    $0x1,%r10
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416dfc:	4d 39 f3             	cmp    %r14,%r11
ffffffff80416dff:	75 df                	jne    ffffffff80416de0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x610>
    if (current_col_ == num_cols_) {
ffffffff80416e01:	41 39 d0             	cmp    %edx,%r8d
ffffffff80416e04:	0f 84 a6 02 00 00    	je     ffffffff804170b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8e0>
    current_col_ = i;
ffffffff80416e0a:	89 15 5c 72 00 00    	mov    %edx,0x725c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416e10:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff80416e13:	0f 84 b5 02 00 00    	je     ffffffff804170ce <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8fe>
ffffffff80416e19:	85 d2                	test   %edx,%edx
ffffffff80416e1b:	74 09                	je     ffffffff80416e26 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff80416e1d:	83 f9 18             	cmp    $0x18,%ecx
ffffffff80416e20:	0f 86 aa 04 00 00    	jbe    ffffffff804172d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb00>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff80416e26:	83 c7 01             	add    $0x1,%edi
ffffffff80416e29:	39 f7                	cmp    %esi,%edi
ffffffff80416e2b:	0f 46 f7             	cmovbe %edi,%esi
    str_ += n;
ffffffff80416e2e:	89 f7                	mov    %esi,%edi
ffffffff80416e30:	89 d5                	mov    %edx,%ebp
ffffffff80416e32:	49 01 f9             	add    %rdi,%r9
    size_ -= min(n, size_);
ffffffff80416e35:	39 c6                	cmp    %eax,%esi
ffffffff80416e37:	0f 47 f0             	cmova  %eax,%esi
ffffffff80416e3a:	29 f0                	sub    %esi,%eax
    while (!s.empty()) {
ffffffff80416e3c:	85 c0                	test   %eax,%eax
ffffffff80416e3e:	0f 85 1c ff ff ff    	jne    ffffffff80416d60 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x590>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416e44:	85 c9                	test   %ecx,%ecx
ffffffff80416e46:	74 6a                	je     ffffffff80416eb2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff80416e48:	8d 41 ff             	lea    -0x1(%rcx),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416e4b:	44 8b 0d 12 72 00 00 	mov    0x7212(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416e52:	48 c7 c6 70 e0 41 80 	mov    $0xffffffff8041e070,%rsi
ffffffff80416e59:	31 ff                	xor    %edi,%edi
ffffffff80416e5b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80416e5f:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80416e63:	48 05 10 e1 41 80    	add    $0xffffffff8041e110,%rax
ffffffff80416e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80416e70:	48 89 f3             	mov    %rsi,%rbx
ffffffff80416e73:	89 fa                	mov    %edi,%edx
ffffffff80416e75:	46 8d 04 0f          	lea    (%rdi,%r9,1),%r8d
ffffffff80416e79:	45 85 c9             	test   %r9d,%r9d
ffffffff80416e7c:	0f 84 2e 04 00 00    	je     ffffffff804172b0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xae0>
ffffffff80416e82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80416e88:	44 0f b7 13          	movzwl (%rbx),%r10d
ffffffff80416e8c:	89 d7                	mov    %edx,%edi
ffffffff80416e8e:	83 c2 01             	add    $0x1,%edx
ffffffff80416e91:	48 83 c3 02          	add    $0x2,%rbx
ffffffff80416e95:	66 44 89 94 3f 00 80 	mov    %r10w,0xb8000(%rdi,%rdi,1)
ffffffff80416e9c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416e9e:	41 39 d0             	cmp    %edx,%r8d
ffffffff80416ea1:	75 e5                	jne    ffffffff80416e88 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6b8>
ffffffff80416ea3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff80416eaa:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80416ead:	48 39 f0             	cmp    %rsi,%rax
ffffffff80416eb0:	75 be                	jne    ffffffff80416e70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
    if (current_col_ != 0) {
ffffffff80416eb2:	85 ed                	test   %ebp,%ebp
ffffffff80416eb4:	74 3a                	je     ffffffff80416ef0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416eb6:	8b 35 a8 71 00 00    	mov    0x71a8(%rip),%esi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80416ebc:	85 f6                	test   %esi,%esi
ffffffff80416ebe:	74 30                	je     ffffffff80416ef0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x720>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80416ec0:	89 f2                	mov    %esi,%edx
ffffffff80416ec2:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
ffffffff80416ec6:	0f af d1             	imul   %ecx,%edx
ffffffff80416ec9:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80416ecd:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff80416ed3:	01 d6                	add    %edx,%esi
ffffffff80416ed5:	0f 1f 00             	nopl   (%rax)
ffffffff80416ed8:	0f b7 08             	movzwl (%rax),%ecx
ffffffff80416edb:	89 d7                	mov    %edx,%edi
ffffffff80416edd:	83 c2 01             	add    $0x1,%edx
ffffffff80416ee0:	48 83 c0 02          	add    $0x2,%rax
ffffffff80416ee4:	66 89 8c 3f 00 80 0b 	mov    %cx,0xb8000(%rdi,%rdi,1)
ffffffff80416eeb:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416eec:	39 d6                	cmp    %edx,%esi
ffffffff80416eee:	75 e8                	jne    ffffffff80416ed8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x708>
}
ffffffff80416ef0:	48 83 c4 68          	add    $0x68,%rsp
ffffffff80416ef4:	58                   	pop    %rax
ffffffff80416ef5:	5a                   	pop    %rdx
ffffffff80416ef6:	59                   	pop    %rcx
ffffffff80416ef7:	5b                   	pop    %rbx
ffffffff80416ef8:	5e                   	pop    %rsi
ffffffff80416ef9:	5f                   	pop    %rdi
ffffffff80416efa:	5d                   	pop    %rbp
ffffffff80416efb:	41 58                	pop    %r8
ffffffff80416efd:	41 59                	pop    %r9
ffffffff80416eff:	41 5a                	pop    %r10
ffffffff80416f01:	41 5b                	pop    %r11
ffffffff80416f03:	41 5c                	pop    %r12
ffffffff80416f05:	41 5d                	pop    %r13
ffffffff80416f07:	41 5e                	pop    %r14
ffffffff80416f09:	41 5f                	pop    %r15
ffffffff80416f0b:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80416f0f:	48 cf                	iretq  
ffffffff80416f11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416f18:	83 ff 01             	cmp    $0x1,%edi
ffffffff80416f1b:	76 53                	jbe    ffffffff80416f70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7a0>
ffffffff80416f1d:	41 bb a0 00 00 00    	mov    $0xa0,%r11d
ffffffff80416f23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416f28:	45 31 e4             	xor    %r12d,%r12d
ffffffff80416f2b:	4d 8d ab 60 ff ff ff 	lea    -0xa0(%r11),%r13
ffffffff80416f32:	45 85 c9             	test   %r9d,%r9d
ffffffff80416f35:	74 2b                	je     ffffffff80416f62 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x792>
ffffffff80416f37:	89 44 24 08          	mov    %eax,0x8(%rsp)
ffffffff80416f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80416f40:	43 0f b7 84 63 70 e0 	movzwl -0x7fbe1f90(%r11,%r12,2),%eax
ffffffff80416f47:	41 80 
ffffffff80416f49:	66 43 89 84 65 70 e0 	mov    %ax,-0x7fbe1f90(%r13,%r12,2)
ffffffff80416f50:	41 80 
ffffffff80416f52:	4c 89 e0             	mov    %r12,%rax
ffffffff80416f55:	49 83 c4 01          	add    $0x1,%r12
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80416f59:	49 39 c7             	cmp    %rax,%r15
ffffffff80416f5c:	75 e2                	jne    ffffffff80416f40 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x770>
ffffffff80416f5e:	8b 44 24 08          	mov    0x8(%rsp),%eax
ffffffff80416f62:	49 81 c3 a0 00 00 00 	add    $0xa0,%r11
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80416f69:	4c 3b 5c 24 20       	cmp    0x20(%rsp),%r11
ffffffff80416f6e:	75 b8                	jne    ffffffff80416f28 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x758>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416f70:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
ffffffff80416f75:	45 85 c9             	test   %r9d,%r9d
ffffffff80416f78:	74 17                	je     ffffffff80416f91 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7c1>
ffffffff80416f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80416f80:	66 41 c7 03 00 00    	movw   $0x0,(%r11)
ffffffff80416f86:	49 83 c3 02          	add    $0x2,%r11
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80416f8a:	4c 3b 5c 24 18       	cmp    0x18(%rsp),%r11
ffffffff80416f8f:	75 ef                	jne    ffffffff80416f80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416f91:	44 01 c2             	add    %r8d,%edx
      current_row_--;
ffffffff80416f94:	83 ef 01             	sub    $0x1,%edi
ffffffff80416f97:	44 39 ca             	cmp    %r9d,%edx
ffffffff80416f9a:	89 3d c8 70 00 00    	mov    %edi,0x70c8(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80416fa0:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80416fa4:	41 39 d0             	cmp    %edx,%r8d
ffffffff80416fa7:	0f 82 47 f9 ff ff    	jb     ffffffff804168f4 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x124>
ffffffff80416fad:	44 89 c2             	mov    %r8d,%edx
    if (current_col_ == num_cols_) {
ffffffff80416fb0:	44 39 ca             	cmp    %r9d,%edx
ffffffff80416fb3:	0f 85 89 f9 ff ff    	jne    ffffffff80416942 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x172>
ffffffff80416fb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff80416fc0:	c7 05 a2 70 00 00 00 	movl   $0x0,0x70a2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80416fc7:	00 00 00 
      current_row_++;
ffffffff80416fca:	83 c7 01             	add    $0x1,%edi
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416fcd:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff80416fcf:	89 3d 93 70 00 00    	mov    %edi,0x7093(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80416fd5:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff80416fd8:	0f 85 80 f9 ff ff    	jne    ffffffff8041695e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff80416fde:	39 ce                	cmp    %ecx,%esi
ffffffff80416fe0:	0f 47 f1             	cmova  %ecx,%esi
ffffffff80416fe3:	e9 7e f9 ff ff       	jmpq   ffffffff80416966 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x196>
ffffffff80416fe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80416fef:	00 
    if (count == npos) {
ffffffff80416ff0:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff80416ff3:	75 1b                	jne    ffffffff80417010 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x840>
ffffffff80416ff5:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80416ffa:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff80416fff:	89 c2                	mov    %eax,%edx
ffffffff80417001:	e9 d2 f8 ff ff       	jmpq   ffffffff804168d8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x108>
ffffffff80417006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041700d:	00 00 00 
ffffffff80417010:	89 f1                	mov    %esi,%ecx
ffffffff80417012:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
ffffffff80417017:	e9 b5 f8 ff ff       	jmpq   ffffffff804168d1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x101>
ffffffff8041701c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80417020:	41 89 c9             	mov    %ecx,%r9d
ffffffff80417023:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041702a:	44 89 c9             	mov    %r9d,%ecx
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041702d:	48 39 f0             	cmp    %rsi,%rax
ffffffff80417030:	0f 85 72 f9 ff ff    	jne    ffffffff804169a8 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1d8>
ffffffff80417036:	e9 b0 f9 ff ff       	jmpq   ffffffff804169eb <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x21b>
ffffffff8041703b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417040:	44 39 ca             	cmp    %r9d,%edx
ffffffff80417043:	73 4a                	jae    ffffffff8041708f <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8bf>
ffffffff80417045:	89 fd                	mov    %edi,%ebp
ffffffff80417047:	41 89 d3             	mov    %edx,%r11d
ffffffff8041704a:	48 8d 6c ad 00       	lea    0x0(%rbp,%rbp,4),%rbp
ffffffff8041704f:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80417053:	4d 8d 44 2b 08       	lea    0x8(%r11,%rbp,1),%r8
ffffffff80417058:	4c 01 dd             	add    %r11,%rbp
ffffffff8041705b:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
ffffffff80417060:	4f 8d 84 00 60 e0 41 	lea    -0x7fbe1fa0(%r8,%r8,1),%r8
ffffffff80417067:	80 
ffffffff80417068:	41 29 d3             	sub    %edx,%r11d
ffffffff8041706b:	4c 01 dd             	add    %r11,%rbp
ffffffff8041706e:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80417075:	80 
ffffffff80417076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041707d:	00 00 00 
          text_buffer_[current_row_][i] = 0;
ffffffff80417080:	66 41 c7 00 00 00    	movw   $0x0,(%r8)
ffffffff80417086:	49 83 c0 02          	add    $0x2,%r8
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041708a:	49 39 d0             	cmp    %rdx,%r8
ffffffff8041708d:	75 f1                	jne    ffffffff80417080 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x8b0>
        current_col_ = 0;
ffffffff8041708f:	c7 05 d3 6f 00 00 00 	movl   $0x0,0x6fd3(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80417096:	00 00 00 
        current_row_++;
ffffffff80417099:	83 c7 01             	add    $0x1,%edi
ffffffff8041709c:	31 d2                	xor    %edx,%edx
ffffffff8041709e:	89 3d c4 6f 00 00    	mov    %edi,0x6fc4(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804170a4:	e9 b5 f8 ff ff       	jmpq   ffffffff8041695e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x18e>
ffffffff804170a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_col_ = 0;
ffffffff804170b0:	c7 05 b2 6f 00 00 00 	movl   $0x0,0x6fb2(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804170b7:	00 00 00 
      current_row_++;
ffffffff804170ba:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804170bd:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804170bf:	89 0d a3 6f 00 00    	mov    %ecx,0x6fa3(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804170c5:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804170c8:	0f 85 58 fd ff ff    	jne    ffffffff80416e26 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
ffffffff804170ce:	39 fe                	cmp    %edi,%esi
ffffffff804170d0:	0f 47 f7             	cmova  %edi,%esi
  constexpr void remove_prefix(size_t n) {
ffffffff804170d3:	e9 56 fd ff ff       	jmpq   ffffffff80416e2e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x65e>
ffffffff804170d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804170df:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804170e0:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff804170e4:	76 46                	jbe    ffffffff8041712c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x95c>
ffffffff804170e6:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff804170ec:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804170f0:	45 31 db             	xor    %r11d,%r11d
ffffffff804170f3:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff804170fa:	45 85 c0             	test   %r8d,%r8d
ffffffff804170fd:	74 1f                	je     ffffffff8041711e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x94e>
ffffffff804170ff:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80417100:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff80417107:	41 80 
ffffffff80417109:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff80417110:	41 80 
ffffffff80417112:	4d 89 df             	mov    %r11,%r15
ffffffff80417115:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417119:	4d 39 ef             	cmp    %r13,%r15
ffffffff8041711c:	75 e2                	jne    ffffffff80417100 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x930>
ffffffff8041711e:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417125:	4c 3b 54 24 18       	cmp    0x18(%rsp),%r10
ffffffff8041712a:	75 c4                	jne    ffffffff804170f0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x920>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041712c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
ffffffff80417131:	45 85 c0             	test   %r8d,%r8d
ffffffff80417134:	74 1b                	je     ffffffff80417151 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x981>
ffffffff80417136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041713d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80417140:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80417146:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041714a:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041714f:	75 ef                	jne    ffffffff80417140 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x970>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417151:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80417153:	83 e9 01             	sub    $0x1,%ecx
ffffffff80417156:	44 39 c2             	cmp    %r8d,%edx
ffffffff80417159:	89 0d 09 6f 00 00    	mov    %ecx,0x6f09(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041715f:	41 0f 47 d0          	cmova  %r8d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417163:	39 ea                	cmp    %ebp,%edx
ffffffff80417165:	0f 87 4f fc ff ff    	ja     ffffffff80416dba <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5ea>
ffffffff8041716b:	89 ea                	mov    %ebp,%edx
ffffffff8041716d:	e9 8f fc ff ff       	jmpq   ffffffff80416e01 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x631>
ffffffff80417172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (count == npos) {
ffffffff80417178:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff8041717b:	0f 85 ef 00 00 00    	jne    ffffffff80417270 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xaa0>
ffffffff80417181:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80417186:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff8041718b:	89 c2                	mov    %eax,%edx
ffffffff8041718d:	e9 0e fc ff ff       	jmpq   ffffffff80416da0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5d0>
ffffffff80417192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      current_col_ = 0;
ffffffff80417198:	c7 05 ca 6e 00 00 00 	movl   $0x0,0x6eca(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041719f:	00 00 00 
      current_row_++;
ffffffff804171a2:	83 c1 01             	add    $0x1,%ecx
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804171a5:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff804171a7:	89 0d bb 6e 00 00    	mov    %ecx,0x6ebb(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804171ad:	83 fb ff             	cmp    $0xffffffff,%ebx
ffffffff804171b0:	0f 85 50 fa ff ff    	jne    ffffffff80416c06 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff804171b6:	39 fe                	cmp    %edi,%esi
ffffffff804171b8:	0f 47 f7             	cmova  %edi,%esi
ffffffff804171bb:	e9 4e fa ff ff       	jmpq   ffffffff80416c0e <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x43e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff804171c0:	41 83 fc 01          	cmp    $0x1,%r12d
ffffffff804171c4:	76 46                	jbe    ffffffff8041720c <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa3c>
ffffffff804171c6:	41 ba a0 00 00 00    	mov    $0xa0,%r10d
ffffffff804171cc:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804171d0:	45 31 db             	xor    %r11d,%r11d
ffffffff804171d3:	4d 8d b2 60 ff ff ff 	lea    -0xa0(%r10),%r14
ffffffff804171da:	45 85 c9             	test   %r9d,%r9d
ffffffff804171dd:	74 1f                	je     ffffffff804171fe <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa2e>
ffffffff804171df:	90                   	nop
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff804171e0:	47 0f b7 bc 5a 70 e0 	movzwl -0x7fbe1f90(%r10,%r11,2),%r15d
ffffffff804171e7:	41 80 
ffffffff804171e9:	66 47 89 bc 5e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r11,2)
ffffffff804171f0:	41 80 
ffffffff804171f2:	4d 89 df             	mov    %r11,%r15
ffffffff804171f5:	49 83 c3 01          	add    $0x1,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804171f9:	4d 39 ef             	cmp    %r13,%r15
ffffffff804171fc:	75 e2                	jne    ffffffff804171e0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa10>
ffffffff804171fe:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417205:	4c 39 54 24 08       	cmp    %r10,0x8(%rsp)
ffffffff8041720a:	75 c4                	jne    ffffffff804171d0 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa00>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041720c:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
ffffffff80417211:	45 85 c9             	test   %r9d,%r9d
ffffffff80417214:	74 1b                	je     ffffffff80417231 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa61>
ffffffff80417216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041721d:	00 00 00 
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80417220:	66 41 c7 02 00 00    	movw   $0x0,(%r10)
ffffffff80417226:	49 83 c2 02          	add    $0x2,%r10
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041722a:	4c 3b 54 24 10       	cmp    0x10(%rsp),%r10
ffffffff8041722f:	75 ef                	jne    ffffffff80417220 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xa50>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417231:	01 ea                	add    %ebp,%edx
      current_row_--;
ffffffff80417233:	83 e9 01             	sub    $0x1,%ecx
ffffffff80417236:	44 39 ca             	cmp    %r9d,%edx
ffffffff80417239:	89 0d 29 6e 00 00    	mov    %ecx,0x6e29(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041723f:	41 0f 47 d1          	cmova  %r9d,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417243:	39 ea                	cmp    %ebp,%edx
ffffffff80417245:	0f 87 4f f9 ff ff    	ja     ffffffff80416b9a <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3ca>
ffffffff8041724b:	89 ea                	mov    %ebp,%edx
ffffffff8041724d:	e9 8f f9 ff ff       	jmpq   ffffffff80416be1 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x411>
ffffffff80417252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80417258:	83 fe ff             	cmp    $0xffffffff,%esi
ffffffff8041725b:	75 23                	jne    ffffffff80417280 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xab0>
ffffffff8041725d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80417262:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff80417267:	89 c2                	mov    %eax,%edx
ffffffff80417269:	e9 12 f9 ff ff       	jmpq   ffffffff80416b80 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3b0>
ffffffff8041726e:	66 90                	xchg   %ax,%ax
ffffffff80417270:	89 f7                	mov    %esi,%edi
ffffffff80417272:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80417277:	e9 1d fb ff ff       	jmpq   ffffffff80416d99 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x5c9>
ffffffff8041727c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80417280:	89 f7                	mov    %esi,%edi
ffffffff80417282:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
ffffffff80417287:	e9 ed f8 ff ff       	jmpq   ffffffff80416b79 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x3a9>
ffffffff8041728c:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80417290:	41 89 f8             	mov    %edi,%r8d
ffffffff80417293:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff8041729a:	44 89 c7             	mov    %r8d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041729d:	48 39 c6             	cmp    %rax,%rsi
ffffffff804172a0:	0f 85 aa f9 ff ff    	jne    ffffffff80416c50 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x480>
ffffffff804172a6:	e9 e7 f9 ff ff       	jmpq   ffffffff80416c92 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x4c2>
ffffffff804172ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804172b0:	41 89 f8             	mov    %edi,%r8d
ffffffff804172b3:	48 81 c6 a0 00 00 00 	add    $0xa0,%rsi
ffffffff804172ba:	44 89 c7             	mov    %r8d,%edi
ffffffff804172bd:	48 39 f0             	cmp    %rsi,%rax
ffffffff804172c0:	0f 85 aa fb ff ff    	jne    ffffffff80416e70 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6a0>
ffffffff804172c6:	e9 e7 fb ff ff       	jmpq   ffffffff80416eb2 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x6e2>
ffffffff804172cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804172d0:	41 39 d0             	cmp    %edx,%r8d
ffffffff804172d3:	76 41                	jbe    ffffffff80417316 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb46>
ffffffff804172d5:	89 cb                	mov    %ecx,%ebx
ffffffff804172d7:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff804172dc:	41 89 d2             	mov    %edx,%r10d
ffffffff804172df:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff804172e3:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff804172e7:	41 29 d7             	sub    %edx,%r15d
ffffffff804172ea:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff804172ef:	4c 01 d5             	add    %r10,%rbp
ffffffff804172f2:	4c 01 fd             	add    %r15,%rbp
ffffffff804172f5:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff804172fc:	80 
ffffffff804172fd:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80417304:	80 
ffffffff80417305:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80417308:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff8041730d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417311:	48 39 da             	cmp    %rbx,%rdx
ffffffff80417314:	75 f2                	jne    ffffffff80417308 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb38>
        current_col_ = 0;
ffffffff80417316:	c7 05 4c 6d 00 00 00 	movl   $0x0,0x6d4c(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041731d:	00 00 00 
        current_row_++;
ffffffff80417320:	83 c1 01             	add    $0x1,%ecx
ffffffff80417323:	31 d2                	xor    %edx,%edx
ffffffff80417325:	89 0d 3d 6d 00 00    	mov    %ecx,0x6d3d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041732b:	e9 f6 fa ff ff       	jmpq   ffffffff80416e26 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x656>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417330:	41 39 d1             	cmp    %edx,%r9d
ffffffff80417333:	76 41                	jbe    ffffffff80417376 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xba6>
ffffffff80417335:	89 cb                	mov    %ecx,%ebx
ffffffff80417337:	44 8b 7c 24 20       	mov    0x20(%rsp),%r15d
ffffffff8041733c:	41 89 d2             	mov    %edx,%r10d
ffffffff8041733f:	48 8d 2c 9b          	lea    (%rbx,%rbx,4),%rbp
ffffffff80417343:	48 c1 e5 04          	shl    $0x4,%rbp
ffffffff80417347:	41 29 d7             	sub    %edx,%r15d
ffffffff8041734a:	49 8d 5c 2a 08       	lea    0x8(%r10,%rbp,1),%rbx
ffffffff8041734f:	4c 01 d5             	add    %r10,%rbp
ffffffff80417352:	4c 01 fd             	add    %r15,%rbp
ffffffff80417355:	48 8d 9c 1b 60 e0 41 	lea    -0x7fbe1fa0(%rbx,%rbx,1),%rbx
ffffffff8041735c:	80 
ffffffff8041735d:	48 8d 94 2d 72 e0 41 	lea    -0x7fbe1f8e(%rbp,%rbp,1),%rdx
ffffffff80417364:	80 
ffffffff80417365:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80417368:	66 c7 03 00 00       	movw   $0x0,(%rbx)
ffffffff8041736d:	48 83 c3 02          	add    $0x2,%rbx
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417371:	48 39 d3             	cmp    %rdx,%rbx
ffffffff80417374:	75 f2                	jne    ffffffff80417368 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0xb98>
        current_col_ = 0;
ffffffff80417376:	c7 05 ec 6c 00 00 00 	movl   $0x0,0x6cec(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041737d:	00 00 00 
        current_row_++;
ffffffff80417380:	83 c1 01             	add    $0x1,%ecx
ffffffff80417383:	31 d2                	xor    %edx,%edx
ffffffff80417385:	89 0d dd 6c 00 00    	mov    %ecx,0x6cdd(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041738b:	e9 76 f8 ff ff       	jmpq   ffffffff80416c06 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x436>
ffffffff80417390:	48 8d 5c 24 38       	lea    0x38(%rsp),%rbx
    str[0] = 'E';
ffffffff80417395:	66 c7 44 24 38 45 00 	movw   $0x45,0x38(%rsp)
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff8041739c:	48 89 df             	mov    %rbx,%rdi
ffffffff8041739f:	e8 1c 5e ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff804173a4:	85 c0                	test   %eax,%eax
ffffffff804173a6:	0f 85 17 f7 ff ff    	jne    ffffffff80416ac3 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x2f3>
ffffffff804173ac:	8b 2d ba 6c 00 00    	mov    0x6cba(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804173b2:	8b 0d b0 6c 00 00    	mov    0x6cb0(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804173b8:	e9 67 f8 ff ff       	jmpq   ffffffff80416c24 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x454>
ffffffff804173bd:	0f 1f 00             	nopl   (%rax)
ffffffff804173c0:	44 8b 05 a5 6c 00 00 	mov    0x6ca5(%rip),%r8d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804173c7:	8b 3d 9b 6c 00 00    	mov    0x6c9b(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804173cd:	e9 ab f5 ff ff       	jmpq   ffffffff8041697d <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x1ad>
ffffffff804173d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff804173d8:	8b 0d 8a 6c 00 00    	mov    0x6c8a(%rip),%ecx        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804173de:	8b 2d 88 6c 00 00    	mov    0x6c88(%rip),%ebp        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804173e4:	e9 5b fa ff ff       	jmpq   ffffffff80416e44 <_ZN6Kernel12_GLOBAL__N_132CPUInterruptHandlerWithErrorCodeILi17EEEvPNS_23CPUInterruptHandlerArgsEm+0x674>
ffffffff804173e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff804173f0 <_Z11ToUpperCasec>:
#ifndef CHAR_UTIL_H
#define CHAR_UTIL_H

char ToUpperCase(char c) {
  if ('a' <= c && c <= 'z') {
ffffffff804173f0:	8d 57 9f             	lea    -0x61(%rdi),%edx
    return c + 'A' - 'a';
ffffffff804173f3:	8d 47 e0             	lea    -0x20(%rdi),%eax
ffffffff804173f6:	80 fa 1a             	cmp    $0x1a,%dl
ffffffff804173f9:	0f 43 c7             	cmovae %edi,%eax
  }
  return c;
}
ffffffff804173fc:	c3                   	retq   
ffffffff804173fd:	0f 1f 00             	nopl   (%rax)

ffffffff80417400 <_Z11ToLowerCasec>:

char ToLowerCase(char c) {
  if ('A' <= c && c <= 'Z') {
ffffffff80417400:	8d 57 bf             	lea    -0x41(%rdi),%edx
    return c - ('A' - 'a');
ffffffff80417403:	8d 47 20             	lea    0x20(%rdi),%eax
ffffffff80417406:	80 fa 1a             	cmp    $0x1a,%dl
ffffffff80417409:	0f 43 c7             	cmovae %edi,%eax
  }
  return c;
}
ffffffff8041740c:	c3                   	retq   
ffffffff8041740d:	90                   	nop
ffffffff8041740e:	66 90                	xchg   %ax,%ax

ffffffff80417410 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh>:
}  // namespace

PS2Keyboard ps2_keyboard;

void PS2Keyboard::MainKeyboardHandler(uint8_t scan_code) {
  KeyInfo key_info = ScanCodeToASCII(scan_code);
ffffffff80417410:	40 0f b6 c6          	movzbl %sil,%eax
  if (scan_code <= 0x58) {
ffffffff80417414:	40 80 fe 58          	cmp    $0x58,%sil
ffffffff80417418:	0f 87 62 02 00 00    	ja     ffffffff80417680 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x270>
    return {static_cast<KEY_CODES>(kScanCodeToASCII[scan_code]), KEY_DOWN};
ffffffff8041741e:	48 63 04 85 c0 b2 41 	movslq -0x7fbe4d40(,%rax,4),%rax
ffffffff80417425:	80 
ffffffff80417426:	48 8d 34 c7          	lea    (%rdi,%rax,8),%rsi
ffffffff8041742a:	48 89 c2             	mov    %rax,%rdx
  auto& key_press_info = key_press_list_[key_info.key];

  if (key_info.action == KEY_DOWN) {
    if (key_press_info.time_down == 0) {
ffffffff8041742d:	48 8b 05 4c 95 00 00 	mov    0x954c(%rip),%rax        # ffffffff80420980 <_ZN6Kernel9pic_timerE>
ffffffff80417434:	48 8b 0e             	mov    (%rsi),%rcx
ffffffff80417437:	48 85 c9             	test   %rcx,%rcx
ffffffff8041743a:	0f 85 68 02 00 00    	jne    ffffffff804176a8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x298>
      key_press_info.time_down = pic_timer.GetClock();
ffffffff80417440:	48 89 06             	mov    %rax,(%rsi)
void PS2Keyboard::MainKeyboardHandler(uint8_t scan_code) {
ffffffff80417443:	41 57                	push   %r15
ffffffff80417445:	41 56                	push   %r14
ffffffff80417447:	41 55                	push   %r13
ffffffff80417449:	41 54                	push   %r12
ffffffff8041744b:	55                   	push   %rbp
ffffffff8041744c:	53                   	push   %rbx
ffffffff8041744d:	48 83 ec 38          	sub    $0x38,%rsp
  } else {
    key_press_info.time_down = 0;
  }

  if (key_info.action == KEY_DOWN) {
    if (key_info.key < 128) {
ffffffff80417451:	83 fa 7f             	cmp    $0x7f,%edx
ffffffff80417454:	0f 8f 66 02 00 00    	jg     ffffffff804176c0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x2b0>
    }
  }
}

bool PS2Keyboard::IsShiftDown() const {
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff8041745a:	8b 1d 00 6c 00 00    	mov    0x6c00(%rip),%ebx        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80417460:	48 83 bf 18 08 00 00 	cmpq   $0x0,0x818(%rdi)
ffffffff80417467:	00 
ffffffff80417468:	89 d1                	mov    %edx,%ecx
ffffffff8041746a:	8b 05 f4 6b 00 00    	mov    0x6bf4(%rip),%eax        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff80417470:	89 5c 24 18          	mov    %ebx,0x18(%rsp)
ffffffff80417474:	0f 84 86 04 00 00    	je     ffffffff80417900 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x4f0>
  char shift_number[] = {')', '!', '@', '#', '$', '%', '^', '&', '*', '('};
ffffffff8041747a:	48 bb 29 21 40 23 24 	movabs $0x265e252423402129,%rbx
ffffffff80417481:	25 5e 26 
ffffffff80417484:	41 bf 2a 28 00 00    	mov    $0x282a,%r15d
  if ('a' <= c && c <= 'z') {
ffffffff8041748a:	8d 72 9f             	lea    -0x61(%rdx),%esi
  char shift_number[] = {')', '!', '@', '#', '$', '%', '^', '&', '*', '('};
ffffffff8041748d:	48 89 5c 24 26       	mov    %rbx,0x26(%rsp)
ffffffff80417492:	66 44 89 7c 24 2e    	mov    %r15w,0x2e(%rsp)
  if ('a' <= c && c <= 'z') {
ffffffff80417498:	40 80 fe 19          	cmp    $0x19,%sil
ffffffff8041749c:	0f 87 5e 08 00 00    	ja     ffffffff80417d00 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x8f0>
    return c + 'A' - 'a';
ffffffff804174a2:	8d 4a e0             	lea    -0x20(%rdx),%ecx
ffffffff804174a5:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
ffffffff804174a9:	88 4c 24 26          	mov    %cl,0x26(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff804174ad:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
      size_t endline_or_col_chars = s.find_first_of('\n', 0, len);
ffffffff804174b1:	31 ed                	xor    %ebp,%ebp
ffffffff804174b3:	44 89 64 24 1c       	mov    %r12d,0x1c(%rsp)
ffffffff804174b8:	8b 15 ae 6b 00 00    	mov    0x6bae(%rip),%edx        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804174be:	4c 8d 4c 24 26       	lea    0x26(%rsp),%r9
ffffffff804174c3:	8d 4b fe             	lea    -0x2(%rbx),%ecx
ffffffff804174c6:	8b 3d 9c 6b 00 00    	mov    0x6b9c(%rip),%edi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804174cc:	48 8d 0c 89          	lea    (%rcx,%rcx,4),%rcx
ffffffff804174d0:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff804174d4:	48 8d b1 40 01 00 00 	lea    0x140(%rcx),%rsi
ffffffff804174db:	8d 4b ff             	lea    -0x1(%rbx),%ecx
ffffffff804174de:	48 8d 0c 89          	lea    (%rcx,%rcx,4),%rcx
ffffffff804174e2:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
ffffffff804174e7:	48 89 ce             	mov    %rcx,%rsi
ffffffff804174ea:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff804174ee:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff804174f2:	4c 01 e1             	add    %r12,%rcx
ffffffff804174f5:	48 8d 9e 70 e0 41 80 	lea    -0x7fbe1f90(%rsi),%rbx
ffffffff804174fc:	4c 8d ac 09 72 e0 41 	lea    -0x7fbe1f8e(%rcx,%rcx,1),%r13
ffffffff80417503:	80 
ffffffff80417504:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80417509:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff8041750e:	66 90                	xchg   %ax,%ax
ffffffff80417510:	89 c6                	mov    %eax,%esi
ffffffff80417512:	29 d6                	sub    %edx,%esi
ffffffff80417514:	0f 45 f3             	cmovne %ebx,%esi
    for (; i < min(size_, pos + count); i++) {
ffffffff80417517:	39 c2                	cmp    %eax,%edx
ffffffff80417519:	0f 84 21 08 00 00    	je     ffffffff80417d40 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x930>
ffffffff8041751f:	41 80 39 0a          	cmpb   $0xa,(%r9)
ffffffff80417523:	41 89 eb             	mov    %ebp,%r11d
ffffffff80417526:	41 0f 94 c2          	sete   %r10b
ffffffff8041752a:	44 0f 45 de          	cmovne %esi,%r11d
ffffffff8041752e:	45 0f b6 d2          	movzbl %r10b,%r10d
ffffffff80417532:	41 83 ea 01          	sub    $0x1,%r10d
    if (current_row_ == num_rows_) {
ffffffff80417536:	3b 7c 24 18          	cmp    0x18(%rsp),%edi
ffffffff8041753a:	0f 84 f0 05 00 00    	je     ffffffff80417b30 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x720>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417540:	42 8d 0c 1a          	lea    (%rdx,%r11,1),%ecx
ffffffff80417544:	39 c1                	cmp    %eax,%ecx
ffffffff80417546:	0f 47 c8             	cmova  %eax,%ecx
ffffffff80417549:	39 d1                	cmp    %edx,%ecx
ffffffff8041754b:	0f 86 62 06 00 00    	jbe    ffffffff80417bb3 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7a3>
ffffffff80417551:	41 89 d0             	mov    %edx,%r8d
ffffffff80417554:	41 f7 d0             	not    %r8d
ffffffff80417557:	45 8d 34 08          	lea    (%r8,%rcx,1),%r14d
ffffffff8041755b:	41 89 f8             	mov    %edi,%r8d
ffffffff8041755e:	4f 8d 04 80          	lea    (%r8,%r8,4),%r8
ffffffff80417562:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80417566:	4c 01 c2             	add    %r8,%rdx
ffffffff80417569:	45 31 c0             	xor    %r8d,%r8d
ffffffff8041756c:	48 01 d2             	add    %rdx,%rdx
ffffffff8041756f:	90                   	nop
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80417570:	66 47 0f be 3c 01    	movsbw (%r9,%r8,1),%r15w
ffffffff80417576:	66 41 81 cf 00 0f    	or     $0xf00,%r15w
ffffffff8041757c:	66 46 89 bc 42 70 e0 	mov    %r15w,-0x7fbe1f90(%rdx,%r8,2)
ffffffff80417583:	41 80 
ffffffff80417585:	4d 89 c7             	mov    %r8,%r15
ffffffff80417588:	49 83 c0 01          	add    $0x1,%r8
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041758c:	4d 39 fe             	cmp    %r15,%r14
ffffffff8041758f:	75 df                	jne    ffffffff80417570 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x160>
    if (current_col_ == num_cols_) {
ffffffff80417591:	39 c8                	cmp    %ecx,%eax
ffffffff80417593:	0f 84 57 05 00 00    	je     ffffffff80417af0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6e0>
    current_col_ = i;
ffffffff80417599:	89 0d cd 6a 00 00    	mov    %ecx,0x6acd(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041759f:	41 83 fa ff          	cmp    $0xffffffff,%r10d
ffffffff804175a3:	0f 84 64 05 00 00    	je     ffffffff80417b0d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6fd>
ffffffff804175a9:	85 c9                	test   %ecx,%ecx
ffffffff804175ab:	0f 84 3f 07 00 00    	je     ffffffff80417cf0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x8e0>
ffffffff804175b1:	89 ca                	mov    %ecx,%edx
ffffffff804175b3:	83 ff 18             	cmp    $0x18,%edi
ffffffff804175b6:	0f 86 d4 06 00 00    	jbe    ffffffff80417c90 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x880>
    str_ += n;
ffffffff804175bc:	89 f1                	mov    %esi,%ecx
ffffffff804175be:	49 01 c9             	add    %rcx,%r9
    size_ -= min(n, size_);
ffffffff804175c1:	89 d9                	mov    %ebx,%ecx
ffffffff804175c3:	29 f1                	sub    %esi,%ecx
ffffffff804175c5:	89 ce                	mov    %ecx,%esi
    while (!s.empty()) {
ffffffff804175c7:	85 f6                	test   %esi,%esi
ffffffff804175c9:	0f 85 41 ff ff ff    	jne    ffffffff80417510 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x100>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804175cf:	85 ff                	test   %edi,%edi
ffffffff804175d1:	74 5f                	je     ffffffff80417632 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x222>
ffffffff804175d3:	8d 4f ff             	lea    -0x1(%rdi),%ecx
ffffffff804175d6:	49 c7 c0 70 e0 41 80 	mov    $0xffffffff8041e070,%r8
ffffffff804175dd:	48 8d 1c 89          	lea    (%rcx,%rcx,4),%rbx
ffffffff804175e1:	48 c1 e3 05          	shl    $0x5,%rbx
ffffffff804175e5:	48 81 c3 10 e1 41 80 	add    $0xffffffff8041e110,%rbx
ffffffff804175ec:	0f 1f 40 00          	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804175f0:	4d 89 c1             	mov    %r8,%r9
ffffffff804175f3:	89 f1                	mov    %esi,%ecx
ffffffff804175f5:	44 8d 14 06          	lea    (%rsi,%rax,1),%r10d
ffffffff804175f9:	85 c0                	test   %eax,%eax
ffffffff804175fb:	0f 84 7f 06 00 00    	je     ffffffff80417c80 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x870>
ffffffff80417601:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80417608:	45 0f b7 19          	movzwl (%r9),%r11d
ffffffff8041760c:	89 ce                	mov    %ecx,%esi
ffffffff8041760e:	83 c1 01             	add    $0x1,%ecx
ffffffff80417611:	49 83 c1 02          	add    $0x2,%r9
ffffffff80417615:	66 44 89 9c 36 00 80 	mov    %r11w,0xb8000(%rsi,%rsi,1)
ffffffff8041761c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041761e:	41 39 ca             	cmp    %ecx,%r10d
ffffffff80417621:	75 e5                	jne    ffffffff80417608 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1f8>
ffffffff80417623:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
ffffffff8041762a:	44 89 d6             	mov    %r10d,%esi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041762d:	4c 39 c3             	cmp    %r8,%rbx
ffffffff80417630:	75 be                	jne    ffffffff804175f0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1e0>
    if (current_col_ != 0) {
ffffffff80417632:	85 d2                	test   %edx,%edx
ffffffff80417634:	74 32                	je     ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417636:	85 c0                	test   %eax,%eax
ffffffff80417638:	74 2e                	je     ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8041763a:	89 c2                	mov    %eax,%edx
ffffffff8041763c:	48 8d 0c bf          	lea    (%rdi,%rdi,4),%rcx
ffffffff80417640:	0f af d7             	imul   %edi,%edx
ffffffff80417643:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80417647:	48 81 c1 70 e0 41 80 	add    $0xffffffff8041e070,%rcx
ffffffff8041764e:	01 d0                	add    %edx,%eax
ffffffff80417650:	0f b7 39             	movzwl (%rcx),%edi
ffffffff80417653:	89 d6                	mov    %edx,%esi
ffffffff80417655:	83 c2 01             	add    $0x1,%edx
ffffffff80417658:	48 83 c1 02          	add    $0x2,%rcx
ffffffff8041765c:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff80417663:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417664:	39 d0                	cmp    %edx,%eax
ffffffff80417666:	75 e8                	jne    ffffffff80417650 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x240>
}
ffffffff80417668:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8041766c:	5b                   	pop    %rbx
ffffffff8041766d:	5d                   	pop    %rbp
ffffffff8041766e:	41 5c                	pop    %r12
ffffffff80417670:	41 5d                	pop    %r13
ffffffff80417672:	41 5e                	pop    %r14
ffffffff80417674:	41 5f                	pop    %r15
ffffffff80417676:	c3                   	retq   
ffffffff80417677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041767e:	00 00 
  } else if (0x81 <= scan_code && scan_code <= 0xD8) {
ffffffff80417680:	83 c6 7f             	add    $0x7f,%esi
  auto& key_press_info = key_press_list_[key_info.key];
ffffffff80417683:	ba 27 01 00 00       	mov    $0x127,%edx
  } else if (0x81 <= scan_code && scan_code <= 0xD8) {
ffffffff80417688:	40 80 fe 57          	cmp    $0x57,%sil
ffffffff8041768c:	77 0d                	ja     ffffffff8041769b <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x28b>
    return {static_cast<KEY_CODES>(kScanCodeToASCII[scan_code - 0x80]), KEY_UP};
ffffffff8041768e:	83 c0 80             	add    $0xffffff80,%eax
ffffffff80417691:	48 98                	cltq   
ffffffff80417693:	48 63 14 85 c0 b2 41 	movslq -0x7fbe4d40(,%rax,4),%rdx
ffffffff8041769a:	80 
    key_press_info.time_down = 0;
ffffffff8041769b:	48 c7 04 d7 00 00 00 	movq   $0x0,(%rdi,%rdx,8)
ffffffff804176a2:	00 
  if (key_info.action == KEY_DOWN) {
ffffffff804176a3:	c3                   	retq   
ffffffff804176a4:	0f 1f 40 00          	nopl   0x0(%rax)
      if (pic_timer.GetClock() - first_key_pressed_time < 40) {
ffffffff804176a8:	48 29 c8             	sub    %rcx,%rax
ffffffff804176ab:	48 83 f8 27          	cmp    $0x27,%rax
ffffffff804176af:	0f 87 8e fd ff ff    	ja     ffffffff80417443 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x33>
ffffffff804176b5:	c3                   	retq   
ffffffff804176b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804176bd:	00 00 00 
      if (key_info.key == ENTER) {
ffffffff804176c0:	81 fa 09 01 00 00    	cmp    $0x109,%edx
ffffffff804176c6:	75 a0                	jne    ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
  basic_string_view(const CharT* s) : str_(s) { size_ = strlen(s); }
ffffffff804176c8:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff804176cf:	e8 ec 5a ff ff       	callq  ffffffff8040d1c0 <_ZN6Kernel6strlenEPKc>
    while (!s.empty()) {
ffffffff804176d4:	85 c0                	test   %eax,%eax
ffffffff804176d6:	0f 84 da 08 00 00    	je     ffffffff80417fb6 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xba6>
ffffffff804176dc:	8b 3d 7e 69 00 00    	mov    0x697e(%rip),%edi        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804176e2:	8b 1d 7c 69 00 00    	mov    0x697c(%rip),%ebx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804176e8:	49 c7 c3 fb b7 41 80 	mov    $0xffffffff8041b7fb,%r11
ffffffff804176ef:	44 8b 15 76 69 00 00 	mov    0x6976(%rip),%r10d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff804176f6:	8b 2d 6c 69 00 00    	mov    0x696c(%rip),%ebp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804176fc:	8d 57 fe             	lea    -0x2(%rdi),%edx
ffffffff804176ff:	44 8d 73 ff          	lea    -0x1(%rbx),%r14d
ffffffff80417703:	89 7c 24 08          	mov    %edi,0x8(%rsp)
ffffffff80417707:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041770b:	44 89 74 24 1c       	mov    %r14d,0x1c(%rsp)
ffffffff80417710:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff80417714:	4c 8d aa 40 01 00 00 	lea    0x140(%rdx),%r13
ffffffff8041771b:	8d 57 ff             	lea    -0x1(%rdi),%edx
ffffffff8041771e:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80417722:	48 89 d1             	mov    %rdx,%rcx
ffffffff80417725:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80417729:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8041772d:	4c 01 f2             	add    %r14,%rdx
ffffffff80417730:	48 8d b9 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rdi
ffffffff80417737:	4c 8d bc 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%r15
ffffffff8041773e:	80 
ffffffff8041773f:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
ffffffff80417744:	0f 1f 40 00          	nopl   0x0(%rax)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff80417748:	41 89 d8             	mov    %ebx,%r8d
ffffffff8041774b:	45 29 d0             	sub    %r10d,%r8d
ffffffff8041774e:	41 39 c0             	cmp    %eax,%r8d
ffffffff80417751:	44 0f 47 c0          	cmova  %eax,%r8d
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff80417755:	44 39 c0             	cmp    %r8d,%eax
ffffffff80417758:	44 89 c2             	mov    %r8d,%edx
ffffffff8041775b:	0f 46 d0             	cmovbe %eax,%edx
    for (; i < min(size_, pos + count); i++) {
ffffffff8041775e:	85 d2                	test   %edx,%edx
ffffffff80417760:	0f 84 4a 06 00 00    	je     ffffffff80417db0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9a0>
ffffffff80417766:	8d 7a ff             	lea    -0x1(%rdx),%edi
ffffffff80417769:	31 d2                	xor    %edx,%edx
ffffffff8041776b:	eb 13                	jmp    ffffffff80417780 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x370>
ffffffff8041776d:	0f 1f 00             	nopl   (%rax)
ffffffff80417770:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff80417774:	48 39 d7             	cmp    %rdx,%rdi
ffffffff80417777:	0f 84 33 06 00 00    	je     ffffffff80417db0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9a0>
ffffffff8041777d:	48 89 ca             	mov    %rcx,%rdx
      if (str_[i] == c) {
ffffffff80417780:	41 80 3c 13 0a       	cmpb   $0xa,(%r11,%rdx,1)
ffffffff80417785:	89 d6                	mov    %edx,%esi
ffffffff80417787:	75 e7                	jne    ffffffff80417770 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x360>
ffffffff80417789:	89 54 24 18          	mov    %edx,0x18(%rsp)
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041778d:	39 f0                	cmp    %esi,%eax
ffffffff8041778f:	89 f7                	mov    %esi,%edi
ffffffff80417791:	0f 46 f8             	cmovbe %eax,%edi
    if (current_row_ == num_rows_) {
ffffffff80417794:	3b 6c 24 08          	cmp    0x8(%rsp),%ebp
ffffffff80417798:	0f 84 35 06 00 00    	je     ffffffff80417dd3 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9c3>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041779e:	44 01 d7             	add    %r10d,%edi
ffffffff804177a1:	39 df                	cmp    %ebx,%edi
ffffffff804177a3:	0f 47 fb             	cmova  %ebx,%edi
ffffffff804177a6:	41 39 fa             	cmp    %edi,%r10d
ffffffff804177a9:	0f 83 f1 06 00 00    	jae    ffffffff80417ea0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa90>
ffffffff804177af:	44 89 d2             	mov    %r10d,%edx
ffffffff804177b2:	f7 d2                	not    %edx
ffffffff804177b4:	44 8d 0c 3a          	lea    (%rdx,%rdi,1),%r9d
ffffffff804177b8:	89 ea                	mov    %ebp,%edx
ffffffff804177ba:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804177be:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804177c2:	49 01 d2             	add    %rdx,%r10
ffffffff804177c5:	31 d2                	xor    %edx,%edx
ffffffff804177c7:	4d 01 d2             	add    %r10,%r10
ffffffff804177ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804177d0:	66 41 0f be 0c 13    	movsbw (%r11,%rdx,1),%cx
ffffffff804177d6:	80 cd 0f             	or     $0xf,%ch
ffffffff804177d9:	66 41 89 8c 52 70 e0 	mov    %cx,-0x7fbe1f90(%r10,%rdx,2)
ffffffff804177e0:	41 80 
ffffffff804177e2:	48 89 d1             	mov    %rdx,%rcx
ffffffff804177e5:	48 83 c2 01          	add    $0x1,%rdx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804177e9:	49 39 c9             	cmp    %rcx,%r9
ffffffff804177ec:	75 e2                	jne    ffffffff804177d0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3c0>
    if (current_col_ == num_cols_) {
ffffffff804177ee:	39 fb                	cmp    %edi,%ebx
ffffffff804177f0:	0f 84 5a 06 00 00    	je     ffffffff80417e50 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa40>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804177f6:	83 7c 24 18 ff       	cmpl   $0xffffffff,0x18(%rsp)
    current_col_ = i;
ffffffff804177fb:	89 3d 6b 68 00 00    	mov    %edi,0x686b(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417801:	0f 84 6c 06 00 00    	je     ffffffff80417e73 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa63>
ffffffff80417807:	85 ff                	test   %edi,%edi
ffffffff80417809:	0f 84 79 07 00 00    	je     ffffffff80417f88 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb78>
ffffffff8041780f:	41 89 fa             	mov    %edi,%r10d
ffffffff80417812:	83 fd 18             	cmp    $0x18,%ebp
ffffffff80417815:	0f 86 05 07 00 00    	jbe    ffffffff80417f20 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb10>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041781b:	83 c6 01             	add    $0x1,%esi
ffffffff8041781e:	44 39 c6             	cmp    %r8d,%esi
ffffffff80417821:	44 0f 46 c6          	cmovbe %esi,%r8d
    str_ += n;
ffffffff80417825:	44 89 c2             	mov    %r8d,%edx
ffffffff80417828:	49 01 d3             	add    %rdx,%r11
    size_ -= min(n, size_);
ffffffff8041782b:	44 39 c0             	cmp    %r8d,%eax
ffffffff8041782e:	44 0f 46 c0          	cmovbe %eax,%r8d
ffffffff80417832:	44 29 c0             	sub    %r8d,%eax
    while (!s.empty()) {
ffffffff80417835:	85 c0                	test   %eax,%eax
ffffffff80417837:	0f 85 0b ff ff ff    	jne    ffffffff80417748 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x338>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041783d:	85 ed                	test   %ebp,%ebp
ffffffff8041783f:	74 69                	je     ffffffff804178aa <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x49a>
ffffffff80417841:	8d 45 ff             	lea    -0x1(%rbp),%eax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417844:	44 8b 0d 19 68 00 00 	mov    0x6819(%rip),%r9d        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041784b:	49 c7 c0 70 e0 41 80 	mov    $0xffffffff8041e070,%r8
ffffffff80417852:	45 31 db             	xor    %r11d,%r11d
ffffffff80417855:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
ffffffff80417859:	48 c1 e3 05          	shl    $0x5,%rbx
ffffffff8041785d:	44 89 cf             	mov    %r9d,%edi
ffffffff80417860:	48 81 c3 10 e1 41 80 	add    $0xffffffff8041e110,%rbx
ffffffff80417867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041786e:	00 00 
ffffffff80417870:	4c 89 c2             	mov    %r8,%rdx
ffffffff80417873:	44 89 d8             	mov    %r11d,%eax
ffffffff80417876:	45 85 c9             	test   %r9d,%r9d
ffffffff80417879:	74 1d                	je     ffffffff80417898 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x488>
ffffffff8041787b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80417880:	0f b7 32             	movzwl (%rdx),%esi
ffffffff80417883:	89 c1                	mov    %eax,%ecx
ffffffff80417885:	83 c0 01             	add    $0x1,%eax
ffffffff80417888:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8041788c:	66 89 b4 09 00 80 0b 	mov    %si,0xb8000(%rcx,%rcx,1)
ffffffff80417893:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417894:	39 f8                	cmp    %edi,%eax
ffffffff80417896:	75 e8                	jne    ffffffff80417880 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x470>
ffffffff80417898:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
ffffffff8041789f:	45 01 cb             	add    %r9d,%r11d
ffffffff804178a2:	44 01 cf             	add    %r9d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804178a5:	49 39 d8             	cmp    %rbx,%r8
ffffffff804178a8:	75 c6                	jne    ffffffff80417870 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x460>
    if (current_col_ != 0) {
ffffffff804178aa:	45 85 d2             	test   %r10d,%r10d
ffffffff804178ad:	0f 84 b5 fd ff ff    	je     ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804178b3:	8b 3d ab 67 00 00    	mov    0x67ab(%rip),%edi        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804178b9:	85 ff                	test   %edi,%edi
ffffffff804178bb:	0f 84 a7 fd ff ff    	je     ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804178c1:	89 f8                	mov    %edi,%eax
ffffffff804178c3:	48 8d 54 ad 00       	lea    0x0(%rbp,%rbp,4),%rdx
ffffffff804178c8:	0f af c5             	imul   %ebp,%eax
ffffffff804178cb:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff804178cf:	48 81 c2 70 e0 41 80 	add    $0xffffffff8041e070,%rdx
ffffffff804178d6:	01 c7                	add    %eax,%edi
ffffffff804178d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804178df:	00 
ffffffff804178e0:	0f b7 32             	movzwl (%rdx),%esi
ffffffff804178e3:	89 c1                	mov    %eax,%ecx
ffffffff804178e5:	83 c0 01             	add    $0x1,%eax
ffffffff804178e8:	48 83 c2 02          	add    $0x2,%rdx
ffffffff804178ec:	66 89 b4 09 00 80 0b 	mov    %si,0xb8000(%rcx,%rcx,1)
ffffffff804178f3:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804178f4:	39 c7                	cmp    %eax,%edi
ffffffff804178f6:	75 e8                	jne    ffffffff804178e0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x4d0>
ffffffff804178f8:	e9 6b fd ff ff       	jmpq   ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
ffffffff804178fd:	0f 1f 00             	nopl   (%rax)
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff80417900:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
ffffffff80417907:	00 
ffffffff80417908:	0f 85 6c fb ff ff    	jne    ffffffff8041747a <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6a>
        vga_output << static_cast<char>(key_info.key);
ffffffff8041790e:	88 54 24 26          	mov    %dl,0x26(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff80417912:	8d 53 fe             	lea    -0x2(%rbx),%edx
ffffffff80417915:	8d 68 ff             	lea    -0x1(%rax),%ebp
ffffffff80417918:	8b 35 4e 67 00 00    	mov    0x674e(%rip),%esi        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff8041791e:	4c 8d 3c 92          	lea    (%rdx,%rdx,4),%r15
ffffffff80417922:	8d 53 ff             	lea    -0x1(%rbx),%edx
ffffffff80417925:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
ffffffff80417929:	44 8b 15 38 67 00 00 	mov    0x6738(%rip),%r10d        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417930:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff80417934:	49 c1 e7 05          	shl    $0x5,%r15
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff80417938:	48 8d 7c 24 26       	lea    0x26(%rsp),%rdi
ffffffff8041793d:	48 89 d1             	mov    %rdx,%rcx
ffffffff80417940:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80417944:	49 81 c7 40 01 00 00 	add    $0x140,%r15
ffffffff8041794b:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8041794f:	48 01 ea             	add    %rbp,%rdx
ffffffff80417952:	48 8d 99 70 e0 41 80 	lea    -0x7fbe1f90(%rcx),%rbx
ffffffff80417959:	4c 8d a4 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%r12
ffffffff80417960:	80 
ffffffff80417961:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
      size_t endline_or_col_chars = s.find_first_of('\n', 0, len);
ffffffff80417966:	31 db                	xor    %ebx,%ebx
ffffffff80417968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041796f:	00 
ffffffff80417970:	41 89 c0             	mov    %eax,%r8d
ffffffff80417973:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80417978:	41 29 f0             	sub    %esi,%r8d
ffffffff8041797b:	44 0f 45 c1          	cmovne %ecx,%r8d
    for (; i < min(size_, pos + count); i++) {
ffffffff8041797f:	39 c6                	cmp    %eax,%esi
ffffffff80417981:	0f 84 21 06 00 00    	je     ffffffff80417fa8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb98>
ffffffff80417987:	80 3f 0a             	cmpb   $0xa,(%rdi)
ffffffff8041798a:	41 89 db             	mov    %ebx,%r11d
ffffffff8041798d:	41 0f 94 c1          	sete   %r9b
ffffffff80417991:	45 0f 45 d8          	cmovne %r8d,%r11d
ffffffff80417995:	45 0f b6 c9          	movzbl %r9b,%r9d
ffffffff80417999:	41 83 e9 01          	sub    $0x1,%r9d
    if (current_row_ == num_rows_) {
ffffffff8041799d:	44 3b 54 24 18       	cmp    0x18(%rsp),%r10d
ffffffff804179a2:	0f 84 18 02 00 00    	je     ffffffff80417bc0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7b0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804179a8:	42 8d 0c 1e          	lea    (%rsi,%r11,1),%ecx
ffffffff804179ac:	39 c1                	cmp    %eax,%ecx
ffffffff804179ae:	0f 47 c8             	cmova  %eax,%ecx
ffffffff804179b1:	39 ce                	cmp    %ecx,%esi
ffffffff804179b3:	0f 83 97 03 00 00    	jae    ffffffff80417d50 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x940>
ffffffff804179b9:	89 f2                	mov    %esi,%edx
ffffffff804179bb:	f7 d2                	not    %edx
ffffffff804179bd:	44 8d 34 0a          	lea    (%rdx,%rcx,1),%r14d
ffffffff804179c1:	44 89 d2             	mov    %r10d,%edx
ffffffff804179c4:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff804179c8:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff804179cc:	48 01 d6             	add    %rdx,%rsi
ffffffff804179cf:	31 d2                	xor    %edx,%edx
ffffffff804179d1:	48 01 f6             	add    %rsi,%rsi
ffffffff804179d4:	0f 1f 40 00          	nopl   0x0(%rax)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804179d8:	66 44 0f be 2c 17    	movsbw (%rdi,%rdx,1),%r13w
ffffffff804179de:	66 41 81 cd 00 0f    	or     $0xf00,%r13w
ffffffff804179e4:	66 44 89 ac 56 70 e0 	mov    %r13w,-0x7fbe1f90(%rsi,%rdx,2)
ffffffff804179eb:	41 80 
ffffffff804179ed:	49 89 d5             	mov    %rdx,%r13
ffffffff804179f0:	48 83 c2 01          	add    $0x1,%rdx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804179f4:	4d 39 f5             	cmp    %r14,%r13
ffffffff804179f7:	75 df                	jne    ffffffff804179d8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x5c8>
    if (current_col_ == num_cols_) {
ffffffff804179f9:	39 c8                	cmp    %ecx,%eax
ffffffff804179fb:	0f 84 3f 02 00 00    	je     ffffffff80417c40 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x830>
    current_col_ = i;
ffffffff80417a01:	89 0d 65 66 00 00    	mov    %ecx,0x6665(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417a07:	41 83 f9 ff          	cmp    $0xffffffff,%r9d
ffffffff80417a0b:	0f 84 4e 02 00 00    	je     ffffffff80417c5f <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x84f>
ffffffff80417a11:	85 c9                	test   %ecx,%ecx
ffffffff80417a13:	0f 84 f7 04 00 00    	je     ffffffff80417f10 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb00>
ffffffff80417a19:	89 ce                	mov    %ecx,%esi
ffffffff80417a1b:	41 83 fa 18          	cmp    $0x18,%r10d
ffffffff80417a1f:	0f 86 8b 04 00 00    	jbe    ffffffff80417eb0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xaa0>
    size_ -= min(n, size_);
ffffffff80417a25:	b9 01 00 00 00       	mov    $0x1,%ecx
    str_ += n;
ffffffff80417a2a:	44 89 c2             	mov    %r8d,%edx
    size_ -= min(n, size_);
ffffffff80417a2d:	44 29 c1             	sub    %r8d,%ecx
    str_ += n;
ffffffff80417a30:	48 01 d7             	add    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80417a33:	41 89 c8             	mov    %ecx,%r8d
    while (!s.empty()) {
ffffffff80417a36:	45 85 c0             	test   %r8d,%r8d
ffffffff80417a39:	0f 85 31 ff ff ff    	jne    ffffffff80417970 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x560>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80417a3f:	45 85 d2             	test   %r10d,%r10d
ffffffff80417a42:	74 61                	je     ffffffff80417aa5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x695>
ffffffff80417a44:	41 8d 52 ff          	lea    -0x1(%r10),%edx
ffffffff80417a48:	48 c7 c3 70 e0 41 80 	mov    $0xffffffff8041e070,%rbx
ffffffff80417a4f:	41 89 c3             	mov    %eax,%r11d
ffffffff80417a52:	48 8d 2c 92          	lea    (%rdx,%rdx,4),%rbp
ffffffff80417a56:	48 c1 e5 05          	shl    $0x5,%rbp
ffffffff80417a5a:	48 81 c5 10 e1 41 80 	add    $0xffffffff8041e110,%rbp
ffffffff80417a61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417a68:	48 89 d9             	mov    %rbx,%rcx
ffffffff80417a6b:	44 89 c2             	mov    %r8d,%edx
ffffffff80417a6e:	85 c0                	test   %eax,%eax
ffffffff80417a70:	74 21                	je     ffffffff80417a93 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x683>
ffffffff80417a72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80417a78:	44 0f b7 09          	movzwl (%rcx),%r9d
ffffffff80417a7c:	89 d7                	mov    %edx,%edi
ffffffff80417a7e:	83 c2 01             	add    $0x1,%edx
ffffffff80417a81:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80417a85:	66 44 89 8c 3f 00 80 	mov    %r9w,0xb8000(%rdi,%rdi,1)
ffffffff80417a8c:	0b 00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417a8e:	41 39 d3             	cmp    %edx,%r11d
ffffffff80417a91:	75 e5                	jne    ffffffff80417a78 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x668>
ffffffff80417a93:	48 81 c3 a0 00 00 00 	add    $0xa0,%rbx
ffffffff80417a9a:	41 01 c0             	add    %eax,%r8d
ffffffff80417a9d:	41 01 c3             	add    %eax,%r11d
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80417aa0:	48 39 eb             	cmp    %rbp,%rbx
ffffffff80417aa3:	75 c3                	jne    ffffffff80417a68 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x658>
    if (current_col_ != 0) {
ffffffff80417aa5:	85 f6                	test   %esi,%esi
ffffffff80417aa7:	0f 84 bb fb ff ff    	je     ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417aad:	85 c0                	test   %eax,%eax
ffffffff80417aaf:	0f 84 b3 fb ff ff    	je     ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80417ab5:	89 c2                	mov    %eax,%edx
ffffffff80417ab7:	4b 8d 0c 92          	lea    (%r10,%r10,4),%rcx
ffffffff80417abb:	41 0f af d2          	imul   %r10d,%edx
ffffffff80417abf:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80417ac3:	48 81 c1 70 e0 41 80 	add    $0xffffffff8041e070,%rcx
ffffffff80417aca:	01 d0                	add    %edx,%eax
ffffffff80417acc:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80417ad0:	0f b7 39             	movzwl (%rcx),%edi
ffffffff80417ad3:	89 d6                	mov    %edx,%esi
ffffffff80417ad5:	83 c2 01             	add    $0x1,%edx
ffffffff80417ad8:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80417adc:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff80417ae3:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417ae4:	39 d0                	cmp    %edx,%eax
ffffffff80417ae6:	75 e8                	jne    ffffffff80417ad0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x6c0>
ffffffff80417ae8:	e9 7b fb ff ff       	jmpq   ffffffff80417668 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x258>
ffffffff80417aed:	0f 1f 00             	nopl   (%rax)
      current_row_++;
ffffffff80417af0:	83 c7 01             	add    $0x1,%edi
      current_col_ = 0;
ffffffff80417af3:	89 2d 73 65 00 00    	mov    %ebp,0x6573(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417af9:	31 d2                	xor    %edx,%edx
ffffffff80417afb:	31 c9                	xor    %ecx,%ecx
      current_row_++;
ffffffff80417afd:	89 3d 65 65 00 00    	mov    %edi,0x6565(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417b03:	41 83 fa ff          	cmp    $0xffffffff,%r10d
ffffffff80417b07:	0f 85 af fa ff ff    	jne    ffffffff804175bc <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1ac>
ffffffff80417b0d:	44 39 de             	cmp    %r11d,%esi
ffffffff80417b10:	41 0f 47 f3          	cmova  %r11d,%esi
    str_ += n;
ffffffff80417b14:	89 f2                	mov    %esi,%edx
ffffffff80417b16:	49 01 d1             	add    %rdx,%r9
    size_ -= min(n, size_);
ffffffff80417b19:	89 da                	mov    %ebx,%edx
ffffffff80417b1b:	29 f2                	sub    %esi,%edx
ffffffff80417b1d:	89 d6                	mov    %edx,%esi
ffffffff80417b1f:	89 ca                	mov    %ecx,%edx
ffffffff80417b21:	e9 a1 fa ff ff       	jmpq   ffffffff804175c7 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1b7>
ffffffff80417b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80417b2d:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417b30:	83 ff 01             	cmp    $0x1,%edi
ffffffff80417b33:	76 47                	jbe    ffffffff80417b7c <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x76c>
ffffffff80417b35:	41 b8 a0 00 00 00    	mov    $0xa0,%r8d
ffffffff80417b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417b40:	31 c9                	xor    %ecx,%ecx
ffffffff80417b42:	4d 8d b0 60 ff ff ff 	lea    -0xa0(%r8),%r14
ffffffff80417b49:	85 c0                	test   %eax,%eax
ffffffff80417b4b:	74 21                	je     ffffffff80417b6e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x75e>
ffffffff80417b4d:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80417b50:	45 0f b7 bc 48 70 e0 	movzwl -0x7fbe1f90(%r8,%rcx,2),%r15d
ffffffff80417b57:	41 80 
ffffffff80417b59:	66 45 89 bc 4e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%rcx,2)
ffffffff80417b60:	41 80 
ffffffff80417b62:	49 89 cf             	mov    %rcx,%r15
ffffffff80417b65:	48 83 c1 01          	add    $0x1,%rcx
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417b69:	4d 39 e7             	cmp    %r12,%r15
ffffffff80417b6c:	75 e2                	jne    ffffffff80417b50 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x740>
ffffffff80417b6e:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417b75:	4c 39 44 24 08       	cmp    %r8,0x8(%rsp)
ffffffff80417b7a:	75 c4                	jne    ffffffff80417b40 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x730>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417b7c:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff80417b81:	85 c0                	test   %eax,%eax
ffffffff80417b83:	74 14                	je     ffffffff80417b99 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x789>
ffffffff80417b85:	0f 1f 00             	nopl   (%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80417b88:	45 31 f6             	xor    %r14d,%r14d
ffffffff80417b8b:	48 83 c1 02          	add    $0x2,%rcx
ffffffff80417b8f:	66 44 89 71 fe       	mov    %r14w,-0x2(%rcx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417b94:	49 39 cd             	cmp    %rcx,%r13
ffffffff80417b97:	75 ef                	jne    ffffffff80417b88 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x778>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417b99:	42 8d 0c 1a          	lea    (%rdx,%r11,1),%ecx
      current_row_--;
ffffffff80417b9d:	83 ef 01             	sub    $0x1,%edi
ffffffff80417ba0:	39 c1                	cmp    %eax,%ecx
ffffffff80417ba2:	89 3d c0 64 00 00    	mov    %edi,0x64c0(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417ba8:	0f 47 c8             	cmova  %eax,%ecx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417bab:	39 d1                	cmp    %edx,%ecx
ffffffff80417bad:	0f 87 9e f9 ff ff    	ja     ffffffff80417551 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x141>
ffffffff80417bb3:	89 d1                	mov    %edx,%ecx
ffffffff80417bb5:	e9 d7 f9 ff ff       	jmpq   ffffffff80417591 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x181>
ffffffff80417bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417bc0:	41 83 fa 01          	cmp    $0x1,%r10d
ffffffff80417bc4:	76 44                	jbe    ffffffff80417c0a <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7fa>
ffffffff80417bc6:	b9 a0 00 00 00       	mov    $0xa0,%ecx
ffffffff80417bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417bd0:	31 d2                	xor    %edx,%edx
ffffffff80417bd2:	4c 8d a9 60 ff ff ff 	lea    -0xa0(%rcx),%r13
ffffffff80417bd9:	85 c0                	test   %eax,%eax
ffffffff80417bdb:	74 21                	je     ffffffff80417bfe <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7ee>
ffffffff80417bdd:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80417be0:	44 0f b7 b4 51 70 e0 	movzwl -0x7fbe1f90(%rcx,%rdx,2),%r14d
ffffffff80417be7:	41 80 
ffffffff80417be9:	66 45 89 b4 55 70 e0 	mov    %r14w,-0x7fbe1f90(%r13,%rdx,2)
ffffffff80417bf0:	41 80 
ffffffff80417bf2:	49 89 d6             	mov    %rdx,%r14
ffffffff80417bf5:	48 83 c2 01          	add    $0x1,%rdx
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417bf9:	49 39 ee             	cmp    %rbp,%r14
ffffffff80417bfc:	75 e2                	jne    ffffffff80417be0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7d0>
ffffffff80417bfe:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417c05:	4c 39 f9             	cmp    %r15,%rcx
ffffffff80417c08:	75 c6                	jne    ffffffff80417bd0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x7c0>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417c0a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
ffffffff80417c0f:	85 c0                	test   %eax,%eax
ffffffff80417c11:	74 16                	je     ffffffff80417c29 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x819>
ffffffff80417c13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80417c18:	45 31 ed             	xor    %r13d,%r13d
ffffffff80417c1b:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80417c1f:	66 44 89 6a fe       	mov    %r13w,-0x2(%rdx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417c24:	4c 39 e2             	cmp    %r12,%rdx
ffffffff80417c27:	75 ef                	jne    ffffffff80417c18 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x808>
      current_row_--;
ffffffff80417c29:	41 83 ea 01          	sub    $0x1,%r10d
ffffffff80417c2d:	44 89 15 34 64 00 00 	mov    %r10d,0x6434(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417c34:	e9 6f fd ff ff       	jmpq   ffffffff804179a8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x598>
ffffffff80417c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
      current_row_++;
ffffffff80417c40:	41 83 c2 01          	add    $0x1,%r10d
      current_col_ = 0;
ffffffff80417c44:	89 1d 22 64 00 00    	mov    %ebx,0x6422(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417c4a:	31 f6                	xor    %esi,%esi
ffffffff80417c4c:	31 c9                	xor    %ecx,%ecx
      current_row_++;
ffffffff80417c4e:	44 89 15 13 64 00 00 	mov    %r10d,0x6413(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417c55:	41 83 f9 ff          	cmp    $0xffffffff,%r9d
ffffffff80417c59:	0f 85 c6 fd ff ff    	jne    ffffffff80417a25 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x615>
ffffffff80417c5f:	45 39 d8             	cmp    %r11d,%r8d
ffffffff80417c62:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80417c67:	45 0f 47 c3          	cmova  %r11d,%r8d
    str_ += n;
ffffffff80417c6b:	44 89 c2             	mov    %r8d,%edx
    size_ -= min(n, size_);
ffffffff80417c6e:	44 29 c6             	sub    %r8d,%esi
ffffffff80417c71:	41 89 f0             	mov    %esi,%r8d
    str_ += n;
ffffffff80417c74:	48 01 d7             	add    %rdx,%rdi
    size_ -= min(n, size_);
ffffffff80417c77:	89 ce                	mov    %ecx,%esi
ffffffff80417c79:	e9 b8 fd ff ff       	jmpq   ffffffff80417a36 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x626>
ffffffff80417c7e:	66 90                	xchg   %ax,%ax
ffffffff80417c80:	41 89 f2             	mov    %esi,%r10d
ffffffff80417c83:	e9 9b f9 ff ff       	jmpq   ffffffff80417623 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x213>
ffffffff80417c88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80417c8f:	00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417c90:	39 c8                	cmp    %ecx,%eax
ffffffff80417c92:	76 45                	jbe    ffffffff80417cd9 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x8c9>
ffffffff80417c94:	89 fa                	mov    %edi,%edx
ffffffff80417c96:	44 8b 74 24 1c       	mov    0x1c(%rsp),%r14d
ffffffff80417c9b:	41 89 ca             	mov    %ecx,%r10d
ffffffff80417c9e:	4c 8d 04 92          	lea    (%rdx,%rdx,4),%r8
ffffffff80417ca2:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80417ca6:	41 29 ce             	sub    %ecx,%r14d
ffffffff80417ca9:	4b 8d 54 02 08       	lea    0x8(%r10,%r8,1),%rdx
ffffffff80417cae:	4d 01 d0             	add    %r10,%r8
ffffffff80417cb1:	4d 01 f0             	add    %r14,%r8
ffffffff80417cb4:	48 8d 94 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rdx
ffffffff80417cbb:	80 
ffffffff80417cbc:	4b 8d 8c 00 72 e0 41 	lea    -0x7fbe1f8e(%r8,%r8,1),%rcx
ffffffff80417cc3:	80 
ffffffff80417cc4:	0f 1f 40 00          	nopl   0x0(%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80417cc8:	45 31 d2             	xor    %r10d,%r10d
ffffffff80417ccb:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80417ccf:	66 44 89 52 fe       	mov    %r10w,-0x2(%rdx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417cd4:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80417cd7:	75 ef                	jne    ffffffff80417cc8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x8b8>
        current_row_++;
ffffffff80417cd9:	83 c7 01             	add    $0x1,%edi
        current_col_ = 0;
ffffffff80417cdc:	89 2d 8a 63 00 00    	mov    %ebp,0x638a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80417ce2:	31 d2                	xor    %edx,%edx
        current_row_++;
ffffffff80417ce4:	89 3d 7e 63 00 00    	mov    %edi,0x637e(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417cea:	e9 cd f8 ff ff       	jmpq   ffffffff804175bc <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1ac>
ffffffff80417cef:	90                   	nop
ffffffff80417cf0:	31 d2                	xor    %edx,%edx
ffffffff80417cf2:	e9 c5 f8 ff ff       	jmpq   ffffffff804175bc <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x1ac>
ffffffff80417cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80417cfe:	00 00 
  } else if ('0' <= c && c <= '9') {
ffffffff80417d00:	8d 72 d0             	lea    -0x30(%rdx),%esi
ffffffff80417d03:	40 80 fe 09          	cmp    $0x9,%sil
ffffffff80417d07:	0f 86 83 02 00 00    	jbe    ffffffff80417f90 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb80>
  switch (c) {
ffffffff80417d0d:	83 ea 27             	sub    $0x27,%edx
ffffffff80417d10:	80 fa 39             	cmp    $0x39,%dl
ffffffff80417d13:	0f 87 8c f7 ff ff    	ja     ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
ffffffff80417d19:	0f b6 d2             	movzbl %dl,%edx
ffffffff80417d1c:	ff 24 d5 e0 b0 41 80 	jmpq   *-0x7fbe4f20(,%rdx,8)
  } else if ('0' <= c && c <= '9') {
ffffffff80417d23:	b9 7e 00 00 00       	mov    $0x7e,%ecx
ffffffff80417d28:	e9 78 f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return '_';
ffffffff80417d2d:	b9 5f 00 00 00       	mov    $0x5f,%ecx
ffffffff80417d32:	e9 6e f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
ffffffff80417d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80417d3e:	00 00 
        endline_or_col_chars = len;
ffffffff80417d40:	41 89 f3             	mov    %esi,%r11d
        return i;
      }
    }
    return npos;
ffffffff80417d43:	41 ba ff ff ff ff    	mov    $0xffffffff,%r10d
ffffffff80417d49:	e9 e8 f7 ff ff       	jmpq   ffffffff80417536 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x126>
ffffffff80417d4e:	66 90                	xchg   %ax,%ax
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417d50:	89 f1                	mov    %esi,%ecx
ffffffff80417d52:	e9 a2 fc ff ff       	jmpq   ffffffff804179f9 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x5e9>
      return '}';
ffffffff80417d57:	b9 7d 00 00 00       	mov    $0x7d,%ecx
ffffffff80417d5c:	e9 44 f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return '{';
ffffffff80417d61:	b9 7b 00 00 00       	mov    $0x7b,%ecx
ffffffff80417d66:	e9 3a f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return '+';
ffffffff80417d6b:	b9 2b 00 00 00       	mov    $0x2b,%ecx
ffffffff80417d70:	e9 30 f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return ':';
ffffffff80417d75:	b9 3a 00 00 00       	mov    $0x3a,%ecx
ffffffff80417d7a:	e9 26 f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return '?';
ffffffff80417d7f:	b9 3f 00 00 00       	mov    $0x3f,%ecx
ffffffff80417d84:	e9 1c f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return '>';
ffffffff80417d89:	b9 3e 00 00 00       	mov    $0x3e,%ecx
ffffffff80417d8e:	e9 12 f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return '<';
ffffffff80417d93:	b9 3c 00 00 00       	mov    $0x3c,%ecx
ffffffff80417d98:	e9 08 f7 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
      return '"';
ffffffff80417d9d:	b9 22 00 00 00       	mov    $0x22,%ecx
ffffffff80417da2:	e9 fe f6 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
ffffffff80417da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80417dae:	00 00 
    if (count == npos) {
ffffffff80417db0:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
ffffffff80417db4:	0f 85 d6 00 00 00    	jne    ffffffff80417e90 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa80>
ffffffff80417dba:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%rsp)
ffffffff80417dc1:	ff 
ffffffff80417dc2:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80417dc7:	89 c7                	mov    %eax,%edi
    if (current_row_ == num_rows_) {
ffffffff80417dc9:	3b 6c 24 08          	cmp    0x8(%rsp),%ebp
ffffffff80417dcd:	0f 85 cb f9 ff ff    	jne    ffffffff8041779e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x38e>
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417dd3:	83 fd 01             	cmp    $0x1,%ebp
ffffffff80417dd6:	76 42                	jbe    ffffffff80417e1a <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa0a>
ffffffff80417dd8:	b9 a0 00 00 00       	mov    $0xa0,%ecx
ffffffff80417ddd:	0f 1f 00             	nopl   (%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417de0:	31 d2                	xor    %edx,%edx
ffffffff80417de2:	4c 8d 89 60 ff ff ff 	lea    -0xa0(%rcx),%r9
ffffffff80417de9:	85 db                	test   %ebx,%ebx
ffffffff80417deb:	74 21                	je     ffffffff80417e0e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9fe>
ffffffff80417ded:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80417df0:	44 0f b7 a4 51 70 e0 	movzwl -0x7fbe1f90(%rcx,%rdx,2),%r12d
ffffffff80417df7:	41 80 
ffffffff80417df9:	66 45 89 a4 51 70 e0 	mov    %r12w,-0x7fbe1f90(%r9,%rdx,2)
ffffffff80417e00:	41 80 
ffffffff80417e02:	49 89 d4             	mov    %rdx,%r12
ffffffff80417e05:	48 83 c2 01          	add    $0x1,%rdx
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80417e09:	4d 39 f4             	cmp    %r14,%r12
ffffffff80417e0c:	75 e2                	jne    ffffffff80417df0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9e0>
ffffffff80417e0e:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80417e15:	4c 39 e9             	cmp    %r13,%rcx
ffffffff80417e18:	75 c6                	jne    ffffffff80417de0 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x9d0>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417e1a:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
ffffffff80417e1f:	85 db                	test   %ebx,%ebx
ffffffff80417e21:	74 16                	je     ffffffff80417e39 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa29>
ffffffff80417e23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80417e28:	45 31 c9             	xor    %r9d,%r9d
ffffffff80417e2b:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80417e2f:	66 44 89 4a fe       	mov    %r9w,-0x2(%rdx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80417e34:	4c 39 fa             	cmp    %r15,%rdx
ffffffff80417e37:	75 ef                	jne    ffffffff80417e28 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xa18>
      current_row_--;
ffffffff80417e39:	83 ed 01             	sub    $0x1,%ebp
ffffffff80417e3c:	89 2d 26 62 00 00    	mov    %ebp,0x6226(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417e42:	e9 57 f9 ff ff       	jmpq   ffffffff8041779e <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x38e>
ffffffff80417e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80417e4e:	00 00 
      current_row_++;
ffffffff80417e50:	83 c5 01             	add    $0x1,%ebp
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417e53:	45 31 d2             	xor    %r10d,%r10d
ffffffff80417e56:	31 ff                	xor    %edi,%edi
ffffffff80417e58:	83 7c 24 18 ff       	cmpl   $0xffffffff,0x18(%rsp)
      current_col_ = 0;
ffffffff80417e5d:	c7 05 05 62 00 00 00 	movl   $0x0,0x6205(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80417e64:	00 00 00 
      current_row_++;
ffffffff80417e67:	89 2d fb 61 00 00    	mov    %ebp,0x61fb(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80417e6d:	0f 85 a8 f9 ff ff    	jne    ffffffff8041781b <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x40b>
ffffffff80417e73:	41 39 f0             	cmp    %esi,%r8d
    size_ -= min(n, size_);
ffffffff80417e76:	41 89 fa             	mov    %edi,%r10d
ffffffff80417e79:	41 0f 46 f0          	cmovbe %r8d,%esi
    str_ += n;
ffffffff80417e7d:	89 f2                	mov    %esi,%edx
ffffffff80417e7f:	49 01 d3             	add    %rdx,%r11
    size_ -= min(n, size_);
ffffffff80417e82:	39 c6                	cmp    %eax,%esi
ffffffff80417e84:	0f 47 f0             	cmova  %eax,%esi
ffffffff80417e87:	29 f0                	sub    %esi,%eax
ffffffff80417e89:	e9 a7 f9 ff ff       	jmpq   ffffffff80417835 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x425>
ffffffff80417e8e:	66 90                	xchg   %ax,%ax
ffffffff80417e90:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%rsp)
ffffffff80417e97:	ff 
ffffffff80417e98:	44 89 c6             	mov    %r8d,%esi
ffffffff80417e9b:	e9 ed f8 ff ff       	jmpq   ffffffff8041778d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x37d>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80417ea0:	44 89 d7             	mov    %r10d,%edi
ffffffff80417ea3:	e9 46 f9 ff ff       	jmpq   ffffffff804177ee <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x3de>
ffffffff80417ea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80417eaf:	00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417eb0:	39 c8                	cmp    %ecx,%eax
ffffffff80417eb2:	76 43                	jbe    ffffffff80417ef7 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xae7>
ffffffff80417eb4:	44 89 d2             	mov    %r10d,%edx
ffffffff80417eb7:	44 8b 74 24 10       	mov    0x10(%rsp),%r14d
ffffffff80417ebc:	41 89 c9             	mov    %ecx,%r9d
ffffffff80417ebf:	48 8d 34 92          	lea    (%rdx,%rdx,4),%rsi
ffffffff80417ec3:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80417ec7:	41 29 ce             	sub    %ecx,%r14d
ffffffff80417eca:	49 8d 54 31 08       	lea    0x8(%r9,%rsi,1),%rdx
ffffffff80417ecf:	4c 01 ce             	add    %r9,%rsi
ffffffff80417ed2:	4c 01 f6             	add    %r14,%rsi
ffffffff80417ed5:	48 8d 94 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rdx
ffffffff80417edc:	80 
ffffffff80417edd:	48 8d 8c 36 72 e0 41 	lea    -0x7fbe1f8e(%rsi,%rsi,1),%rcx
ffffffff80417ee4:	80 
ffffffff80417ee5:	0f 1f 00             	nopl   (%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff80417ee8:	31 f6                	xor    %esi,%esi
ffffffff80417eea:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80417eee:	66 89 72 fe          	mov    %si,-0x2(%rdx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417ef2:	48 39 d1             	cmp    %rdx,%rcx
ffffffff80417ef5:	75 f1                	jne    ffffffff80417ee8 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xad8>
        current_row_++;
ffffffff80417ef7:	41 83 c2 01          	add    $0x1,%r10d
        current_col_ = 0;
ffffffff80417efb:	89 1d 6b 61 00 00    	mov    %ebx,0x616b(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80417f01:	31 f6                	xor    %esi,%esi
        current_row_++;
ffffffff80417f03:	44 89 15 5e 61 00 00 	mov    %r10d,0x615e(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417f0a:	e9 16 fb ff ff       	jmpq   ffffffff80417a25 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x615>
ffffffff80417f0f:	90                   	nop
ffffffff80417f10:	31 f6                	xor    %esi,%esi
ffffffff80417f12:	e9 0e fb ff ff       	jmpq   ffffffff80417a25 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x615>
ffffffff80417f17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80417f1e:	00 00 
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417f20:	39 fb                	cmp    %edi,%ebx
ffffffff80417f22:	76 43                	jbe    ffffffff80417f67 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb57>
ffffffff80417f24:	89 ea                	mov    %ebp,%edx
ffffffff80417f26:	44 8b 54 24 1c       	mov    0x1c(%rsp),%r10d
ffffffff80417f2b:	89 f9                	mov    %edi,%ecx
ffffffff80417f2d:	4c 8d 0c 92          	lea    (%rdx,%rdx,4),%r9
ffffffff80417f31:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80417f35:	41 29 fa             	sub    %edi,%r10d
ffffffff80417f38:	4a 8d 54 09 08       	lea    0x8(%rcx,%r9,1),%rdx
ffffffff80417f3d:	4c 01 c9             	add    %r9,%rcx
ffffffff80417f40:	4c 01 d1             	add    %r10,%rcx
ffffffff80417f43:	48 8d 94 12 60 e0 41 	lea    -0x7fbe1fa0(%rdx,%rdx,1),%rdx
ffffffff80417f4a:	80 
ffffffff80417f4b:	48 8d 8c 09 72 e0 41 	lea    -0x7fbe1f8e(%rcx,%rcx,1),%rcx
ffffffff80417f52:	80 
ffffffff80417f53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80417f58:	31 ff                	xor    %edi,%edi
ffffffff80417f5a:	48 83 c2 02          	add    $0x2,%rdx
ffffffff80417f5e:	66 89 7a fe          	mov    %di,-0x2(%rdx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80417f62:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80417f65:	75 f1                	jne    ffffffff80417f58 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0xb48>
        current_col_ = 0;
ffffffff80417f67:	c7 05 fb 60 00 00 00 	movl   $0x0,0x60fb(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80417f6e:	00 00 00 
        current_row_++;
ffffffff80417f71:	83 c5 01             	add    $0x1,%ebp
ffffffff80417f74:	45 31 d2             	xor    %r10d,%r10d
ffffffff80417f77:	89 2d eb 60 00 00    	mov    %ebp,0x60eb(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417f7d:	e9 99 f8 ff ff       	jmpq   ffffffff8041781b <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x40b>
ffffffff80417f82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80417f88:	45 31 d2             	xor    %r10d,%r10d
ffffffff80417f8b:	e9 8b f8 ff ff       	jmpq   ffffffff8041781b <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x40b>
        vga_output << CharWhenShiftPressed(static_cast<char>(key_info.key));
ffffffff80417f90:	0f be d2             	movsbl %dl,%edx
    return shift_number[c - '0'];
ffffffff80417f93:	83 ea 30             	sub    $0x30,%edx
ffffffff80417f96:	48 63 d2             	movslq %edx,%rdx
ffffffff80417f99:	0f b6 4c 14 26       	movzbl 0x26(%rsp,%rdx,1),%ecx
ffffffff80417f9e:	e9 02 f5 ff ff       	jmpq   ffffffff804174a5 <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x95>
ffffffff80417fa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        endline_or_col_chars = len;
ffffffff80417fa8:	45 89 c3             	mov    %r8d,%r11d
    return npos;
ffffffff80417fab:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
ffffffff80417fb1:	e9 e7 f9 ff ff       	jmpq   ffffffff8041799d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x58d>
ffffffff80417fb6:	44 8b 15 af 60 00 00 	mov    0x60af(%rip),%r10d        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80417fbd:	8b 2d a5 60 00 00    	mov    0x60a5(%rip),%ebp        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80417fc3:	e9 75 f8 ff ff       	jmpq   ffffffff8041783d <_ZN6Kernel11PS2Keyboard19MainKeyboardHandlerEh+0x42d>
ffffffff80417fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80417fcf:	00 

ffffffff80417fd0 <_ZNK6Kernel11PS2Keyboard11IsShiftDownEv>:
  return (key_press_list_[KEY_CODES::LSHIFT].time_down != 0) ||
ffffffff80417fd0:	48 83 bf 18 08 00 00 	cmpq   $0x0,0x818(%rdi)
ffffffff80417fd7:	00 
ffffffff80417fd8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80417fdd:	75 0b                	jne    ffffffff80417fea <_ZNK6Kernel11PS2Keyboard11IsShiftDownEv+0x1a>
ffffffff80417fdf:	48 83 bf 20 08 00 00 	cmpq   $0x0,0x820(%rdi)
ffffffff80417fe6:	00 
ffffffff80417fe7:	0f 95 c0             	setne  %al
         (key_press_list_[KEY_CODES::RSHIFT].time_down != 0);
}
ffffffff80417fea:	c3                   	retq   
ffffffff80417feb:	90                   	nop
ffffffff80417fec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80417ff0 <_ZNK6Kernel11PS2Keyboard13IsControlDownEv>:

bool PS2Keyboard::IsControlDown() const {
  return (key_press_list_[KEY_CODES::LCTRL].time_down != 0) ||
ffffffff80417ff0:	48 83 bf 28 08 00 00 	cmpq   $0x0,0x828(%rdi)
ffffffff80417ff7:	00 
ffffffff80417ff8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80417ffd:	75 0b                	jne    ffffffff8041800a <_ZNK6Kernel11PS2Keyboard13IsControlDownEv+0x1a>
ffffffff80417fff:	48 83 bf 30 08 00 00 	cmpq   $0x0,0x830(%rdi)
ffffffff80418006:	00 
ffffffff80418007:	0f 95 c0             	setne  %al
         (key_press_list_[KEY_CODES::RCTRL].time_down != 0);
}
ffffffff8041800a:	c3                   	retq   
ffffffff8041800b:	90                   	nop
ffffffff8041800c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80418010 <_ZNK6Kernel11PS2Keyboard9IsAltDownEv>:

bool PS2Keyboard::IsAltDown() const {
  return key_press_list_[KEY_CODES::LALT].time_down != 0;
ffffffff80418010:	48 83 bf 58 08 00 00 	cmpq   $0x0,0x858(%rdi)
ffffffff80418017:	00 
ffffffff80418018:	0f 95 c0             	setne  %al
}
ffffffff8041801b:	c3                   	retq   
ffffffff8041801c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80418020 <_ZN6Kernel7PITimerC1Ev>:
#include "timer.h"
#include "stdint.h"

namespace Kernel {
PITimer::PITimer() : timer_tick_lower_(0), timer_tick_upper_(0) {}
ffffffff80418020:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
ffffffff80418027:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
ffffffff8041802e:	00 
ffffffff8041802f:	c3                   	retq   

ffffffff80418030 <_ZN6Kernel7PITimer21TimerInterruptHandlerEv>:

void PITimer::TimerInterruptHandler() {
  if (timer_tick_lower_ == UINT64_MAX) {
ffffffff80418030:	48 8b 07             	mov    (%rdi),%rax
ffffffff80418033:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff80418037:	74 0f                	je     ffffffff80418048 <_ZN6Kernel7PITimer21TimerInterruptHandlerEv+0x18>
ffffffff80418039:	48 83 c0 01          	add    $0x1,%rax
    timer_tick_lower_ = 0;
    timer_tick_upper_++;
  }
  timer_tick_lower_++;
ffffffff8041803d:	48 89 07             	mov    %rax,(%rdi)
}
ffffffff80418040:	c3                   	retq   
ffffffff80418041:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    timer_tick_upper_++;
ffffffff80418048:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8041804d:	48 83 47 08 01       	addq   $0x1,0x8(%rdi)
  timer_tick_lower_++;
ffffffff80418052:	48 89 07             	mov    %rax,(%rdi)
}
ffffffff80418055:	c3                   	retq   
ffffffff80418056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041805d:	00 00 00 

ffffffff80418060 <_ZNK6Kernel7PITimer14InstallPITimerEv>:
ffffffff80418060:	b8 36 00 00 00       	mov    $0x36,%eax
ffffffff80418065:	e6 43                	out    %al,$0x43
ffffffff80418067:	b8 9b ff ff ff       	mov    $0xffffff9b,%eax
ffffffff8041806c:	e6 40                	out    %al,$0x40
ffffffff8041806e:	b8 2e 00 00 00       	mov    $0x2e,%eax
ffffffff80418073:	e6 40                	out    %al,$0x40
  const uint16_t divisor = 1193180 / PITIMER_HZ;

  outb(PIT_CONTROL, 0x36);
  outb(PIT_1, divisor & 0xFF);  // Lower 1 byte
  outb(PIT_1, divisor >> 8);    // High 1 byte
}
ffffffff80418075:	c3                   	retq   
ffffffff80418076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041807d:	00 00 00 

ffffffff80418080 <_ZL11_out_buffercPvmm>:
} out_fct_wrap_type;

// internal buffer output
static inline void _out_buffer(char character, void* buffer, size_t idx,
                               size_t maxlen) {
  if (idx < maxlen) {
ffffffff80418080:	48 39 ca             	cmp    %rcx,%rdx
ffffffff80418083:	73 04                	jae    ffffffff80418089 <_ZL11_out_buffercPvmm+0x9>
    ((char*)buffer)[idx] = character;
ffffffff80418085:	40 88 3c 16          	mov    %dil,(%rsi,%rdx,1)
  }
}
ffffffff80418089:	c3                   	retq   
ffffffff8041808a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80418090 <_ZL9_out_nullcPvmm>:
                             size_t maxlen) {
  (void)character;
  (void)buffer;
  (void)idx;
  (void)maxlen;
}
ffffffff80418090:	c3                   	retq   
ffffffff80418091:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80418098:	00 00 00 00 
ffffffff8041809c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff804180a0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj>:

// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx,
                           size_t maxlen, char* buf, size_t len, bool negative,
                           unsigned int base, unsigned int prec,
                           unsigned int width, unsigned int flags) {
ffffffff804180a0:	41 57                	push   %r15
ffffffff804180a2:	41 56                	push   %r14
ffffffff804180a4:	41 55                	push   %r13
ffffffff804180a6:	49 89 cd             	mov    %rcx,%r13
ffffffff804180a9:	41 54                	push   %r12
ffffffff804180ab:	49 89 f4             	mov    %rsi,%r12
ffffffff804180ae:	55                   	push   %rbp
ffffffff804180af:	48 89 fd             	mov    %rdi,%rbp
ffffffff804180b2:	53                   	push   %rbx
ffffffff804180b3:	4c 89 c3             	mov    %r8,%rbx
ffffffff804180b6:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff804180ba:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
ffffffff804180bf:	8b 94 24 80 00 00 00 	mov    0x80(%rsp),%edx
ffffffff804180c6:	8b 7c 24 60          	mov    0x60(%rsp),%edi
ffffffff804180ca:	89 d6                	mov    %edx,%esi
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
ffffffff804180cc:	89 d0                	mov    %edx,%eax
ffffffff804180ce:	83 e6 10             	and    $0x10,%esi
ffffffff804180d1:	83 e0 02             	and    $0x2,%eax
ffffffff804180d4:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
ffffffff804180d8:	75 77                	jne    ffffffff80418151 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
    if (width && (flags & FLAGS_ZEROPAD) &&
ffffffff804180da:	44 8b 44 24 78       	mov    0x78(%rsp),%r8d
ffffffff804180df:	89 d0                	mov    %edx,%eax
ffffffff804180e1:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
ffffffff804180e5:	83 e0 01             	and    $0x1,%eax
ffffffff804180e8:	45 85 c0             	test   %r8d,%r8d
ffffffff804180eb:	0f 85 c7 01 00 00    	jne    ffffffff804182b8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x218>
        (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
      width--;
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff804180f1:	49 39 c9             	cmp    %rcx,%r9
ffffffff804180f4:	73 27                	jae    ffffffff8041811d <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x7d>
ffffffff804180f6:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff804180fa:	75 12                	jne    ffffffff8041810e <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x6e>
ffffffff804180fc:	e9 c3 03 00 00       	jmpq   ffffffff804184c4 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x424>
ffffffff80418101:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80418108:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff8041810c:	74 0f                	je     ffffffff8041811d <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x7d>
      buf[len++] = '0';
ffffffff8041810e:	49 83 c1 01          	add    $0x1,%r9
ffffffff80418112:	42 c6 44 0b ff 30    	movb   $0x30,-0x1(%rbx,%r9,1)
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80418118:	49 39 c9             	cmp    %rcx,%r9
ffffffff8041811b:	72 eb                	jb     ffffffff80418108 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x68>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) &&
ffffffff8041811d:	85 c0                	test   %eax,%eax
ffffffff8041811f:	74 30                	je     ffffffff80418151 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
ffffffff80418121:	8b 44 24 78          	mov    0x78(%rsp),%eax
ffffffff80418125:	4c 39 c8             	cmp    %r9,%rax
ffffffff80418128:	76 27                	jbe    ffffffff80418151 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
ffffffff8041812a:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff8041812e:	75 12                	jne    ffffffff80418142 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xa2>
ffffffff80418130:	e9 ab 03 00 00       	jmpq   ffffffff804184e0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x440>
ffffffff80418135:	0f 1f 00             	nopl   (%rax)
ffffffff80418138:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff8041813c:	0f 84 a6 01 00 00    	je     ffffffff804182e8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x248>
           (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
ffffffff80418142:	49 83 c1 01          	add    $0x1,%r9
ffffffff80418146:	42 c6 44 0b ff 30    	movb   $0x30,-0x1(%rbx,%r9,1)
    while ((flags & FLAGS_ZEROPAD) && (len < width) &&
ffffffff8041814c:	49 39 c1             	cmp    %rax,%r9
ffffffff8041814f:	75 e7                	jne    ffffffff80418138 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x98>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
ffffffff80418151:	85 f6                	test   %esi,%esi
ffffffff80418153:	74 40                	je     ffffffff80418195 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xf5>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff80418155:	f6 c6 04             	test   $0x4,%dh
ffffffff80418158:	0f 85 ba 01 00 00    	jne    ffffffff80418318 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x278>
ffffffff8041815e:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
ffffffff80418162:	4d 85 c9             	test   %r9,%r9
ffffffff80418165:	0f 85 90 01 00 00    	jne    ffffffff804182fb <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x25b>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff8041816b:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff80418170:	0f 84 39 03 00 00    	je     ffffffff804184af <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x40f>
        (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'x';
    } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
               (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = 'X';
    } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff80418176:	83 7c 24 68 02       	cmpl   $0x2,0x68(%rsp)
ffffffff8041817b:	0f 85 35 03 00 00    	jne    ffffffff804184b6 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x416>
      buf[len++] = 'b';
ffffffff80418181:	c6 03 62             	movb   $0x62,(%rbx)
ffffffff80418184:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff8041818a:	4a 8d 04 0b          	lea    (%rbx,%r9,1),%rax
ffffffff8041818e:	49 83 c1 01          	add    $0x1,%r9
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
      buf[len++] = '0';
ffffffff80418192:	c6 00 30             	movb   $0x30,(%rax)
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
ffffffff80418195:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80418199:	0f 84 ad 01 00 00    	je     ffffffff8041834c <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
    if (negative) {
ffffffff8041819f:	40 84 ff             	test   %dil,%dil
ffffffff804181a2:	0f 84 d0 01 00 00    	je     ffffffff80418378 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2d8>
      buf[len++] = '-';
ffffffff804181a8:	49 8d 41 01          	lea    0x1(%r9),%rax
ffffffff804181ac:	42 c6 04 0b 2d       	movb   $0x2d,(%rbx,%r9,1)
ffffffff804181b1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff804181b6:	83 e2 03             	and    $0x3,%edx
ffffffff804181b9:	0f 85 01 02 00 00    	jne    ffffffff804183c0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x320>
    for (size_t i = len; i < width; i++) {
ffffffff804181bf:	44 8b 74 24 78       	mov    0x78(%rsp),%r14d
ffffffff804181c4:	4c 39 74 24 10       	cmp    %r14,0x10(%rsp)
ffffffff804181c9:	0f 83 f1 01 00 00    	jae    ffffffff804183c0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x320>
ffffffff804181cf:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
ffffffff804181d4:	4c 2b 74 24 10       	sub    0x10(%rsp),%r14
ffffffff804181d9:	4d 01 fe             	add    %r15,%r14
ffffffff804181dc:	0f 1f 40 00          	nopl   0x0(%rax)
      out(' ', buffer, idx++, maxlen);
ffffffff804181e0:	4c 89 fa             	mov    %r15,%rdx
ffffffff804181e3:	49 83 c7 01          	add    $0x1,%r15
ffffffff804181e7:	4c 89 e9             	mov    %r13,%rcx
ffffffff804181ea:	4c 89 e6             	mov    %r12,%rsi
ffffffff804181ed:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff804181f2:	ff d5                	callq  *%rbp
    for (size_t i = len; i < width; i++) {
ffffffff804181f4:	4d 39 f7             	cmp    %r14,%r15
ffffffff804181f7:	75 e7                	jne    ffffffff804181e0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x140>
  while (len) {
ffffffff804181f9:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
ffffffff804181ff:	4c 89 34 24          	mov    %r14,(%rsp)
ffffffff80418203:	74 2b                	je     ffffffff80418230 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x190>
    for (size_t i = len; i < width; i++) {
ffffffff80418205:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
ffffffff8041820a:	4d 01 fe             	add    %r15,%r14
ffffffff8041820d:	0f 1f 00             	nopl   (%rax)
ffffffff80418210:	4c 89 f2             	mov    %r14,%rdx
ffffffff80418213:	4c 89 34 24          	mov    %r14,(%rsp)
    out(buf[--len], buffer, idx++, maxlen);
ffffffff80418217:	4c 89 e9             	mov    %r13,%rcx
ffffffff8041821a:	4c 89 e6             	mov    %r12,%rsi
ffffffff8041821d:	4c 29 fa             	sub    %r15,%rdx
ffffffff80418220:	49 83 ef 01          	sub    $0x1,%r15
ffffffff80418224:	42 0f be 3c 3b       	movsbl (%rbx,%r15,1),%edi
ffffffff80418229:	ff d5                	callq  *%rbp
  while (len) {
ffffffff8041822b:	4d 85 ff             	test   %r15,%r15
ffffffff8041822e:	75 e0                	jne    ffffffff80418210 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x170>
  if (flags & FLAGS_LEFT) {
ffffffff80418230:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
ffffffff80418234:	85 c0                	test   %eax,%eax
ffffffff80418236:	74 67                	je     ffffffff8041829f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x1ff>
    while (idx - start_idx < width) {
ffffffff80418238:	8b 5c 24 78          	mov    0x78(%rsp),%ebx
ffffffff8041823c:	4c 8b 34 24          	mov    (%rsp),%r14
ffffffff80418240:	4c 2b 74 24 08       	sub    0x8(%rsp),%r14
ffffffff80418245:	4c 39 f3             	cmp    %r14,%rbx
ffffffff80418248:	76 55                	jbe    ffffffff8041829f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x1ff>
ffffffff8041824a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      out(' ', buffer, idx++, maxlen);
ffffffff80418250:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80418255:	4c 89 e9             	mov    %r13,%rcx
ffffffff80418258:	4c 89 e6             	mov    %r12,%rsi
ffffffff8041825b:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418260:	4a 8d 14 30          	lea    (%rax,%r14,1),%rdx
ffffffff80418264:	49 83 c6 01          	add    $0x1,%r14
ffffffff80418268:	ff d5                	callq  *%rbp
    while (idx - start_idx < width) {
ffffffff8041826a:	49 39 de             	cmp    %rbx,%r14
ffffffff8041826d:	72 e1                	jb     ffffffff80418250 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x1b0>
ffffffff8041826f:	48 8b 34 24          	mov    (%rsp),%rsi
ffffffff80418273:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
ffffffff80418278:	48 89 f2             	mov    %rsi,%rdx
ffffffff8041827b:	48 8d 44 0b ff       	lea    -0x1(%rbx,%rcx,1),%rax
ffffffff80418280:	48 29 ca             	sub    %rcx,%rdx
ffffffff80418283:	48 29 f0             	sub    %rsi,%rax
ffffffff80418286:	48 83 c2 01          	add    $0x1,%rdx
ffffffff8041828a:	48 39 d3             	cmp    %rdx,%rbx
ffffffff8041828d:	ba 00 00 00 00       	mov    $0x0,%edx
ffffffff80418292:	48 0f 42 c2          	cmovb  %rdx,%rax
ffffffff80418296:	48 8d 44 06 01       	lea    0x1(%rsi,%rax,1),%rax
ffffffff8041829b:	48 89 04 24          	mov    %rax,(%rsp)
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
}
ffffffff8041829f:	48 8b 04 24          	mov    (%rsp),%rax
ffffffff804182a3:	48 83 c4 28          	add    $0x28,%rsp
ffffffff804182a7:	5b                   	pop    %rbx
ffffffff804182a8:	5d                   	pop    %rbp
ffffffff804182a9:	41 5c                	pop    %r12
ffffffff804182ab:	41 5d                	pop    %r13
ffffffff804182ad:	41 5e                	pop    %r14
ffffffff804182af:	41 5f                	pop    %r15
ffffffff804182b1:	c3                   	retq   
ffffffff804182b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    if (width && (flags & FLAGS_ZEROPAD) &&
ffffffff804182b8:	85 c0                	test   %eax,%eax
ffffffff804182ba:	0f 84 28 01 00 00    	je     ffffffff804183e8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x348>
ffffffff804182c0:	40 84 ff             	test   %dil,%dil
ffffffff804182c3:	0f 85 57 01 00 00    	jne    ffffffff80418420 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x380>
        (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
ffffffff804182c9:	f6 c2 0c             	test   $0xc,%dl
ffffffff804182cc:	0f 85 4e 01 00 00    	jne    ffffffff80418420 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x380>
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff804182d2:	49 39 c9             	cmp    %rcx,%r9
ffffffff804182d5:	0f 83 46 fe ff ff    	jae    ffffffff80418121 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x81>
ffffffff804182db:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff804182df:	0f 85 29 fe ff ff    	jne    ffffffff8041810e <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x6e>
ffffffff804182e5:	0f 1f 00             	nopl   (%rax)
  if (flags & FLAGS_HASH) {
ffffffff804182e8:	85 f6                	test   %esi,%esi
ffffffff804182ea:	0f 84 a8 00 00 00    	je     ffffffff80418398 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2f8>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff804182f0:	41 b9 20 00 00 00    	mov    $0x20,%r9d
ffffffff804182f6:	f6 c6 04             	test   $0x4,%dh
ffffffff804182f9:	75 51                	jne    ffffffff8041834c <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
ffffffff804182fb:	49 39 c9             	cmp    %rcx,%r9
ffffffff804182fe:	0f 84 2c 01 00 00    	je     ffffffff80418430 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x390>
        ((len == prec) || (len == width))) {
ffffffff80418304:	8b 44 24 78          	mov    0x78(%rsp),%eax
ffffffff80418308:	4c 39 c8             	cmp    %r9,%rax
ffffffff8041830b:	0f 84 1f 01 00 00    	je     ffffffff80418430 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x390>
ffffffff80418311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff80418318:	49 83 f9 1f          	cmp    $0x1f,%r9
ffffffff8041831c:	0f 96 c1             	setbe  %cl
ffffffff8041831f:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff80418324:	89 c8                	mov    %ecx,%eax
ffffffff80418326:	0f 84 1e 01 00 00    	je     ffffffff8041844a <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3aa>
    } else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff8041832c:	83 7c 24 68 02       	cmpl   $0x2,0x68(%rsp)
ffffffff80418331:	75 0f                	jne    ffffffff80418342 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff80418333:	84 c9                	test   %cl,%cl
ffffffff80418335:	74 0b                	je     ffffffff80418342 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff80418337:	4a 8d 04 0b          	lea    (%rbx,%r9,1),%rax
ffffffff8041833b:	49 83 c1 01          	add    $0x1,%r9
      buf[len++] = 'b';
ffffffff8041833f:	c6 00 62             	movb   $0x62,(%rax)
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
ffffffff80418342:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff80418346:	0f 85 3e fe ff ff    	jne    ffffffff8041818a <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xea>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff8041834c:	83 e2 03             	and    $0x3,%edx
ffffffff8041834f:	75 57                	jne    ffffffff804183a8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x308>
ffffffff80418351:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80418358:	00 00 
    for (size_t i = len; i < width; i++) {
ffffffff8041835a:	44 8b 74 24 78       	mov    0x78(%rsp),%r14d
ffffffff8041835f:	4c 3b 74 24 10       	cmp    0x10(%rsp),%r14
ffffffff80418364:	0f 87 65 fe ff ff    	ja     ffffffff804181cf <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x12f>
ffffffff8041836a:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
ffffffff8041836f:	e9 85 fe ff ff       	jmpq   ffffffff804181f9 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x159>
ffffffff80418374:	0f 1f 40 00          	nopl   0x0(%rax)
    } else if (flags & FLAGS_PLUS) {
ffffffff80418378:	f6 c2 04             	test   $0x4,%dl
ffffffff8041837b:	75 53                	jne    ffffffff804183d0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x330>
    } else if (flags & FLAGS_SPACE) {
ffffffff8041837d:	f6 c2 08             	test   $0x8,%dl
ffffffff80418380:	0f 85 f2 00 00 00    	jne    ffffffff80418478 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3d8>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff80418386:	83 e2 03             	and    $0x3,%edx
ffffffff80418389:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
ffffffff8041838e:	75 da                	jne    ffffffff8041836a <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ca>
ffffffff80418390:	eb c8                	jmp    ffffffff8041835a <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ba>
ffffffff80418392:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
ffffffff80418398:	83 e2 03             	and    $0x3,%edx
ffffffff8041839b:	0f 84 ea 00 00 00    	je     ffffffff8041848b <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3eb>
ffffffff804183a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff804183a8:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff804183af:	00 00 
ffffffff804183b1:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
ffffffff804183b6:	e9 4a fe ff ff       	jmpq   ffffffff80418205 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x165>
ffffffff804183bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    for (size_t i = len; i < width; i++) {
ffffffff804183c0:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
ffffffff804183c5:	e9 3b fe ff ff       	jmpq   ffffffff80418205 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x165>
ffffffff804183ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      buf[len++] = '+';  // ignore the space if the '+' exists
ffffffff804183d0:	49 8d 41 01          	lea    0x1(%r9),%rax
ffffffff804183d4:	42 c6 04 0b 2b       	movb   $0x2b,(%rbx,%r9,1)
ffffffff804183d9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff804183de:	e9 d3 fd ff ff       	jmpq   ffffffff804181b6 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x116>
ffffffff804183e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ffffffff804183e8:	49 39 c9             	cmp    %rcx,%r9
ffffffff804183eb:	0f 83 60 fd ff ff    	jae    ffffffff80418151 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xb1>
ffffffff804183f1:	49 83 f9 20          	cmp    $0x20,%r9
ffffffff804183f5:	0f 85 13 fd ff ff    	jne    ffffffff8041810e <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x6e>
  if (flags & FLAGS_HASH) {
ffffffff804183fb:	85 f6                	test   %esi,%esi
ffffffff804183fd:	0f 84 19 01 00 00    	je     ffffffff8041851c <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x47c>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff80418403:	f6 c6 04             	test   $0x4,%dh
ffffffff80418406:	0f 85 40 ff ff ff    	jne    ffffffff8041834c <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
ffffffff8041840c:	41 b9 20 00 00 00    	mov    $0x20,%r9d
ffffffff80418412:	e9 e4 fe ff ff       	jmpq   ffffffff804182fb <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x25b>
ffffffff80418417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041841e:	00 00 
      width--;
ffffffff80418420:	83 6c 24 78 01       	subl   $0x1,0x78(%rsp)
ffffffff80418425:	e9 a8 fe ff ff       	jmpq   ffffffff804182d2 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x232>
ffffffff8041842a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      if (len && (base == 16U)) {
ffffffff80418430:	4c 89 ce             	mov    %r9,%rsi
ffffffff80418433:	48 83 ee 01          	sub    $0x1,%rsi
ffffffff80418437:	0f 95 c0             	setne  %al
ffffffff8041843a:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff8041843f:	0f 94 c1             	sete   %cl
ffffffff80418442:	20 c8                	and    %cl,%al
ffffffff80418444:	74 53                	je     ffffffff80418499 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3f9>
        len--;
ffffffff80418446:	49 83 e9 02          	sub    $0x2,%r9
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff8041844a:	89 d1                	mov    %edx,%ecx
ffffffff8041844c:	83 e1 20             	and    $0x20,%ecx
ffffffff8041844f:	75 0c                	jne    ffffffff8041845d <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3bd>
ffffffff80418451:	84 c0                	test   %al,%al
ffffffff80418453:	75 4c                	jne    ffffffff804184a1 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x401>
    } else if ((base == 16U) && (flags & FLAGS_UPPERCASE) &&
ffffffff80418455:	85 c9                	test   %ecx,%ecx
ffffffff80418457:	0f 84 e5 fe ff ff    	je     ffffffff80418342 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff8041845d:	84 c0                	test   %al,%al
ffffffff8041845f:	0f 84 dd fe ff ff    	je     ffffffff80418342 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
      buf[len++] = 'X';
ffffffff80418465:	42 c6 04 0b 58       	movb   $0x58,(%rbx,%r9,1)
ffffffff8041846a:	49 83 c1 01          	add    $0x1,%r9
ffffffff8041846e:	e9 cf fe ff ff       	jmpq   ffffffff80418342 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
ffffffff80418473:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      buf[len++] = ' ';
ffffffff80418478:	49 8d 41 01          	lea    0x1(%r9),%rax
ffffffff8041847c:	42 c6 04 0b 20       	movb   $0x20,(%rbx,%r9,1)
ffffffff80418481:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80418486:	e9 2b fd ff ff       	jmpq   ffffffff804181b6 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x116>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff8041848b:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80418492:	00 00 
ffffffff80418494:	e9 26 fd ff ff       	jmpq   ffffffff804181bf <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x11f>
      len--;
ffffffff80418499:	49 89 f1             	mov    %rsi,%r9
ffffffff8041849c:	e9 77 fe ff ff       	jmpq   ffffffff80418318 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x278>
      buf[len++] = 'x';
ffffffff804184a1:	42 c6 04 0b 78       	movb   $0x78,(%rbx,%r9,1)
ffffffff804184a6:	49 83 c1 01          	add    $0x1,%r9
ffffffff804184aa:	e9 93 fe ff ff       	jmpq   ffffffff80418342 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2a2>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff804184af:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff804184b4:	eb 94                	jmp    ffffffff8041844a <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x3aa>
      buf[len++] = '0';
ffffffff804184b6:	c6 03 30             	movb   $0x30,(%rbx)
ffffffff804184b9:	41 b9 01 00 00 00    	mov    $0x1,%r9d
ffffffff804184bf:	e9 db fc ff ff       	jmpq   ffffffff8041819f <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0xff>
    while ((flags & FLAGS_ZEROPAD) && (len < width) &&
ffffffff804184c4:	85 c0                	test   %eax,%eax
ffffffff804184c6:	0f 85 1c fe ff ff    	jne    ffffffff804182e8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x248>
ffffffff804184cc:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
ffffffff804184d0:	89 44 24 78          	mov    %eax,0x78(%rsp)
ffffffff804184d4:	e9 22 ff ff ff       	jmpq   ffffffff804183fb <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x35b>
ffffffff804184d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  if (flags & FLAGS_HASH) {
ffffffff804184e0:	85 f6                	test   %esi,%esi
ffffffff804184e2:	74 38                	je     ffffffff8041851c <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x47c>
    if (!(flags & FLAGS_PRECISION) && len &&
ffffffff804184e4:	f6 c6 04             	test   $0x4,%dh
ffffffff804184e7:	0f 84 0e fe ff ff    	je     ffffffff804182fb <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x25b>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) &&
ffffffff804184ed:	83 7c 24 68 10       	cmpl   $0x10,0x68(%rsp)
ffffffff804184f2:	0f 84 54 fe ff ff    	je     ffffffff8041834c <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x2ac>
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
ffffffff804184f8:	80 e2 03             	and    $0x3,%dl
ffffffff804184fb:	0f 85 a7 fe ff ff    	jne    ffffffff804183a8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x308>
    for (size_t i = len; i < width; i++) {
ffffffff80418501:	49 89 c6             	mov    %rax,%r14
ffffffff80418504:	48 83 f8 20          	cmp    $0x20,%rax
ffffffff80418508:	0f 86 9a fe ff ff    	jbe    ffffffff804183a8 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x308>
ffffffff8041850e:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80418515:	00 00 
ffffffff80418517:	e9 b3 fc ff ff       	jmpq   ffffffff804181cf <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x12f>
  if (flags & FLAGS_HASH) {
ffffffff8041851c:	48 c7 44 24 10 20 00 	movq   $0x20,0x10(%rsp)
ffffffff80418523:	00 00 
ffffffff80418525:	e9 8c fc ff ff       	jmpq   ffffffff804181b6 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj+0x116>
ffffffff8041852a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80418530 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj>:

// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx,
                         size_t maxlen, unsigned long value, bool negative,
                         unsigned long base, unsigned int prec,
                         unsigned int width, unsigned int flags) {
ffffffff80418530:	41 56                	push   %r14
ffffffff80418532:	41 55                	push   %r13
ffffffff80418534:	41 54                	push   %r12
ffffffff80418536:	49 89 d4             	mov    %rdx,%r12
ffffffff80418539:	55                   	push   %rbp
ffffffff8041853a:	44 89 cd             	mov    %r9d,%ebp
ffffffff8041853d:	53                   	push   %rbx
ffffffff8041853e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80418542:	4c 8b 5c 24 50       	mov    0x50(%rsp),%r11
ffffffff80418547:	44 8b 6c 24 68       	mov    0x68(%rsp),%r13d
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
ffffffff8041854c:	4d 85 c0             	test   %r8,%r8
ffffffff8041854f:	75 4f                	jne    ffffffff804185a0 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x70>
    flags &= ~FLAGS_HASH;
ffffffff80418551:	44 89 e8             	mov    %r13d,%eax
ffffffff80418554:	83 e0 ef             	and    $0xffffffef,%eax
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff80418557:	41 81 e5 00 04 00 00 	and    $0x400,%r13d
    flags &= ~FLAGS_HASH;
ffffffff8041855e:	41 89 c5             	mov    %eax,%r13d
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff80418561:	74 3d                	je     ffffffff804185a0 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x70>
  size_t len = 0U;
ffffffff80418563:	45 31 c9             	xor    %r9d,%r9d
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
ffffffff80418566:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041856a:	40 0f b6 ed          	movzbl %bpl,%ebp
ffffffff8041856e:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418571:	41 55                	push   %r13
ffffffff80418573:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff80418577:	50                   	push   %rax
ffffffff80418578:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff8041857c:	50                   	push   %rax
ffffffff8041857d:	41 53                	push   %r11
ffffffff8041857f:	55                   	push   %rbp
ffffffff80418580:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
ffffffff80418585:	e8 16 fb ff ff       	callq  ffffffff804180a0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj>
                      (unsigned int)base, prec, width, flags);
}
ffffffff8041858a:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8041858e:	5b                   	pop    %rbx
ffffffff8041858f:	5d                   	pop    %rbp
ffffffff80418590:	41 5c                	pop    %r12
ffffffff80418592:	41 5d                	pop    %r13
ffffffff80418594:	41 5e                	pop    %r14
ffffffff80418596:	c3                   	retq   
ffffffff80418597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041859e:	00 00 
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
ffffffff804185a0:	44 89 e8             	mov    %r13d,%eax
ffffffff804185a3:	83 e0 20             	and    $0x20,%eax
ffffffff804185a6:	83 f8 01             	cmp    $0x1,%eax
ffffffff804185a9:	19 db                	sbb    %ebx,%ebx
ffffffff804185ab:	45 31 c9             	xor    %r9d,%r9d
ffffffff804185ae:	83 e3 20             	and    $0x20,%ebx
                       ? '0' + digit
ffffffff804185b1:	83 c3 37             	add    $0x37,%ebx
ffffffff804185b4:	eb 0d                	jmp    ffffffff804185c3 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x93>
ffffffff804185b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804185bd:	00 00 00 
      value /= base;
ffffffff804185c0:	49 89 c0             	mov    %rax,%r8
      const char digit = (char)(value % base);
ffffffff804185c3:	31 d2                	xor    %edx,%edx
ffffffff804185c5:	4c 89 c0             	mov    %r8,%rax
ffffffff804185c8:	49 f7 f3             	div    %r11
                       ? '0' + digit
ffffffff804185cb:	48 83 fa 09          	cmp    $0x9,%rdx
ffffffff804185cf:	44 8d 72 30          	lea    0x30(%rdx),%r14d
ffffffff804185d3:	44 8d 14 13          	lea    (%rbx,%rdx,1),%r10d
ffffffff804185d7:	45 0f 46 d6          	cmovbe %r14d,%r10d
      buf[len++] = digit < 10
ffffffff804185db:	49 83 c1 01          	add    $0x1,%r9
ffffffff804185df:	46 88 54 0c ff       	mov    %r10b,-0x1(%rsp,%r9,1)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
ffffffff804185e4:	4d 39 d8             	cmp    %r11,%r8
ffffffff804185e7:	0f 82 79 ff ff ff    	jb     ffffffff80418566 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x36>
ffffffff804185ed:	49 83 f9 1f          	cmp    $0x1f,%r9
ffffffff804185f1:	76 cd                	jbe    ffffffff804185c0 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x90>
ffffffff804185f3:	e9 6e ff ff ff       	jmpq   ffffffff80418566 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj+0x36>
ffffffff804185f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804185ff:	00 

ffffffff80418600 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj>:
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx,
                              size_t maxlen, unsigned long long value,
                              bool negative, unsigned long long base,
                              unsigned int prec, unsigned int width,
                              unsigned int flags) {
ffffffff80418600:	41 56                	push   %r14
ffffffff80418602:	41 55                	push   %r13
ffffffff80418604:	41 54                	push   %r12
ffffffff80418606:	49 89 d4             	mov    %rdx,%r12
ffffffff80418609:	55                   	push   %rbp
ffffffff8041860a:	44 89 cd             	mov    %r9d,%ebp
ffffffff8041860d:	53                   	push   %rbx
ffffffff8041860e:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80418612:	4c 8b 5c 24 50       	mov    0x50(%rsp),%r11
ffffffff80418617:	44 8b 6c 24 68       	mov    0x68(%rsp),%r13d
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
ffffffff8041861c:	4d 85 c0             	test   %r8,%r8
ffffffff8041861f:	75 4f                	jne    ffffffff80418670 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x70>
    flags &= ~FLAGS_HASH;
ffffffff80418621:	44 89 e8             	mov    %r13d,%eax
ffffffff80418624:	83 e0 ef             	and    $0xffffffef,%eax
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff80418627:	41 81 e5 00 04 00 00 	and    $0x400,%r13d
    flags &= ~FLAGS_HASH;
ffffffff8041862e:	41 89 c5             	mov    %eax,%r13d
  if (!(flags & FLAGS_PRECISION) || value) {
ffffffff80418631:	74 3d                	je     ffffffff80418670 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x70>
  size_t len = 0U;
ffffffff80418633:	45 31 c9             	xor    %r9d,%r9d
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
      value /= base;
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative,
ffffffff80418636:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041863a:	40 0f b6 ed          	movzbl %bpl,%ebp
ffffffff8041863e:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418641:	41 55                	push   %r13
ffffffff80418643:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff80418647:	50                   	push   %rax
ffffffff80418648:	8b 44 24 70          	mov    0x70(%rsp),%eax
ffffffff8041864c:	50                   	push   %rax
ffffffff8041864d:	41 53                	push   %r11
ffffffff8041864f:	55                   	push   %rbp
ffffffff80418650:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
ffffffff80418655:	e8 46 fa ff ff       	callq  ffffffff804180a0 <_ZL12_ntoa_formatPFvcPvmmEPcmmS2_mbjjjj>
                      (unsigned int)base, prec, width, flags);
}
ffffffff8041865a:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8041865e:	5b                   	pop    %rbx
ffffffff8041865f:	5d                   	pop    %rbp
ffffffff80418660:	41 5c                	pop    %r12
ffffffff80418662:	41 5d                	pop    %r13
ffffffff80418664:	41 5e                	pop    %r14
ffffffff80418666:	c3                   	retq   
ffffffff80418667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041866e:	00 00 
                       : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
ffffffff80418670:	44 89 e8             	mov    %r13d,%eax
ffffffff80418673:	83 e0 20             	and    $0x20,%eax
ffffffff80418676:	83 f8 01             	cmp    $0x1,%eax
ffffffff80418679:	19 db                	sbb    %ebx,%ebx
ffffffff8041867b:	45 31 c9             	xor    %r9d,%r9d
ffffffff8041867e:	83 e3 20             	and    $0x20,%ebx
                       ? '0' + digit
ffffffff80418681:	83 c3 37             	add    $0x37,%ebx
ffffffff80418684:	eb 0d                	jmp    ffffffff80418693 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x93>
ffffffff80418686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041868d:	00 00 00 
      value /= base;
ffffffff80418690:	49 89 c0             	mov    %rax,%r8
      const char digit = (char)(value % base);
ffffffff80418693:	31 d2                	xor    %edx,%edx
ffffffff80418695:	4c 89 c0             	mov    %r8,%rax
ffffffff80418698:	49 f7 f3             	div    %r11
                       ? '0' + digit
ffffffff8041869b:	48 83 fa 09          	cmp    $0x9,%rdx
ffffffff8041869f:	44 8d 72 30          	lea    0x30(%rdx),%r14d
ffffffff804186a3:	44 8d 14 13          	lea    (%rbx,%rdx,1),%r10d
ffffffff804186a7:	45 0f 46 d6          	cmovbe %r14d,%r10d
      buf[len++] = digit < 10
ffffffff804186ab:	49 83 c1 01          	add    $0x1,%r9
ffffffff804186af:	46 88 54 0c ff       	mov    %r10b,-0x1(%rsp,%r9,1)
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
ffffffff804186b4:	4d 39 d8             	cmp    %r11,%r8
ffffffff804186b7:	0f 82 79 ff ff ff    	jb     ffffffff80418636 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x36>
ffffffff804186bd:	49 83 f9 1f          	cmp    $0x1f,%r9
ffffffff804186c1:	76 cd                	jbe    ffffffff80418690 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x90>
ffffffff804186c3:	e9 6e ff ff ff       	jmpq   ffffffff80418636 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj+0x36>
ffffffff804186c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804186cf:	00 

ffffffff804186d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>:
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT

// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen,
                      const char* format, va_list va) {
ffffffff804186d0:	41 57                	push   %r15
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
    // use null output function
    out = _out_null;
ffffffff804186d2:	48 c7 c0 90 80 41 80 	mov    $0xffffffff80418090,%rax
                      const char* format, va_list va) {
ffffffff804186d9:	49 89 f7             	mov    %rsi,%r15
ffffffff804186dc:	41 56                	push   %r14
ffffffff804186de:	49 89 d6             	mov    %rdx,%r14
ffffffff804186e1:	41 55                	push   %r13
ffffffff804186e3:	41 54                	push   %r12
ffffffff804186e5:	55                   	push   %rbp
ffffffff804186e6:	53                   	push   %rbx
ffffffff804186e7:	48 83 ec 38          	sub    $0x38,%rsp
    out = _out_null;
ffffffff804186eb:	48 85 f6             	test   %rsi,%rsi
ffffffff804186ee:	48 0f 45 c7          	cmovne %rdi,%rax
                      const char* format, va_list va) {
ffffffff804186f2:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    out = _out_null;
ffffffff804186f7:	48 89 c5             	mov    %rax,%rbp
  }

  while (*format) {
ffffffff804186fa:	0f b6 01             	movzbl (%rcx),%eax
ffffffff804186fd:	84 c0                	test   %al,%al
ffffffff804186ff:	0f 84 93 06 00 00    	je     ffffffff80418d98 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6c8>
ffffffff80418705:	45 31 e4             	xor    %r12d,%r12d
ffffffff80418708:	49 89 cd             	mov    %rcx,%r13
ffffffff8041870b:	eb 26                	jmp    ffffffff80418733 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x63>
ffffffff8041870d:	0f 1f 00             	nopl   (%rax)
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
      // no
      out(*format, buffer, idx++, maxlen);
ffffffff80418710:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
ffffffff80418715:	0f be f8             	movsbl %al,%edi
        out('%', buffer, idx++, maxlen);
        format++;
        break;

      default:
        out(*format, buffer, idx++, maxlen);
ffffffff80418718:	4c 89 e2             	mov    %r12,%rdx
ffffffff8041871b:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041871e:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418721:	49 89 dc             	mov    %rbx,%r12
ffffffff80418724:	ff d5                	callq  *%rbp
  while (*format) {
ffffffff80418726:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
ffffffff8041872b:	84 c0                	test   %al,%al
ffffffff8041872d:	0f 84 4d 01 00 00    	je     ffffffff80418880 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1b0>
    if (*format != '%') {
ffffffff80418733:	49 83 c5 01          	add    $0x1,%r13
ffffffff80418737:	3c 25                	cmp    $0x25,%al
ffffffff80418739:	75 d5                	jne    ffffffff80418710 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x40>
    flags = 0U;
ffffffff8041873b:	31 d2                	xor    %edx,%edx
ffffffff8041873d:	0f 1f 00             	nopl   (%rax)
      switch (*format) {
ffffffff80418740:	41 0f be 7d 00       	movsbl 0x0(%r13),%edi
ffffffff80418745:	49 8d 4d 01          	lea    0x1(%r13),%rcx
ffffffff80418749:	48 89 ce             	mov    %rcx,%rsi
ffffffff8041874c:	8d 47 e0             	lea    -0x20(%rdi),%eax
ffffffff8041874f:	3c 10                	cmp    $0x10,%al
ffffffff80418751:	77 0d                	ja     ffffffff80418760 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x90>
ffffffff80418753:	0f b6 c0             	movzbl %al,%eax
ffffffff80418756:	ff 24 c5 28 b4 41 80 	jmpq   *-0x7fbe4bd8(,%rax,8)
ffffffff8041875d:	0f 1f 00             	nopl   (%rax)
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff80418760:	8d 47 d0             	lea    -0x30(%rdi),%eax
    if (_is_digit(*format)) {
ffffffff80418763:	3c 09                	cmp    $0x9,%al
ffffffff80418765:	0f 86 b5 00 00 00    	jbe    ffffffff80418820 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x150>
    } else if (*format == '*') {
ffffffff8041876b:	40 80 ff 2a          	cmp    $0x2a,%dil
ffffffff8041876f:	0f 84 6b 01 00 00    	je     ffffffff804188e0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x210>
ffffffff80418775:	4c 89 ee             	mov    %r13,%rsi
    width = 0U;
ffffffff80418778:	31 db                	xor    %ebx,%ebx
ffffffff8041877a:	49 89 cd             	mov    %rcx,%r13
    precision = 0U;
ffffffff8041877d:	45 31 c0             	xor    %r8d,%r8d
    if (*format == '.') {
ffffffff80418780:	40 80 ff 2e          	cmp    $0x2e,%dil
ffffffff80418784:	0f 84 cd 00 00 00    	je     ffffffff80418857 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x187>
    switch (*format) {
ffffffff8041878a:	8d 47 98             	lea    -0x68(%rdi),%eax
ffffffff8041878d:	3c 12                	cmp    $0x12,%al
ffffffff8041878f:	77 57                	ja     ffffffff804187e8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
ffffffff80418791:	0f b6 c0             	movzbl %al,%eax
ffffffff80418794:	ff 24 c5 b0 b4 41 80 	jmpq   *-0x7fbe4b50(,%rax,8)
ffffffff8041879b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
          flags |= FLAGS_ZEROPAD;
ffffffff804187a0:	83 ca 01             	or     $0x1,%edx
  while (*format) {
ffffffff804187a3:	49 89 cd             	mov    %rcx,%r13
ffffffff804187a6:	eb 98                	jmp    ffffffff80418740 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x70>
ffffffff804187a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804187af:	00 
          flags |= FLAGS_LEFT;
ffffffff804187b0:	83 ca 02             	or     $0x2,%edx
          break;
ffffffff804187b3:	eb ee                	jmp    ffffffff804187a3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
ffffffff804187b5:	0f 1f 00             	nopl   (%rax)
          flags |= FLAGS_PLUS;
ffffffff804187b8:	83 ca 04             	or     $0x4,%edx
          break;
ffffffff804187bb:	eb e6                	jmp    ffffffff804187a3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
ffffffff804187bd:	0f 1f 00             	nopl   (%rax)
          flags |= FLAGS_HASH;
ffffffff804187c0:	83 ca 10             	or     $0x10,%edx
          break;
ffffffff804187c3:	eb de                	jmp    ffffffff804187a3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
ffffffff804187c5:	0f 1f 00             	nopl   (%rax)
          flags |= FLAGS_SPACE;
ffffffff804187c8:	83 ca 08             	or     $0x8,%edx
          break;
ffffffff804187cb:	eb d6                	jmp    ffffffff804187a3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xd3>
        if (*format == 'l') {
ffffffff804187cd:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
ffffffff804187d1:	40 80 ff 6c          	cmp    $0x6c,%dil
ffffffff804187d5:	0f 84 9b 05 00 00    	je     ffffffff80418d76 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6a6>
        flags |= FLAGS_LONG;
ffffffff804187db:	80 ce 01             	or     $0x1,%dh
ffffffff804187de:	49 83 c5 01          	add    $0x1,%r13
ffffffff804187e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    switch (*format) {
ffffffff804187e8:	8d 47 db             	lea    -0x25(%rdi),%eax
ffffffff804187eb:	3c 53                	cmp    $0x53,%al
ffffffff804187ed:	77 23                	ja     ffffffff80418812 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x142>
ffffffff804187ef:	0f b6 c0             	movzbl %al,%eax
ffffffff804187f2:	ff 24 c5 48 b5 41 80 	jmpq   *-0x7fbe4ab8(,%rax,8)
ffffffff804187f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        flags |=
ffffffff80418800:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
ffffffff80418804:	80 ce 01             	or     $0x1,%dh
        break;
ffffffff80418807:	49 83 c5 01          	add    $0x1,%r13
    switch (*format) {
ffffffff8041880b:	8d 47 db             	lea    -0x25(%rdi),%eax
ffffffff8041880e:	3c 53                	cmp    $0x53,%al
ffffffff80418810:	76 dd                	jbe    ffffffff804187ef <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x11f>
        out(*format, buffer, idx++, maxlen);
ffffffff80418812:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
ffffffff80418817:	e9 fc fe ff ff       	jmpq   ffffffff80418718 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x48>
ffffffff8041881c:	0f 1f 40 00          	nopl   0x0(%rax)
  unsigned int i = 0U;
ffffffff80418820:	31 db                	xor    %ebx,%ebx
ffffffff80418822:	eb 08                	jmp    ffffffff8041882c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x15c>
ffffffff80418824:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80418828:	48 83 c1 01          	add    $0x1,%rcx
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff8041882c:	8d 04 9b             	lea    (%rbx,%rbx,4),%eax
ffffffff8041882f:	4d 89 e8             	mov    %r13,%r8
ffffffff80418832:	49 89 cd             	mov    %rcx,%r13
ffffffff80418835:	8d 5c 47 d0          	lea    -0x30(%rdi,%rax,2),%ebx
  while (_is_digit(**str)) {
ffffffff80418839:	0f be 39             	movsbl (%rcx),%edi
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff8041883c:	8d 47 d0             	lea    -0x30(%rdi),%eax
  while (_is_digit(**str)) {
ffffffff8041883f:	3c 09                	cmp    $0x9,%al
ffffffff80418841:	76 e5                	jbe    ffffffff80418828 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x158>
ffffffff80418843:	4d 8d 68 02          	lea    0x2(%r8),%r13
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff80418847:	48 89 ce             	mov    %rcx,%rsi
    precision = 0U;
ffffffff8041884a:	45 31 c0             	xor    %r8d,%r8d
    if (*format == '.') {
ffffffff8041884d:	40 80 ff 2e          	cmp    $0x2e,%dil
ffffffff80418851:	0f 85 33 ff ff ff    	jne    ffffffff8041878a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
      if (_is_digit(*format)) {
ffffffff80418857:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
      flags |= FLAGS_PRECISION;
ffffffff8041885b:	80 ce 04             	or     $0x4,%dh
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff8041885e:	8d 47 d0             	lea    -0x30(%rdi),%eax
      if (_is_digit(*format)) {
ffffffff80418861:	3c 09                	cmp    $0x9,%al
ffffffff80418863:	76 4b                	jbe    ffffffff804188b0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1e0>
      } else if (*format == '*') {
ffffffff80418865:	40 80 ff 2a          	cmp    $0x2a,%dil
ffffffff80418869:	0f 84 ab 03 00 00    	je     ffffffff80418c1a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x54a>
      format++;
ffffffff8041886f:	4c 89 ee             	mov    %r13,%rsi
      } else if (*format == '*') {
ffffffff80418872:	49 83 c5 01          	add    $0x1,%r13
ffffffff80418876:	e9 0f ff ff ff       	jmpq   ffffffff8041878a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
ffffffff8041887b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80418880:	45 89 e5             	mov    %r12d,%r13d
        break;
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
ffffffff80418883:	4d 39 e6             	cmp    %r12,%r14
ffffffff80418886:	49 8d 46 ff          	lea    -0x1(%r14),%rax
ffffffff8041888a:	4c 89 f1             	mov    %r14,%rcx
ffffffff8041888d:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418890:	4c 0f 46 e0          	cmovbe %rax,%r12
ffffffff80418894:	31 ff                	xor    %edi,%edi
ffffffff80418896:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418899:	ff d5                	callq  *%rbp

  // return written chars without terminating \0
  return (int)idx;
}
ffffffff8041889b:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8041889f:	44 89 e8             	mov    %r13d,%eax
ffffffff804188a2:	5b                   	pop    %rbx
ffffffff804188a3:	5d                   	pop    %rbp
ffffffff804188a4:	41 5c                	pop    %r12
ffffffff804188a6:	41 5d                	pop    %r13
ffffffff804188a8:	41 5e                	pop    %r14
ffffffff804188aa:	41 5f                	pop    %r15
ffffffff804188ac:	c3                   	retq   
ffffffff804188ad:	0f 1f 00             	nopl   (%rax)
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff804188b0:	4c 89 e9             	mov    %r13,%rcx
ffffffff804188b3:	43 8d 04 80          	lea    (%r8,%r8,4),%eax
ffffffff804188b7:	49 83 c5 01          	add    $0x1,%r13
ffffffff804188bb:	44 8d 44 47 d0       	lea    -0x30(%rdi,%rax,2),%r8d
  while (_is_digit(**str)) {
ffffffff804188c0:	41 0f be 7d 00       	movsbl 0x0(%r13),%edi
static inline bool _is_digit(char ch) { return (ch >= '0') && (ch <= '9'); }
ffffffff804188c5:	8d 47 d0             	lea    -0x30(%rdi),%eax
  while (_is_digit(**str)) {
ffffffff804188c8:	3c 09                	cmp    $0x9,%al
ffffffff804188ca:	76 e4                	jbe    ffffffff804188b0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1e0>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
ffffffff804188cc:	4c 89 ee             	mov    %r13,%rsi
  while (_is_digit(**str)) {
ffffffff804188cf:	4c 8d 69 02          	lea    0x2(%rcx),%r13
ffffffff804188d3:	e9 b2 fe ff ff       	jmpq   ffffffff8041878a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
ffffffff804188d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804188df:	00 
      const int w = va_arg(va, int);
ffffffff804188e0:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff804188e5:	8b 03                	mov    (%rbx),%eax
ffffffff804188e7:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff804188ea:	76 34                	jbe    ffffffff80418920 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x250>
ffffffff804188ec:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff804188f1:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffff804188f5:	48 8d 41 08          	lea    0x8(%rcx),%rax
ffffffff804188f9:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff804188fd:	8b 19                	mov    (%rcx),%ebx
      if (w < 0) {
ffffffff804188ff:	85 db                	test   %ebx,%ebx
ffffffff80418901:	79 05                	jns    ffffffff80418908 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x238>
        flags |= FLAGS_LEFT;  // reverse padding
ffffffff80418903:	83 ca 02             	or     $0x2,%edx
        width = (unsigned int)-w;
ffffffff80418906:	f7 db                	neg    %ebx
      format++;
ffffffff80418908:	41 0f be 7d 01       	movsbl 0x1(%r13),%edi
ffffffff8041890d:	49 83 c5 02          	add    $0x2,%r13
ffffffff80418911:	e9 67 fe ff ff       	jmpq   ffffffff8041877d <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xad>
ffffffff80418916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041891d:	00 00 00 
      const int w = va_arg(va, int);
ffffffff80418920:	89 c1                	mov    %eax,%ecx
ffffffff80418922:	83 c0 08             	add    $0x8,%eax
ffffffff80418925:	48 03 4b 10          	add    0x10(%rbx),%rcx
ffffffff80418929:	89 03                	mov    %eax,(%rbx)
ffffffff8041892b:	eb d0                	jmp    ffffffff804188fd <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x22d>
        if (*format == 'x' || *format == 'X') {
ffffffff8041892d:	40 80 ff 78          	cmp    $0x78,%dil
ffffffff80418931:	0f 84 10 04 00 00    	je     ffffffff80418d47 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x677>
ffffffff80418937:	40 80 ff 58          	cmp    $0x58,%dil
ffffffff8041893b:	0f 84 5e 03 00 00    	je     ffffffff80418c9f <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5cf>
        } else if (*format == 'o') {
ffffffff80418941:	40 80 ff 6f          	cmp    $0x6f,%dil
ffffffff80418945:	0f 84 2a 06 00 00    	je     ffffffff80418f75 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8a5>
        } else if (*format == 'b') {
ffffffff8041894b:	40 80 ff 62          	cmp    $0x62,%dil
ffffffff8041894f:	0f 84 b7 05 00 00    	je     ffffffff80418f0c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x83c>
          flags &= ~FLAGS_HASH;  // no hash for dec format
ffffffff80418955:	89 d0                	mov    %edx,%eax
ffffffff80418957:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffff8041895c:	83 e0 ef             	and    $0xffffffef,%eax
        if ((*format != 'i') && (*format != 'd')) {
ffffffff8041895f:	40 80 ff 69          	cmp    $0x69,%dil
ffffffff80418963:	0f 85 aa 05 00 00    	jne    ffffffff80418f13 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x843>
        if (flags & FLAGS_PRECISION) {
ffffffff80418969:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
ffffffff8041896e:	8b 0a                	mov    (%rdx),%ecx
ffffffff80418970:	f6 c4 04             	test   $0x4,%ah
ffffffff80418973:	0f 85 43 03 00 00    	jne    ffffffff80418cbc <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5ec>
ffffffff80418979:	89 c2                	mov    %eax,%edx
ffffffff8041897b:	81 e2 00 02 00 00    	and    $0x200,%edx
          if (flags & FLAGS_LONG_LONG) {
ffffffff80418981:	85 d2                	test   %edx,%edx
ffffffff80418983:	0f 85 9f 05 00 00    	jne    ffffffff80418f28 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x858>
          } else if (flags & FLAGS_LONG) {
ffffffff80418989:	f6 c4 01             	test   $0x1,%ah
ffffffff8041898c:	0f 85 9a 06 00 00    	jne    ffffffff8041902c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x95c>
                                  ? (char)va_arg(va, int)
ffffffff80418992:	a8 40                	test   $0x40,%al
ffffffff80418994:	0f 85 23 06 00 00    	jne    ffffffff80418fbd <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8ed>
                                        ? (short int)va_arg(va, int)
ffffffff8041899a:	a8 80                	test   $0x80,%al
ffffffff8041899c:	0f 84 06 07 00 00    	je     ffffffff804190a8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9d8>
ffffffff804189a2:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff804189a5:	0f 87 9f 07 00 00    	ja     ffffffff8041914a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa7a>
ffffffff804189ab:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff804189b0:	89 ca                	mov    %ecx,%edx
ffffffff804189b2:	83 c1 08             	add    $0x8,%ecx
ffffffff804189b5:	89 0f                	mov    %ecx,(%rdi)
ffffffff804189b7:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff804189bb:	44 0f bf 0a          	movswl (%rdx),%r9d
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff804189bf:	44 89 c9             	mov    %r9d,%ecx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff804189c2:	50                   	push   %rax
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff804189c3:	c1 f9 1f             	sar    $0x1f,%ecx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff804189c6:	53                   	push   %rbx
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff804189c7:	89 ca                	mov    %ecx,%edx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff804189c9:	41 50                	push   %r8
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff804189cb:	44 31 ca             	xor    %r9d,%edx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff804189ce:	56                   	push   %rsi
ffffffff804189cf:	41 c1 e9 1f          	shr    $0x1f,%r9d
                             (unsigned int)(value > 0 ? value : 0 - value),
ffffffff804189d3:	29 ca                	sub    %ecx,%edx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff804189d5:	4c 63 c2             	movslq %edx,%r8
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base,
ffffffff804189d8:	4c 89 e2             	mov    %r12,%rdx
ffffffff804189db:	4c 89 f1             	mov    %r14,%rcx
ffffffff804189de:	4c 89 fe             	mov    %r15,%rsi
ffffffff804189e1:	48 89 ef             	mov    %rbp,%rdi
ffffffff804189e4:	e8 47 fb ff ff       	callq  ffffffff80418530 <_ZL10_ntoa_longPFvcPvmmEPcmmmbmjjj>
ffffffff804189e9:	48 83 c4 20          	add    $0x20,%rsp
ffffffff804189ed:	49 89 c4             	mov    %rax,%r12
        break;
ffffffff804189f0:	e9 31 fd ff ff       	jmpq   ffffffff80418726 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        if (*format == 'h') {
ffffffff804189f5:	0f be 7e 01          	movsbl 0x1(%rsi),%edi
ffffffff804189f9:	40 80 ff 68          	cmp    $0x68,%dil
ffffffff804189fd:	0f 84 63 03 00 00    	je     ffffffff80418d66 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x696>
        flags |= FLAGS_SHORT;
ffffffff80418a03:	80 ca 80             	or     $0x80,%dl
ffffffff80418a06:	49 83 c5 01          	add    $0x1,%r13
ffffffff80418a0a:	e9 d9 fd ff ff       	jmpq   ffffffff804187e8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
        const char* p = va_arg(va, char*);
ffffffff80418a0f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418a14:	8b 06                	mov    (%rsi),%eax
ffffffff80418a16:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80418a19:	0f 87 4b 02 00 00    	ja     ffffffff80418c6a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x59a>
ffffffff80418a1f:	89 c1                	mov    %eax,%ecx
ffffffff80418a21:	83 c0 08             	add    $0x8,%eax
ffffffff80418a24:	48 03 4e 10          	add    0x10(%rsi),%rcx
ffffffff80418a28:	89 06                	mov    %eax,(%rsi)
ffffffff80418a2a:	4c 8b 09             	mov    (%rcx),%r9
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
ffffffff80418a2d:	41 0f b6 09          	movzbl (%r9),%ecx
ffffffff80418a31:	45 85 c0             	test   %r8d,%r8d
ffffffff80418a34:	0f 85 51 02 00 00    	jne    ffffffff80418c8b <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5bb>
  for (s = str; *s && maxsize--; ++s)
ffffffff80418a3a:	48 c7 c7 fe ff ff ff 	mov    $0xfffffffffffffffe,%rdi
ffffffff80418a41:	84 c9                	test   %cl,%cl
ffffffff80418a43:	0f 84 96 06 00 00    	je     ffffffff804190df <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa0f>
ffffffff80418a49:	48 83 c7 01          	add    $0x1,%rdi
ffffffff80418a4d:	4c 89 c8             	mov    %r9,%rax
ffffffff80418a50:	49 8d 34 39          	lea    (%r9,%rdi,1),%rsi
ffffffff80418a54:	eb 13                	jmp    ffffffff80418a69 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x399>
ffffffff80418a56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80418a5d:	00 00 00 
ffffffff80418a60:	48 39 f0             	cmp    %rsi,%rax
ffffffff80418a63:	0f 84 d5 02 00 00    	je     ffffffff80418d3e <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x66e>
ffffffff80418a69:	48 83 c0 01          	add    $0x1,%rax
ffffffff80418a6d:	80 38 00             	cmpb   $0x0,(%rax)
ffffffff80418a70:	75 ee                	jne    ffffffff80418a60 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x390>
ffffffff80418a72:	44 29 c8             	sub    %r9d,%eax
ffffffff80418a75:	89 44 24 18          	mov    %eax,0x18(%rsp)
        if (flags & FLAGS_PRECISION) {
ffffffff80418a79:	89 d0                	mov    %edx,%eax
ffffffff80418a7b:	25 00 04 00 00       	and    $0x400,%eax
ffffffff80418a80:	89 04 24             	mov    %eax,(%rsp)
ffffffff80418a83:	74 0f                	je     ffffffff80418a94 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3c4>
          l = (l < precision ? l : precision);
ffffffff80418a85:	8b 44 24 18          	mov    0x18(%rsp),%eax
ffffffff80418a89:	44 39 c0             	cmp    %r8d,%eax
ffffffff80418a8c:	41 0f 47 c0          	cmova  %r8d,%eax
ffffffff80418a90:	89 44 24 18          	mov    %eax,0x18(%rsp)
        if (!(flags & FLAGS_LEFT)) {
ffffffff80418a94:	83 e2 02             	and    $0x2,%edx
ffffffff80418a97:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
ffffffff80418a9b:	0f 84 02 03 00 00    	je     ffffffff80418da3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6d3>
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418aa1:	84 c9                	test   %cl,%cl
ffffffff80418aa3:	0f 84 f5 03 00 00    	je     ffffffff80418e9e <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x7ce>
ffffffff80418aa9:	4d 29 e1             	sub    %r12,%r9
ffffffff80418aac:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
ffffffff80418ab1:	45 89 c5             	mov    %r8d,%r13d
ffffffff80418ab4:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
ffffffff80418ab9:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
ffffffff80418abd:	eb 04                	jmp    ffffffff80418ac3 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3f3>
ffffffff80418abf:	90                   	nop
          out(*(p++), buffer, idx++, maxlen);
ffffffff80418ac0:	49 89 dc             	mov    %rbx,%r12
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418ac3:	8b 14 24             	mov    (%rsp),%edx
ffffffff80418ac6:	85 d2                	test   %edx,%edx
ffffffff80418ac8:	74 10                	je     ffffffff80418ada <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x40a>
ffffffff80418aca:	41 8d 55 ff          	lea    -0x1(%r13),%edx
ffffffff80418ace:	45 85 ed             	test   %r13d,%r13d
ffffffff80418ad1:	0f 84 af 02 00 00    	je     ffffffff80418d86 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x6b6>
ffffffff80418ad7:	41 89 d5             	mov    %edx,%r13d
          out(*(p++), buffer, idx++, maxlen);
ffffffff80418ada:	0f be f9             	movsbl %cl,%edi
ffffffff80418add:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418ae0:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418ae3:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418ae6:	ff d5                	callq  *%rbp
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418ae8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
          out(*(p++), buffer, idx++, maxlen);
ffffffff80418aed:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418af2:	41 0f b6 4c 04 01    	movzbl 0x1(%r12,%rax,1),%ecx
ffffffff80418af8:	84 c9                	test   %cl,%cl
ffffffff80418afa:	75 c4                	jne    ffffffff80418ac0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3f0>
ffffffff80418afc:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80418b00:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffff80418b05:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
        if (flags & FLAGS_LEFT) {
ffffffff80418b09:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
ffffffff80418b0d:	85 c0                	test   %eax,%eax
ffffffff80418b0f:	0f 85 85 03 00 00    	jne    ffffffff80418e9a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x7ca>
        break;
ffffffff80418b15:	4c 8b 24 24          	mov    (%rsp),%r12
ffffffff80418b19:	e9 08 fc ff ff       	jmpq   ffffffff80418726 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        out('%', buffer, idx++, maxlen);
ffffffff80418b1e:	49 8d 5c 24 01       	lea    0x1(%r12),%rbx
ffffffff80418b23:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418b26:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418b29:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418b2c:	bf 25 00 00 00       	mov    $0x25,%edi
ffffffff80418b31:	49 89 dc             	mov    %rbx,%r12
ffffffff80418b34:	ff d5                	callq  *%rbp
        break;
ffffffff80418b36:	e9 eb fb ff ff       	jmpq   ffffffff80418726 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
                                (uintptr_t)va_arg(va, void*), false, 16U,
ffffffff80418b3b:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
ffffffff80418b40:	83 ca 21             	or     $0x21,%edx
                                (uintptr_t)va_arg(va, void*), false, 16U,
ffffffff80418b43:	8b 03                	mov    (%rbx),%eax
ffffffff80418b45:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80418b48:	0f 87 06 01 00 00    	ja     ffffffff80418c54 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x584>
ffffffff80418b4e:	89 c1                	mov    %eax,%ecx
ffffffff80418b50:	83 c0 08             	add    $0x8,%eax
ffffffff80418b53:	48 03 4b 10          	add    0x10(%rbx),%rcx
ffffffff80418b57:	89 03                	mov    %eax,(%rbx)
          idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff80418b59:	52                   	push   %rdx
ffffffff80418b5a:	45 31 c9             	xor    %r9d,%r9d
ffffffff80418b5d:	6a 10                	pushq  $0x10
ffffffff80418b5f:	41 50                	push   %r8
ffffffff80418b61:	6a 10                	pushq  $0x10
ffffffff80418b63:	4c 8b 01             	mov    (%rcx),%r8
ffffffff80418b66:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418b69:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418b6c:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418b6f:	48 89 ef             	mov    %rbp,%rdi
ffffffff80418b72:	e8 89 fa ff ff       	callq  ffffffff80418600 <_ZL15_ntoa_long_longPFvcPvmmEPcmmybyjjj>
        break;
ffffffff80418b77:	48 83 c4 20          	add    $0x20,%rsp
          idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff80418b7b:	49 89 c4             	mov    %rax,%r12
        break;
ffffffff80418b7e:	e9 a3 fb ff ff       	jmpq   ffffffff80418726 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        if (!(flags & FLAGS_LEFT)) {
ffffffff80418b83:	49 8d 44 24 01       	lea    0x1(%r12),%rax
ffffffff80418b88:	83 e2 02             	and    $0x2,%edx
ffffffff80418b8b:	49 89 c0             	mov    %rax,%r8
ffffffff80418b8e:	0f 84 97 02 00 00    	je     ffffffff80418e2b <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x75b>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff80418b94:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418b99:	8b 16                	mov    (%rsi),%edx
ffffffff80418b9b:	83 fa 2f             	cmp    $0x2f,%edx
ffffffff80418b9e:	0f 87 84 01 00 00    	ja     ffffffff80418d28 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x658>
ffffffff80418ba4:	89 d1                	mov    %edx,%ecx
ffffffff80418ba6:	83 c2 08             	add    $0x8,%edx
ffffffff80418ba9:	48 03 4e 10          	add    0x10(%rsi),%rcx
ffffffff80418bad:	89 16                	mov    %edx,(%rsi)
ffffffff80418baf:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80418bb4:	0f be 39             	movsbl (%rcx),%edi
ffffffff80418bb7:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418bba:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418bbd:	4c 89 04 24          	mov    %r8,(%rsp)
ffffffff80418bc1:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418bc4:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418bc6:	83 fb 01             	cmp    $0x1,%ebx
ffffffff80418bc9:	4c 8b 04 24          	mov    (%rsp),%r8
ffffffff80418bcd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff80418bd2:	0f 86 9c 05 00 00    	jbe    ffffffff80419174 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xaa4>
ffffffff80418bd8:	49 8d 44 24 02       	lea    0x2(%r12),%rax
ffffffff80418bdd:	83 eb 02             	sub    $0x2,%ebx
ffffffff80418be0:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff80418be4:	4c 8d 24 18          	lea    (%rax,%rbx,1),%r12
ffffffff80418be8:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff80418bed:	4c 89 c3             	mov    %r8,%rbx
            out(' ', buffer, idx++, maxlen);
ffffffff80418bf0:	48 89 da             	mov    %rbx,%rdx
ffffffff80418bf3:	48 83 c3 01          	add    $0x1,%rbx
ffffffff80418bf7:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418bfa:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418bfd:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418c02:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418c04:	4c 39 e3             	cmp    %r12,%rbx
ffffffff80418c07:	75 e7                	jne    ffffffff80418bf0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x520>
ffffffff80418c09:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff80418c0e:	4c 8b 24 24          	mov    (%rsp),%r12
ffffffff80418c12:	49 01 dc             	add    %rbx,%r12
        break;
ffffffff80418c15:	e9 0c fb ff ff       	jmpq   ffffffff80418726 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
        const int prec = (int)va_arg(va, int);
ffffffff80418c1a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418c1f:	8b 0f                	mov    (%rdi),%ecx
ffffffff80418c21:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418c24:	0f 87 cc 02 00 00    	ja     ffffffff80418ef6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x826>
ffffffff80418c2a:	89 c8                	mov    %ecx,%eax
ffffffff80418c2c:	83 c1 08             	add    $0x8,%ecx
ffffffff80418c2f:	48 03 47 10          	add    0x10(%rdi),%rax
ffffffff80418c33:	89 0f                	mov    %ecx,(%rdi)
        precision = prec > 0 ? (unsigned int)prec : 0U;
ffffffff80418c35:	8b 08                	mov    (%rax),%ecx
ffffffff80418c37:	0f be 7e 02          	movsbl 0x2(%rsi),%edi
ffffffff80418c3b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
ffffffff80418c41:	4c 8d 6e 03          	lea    0x3(%rsi),%r13
ffffffff80418c45:	85 c9                	test   %ecx,%ecx
ffffffff80418c47:	44 0f 49 00          	cmovns (%rax),%r8d
        format++;
ffffffff80418c4b:	48 83 c6 02          	add    $0x2,%rsi
ffffffff80418c4f:	e9 36 fb ff ff       	jmpq   ffffffff8041878a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xba>
                                (uintptr_t)va_arg(va, void*), false, 16U,
ffffffff80418c54:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
ffffffff80418c59:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
ffffffff80418c5d:	48 8d 41 08          	lea    0x8(%rcx),%rax
ffffffff80418c61:	48 89 43 08          	mov    %rax,0x8(%rbx)
ffffffff80418c65:	e9 ef fe ff ff       	jmpq   ffffffff80418b59 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x489>
        const char* p = va_arg(va, char*);
ffffffff80418c6a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418c6f:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff80418c73:	48 8d 41 08          	lea    0x8(%rcx),%rax
ffffffff80418c77:	48 89 46 08          	mov    %rax,0x8(%rsi)
ffffffff80418c7b:	4c 8b 09             	mov    (%rcx),%r9
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
ffffffff80418c7e:	41 0f b6 09          	movzbl (%r9),%ecx
ffffffff80418c82:	45 85 c0             	test   %r8d,%r8d
ffffffff80418c85:	0f 84 af fd ff ff    	je     ffffffff80418a3a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x36a>
ffffffff80418c8b:	44 89 c7             	mov    %r8d,%edi
  for (s = str; *s && maxsize--; ++s)
ffffffff80418c8e:	84 c9                	test   %cl,%cl
ffffffff80418c90:	0f 84 49 04 00 00    	je     ffffffff804190df <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa0f>
ffffffff80418c96:	48 83 ef 01          	sub    $0x1,%rdi
ffffffff80418c9a:	e9 aa fd ff ff       	jmpq   ffffffff80418a49 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x379>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
ffffffff80418c9f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418ca4:	89 d0                	mov    %edx,%eax
ffffffff80418ca6:	83 e0 f3             	and    $0xfffffff3,%eax
ffffffff80418ca9:	8b 0e                	mov    (%rsi),%ecx
ffffffff80418cab:	83 c8 20             	or     $0x20,%eax
        if (flags & FLAGS_PRECISION) {
ffffffff80418cae:	f6 c6 04             	test   $0x4,%dh
ffffffff80418cb1:	0f 84 ae 02 00 00    	je     ffffffff80418f65 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x895>
ffffffff80418cb7:	be 10 00 00 00       	mov    $0x10,%esi
          flags &= ~FLAGS_ZEROPAD;
ffffffff80418cbc:	83 e0 fe             	and    $0xfffffffe,%eax
        if ((*format == 'i') || (*format == 'd')) {
ffffffff80418cbf:	89 c2                	mov    %eax,%edx
ffffffff80418cc1:	81 e2 00 02 00 00    	and    $0x200,%edx
ffffffff80418cc7:	40 80 ff 64          	cmp    $0x64,%dil
ffffffff80418ccb:	0f 84 b0 fc ff ff    	je     ffffffff80418981 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2b1>
ffffffff80418cd1:	40 80 ff 69          	cmp    $0x69,%dil
ffffffff80418cd5:	0f 84 a6 fc ff ff    	je     ffffffff80418981 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2b1>
          if (flags & FLAGS_LONG_LONG) {
ffffffff80418cdb:	85 d2                	test   %edx,%edx
ffffffff80418cdd:	0f 85 9b 02 00 00    	jne    ffffffff80418f7e <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8ae>
          } else if (flags & FLAGS_LONG) {
ffffffff80418ce3:	f6 c4 01             	test   $0x1,%ah
ffffffff80418ce6:	0f 85 7d 03 00 00    	jne    ffffffff80419069 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x999>
                    ? (unsigned char)va_arg(va, unsigned int)
ffffffff80418cec:	a8 40                	test   $0x40,%al
ffffffff80418cee:	0f 85 eb 02 00 00    	jne    ffffffff80418fdf <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x90f>
                          ? (unsigned short int)va_arg(va, unsigned int)
ffffffff80418cf4:	a8 80                	test   $0x80,%al
ffffffff80418cf6:	0f 84 1c 04 00 00    	je     ffffffff80419118 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa48>
ffffffff80418cfc:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418cff:	0f 87 8f 04 00 00    	ja     ffffffff80419194 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xac4>
ffffffff80418d05:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418d0a:	89 ca                	mov    %ecx,%edx
ffffffff80418d0c:	83 c1 08             	add    $0x8,%ecx
ffffffff80418d0f:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418d11:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418d15:	0f b7 12             	movzwl (%rdx),%edx
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base,
ffffffff80418d18:	50                   	push   %rax
ffffffff80418d19:	45 31 c9             	xor    %r9d,%r9d
ffffffff80418d1c:	53                   	push   %rbx
ffffffff80418d1d:	41 50                	push   %r8
ffffffff80418d1f:	41 89 d0             	mov    %edx,%r8d
ffffffff80418d22:	56                   	push   %rsi
ffffffff80418d23:	e9 b0 fc ff ff       	jmpq   ffffffff804189d8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x308>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff80418d28:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418d2d:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
ffffffff80418d31:	48 8d 51 08          	lea    0x8(%rcx),%rdx
ffffffff80418d35:	48 89 56 08          	mov    %rdx,0x8(%rsi)
ffffffff80418d39:	e9 71 fe ff ff       	jmpq   ffffffff80418baf <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x4df>
ffffffff80418d3e:	89 7c 24 18          	mov    %edi,0x18(%rsp)
ffffffff80418d42:	e9 32 fd ff ff       	jmpq   ffffffff80418a79 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3a9>
ffffffff80418d47:	be 10 00 00 00       	mov    $0x10,%esi
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
ffffffff80418d4c:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
ffffffff80418d51:	89 d0                	mov    %edx,%eax
ffffffff80418d53:	83 e0 f3             	and    $0xfffffff3,%eax
        if (flags & FLAGS_PRECISION) {
ffffffff80418d56:	8b 09                	mov    (%rcx),%ecx
ffffffff80418d58:	80 e6 04             	and    $0x4,%dh
ffffffff80418d5b:	0f 84 5e ff ff ff    	je     ffffffff80418cbf <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5ef>
ffffffff80418d61:	e9 56 ff ff ff       	jmpq   ffffffff80418cbc <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x5ec>
          flags |= FLAGS_CHAR;
ffffffff80418d66:	0f be 7e 02          	movsbl 0x2(%rsi),%edi
ffffffff80418d6a:	80 ca c0             	or     $0xc0,%dl
          format++;
ffffffff80418d6d:	4c 8d 6e 03          	lea    0x3(%rsi),%r13
ffffffff80418d71:	e9 72 fa ff ff       	jmpq   ffffffff804187e8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
          flags |= FLAGS_LONG_LONG;
ffffffff80418d76:	0f be 7e 02          	movsbl 0x2(%rsi),%edi
ffffffff80418d7a:	80 ce 03             	or     $0x3,%dh
          format++;
ffffffff80418d7d:	4c 8d 6e 03          	lea    0x3(%rsi),%r13
ffffffff80418d81:	e9 62 fa ff ff       	jmpq   ffffffff804187e8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x118>
ffffffff80418d86:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
ffffffff80418d8a:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffff80418d8f:	4c 89 24 24          	mov    %r12,(%rsp)
ffffffff80418d93:	e9 71 fd ff ff       	jmpq   ffffffff80418b09 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x439>
  while (*format) {
ffffffff80418d98:	45 31 ed             	xor    %r13d,%r13d
ffffffff80418d9b:	45 31 e4             	xor    %r12d,%r12d
ffffffff80418d9e:	e9 e0 fa ff ff       	jmpq   ffffffff80418883 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x1b3>
          while (l++ < width) {
ffffffff80418da3:	8b 74 24 18          	mov    0x18(%rsp),%esi
ffffffff80418da7:	8d 46 01             	lea    0x1(%rsi),%eax
ffffffff80418daa:	39 f3                	cmp    %esi,%ebx
ffffffff80418dac:	0f 86 b9 03 00 00    	jbe    ffffffff8041916b <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa9b>
ffffffff80418db2:	8d 53 ff             	lea    -0x1(%rbx),%edx
ffffffff80418db5:	49 8d 44 24 01       	lea    0x1(%r12),%rax
ffffffff80418dba:	89 5c 24 08          	mov    %ebx,0x8(%rsp)
ffffffff80418dbe:	29 f2                	sub    %esi,%edx
ffffffff80418dc0:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
ffffffff80418dc5:	49 89 c5             	mov    %rax,%r13
ffffffff80418dc8:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
ffffffff80418dcc:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
ffffffff80418dd1:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
ffffffff80418dd6:	48 89 f3             	mov    %rsi,%rbx
ffffffff80418dd9:	eb 09                	jmp    ffffffff80418de4 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x714>
ffffffff80418ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80418de0:	49 83 c5 01          	add    $0x1,%r13
            out(' ', buffer, idx++, maxlen);
ffffffff80418de4:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418de7:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418dea:	4d 89 ec             	mov    %r13,%r12
ffffffff80418ded:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418df0:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418df5:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418df7:	49 39 dd             	cmp    %rbx,%r13
ffffffff80418dfa:	75 e4                	jne    ffffffff80418de0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x710>
ffffffff80418dfc:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
ffffffff80418e00:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
ffffffff80418e05:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
ffffffff80418e0a:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
ffffffff80418e0f:	8d 43 01             	lea    0x1(%rbx),%eax
ffffffff80418e12:	41 0f b6 09          	movzbl (%r9),%ecx
ffffffff80418e16:	89 44 24 18          	mov    %eax,0x18(%rsp)
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
ffffffff80418e1a:	84 c9                	test   %cl,%cl
ffffffff80418e1c:	0f 85 87 fc ff ff    	jne    ffffffff80418aa9 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3d9>
ffffffff80418e22:	4c 89 24 24          	mov    %r12,(%rsp)
ffffffff80418e26:	e9 ea fc ff ff       	jmpq   ffffffff80418b15 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x445>
          while (l++ < width) {
ffffffff80418e2b:	83 fb 01             	cmp    $0x1,%ebx
ffffffff80418e2e:	0f 86 2c 03 00 00    	jbe    ffffffff80419160 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa90>
ffffffff80418e34:	8d 53 fe             	lea    -0x2(%rbx),%edx
ffffffff80418e37:	4c 89 2c 24          	mov    %r13,(%rsp)
ffffffff80418e3b:	49 89 c5             	mov    %rax,%r13
ffffffff80418e3e:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
ffffffff80418e42:	eb 08                	jmp    ffffffff80418e4c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x77c>
ffffffff80418e44:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80418e48:	49 83 c5 01          	add    $0x1,%r13
            out(' ', buffer, idx++, maxlen);
ffffffff80418e4c:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418e4f:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418e52:	4d 89 ec             	mov    %r13,%r12
ffffffff80418e55:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418e58:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418e5d:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418e5f:	49 39 dd             	cmp    %rbx,%r13
ffffffff80418e62:	75 e4                	jne    ffffffff80418e48 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x778>
ffffffff80418e64:	4c 8b 2c 24          	mov    (%rsp),%r13
ffffffff80418e68:	49 83 c4 01          	add    $0x1,%r12
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff80418e6c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418e71:	8b 06                	mov    (%rsi),%eax
ffffffff80418e73:	83 f8 2f             	cmp    $0x2f,%eax
ffffffff80418e76:	0f 87 2b 01 00 00    	ja     ffffffff80418fa7 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8d7>
ffffffff80418e7c:	89 c2                	mov    %eax,%edx
ffffffff80418e7e:	83 c0 08             	add    $0x8,%eax
ffffffff80418e81:	48 03 56 10          	add    0x10(%rsi),%rdx
ffffffff80418e85:	89 06                	mov    %eax,(%rsi)
ffffffff80418e87:	0f be 3a             	movsbl (%rdx),%edi
ffffffff80418e8a:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418e8d:	48 89 da             	mov    %rbx,%rdx
ffffffff80418e90:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418e93:	ff d5                	callq  *%rbp
        if (flags & FLAGS_LEFT) {
ffffffff80418e95:	e9 8c f8 ff ff       	jmpq   ffffffff80418726 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
ffffffff80418e9a:	4c 8b 24 24          	mov    (%rsp),%r12
          while (l++ < width) {
ffffffff80418e9e:	8b 44 24 18          	mov    0x18(%rsp),%eax
ffffffff80418ea2:	39 c3                	cmp    %eax,%ebx
ffffffff80418ea4:	0f 86 78 ff ff ff    	jbe    ffffffff80418e22 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x752>
ffffffff80418eaa:	44 8d 5b ff          	lea    -0x1(%rbx),%r11d
ffffffff80418eae:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
ffffffff80418eb3:	41 29 c3             	sub    %eax,%r11d
ffffffff80418eb6:	49 8d 44 24 01       	lea    0x1(%r12),%rax
ffffffff80418ebb:	49 8d 1c 03          	lea    (%r11,%rax,1),%rbx
ffffffff80418ebf:	49 89 c5             	mov    %rax,%r13
ffffffff80418ec2:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff80418ec6:	eb 0c                	jmp    ffffffff80418ed4 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x804>
ffffffff80418ec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80418ecf:	00 
ffffffff80418ed0:	49 83 c5 01          	add    $0x1,%r13
            out(' ', buffer, idx++, maxlen);
ffffffff80418ed4:	4c 89 e2             	mov    %r12,%rdx
ffffffff80418ed7:	4c 89 f1             	mov    %r14,%rcx
ffffffff80418eda:	4d 89 ec             	mov    %r13,%r12
ffffffff80418edd:	4c 89 fe             	mov    %r15,%rsi
ffffffff80418ee0:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80418ee5:	ff d5                	callq  *%rbp
          while (l++ < width) {
ffffffff80418ee7:	49 39 dd             	cmp    %rbx,%r13
ffffffff80418eea:	75 e4                	jne    ffffffff80418ed0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x800>
ffffffff80418eec:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
ffffffff80418ef1:	e9 1f fc ff ff       	jmpq   ffffffff80418b15 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x445>
        const int prec = (int)va_arg(va, int);
ffffffff80418ef6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418efb:	48 8b 47 08          	mov    0x8(%rdi),%rax
ffffffff80418eff:	48 8d 48 08          	lea    0x8(%rax),%rcx
ffffffff80418f03:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80418f07:	e9 29 fd ff ff       	jmpq   ffffffff80418c35 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x565>
ffffffff80418f0c:	be 02 00 00 00       	mov    $0x2,%esi
    precision = 0U;
ffffffff80418f11:	89 d0                	mov    %edx,%eax
        if ((*format != 'i') && (*format != 'd')) {
ffffffff80418f13:	40 80 ff 64          	cmp    $0x64,%dil
ffffffff80418f17:	0f 84 4c fa ff ff    	je     ffffffff80418969 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x299>
ffffffff80418f1d:	89 c2                	mov    %eax,%edx
ffffffff80418f1f:	e9 28 fe ff ff       	jmpq   ffffffff80418d4c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x67c>
ffffffff80418f24:	0f 1f 40 00          	nopl   0x0(%rax)
            const long long value = va_arg(va, long long);
ffffffff80418f28:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418f2b:	0f 87 cf 00 00 00    	ja     ffffffff80419000 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x930>
ffffffff80418f31:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418f36:	89 ca                	mov    %ecx,%edx
ffffffff80418f38:	83 c1 08             	add    $0x8,%ecx
ffffffff80418f3b:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418f3d:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418f41:	4c 8b 0a             	mov    (%rdx),%r9
            idx = _ntoa_long_long(
ffffffff80418f44:	50                   	push   %rax
ffffffff80418f45:	53                   	push   %rbx
                (unsigned long long)(value > 0 ? value : 0 - value), value < 0,
ffffffff80418f46:	4c 89 ca             	mov    %r9,%rdx
            idx = _ntoa_long_long(
ffffffff80418f49:	41 50                	push   %r8
                (unsigned long long)(value > 0 ? value : 0 - value), value < 0,
ffffffff80418f4b:	48 c1 fa 3f          	sar    $0x3f,%rdx
            idx = _ntoa_long_long(
ffffffff80418f4f:	56                   	push   %rsi
                (unsigned long long)(value > 0 ? value : 0 - value), value < 0,
ffffffff80418f50:	48 89 d1             	mov    %rdx,%rcx
ffffffff80418f53:	4c 31 c9             	xor    %r9,%rcx
            idx = _ntoa_long_long(
ffffffff80418f56:	49 c1 e9 3f          	shr    $0x3f,%r9
ffffffff80418f5a:	48 29 d1             	sub    %rdx,%rcx
ffffffff80418f5d:	49 89 c8             	mov    %rcx,%r8
ffffffff80418f60:	e9 01 fc ff ff       	jmpq   ffffffff80418b66 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x496>
        if ((*format == 'i') || (*format == 'd')) {
ffffffff80418f65:	81 e2 00 02 00 00    	and    $0x200,%edx
        if (flags & FLAGS_PRECISION) {
ffffffff80418f6b:	be 10 00 00 00       	mov    $0x10,%esi
ffffffff80418f70:	e9 66 fd ff ff       	jmpq   ffffffff80418cdb <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x60b>
ffffffff80418f75:	be 08 00 00 00       	mov    $0x8,%esi
    precision = 0U;
ffffffff80418f7a:	89 d0                	mov    %edx,%eax
ffffffff80418f7c:	eb 95                	jmp    ffffffff80418f13 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x843>
            idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff80418f7e:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418f81:	0f 87 8f 00 00 00    	ja     ffffffff80419016 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x946>
ffffffff80418f87:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418f8c:	89 ca                	mov    %ecx,%edx
ffffffff80418f8e:	83 c1 08             	add    $0x8,%ecx
ffffffff80418f91:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418f93:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418f97:	50                   	push   %rax
ffffffff80418f98:	45 31 c9             	xor    %r9d,%r9d
ffffffff80418f9b:	53                   	push   %rbx
ffffffff80418f9c:	41 50                	push   %r8
ffffffff80418f9e:	56                   	push   %rsi
ffffffff80418f9f:	4c 8b 02             	mov    (%rdx),%r8
ffffffff80418fa2:	e9 bf fb ff ff       	jmpq   ffffffff80418b66 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x496>
        out((char)va_arg(va, int), buffer, idx++, maxlen);
ffffffff80418fa7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
ffffffff80418fac:	48 8b 56 08          	mov    0x8(%rsi),%rdx
ffffffff80418fb0:	48 8d 42 08          	lea    0x8(%rdx),%rax
ffffffff80418fb4:	48 89 46 08          	mov    %rax,0x8(%rsi)
ffffffff80418fb8:	e9 ca fe ff ff       	jmpq   ffffffff80418e87 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x7b7>
                                  ? (char)va_arg(va, int)
ffffffff80418fbd:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418fc0:	0f 87 cc 00 00 00    	ja     ffffffff80419092 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9c2>
ffffffff80418fc6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418fcb:	89 ca                	mov    %ecx,%edx
ffffffff80418fcd:	83 c1 08             	add    $0x8,%ecx
ffffffff80418fd0:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418fd2:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418fd6:	44 0f be 0a          	movsbl (%rdx),%r9d
ffffffff80418fda:	e9 e0 f9 ff ff       	jmpq   ffffffff804189bf <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2ef>
                    ? (unsigned char)va_arg(va, unsigned int)
ffffffff80418fdf:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff80418fe2:	0f 87 04 01 00 00    	ja     ffffffff804190ec <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa1c>
ffffffff80418fe8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80418fed:	89 ca                	mov    %ecx,%edx
ffffffff80418fef:	83 c1 08             	add    $0x8,%ecx
ffffffff80418ff2:	89 0f                	mov    %ecx,(%rdi)
ffffffff80418ff4:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80418ff8:	0f b6 12             	movzbl (%rdx),%edx
ffffffff80418ffb:	e9 18 fd ff ff       	jmpq   ffffffff80418d18 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x648>
            const long long value = va_arg(va, long long);
ffffffff80419000:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419005:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80419009:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff8041900d:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80419011:	e9 2b ff ff ff       	jmpq   ffffffff80418f41 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x871>
            idx = _ntoa_long_long(out, buffer, idx, maxlen,
ffffffff80419016:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8041901b:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8041901f:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80419023:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80419027:	e9 6b ff ff ff       	jmpq   ffffffff80418f97 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x8c7>
            const long value = va_arg(va, long);
ffffffff8041902c:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff8041902f:	0f 87 94 00 00 00    	ja     ffffffff804190c9 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9f9>
ffffffff80419035:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8041903a:	89 ca                	mov    %ecx,%edx
ffffffff8041903c:	83 c1 08             	add    $0x8,%ecx
ffffffff8041903f:	89 0f                	mov    %ecx,(%rdi)
ffffffff80419041:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80419045:	4c 8b 0a             	mov    (%rdx),%r9
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80419048:	50                   	push   %rax
ffffffff80419049:	53                   	push   %rbx
                             (unsigned long)(value > 0 ? value : 0 - value),
ffffffff8041904a:	4c 89 ca             	mov    %r9,%rdx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff8041904d:	41 50                	push   %r8
                             (unsigned long)(value > 0 ? value : 0 - value),
ffffffff8041904f:	48 c1 fa 3f          	sar    $0x3f,%rdx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff80419053:	56                   	push   %rsi
                             (unsigned long)(value > 0 ? value : 0 - value),
ffffffff80419054:	48 89 d1             	mov    %rdx,%rcx
ffffffff80419057:	4c 31 c9             	xor    %r9,%rcx
            idx = _ntoa_long(out, buffer, idx, maxlen,
ffffffff8041905a:	49 c1 e9 3f          	shr    $0x3f,%r9
ffffffff8041905e:	48 29 d1             	sub    %rdx,%rcx
ffffffff80419061:	49 89 c8             	mov    %rcx,%r8
ffffffff80419064:	e9 6f f9 ff ff       	jmpq   ffffffff804189d8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x308>
                _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long),
ffffffff80419069:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff8041906c:	0f 87 90 00 00 00    	ja     ffffffff80419102 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa32>
ffffffff80419072:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419077:	89 ca                	mov    %ecx,%edx
ffffffff80419079:	83 c1 08             	add    $0x8,%ecx
ffffffff8041907c:	89 0f                	mov    %ecx,(%rdi)
ffffffff8041907e:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff80419082:	50                   	push   %rax
ffffffff80419083:	45 31 c9             	xor    %r9d,%r9d
ffffffff80419086:	53                   	push   %rbx
ffffffff80419087:	41 50                	push   %r8
ffffffff80419089:	56                   	push   %rsi
ffffffff8041908a:	4c 8b 02             	mov    (%rdx),%r8
ffffffff8041908d:	e9 46 f9 ff ff       	jmpq   ffffffff804189d8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x308>
                                  ? (char)va_arg(va, int)
ffffffff80419092:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419097:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8041909b:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff8041909f:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff804190a3:	e9 2e ff ff ff       	jmpq   ffffffff80418fd6 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x906>
                                        ? (short int)va_arg(va, int)
ffffffff804190a8:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff804190ab:	0f 87 83 00 00 00    	ja     ffffffff80419134 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xa64>
ffffffff804190b1:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff804190b6:	89 ca                	mov    %ecx,%edx
ffffffff804190b8:	83 c1 08             	add    $0x8,%ecx
ffffffff804190bb:	89 0f                	mov    %ecx,(%rdi)
ffffffff804190bd:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff804190c1:	44 8b 0a             	mov    (%rdx),%r9d
ffffffff804190c4:	e9 f6 f8 ff ff       	jmpq   ffffffff804189bf <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2ef>
            const long value = va_arg(va, long);
ffffffff804190c9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff804190ce:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff804190d2:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff804190d6:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff804190da:	e9 66 ff ff ff       	jmpq   ffffffff80419045 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x975>
  for (s = str; *s && maxsize--; ++s)
ffffffff804190df:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
ffffffff804190e6:	00 
ffffffff804190e7:	e9 8d f9 ff ff       	jmpq   ffffffff80418a79 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x3a9>
                    ? (unsigned char)va_arg(va, unsigned int)
ffffffff804190ec:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff804190f1:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff804190f5:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff804190f9:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff804190fd:	e9 f6 fe ff ff       	jmpq   ffffffff80418ff8 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x928>
                _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long),
ffffffff80419102:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419107:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8041910b:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff8041910f:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80419113:	e9 6a ff ff ff       	jmpq   ffffffff80419082 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9b2>
                          ? (unsigned short int)va_arg(va, unsigned int)
ffffffff80419118:	83 f9 2f             	cmp    $0x2f,%ecx
ffffffff8041911b:	77 5f                	ja     ffffffff8041917c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0xaac>
ffffffff8041911d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419122:	89 ca                	mov    %ecx,%edx
ffffffff80419124:	83 c1 08             	add    $0x8,%ecx
ffffffff80419127:	48 03 57 10          	add    0x10(%rdi),%rdx
ffffffff8041912b:	89 0f                	mov    %ecx,(%rdi)
ffffffff8041912d:	8b 12                	mov    (%rdx),%edx
ffffffff8041912f:	e9 e4 fb ff ff       	jmpq   ffffffff80418d18 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x648>
                                        ? (short int)va_arg(va, int)
ffffffff80419134:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419139:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8041913d:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80419141:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff80419145:	e9 77 ff ff ff       	jmpq   ffffffff804190c1 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x9f1>
ffffffff8041914a:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff8041914f:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80419153:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80419157:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff8041915b:	e9 5b f8 ff ff       	jmpq   ffffffff804189bb <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x2eb>
          while (l++ < width) {
ffffffff80419160:	4c 89 e3             	mov    %r12,%rbx
ffffffff80419163:	49 89 c4             	mov    %rax,%r12
ffffffff80419166:	e9 01 fd ff ff       	jmpq   ffffffff80418e6c <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x79c>
          while (l++ < width) {
ffffffff8041916b:	89 44 24 18          	mov    %eax,0x18(%rsp)
ffffffff8041916f:	e9 a6 fc ff ff       	jmpq   ffffffff80418e1a <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x74a>
          while (l++ < width) {
ffffffff80419174:	49 89 c4             	mov    %rax,%r12
ffffffff80419177:	e9 aa f5 ff ff       	jmpq   ffffffff80418726 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x56>
                          ? (unsigned short int)va_arg(va, unsigned int)
ffffffff8041917c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419181:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff80419185:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80419189:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff8041918d:	8b 12                	mov    (%rdx),%edx
ffffffff8041918f:	e9 84 fb ff ff       	jmpq   ffffffff80418d18 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x648>
ffffffff80419194:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
ffffffff80419199:	48 8b 57 08          	mov    0x8(%rdi),%rdx
ffffffff8041919d:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff804191a1:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
ffffffff804191a5:	e9 6b fb ff ff       	jmpq   ffffffff80418d15 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag+0x645>
ffffffff804191aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff804191b0 <_ZL8_out_fctcPvmm>:
  if (character) {
ffffffff804191b0:	40 84 ff             	test   %dil,%dil
ffffffff804191b3:	74 13                	je     ffffffff804191c8 <_ZL8_out_fctcPvmm+0x18>
        ->fct(character, ((out_fct_wrap_type*)buffer)->arg);
ffffffff804191b5:	4c 8b 46 08          	mov    0x8(%rsi),%r8
ffffffff804191b9:	48 8b 06             	mov    (%rsi),%rax
ffffffff804191bc:	40 0f be ff          	movsbl %dil,%edi
ffffffff804191c0:	4c 89 c6             	mov    %r8,%rsi
ffffffff804191c3:	ff e0                	jmpq   *%rax
ffffffff804191c5:	0f 1f 00             	nopl   (%rax)
}
ffffffff804191c8:	c3                   	retq   
ffffffff804191c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff804191d0 <_ZL9_out_charcPvmm>:
  if (character) {
ffffffff804191d0:	40 84 ff             	test   %dil,%dil
ffffffff804191d3:	75 0b                	jne    ffffffff804191e0 <_ZL9_out_charcPvmm+0x10>
ffffffff804191d5:	c3                   	retq   
ffffffff804191d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff804191dd:	00 00 00 
                             size_t maxlen) {
ffffffff804191e0:	41 57                	push   %r15
ffffffff804191e2:	41 56                	push   %r14
ffffffff804191e4:	41 55                	push   %r13
ffffffff804191e6:	41 54                	push   %r12
      if (str_[i] == c) {
ffffffff804191e8:	45 31 e4             	xor    %r12d,%r12d
ffffffff804191eb:	55                   	push   %rbp
ffffffff804191ec:	53                   	push   %rbx
ffffffff804191ed:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff804191f1:	8b 2d 69 4e 00 00    	mov    0x4e69(%rip),%ebp        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff804191f7:	8b 15 67 4e 00 00    	mov    0x4e67(%rip),%edx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff804191fd:	40 88 7c 24 2f       	mov    %dil,0x2f(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff80419202:	8b 0d 64 4e 00 00    	mov    0x4e64(%rip),%ecx        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
  if (character) {
ffffffff80419208:	4c 8d 44 24 2f       	lea    0x2f(%rsp),%r8
ffffffff8041920d:	8d 45 fe             	lea    -0x2(%rbp),%eax
ffffffff80419210:	44 8d 6a ff          	lea    -0x1(%rdx),%r13d
ffffffff80419214:	8b 35 4e 4e 00 00    	mov    0x4e4e(%rip),%esi        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041921a:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041921e:	44 89 6c 24 1c       	mov    %r13d,0x1c(%rsp)
ffffffff80419223:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff80419227:	48 05 40 01 00 00    	add    $0x140,%rax
ffffffff8041922d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
ffffffff80419232:	8d 45 ff             	lea    -0x1(%rbp),%eax
ffffffff80419235:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff80419239:	48 89 c7             	mov    %rax,%rdi
ffffffff8041923c:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff80419240:	4c 01 e8             	add    %r13,%rax
ffffffff80419243:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80419247:	48 8d 84 00 72 e0 41 	lea    -0x7fbe1f8e(%rax,%rax,1),%rax
ffffffff8041924e:	80 
ffffffff8041924f:	48 8d 9f 70 e0 41 80 	lea    -0x7fbe1f90(%rdi),%rbx
ffffffff80419256:	48 89 04 24          	mov    %rax,(%rsp)
ffffffff8041925a:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff8041925f:	bb 01 00 00 00       	mov    $0x1,%ebx
ffffffff80419264:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80419268:	89 d7                	mov    %edx,%edi
ffffffff8041926a:	29 cf                	sub    %ecx,%edi
ffffffff8041926c:	0f 45 fb             	cmovne %ebx,%edi
    for (; i < min(size_, pos + count); i++) {
ffffffff8041926f:	39 d1                	cmp    %edx,%ecx
ffffffff80419271:	0f 84 99 02 00 00    	je     ffffffff80419510 <_ZL9_out_charcPvmm+0x340>
      if (str_[i] == c) {
ffffffff80419277:	41 80 38 0a          	cmpb   $0xa,(%r8)
ffffffff8041927b:	45 89 e3             	mov    %r12d,%r11d
ffffffff8041927e:	41 0f 94 c2          	sete   %r10b
ffffffff80419282:	44 0f 45 df          	cmovne %edi,%r11d
ffffffff80419286:	45 0f b6 d2          	movzbl %r10b,%r10d
ffffffff8041928a:	41 83 ea 01          	sub    $0x1,%r10d
    if (current_row_ == num_rows_) {
ffffffff8041928e:	39 f5                	cmp    %esi,%ebp
ffffffff80419290:	0f 84 6a 01 00 00    	je     ffffffff80419400 <_ZL9_out_charcPvmm+0x230>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff80419296:	42 8d 04 19          	lea    (%rcx,%r11,1),%eax
ffffffff8041929a:	39 d0                	cmp    %edx,%eax
ffffffff8041929c:	0f 47 c2             	cmova  %edx,%eax
ffffffff8041929f:	39 c8                	cmp    %ecx,%eax
ffffffff804192a1:	0f 86 dd 01 00 00    	jbe    ffffffff80419484 <_ZL9_out_charcPvmm+0x2b4>
ffffffff804192a7:	41 89 c9             	mov    %ecx,%r9d
ffffffff804192aa:	41 f7 d1             	not    %r9d
ffffffff804192ad:	45 8d 34 01          	lea    (%r9,%rax,1),%r14d
ffffffff804192b1:	41 89 f1             	mov    %esi,%r9d
ffffffff804192b4:	4f 8d 0c 89          	lea    (%r9,%r9,4),%r9
ffffffff804192b8:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff804192bc:	4c 01 c9             	add    %r9,%rcx
ffffffff804192bf:	45 31 c9             	xor    %r9d,%r9d
ffffffff804192c2:	48 01 c9             	add    %rcx,%rcx
ffffffff804192c5:	0f 1f 00             	nopl   (%rax)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff804192c8:	66 47 0f be 3c 08    	movsbw (%r8,%r9,1),%r15w
ffffffff804192ce:	66 41 81 cf 00 0f    	or     $0xf00,%r15w
ffffffff804192d4:	66 46 89 bc 49 70 e0 	mov    %r15w,-0x7fbe1f90(%rcx,%r9,2)
ffffffff804192db:	41 80 
ffffffff804192dd:	4d 89 cf             	mov    %r9,%r15
ffffffff804192e0:	49 83 c1 01          	add    $0x1,%r9
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804192e4:	4d 39 f7             	cmp    %r14,%r15
ffffffff804192e7:	75 df                	jne    ffffffff804192c8 <_ZL9_out_charcPvmm+0xf8>
    if (current_col_ == num_cols_) {
ffffffff804192e9:	39 c2                	cmp    %eax,%edx
ffffffff804192eb:	0f 84 df 00 00 00    	je     ffffffff804193d0 <_ZL9_out_charcPvmm+0x200>
    current_col_ = i;
ffffffff804192f1:	89 05 75 4d 00 00    	mov    %eax,0x4d75(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804192f7:	41 83 fa ff          	cmp    $0xffffffff,%r10d
ffffffff804192fb:	0f 84 eb 00 00 00    	je     ffffffff804193ec <_ZL9_out_charcPvmm+0x21c>
ffffffff80419301:	85 c0                	test   %eax,%eax
ffffffff80419303:	74 09                	je     ffffffff8041930e <_ZL9_out_charcPvmm+0x13e>
ffffffff80419305:	83 fe 18             	cmp    $0x18,%esi
ffffffff80419308:	0f 86 a2 01 00 00    	jbe    ffffffff804194b0 <_ZL9_out_charcPvmm+0x2e0>
    str_ += n;
ffffffff8041930e:	89 f9                	mov    %edi,%ecx
ffffffff80419310:	49 01 c8             	add    %rcx,%r8
    size_ -= min(n, size_);
ffffffff80419313:	89 d9                	mov    %ebx,%ecx
ffffffff80419315:	29 f9                	sub    %edi,%ecx
ffffffff80419317:	89 cf                	mov    %ecx,%edi
ffffffff80419319:	89 c1                	mov    %eax,%ecx
    while (!s.empty()) {
ffffffff8041931b:	85 ff                	test   %edi,%edi
ffffffff8041931d:	0f 85 45 ff ff ff    	jne    ffffffff80419268 <_ZL9_out_charcPvmm+0x98>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff80419323:	85 f6                	test   %esi,%esi
ffffffff80419325:	74 5a                	je     ffffffff80419381 <_ZL9_out_charcPvmm+0x1b1>
ffffffff80419327:	8d 4e ff             	lea    -0x1(%rsi),%ecx
ffffffff8041932a:	49 c7 c0 70 e0 41 80 	mov    $0xffffffff8041e070,%r8
ffffffff80419331:	4c 8d 1c 89          	lea    (%rcx,%rcx,4),%r11
ffffffff80419335:	49 c1 e3 05          	shl    $0x5,%r11
ffffffff80419339:	49 81 c3 10 e1 41 80 	add    $0xffffffff8041e110,%r11
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80419340:	4d 89 c1             	mov    %r8,%r9
ffffffff80419343:	89 f9                	mov    %edi,%ecx
ffffffff80419345:	44 8d 14 17          	lea    (%rdi,%rdx,1),%r10d
ffffffff80419349:	85 d2                	test   %edx,%edx
ffffffff8041934b:	0f 84 3f 01 00 00    	je     ffffffff80419490 <_ZL9_out_charcPvmm+0x2c0>
ffffffff80419351:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff80419358:	41 0f b7 19          	movzwl (%r9),%ebx
ffffffff8041935c:	89 cf                	mov    %ecx,%edi
ffffffff8041935e:	83 c1 01             	add    $0x1,%ecx
ffffffff80419361:	49 83 c1 02          	add    $0x2,%r9
ffffffff80419365:	66 89 9c 3f 00 80 0b 	mov    %bx,0xb8000(%rdi,%rdi,1)
ffffffff8041936c:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041936d:	41 39 ca             	cmp    %ecx,%r10d
ffffffff80419370:	75 e6                	jne    ffffffff80419358 <_ZL9_out_charcPvmm+0x188>
ffffffff80419372:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
ffffffff80419379:	44 89 d7             	mov    %r10d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041937c:	4d 39 d8             	cmp    %r11,%r8
ffffffff8041937f:	75 bf                	jne    ffffffff80419340 <_ZL9_out_charcPvmm+0x170>
    if (current_col_ != 0) {
ffffffff80419381:	85 c0                	test   %eax,%eax
ffffffff80419383:	74 33                	je     ffffffff804193b8 <_ZL9_out_charcPvmm+0x1e8>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80419385:	85 d2                	test   %edx,%edx
ffffffff80419387:	74 2f                	je     ffffffff804193b8 <_ZL9_out_charcPvmm+0x1e8>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff80419389:	89 d0                	mov    %edx,%eax
ffffffff8041938b:	48 8d 0c b6          	lea    (%rsi,%rsi,4),%rcx
ffffffff8041938f:	0f af c6             	imul   %esi,%eax
ffffffff80419392:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80419396:	48 81 c1 70 e0 41 80 	add    $0xffffffff8041e070,%rcx
ffffffff8041939d:	01 c2                	add    %eax,%edx
ffffffff8041939f:	90                   	nop
ffffffff804193a0:	0f b7 39             	movzwl (%rcx),%edi
ffffffff804193a3:	89 c6                	mov    %eax,%esi
ffffffff804193a5:	83 c0 01             	add    $0x1,%eax
ffffffff804193a8:	48 83 c1 02          	add    $0x2,%rcx
ffffffff804193ac:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff804193b3:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804193b4:	39 c2                	cmp    %eax,%edx
ffffffff804193b6:	75 e8                	jne    ffffffff804193a0 <_ZL9_out_charcPvmm+0x1d0>
}
ffffffff804193b8:	48 83 c4 30          	add    $0x30,%rsp
ffffffff804193bc:	5b                   	pop    %rbx
ffffffff804193bd:	5d                   	pop    %rbp
ffffffff804193be:	41 5c                	pop    %r12
ffffffff804193c0:	41 5d                	pop    %r13
ffffffff804193c2:	41 5e                	pop    %r14
ffffffff804193c4:	41 5f                	pop    %r15
ffffffff804193c6:	c3                   	retq   
ffffffff804193c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804193ce:	00 00 
      current_row_++;
ffffffff804193d0:	83 c6 01             	add    $0x1,%esi
      current_col_ = 0;
ffffffff804193d3:	44 89 25 92 4c 00 00 	mov    %r12d,0x4c92(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804193da:	31 c0                	xor    %eax,%eax
      current_row_++;
ffffffff804193dc:	89 35 86 4c 00 00    	mov    %esi,0x4c86(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff804193e2:	41 83 fa ff          	cmp    $0xffffffff,%r10d
ffffffff804193e6:	0f 85 22 ff ff ff    	jne    ffffffff8041930e <_ZL9_out_charcPvmm+0x13e>
ffffffff804193ec:	44 39 df             	cmp    %r11d,%edi
ffffffff804193ef:	41 0f 47 fb          	cmova  %r11d,%edi
ffffffff804193f3:	e9 16 ff ff ff       	jmpq   ffffffff8041930e <_ZL9_out_charcPvmm+0x13e>
ffffffff804193f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804193ff:	00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80419400:	83 fd 01             	cmp    $0x1,%ebp
ffffffff80419403:	76 47                	jbe    ffffffff8041944c <_ZL9_out_charcPvmm+0x27c>
ffffffff80419405:	41 b9 a0 00 00 00    	mov    $0xa0,%r9d
ffffffff8041940b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80419410:	31 c0                	xor    %eax,%eax
ffffffff80419412:	4d 8d b1 60 ff ff ff 	lea    -0xa0(%r9),%r14
ffffffff80419419:	85 d2                	test   %edx,%edx
ffffffff8041941b:	74 21                	je     ffffffff8041943e <_ZL9_out_charcPvmm+0x26e>
ffffffff8041941d:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80419420:	45 0f b7 bc 41 70 e0 	movzwl -0x7fbe1f90(%r9,%rax,2),%r15d
ffffffff80419427:	41 80 
ffffffff80419429:	66 45 89 bc 46 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%rax,2)
ffffffff80419430:	41 80 
ffffffff80419432:	49 89 c7             	mov    %rax,%r15
ffffffff80419435:	48 83 c0 01          	add    $0x1,%rax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80419439:	4d 39 fd             	cmp    %r15,%r13
ffffffff8041943c:	75 e2                	jne    ffffffff80419420 <_ZL9_out_charcPvmm+0x250>
ffffffff8041943e:	49 81 c1 a0 00 00 00 	add    $0xa0,%r9
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80419445:	4c 3b 4c 24 08       	cmp    0x8(%rsp),%r9
ffffffff8041944a:	75 c4                	jne    ffffffff80419410 <_ZL9_out_charcPvmm+0x240>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041944c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
ffffffff80419451:	85 d2                	test   %edx,%edx
ffffffff80419453:	74 15                	je     ffffffff8041946a <_ZL9_out_charcPvmm+0x29a>
ffffffff80419455:	0f 1f 00             	nopl   (%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff80419458:	45 31 f6             	xor    %r14d,%r14d
ffffffff8041945b:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041945f:	66 44 89 70 fe       	mov    %r14w,-0x2(%rax)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff80419464:	48 3b 04 24          	cmp    (%rsp),%rax
ffffffff80419468:	75 ee                	jne    ffffffff80419458 <_ZL9_out_charcPvmm+0x288>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041946a:	42 8d 04 19          	lea    (%rcx,%r11,1),%eax
      current_row_--;
ffffffff8041946e:	83 ee 01             	sub    $0x1,%esi
ffffffff80419471:	39 d0                	cmp    %edx,%eax
ffffffff80419473:	89 35 ef 4b 00 00    	mov    %esi,0x4bef(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff80419479:	0f 47 c2             	cmova  %edx,%eax
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041947c:	39 c8                	cmp    %ecx,%eax
ffffffff8041947e:	0f 87 23 fe ff ff    	ja     ffffffff804192a7 <_ZL9_out_charcPvmm+0xd7>
ffffffff80419484:	89 c8                	mov    %ecx,%eax
ffffffff80419486:	e9 5e fe ff ff       	jmpq   ffffffff804192e9 <_ZL9_out_charcPvmm+0x119>
ffffffff8041948b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80419490:	41 89 fa             	mov    %edi,%r10d
ffffffff80419493:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
ffffffff8041949a:	44 89 d7             	mov    %r10d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041949d:	4d 39 d8             	cmp    %r11,%r8
ffffffff804194a0:	0f 85 9a fe ff ff    	jne    ffffffff80419340 <_ZL9_out_charcPvmm+0x170>
ffffffff804194a6:	e9 d6 fe ff ff       	jmpq   ffffffff80419381 <_ZL9_out_charcPvmm+0x1b1>
ffffffff804194ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804194b0:	39 c2                	cmp    %eax,%edx
ffffffff804194b2:	76 45                	jbe    ffffffff804194f9 <_ZL9_out_charcPvmm+0x329>
ffffffff804194b4:	89 f1                	mov    %esi,%ecx
ffffffff804194b6:	44 8b 74 24 1c       	mov    0x1c(%rsp),%r14d
ffffffff804194bb:	41 89 c2             	mov    %eax,%r10d
ffffffff804194be:	4c 8d 0c 89          	lea    (%rcx,%rcx,4),%r9
ffffffff804194c2:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff804194c6:	41 29 c6             	sub    %eax,%r14d
ffffffff804194c9:	4b 8d 4c 0a 08       	lea    0x8(%r10,%r9,1),%rcx
ffffffff804194ce:	4d 01 d1             	add    %r10,%r9
ffffffff804194d1:	4d 01 f1             	add    %r14,%r9
ffffffff804194d4:	48 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%rcx,%rcx,1),%rcx
ffffffff804194db:	80 
ffffffff804194dc:	4b 8d 84 09 72 e0 41 	lea    -0x7fbe1f8e(%r9,%r9,1),%rax
ffffffff804194e3:	80 
ffffffff804194e4:	0f 1f 40 00          	nopl   0x0(%rax)
          text_buffer_[current_row_][i] = 0;
ffffffff804194e8:	45 31 c9             	xor    %r9d,%r9d
ffffffff804194eb:	48 83 c1 02          	add    $0x2,%rcx
ffffffff804194ef:	66 44 89 49 fe       	mov    %r9w,-0x2(%rcx)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff804194f4:	48 39 c1             	cmp    %rax,%rcx
ffffffff804194f7:	75 ef                	jne    ffffffff804194e8 <_ZL9_out_charcPvmm+0x318>
        current_row_++;
ffffffff804194f9:	83 c6 01             	add    $0x1,%esi
        current_col_ = 0;
ffffffff804194fc:	44 89 25 69 4b 00 00 	mov    %r12d,0x4b69(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80419503:	31 c0                	xor    %eax,%eax
        current_row_++;
ffffffff80419505:	89 35 5d 4b 00 00    	mov    %esi,0x4b5d(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041950b:	e9 fe fd ff ff       	jmpq   ffffffff8041930e <_ZL9_out_charcPvmm+0x13e>
        endline_or_col_chars = len;
ffffffff80419510:	41 89 fb             	mov    %edi,%r11d
    return npos;
ffffffff80419513:	41 ba ff ff ff ff    	mov    $0xffffffff,%r10d
ffffffff80419519:	e9 70 fd ff ff       	jmpq   ffffffff8041928e <_ZL9_out_charcPvmm+0xbe>
ffffffff8041951e:	66 90                	xchg   %ax,%ax

ffffffff80419520 <_putchar>:
void _putchar(char character) {
ffffffff80419520:	41 57                	push   %r15
ffffffff80419522:	41 56                	push   %r14
ffffffff80419524:	41 55                	push   %r13
ffffffff80419526:	41 54                	push   %r12
      if (str_[i] == c) {
ffffffff80419528:	45 31 e4             	xor    %r12d,%r12d
ffffffff8041952b:	55                   	push   %rbp
ffffffff8041952c:	bd 01 00 00 00       	mov    $0x1,%ebp
ffffffff80419531:	53                   	push   %rbx
ffffffff80419532:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80419536:	8b 0d 28 4b 00 00    	mov    0x4b28(%rip),%ecx        # ffffffff8041e064 <_ZN6Kernel10vga_outputE+0x4>
ffffffff8041953c:	8b 35 2a 4b 00 00    	mov    0x4b2a(%rip),%esi        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80419542:	40 88 7c 24 2f       	mov    %dil,0x2f(%rsp)
  void PrintString(string_view s, VGAColor color = White) {
ffffffff80419547:	8b 05 1b 4b 00 00    	mov    0x4b1b(%rip),%eax        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041954d:	4c 8d 44 24 2f       	lea    0x2f(%rsp),%r8
ffffffff80419552:	44 8b 1d 07 4b 00 00 	mov    0x4b07(%rip),%r11d        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff80419559:	44 8d 69 ff          	lea    -0x1(%rcx),%r13d
ffffffff8041955d:	44 89 6c 24 1c       	mov    %r13d,0x1c(%rsp)
ffffffff80419562:	41 8d 53 fe          	lea    -0x2(%r11),%edx
ffffffff80419566:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041956a:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8041956e:	48 8d 9a 40 01 00 00 	lea    0x140(%rdx),%rbx
ffffffff80419575:	41 8d 53 ff          	lea    -0x1(%r11),%edx
ffffffff80419579:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
ffffffff8041957d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
ffffffff80419582:	48 89 d7             	mov    %rdx,%rdi
ffffffff80419585:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80419589:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff8041958d:	4c 01 ea             	add    %r13,%rdx
ffffffff80419590:	48 8d 9f 70 e0 41 80 	lea    -0x7fbe1f90(%rdi),%rbx
ffffffff80419597:	48 89 1c 24          	mov    %rbx,(%rsp)
ffffffff8041959b:	48 8d 9c 12 72 e0 41 	lea    -0x7fbe1f8e(%rdx,%rdx,1),%rbx
ffffffff804195a2:	80 
ffffffff804195a3:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
ffffffff804195a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804195af:	00 
ffffffff804195b0:	89 cf                	mov    %ecx,%edi
ffffffff804195b2:	29 f7                	sub    %esi,%edi
ffffffff804195b4:	0f 45 fd             	cmovne %ebp,%edi
    for (; i < min(size_, pos + count); i++) {
ffffffff804195b7:	39 ce                	cmp    %ecx,%esi
ffffffff804195b9:	0f 84 a1 02 00 00    	je     ffffffff80419860 <_putchar+0x340>
      if (str_[i] == c) {
ffffffff804195bf:	41 80 38 0a          	cmpb   $0xa,(%r8)
ffffffff804195c3:	44 89 e3             	mov    %r12d,%ebx
ffffffff804195c6:	41 0f 94 c2          	sete   %r10b
ffffffff804195ca:	0f 45 df             	cmovne %edi,%ebx
ffffffff804195cd:	45 0f b6 d2          	movzbl %r10b,%r10d
ffffffff804195d1:	41 83 ea 01          	sub    $0x1,%r10d
    if (current_row_ == num_rows_) {
ffffffff804195d5:	41 39 c3             	cmp    %eax,%r11d
ffffffff804195d8:	0f 84 72 01 00 00    	je     ffffffff80419750 <_putchar+0x230>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804195de:	8d 14 1e             	lea    (%rsi,%rbx,1),%edx
ffffffff804195e1:	39 ca                	cmp    %ecx,%edx
ffffffff804195e3:	0f 47 d1             	cmova  %ecx,%edx
ffffffff804195e6:	39 f2                	cmp    %esi,%edx
ffffffff804195e8:	0f 86 e6 01 00 00    	jbe    ffffffff804197d4 <_putchar+0x2b4>
ffffffff804195ee:	41 89 f1             	mov    %esi,%r9d
ffffffff804195f1:	41 f7 d1             	not    %r9d
ffffffff804195f4:	45 8d 34 11          	lea    (%r9,%rdx,1),%r14d
ffffffff804195f8:	41 89 c1             	mov    %eax,%r9d
ffffffff804195fb:	4f 8d 0c 89          	lea    (%r9,%r9,4),%r9
ffffffff804195ff:	49 c1 e1 04          	shl    $0x4,%r9
ffffffff80419603:	4c 01 ce             	add    %r9,%rsi
ffffffff80419606:	45 31 c9             	xor    %r9d,%r9d
ffffffff80419609:	48 01 f6             	add    %rsi,%rsi
ffffffff8041960c:	0f 1f 40 00          	nopl   0x0(%rax)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff80419610:	66 47 0f be 3c 08    	movsbw (%r8,%r9,1),%r15w
ffffffff80419616:	66 41 81 cf 00 0f    	or     $0xf00,%r15w
ffffffff8041961c:	66 46 89 bc 4e 70 e0 	mov    %r15w,-0x7fbe1f90(%rsi,%r9,2)
ffffffff80419623:	41 80 
ffffffff80419625:	4d 89 cf             	mov    %r9,%r15
ffffffff80419628:	49 83 c1 01          	add    $0x1,%r9
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041962c:	4d 39 f7             	cmp    %r14,%r15
ffffffff8041962f:	75 df                	jne    ffffffff80419610 <_putchar+0xf0>
    if (current_col_ == num_cols_) {
ffffffff80419631:	39 d1                	cmp    %edx,%ecx
ffffffff80419633:	0f 84 e7 00 00 00    	je     ffffffff80419720 <_putchar+0x200>
    current_col_ = i;
ffffffff80419639:	89 15 2d 4a 00 00    	mov    %edx,0x4a2d(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041963f:	41 83 fa ff          	cmp    $0xffffffff,%r10d
ffffffff80419643:	0f 84 f3 00 00 00    	je     ffffffff8041973c <_putchar+0x21c>
ffffffff80419649:	85 d2                	test   %edx,%edx
ffffffff8041964b:	74 09                	je     ffffffff80419656 <_putchar+0x136>
ffffffff8041964d:	83 f8 18             	cmp    $0x18,%eax
ffffffff80419650:	0f 86 aa 01 00 00    	jbe    ffffffff80419800 <_putchar+0x2e0>
    size_ -= min(n, size_);
ffffffff80419656:	89 eb                	mov    %ebp,%ebx
    str_ += n;
ffffffff80419658:	89 fe                	mov    %edi,%esi
    size_ -= min(n, size_);
ffffffff8041965a:	29 fb                	sub    %edi,%ebx
    str_ += n;
ffffffff8041965c:	49 01 f0             	add    %rsi,%r8
    size_ -= min(n, size_);
ffffffff8041965f:	89 d6                	mov    %edx,%esi
ffffffff80419661:	89 df                	mov    %ebx,%edi
    while (!s.empty()) {
ffffffff80419663:	85 ff                	test   %edi,%edi
ffffffff80419665:	0f 85 45 ff ff ff    	jne    ffffffff804195b0 <_putchar+0x90>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041966b:	85 c0                	test   %eax,%eax
ffffffff8041966d:	74 64                	je     ffffffff804196d3 <_putchar+0x1b3>
ffffffff8041966f:	8d 70 ff             	lea    -0x1(%rax),%esi
ffffffff80419672:	49 c7 c1 70 e0 41 80 	mov    $0xffffffff8041e070,%r9
ffffffff80419679:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff8041967d:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80419681:	48 81 c6 10 e1 41 80 	add    $0xffffffff8041e110,%rsi
ffffffff80419688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041968f:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80419690:	4d 89 ca             	mov    %r9,%r10
ffffffff80419693:	41 89 f8             	mov    %edi,%r8d
ffffffff80419696:	44 8d 1c 0f          	lea    (%rdi,%rcx,1),%r11d
ffffffff8041969a:	85 c9                	test   %ecx,%ecx
ffffffff8041969c:	0f 84 3e 01 00 00    	je     ffffffff804197e0 <_putchar+0x2c0>
ffffffff804196a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff804196a8:	41 0f b7 1a          	movzwl (%r10),%ebx
ffffffff804196ac:	44 89 c7             	mov    %r8d,%edi
ffffffff804196af:	41 83 c0 01          	add    $0x1,%r8d
ffffffff804196b3:	49 83 c2 02          	add    $0x2,%r10
ffffffff804196b7:	66 89 9c 3f 00 80 0b 	mov    %bx,0xb8000(%rdi,%rdi,1)
ffffffff804196be:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff804196bf:	45 39 c3             	cmp    %r8d,%r11d
ffffffff804196c2:	75 e4                	jne    ffffffff804196a8 <_putchar+0x188>
ffffffff804196c4:	49 81 c1 a0 00 00 00 	add    $0xa0,%r9
ffffffff804196cb:	44 89 df             	mov    %r11d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804196ce:	49 39 f1             	cmp    %rsi,%r9
ffffffff804196d1:	75 bd                	jne    ffffffff80419690 <_putchar+0x170>
    if (current_col_ != 0) {
ffffffff804196d3:	85 d2                	test   %edx,%edx
ffffffff804196d5:	74 31                	je     ffffffff80419708 <_putchar+0x1e8>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff804196d7:	85 c9                	test   %ecx,%ecx
ffffffff804196d9:	74 2d                	je     ffffffff80419708 <_putchar+0x1e8>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff804196db:	89 ca                	mov    %ecx,%edx
ffffffff804196dd:	0f af d0             	imul   %eax,%edx
ffffffff804196e0:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff804196e4:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff804196e8:	48 05 70 e0 41 80    	add    $0xffffffff8041e070,%rax
ffffffff804196ee:	01 d1                	add    %edx,%ecx
ffffffff804196f0:	0f b7 38             	movzwl (%rax),%edi
ffffffff804196f3:	89 d6                	mov    %edx,%esi
ffffffff804196f5:	83 c2 01             	add    $0x1,%edx
ffffffff804196f8:	48 83 c0 02          	add    $0x2,%rax
ffffffff804196fc:	66 89 bc 36 00 80 0b 	mov    %di,0xb8000(%rsi,%rsi,1)
ffffffff80419703:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff80419704:	39 d1                	cmp    %edx,%ecx
ffffffff80419706:	75 e8                	jne    ffffffff804196f0 <_putchar+0x1d0>
}
ffffffff80419708:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8041970c:	5b                   	pop    %rbx
ffffffff8041970d:	5d                   	pop    %rbp
ffffffff8041970e:	41 5c                	pop    %r12
ffffffff80419710:	41 5d                	pop    %r13
ffffffff80419712:	41 5e                	pop    %r14
ffffffff80419714:	41 5f                	pop    %r15
ffffffff80419716:	c3                   	retq   
ffffffff80419717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041971e:	00 00 
      current_row_++;
ffffffff80419720:	83 c0 01             	add    $0x1,%eax
      current_col_ = 0;
ffffffff80419723:	44 89 25 42 49 00 00 	mov    %r12d,0x4942(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041972a:	31 d2                	xor    %edx,%edx
      current_row_++;
ffffffff8041972c:	89 05 36 49 00 00    	mov    %eax,0x4936(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff80419732:	41 83 fa ff          	cmp    $0xffffffff,%r10d
ffffffff80419736:	0f 85 1a ff ff ff    	jne    ffffffff80419656 <_putchar+0x136>
ffffffff8041973c:	39 df                	cmp    %ebx,%edi
ffffffff8041973e:	0f 47 fb             	cmova  %ebx,%edi
ffffffff80419741:	e9 10 ff ff ff       	jmpq   ffffffff80419656 <_putchar+0x136>
ffffffff80419746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041974d:	00 00 00 
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80419750:	41 83 fb 01          	cmp    $0x1,%r11d
ffffffff80419754:	76 46                	jbe    ffffffff8041979c <_putchar+0x27c>
ffffffff80419756:	ba a0 00 00 00       	mov    $0xa0,%edx
ffffffff8041975b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80419760:	45 31 c9             	xor    %r9d,%r9d
ffffffff80419763:	4c 8d b2 60 ff ff ff 	lea    -0xa0(%rdx),%r14
ffffffff8041976a:	85 c9                	test   %ecx,%ecx
ffffffff8041976c:	74 20                	je     ffffffff8041978e <_putchar+0x26e>
ffffffff8041976e:	66 90                	xchg   %ax,%ax
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff80419770:	46 0f b7 bc 4a 70 e0 	movzwl -0x7fbe1f90(%rdx,%r9,2),%r15d
ffffffff80419777:	41 80 
ffffffff80419779:	66 47 89 bc 4e 70 e0 	mov    %r15w,-0x7fbe1f90(%r14,%r9,2)
ffffffff80419780:	41 80 
ffffffff80419782:	4d 89 cf             	mov    %r9,%r15
ffffffff80419785:	49 83 c1 01          	add    $0x1,%r9
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff80419789:	4d 39 fd             	cmp    %r15,%r13
ffffffff8041978c:	75 e2                	jne    ffffffff80419770 <_putchar+0x250>
ffffffff8041978e:	48 81 c2 a0 00 00 00 	add    $0xa0,%rdx
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff80419795:	48 3b 54 24 10       	cmp    0x10(%rsp),%rdx
ffffffff8041979a:	75 c4                	jne    ffffffff80419760 <_putchar+0x240>
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041979c:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff804197a0:	85 c9                	test   %ecx,%ecx
ffffffff804197a2:	74 17                	je     ffffffff804197bb <_putchar+0x29b>
ffffffff804197a4:	0f 1f 40 00          	nopl   0x0(%rax)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff804197a8:	45 31 c9             	xor    %r9d,%r9d
ffffffff804197ab:	48 83 c2 02          	add    $0x2,%rdx
ffffffff804197af:	66 44 89 4a fe       	mov    %r9w,-0x2(%rdx)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff804197b4:	48 3b 54 24 08       	cmp    0x8(%rsp),%rdx
ffffffff804197b9:	75 ed                	jne    ffffffff804197a8 <_putchar+0x288>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804197bb:	8d 14 1e             	lea    (%rsi,%rbx,1),%edx
      current_row_--;
ffffffff804197be:	83 e8 01             	sub    $0x1,%eax
ffffffff804197c1:	39 ca                	cmp    %ecx,%edx
ffffffff804197c3:	89 05 9f 48 00 00    	mov    %eax,0x489f(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff804197c9:	0f 47 d1             	cmova  %ecx,%edx
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff804197cc:	39 f2                	cmp    %esi,%edx
ffffffff804197ce:	0f 87 1a fe ff ff    	ja     ffffffff804195ee <_putchar+0xce>
ffffffff804197d4:	89 f2                	mov    %esi,%edx
ffffffff804197d6:	e9 56 fe ff ff       	jmpq   ffffffff80419631 <_putchar+0x111>
ffffffff804197db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff804197e0:	41 89 fb             	mov    %edi,%r11d
ffffffff804197e3:	49 81 c1 a0 00 00 00 	add    $0xa0,%r9
ffffffff804197ea:	44 89 df             	mov    %r11d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff804197ed:	49 39 f1             	cmp    %rsi,%r9
ffffffff804197f0:	0f 85 9a fe ff ff    	jne    ffffffff80419690 <_putchar+0x170>
ffffffff804197f6:	e9 d8 fe ff ff       	jmpq   ffffffff804196d3 <_putchar+0x1b3>
ffffffff804197fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80419800:	39 d1                	cmp    %edx,%ecx
ffffffff80419802:	76 44                	jbe    ffffffff80419848 <_putchar+0x328>
ffffffff80419804:	89 c6                	mov    %eax,%esi
ffffffff80419806:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
ffffffff8041980a:	41 89 d2             	mov    %edx,%r10d
ffffffff8041980d:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
ffffffff80419811:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80419815:	29 d3                	sub    %edx,%ebx
ffffffff80419817:	4d 8d 4c 32 08       	lea    0x8(%r10,%rsi,1),%r9
ffffffff8041981c:	4c 01 d6             	add    %r10,%rsi
ffffffff8041981f:	48 01 de             	add    %rbx,%rsi
ffffffff80419822:	4f 8d 8c 09 60 e0 41 	lea    -0x7fbe1fa0(%r9,%r9,1),%r9
ffffffff80419829:	80 
ffffffff8041982a:	48 8d 94 36 72 e0 41 	lea    -0x7fbe1f8e(%rsi,%rsi,1),%rdx
ffffffff80419831:	80 
ffffffff80419832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
          text_buffer_[current_row_][i] = 0;
ffffffff80419838:	31 f6                	xor    %esi,%esi
ffffffff8041983a:	49 83 c1 02          	add    $0x2,%r9
ffffffff8041983e:	66 41 89 71 fe       	mov    %si,-0x2(%r9)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff80419843:	49 39 d1             	cmp    %rdx,%r9
ffffffff80419846:	75 f0                	jne    ffffffff80419838 <_putchar+0x318>
        current_row_++;
ffffffff80419848:	83 c0 01             	add    $0x1,%eax
        current_col_ = 0;
ffffffff8041984b:	44 89 25 1a 48 00 00 	mov    %r12d,0x481a(%rip)        # ffffffff8041e06c <_ZN6Kernel10vga_outputE+0xc>
ffffffff80419852:	31 d2                	xor    %edx,%edx
        current_row_++;
ffffffff80419854:	89 05 0e 48 00 00    	mov    %eax,0x480e(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041985a:	e9 f7 fd ff ff       	jmpq   ffffffff80419656 <_putchar+0x136>
ffffffff8041985f:	90                   	nop
        endline_or_col_chars = len;
ffffffff80419860:	89 fb                	mov    %edi,%ebx
    return npos;
ffffffff80419862:	41 ba ff ff ff ff    	mov    $0xffffffff,%r10d
ffffffff80419868:	e9 68 fd ff ff       	jmpq   ffffffff804195d5 <_putchar+0xb5>
ffffffff8041986d:	0f 1f 00             	nopl   (%rax)

ffffffff80419870 <printf_>:

///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...) {
ffffffff80419870:	48 83 ec 58          	sub    $0x58,%rsp
  va_list va;
  va_start(va, format);
ffffffff80419874:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
int printf_(const char* format, ...) {
ffffffff80419879:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff8041987e:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
int printf_(const char* format, ...) {
ffffffff80419883:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff80419888:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
int printf_(const char* format, ...) {
ffffffff8041988f:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff80419894:	48 89 f9             	mov    %rdi,%rcx
ffffffff80419897:	48 c7 c7 d0 91 41 80 	mov    $0xffffffff804191d0,%rdi
int printf_(const char* format, ...) {
ffffffff8041989e:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff804198a3:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
  va_start(va, format);
ffffffff804198a8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff804198ad:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
int printf_(const char* format, ...) {
ffffffff804198b2:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  va_start(va, format);
ffffffff804198b7:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
ffffffff804198be:	00 
ffffffff804198bf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff804198c4:	e8 07 ee ff ff       	callq  ffffffff804186d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
  va_end(va);
  return ret;
}
ffffffff804198c9:	48 83 c4 58          	add    $0x58,%rsp
ffffffff804198cd:	c3                   	retq   
ffffffff804198ce:	66 90                	xchg   %ax,%ax

ffffffff804198d0 <sprintf_>:

int sprintf_(char* buffer, const char* format, ...) {
ffffffff804198d0:	48 83 ec 58          	sub    $0x58,%rsp
  va_list va;
  va_start(va, format);
ffffffff804198d4:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
int sprintf_(char* buffer, const char* format, ...) {
ffffffff804198d9:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff804198de:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
int sprintf_(char* buffer, const char* format, ...) {
ffffffff804198e5:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff804198ea:	48 89 f1             	mov    %rsi,%rcx
ffffffff804198ed:	48 89 fe             	mov    %rdi,%rsi
ffffffff804198f0:	48 c7 c7 80 80 41 80 	mov    $0xffffffff80418080,%rdi
int sprintf_(char* buffer, const char* format, ...) {
ffffffff804198f7:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff804198fc:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
  va_start(va, format);
ffffffff80419901:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff80419906:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
int sprintf_(char* buffer, const char* format, ...) {
ffffffff8041990b:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  va_start(va, format);
ffffffff80419910:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%rsp)
ffffffff80419917:	00 
ffffffff80419918:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
ffffffff8041991d:	e8 ae ed ff ff       	callq  ffffffff804186d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
  va_end(va);
  return ret;
}
ffffffff80419922:	48 83 c4 58          	add    $0x58,%rsp
ffffffff80419926:	c3                   	retq   
ffffffff80419927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041992e:	00 00 

ffffffff80419930 <snprintf_>:

int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff80419930:	41 54                	push   %r12
ffffffff80419932:	48 83 ec 50          	sub    $0x50,%rsp
  va_list va;
  va_start(va, format);
ffffffff80419936:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff8041993b:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff80419940:	48 89 d1             	mov    %rdx,%rcx
ffffffff80419943:	48 89 f2             	mov    %rsi,%rdx
int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff80419946:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff8041994b:	48 89 fe             	mov    %rdi,%rsi
ffffffff8041994e:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
ffffffff80419953:	48 c7 c7 80 80 41 80 	mov    $0xffffffff80418080,%rdi
  va_start(va, format);
ffffffff8041995a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
ffffffff8041995f:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
int snprintf_(char* buffer, size_t count, const char* format, ...) {
ffffffff80419964:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  va_start(va, format);
ffffffff80419969:	c7 44 24 08 18 00 00 	movl   $0x18,0x8(%rsp)
ffffffff80419970:	00 
ffffffff80419971:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff80419976:	e8 55 ed ff ff       	callq  ffffffff804186d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
  va_end(va);
  return ret;
}
ffffffff8041997b:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8041997f:	41 5c                	pop    %r12
ffffffff80419981:	c3                   	retq   
ffffffff80419982:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419989:	00 00 00 00 
ffffffff8041998d:	0f 1f 00             	nopl   (%rax)

ffffffff80419990 <vprintf_>:

int vprintf_(const char* format, va_list va) {
ffffffff80419990:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80419994:	48 89 f9             	mov    %rdi,%rcx
ffffffff80419997:	49 89 f0             	mov    %rsi,%r8
  char buffer[1];
  return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
ffffffff8041999a:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
ffffffff804199a1:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
ffffffff804199a6:	48 c7 c7 d0 91 41 80 	mov    $0xffffffff804191d0,%rdi
ffffffff804199ad:	e8 1e ed ff ff       	callq  ffffffff804186d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
}
ffffffff804199b2:	48 83 c4 18          	add    $0x18,%rsp
ffffffff804199b6:	c3                   	retq   
ffffffff804199b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff804199be:	00 00 

ffffffff804199c0 <vsnprintf_>:

int vsnprintf_(char* buffer, size_t count, const char* format, va_list va) {
ffffffff804199c0:	49 89 c8             	mov    %rcx,%r8
  return _vsnprintf(_out_buffer, buffer, count, format, va);
ffffffff804199c3:	48 89 d1             	mov    %rdx,%rcx
ffffffff804199c6:	48 89 f2             	mov    %rsi,%rdx
ffffffff804199c9:	48 89 fe             	mov    %rdi,%rsi
ffffffff804199cc:	48 c7 c7 80 80 41 80 	mov    $0xffffffff80418080,%rdi
ffffffff804199d3:	e9 f8 ec ff ff       	jmpq   ffffffff804186d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
ffffffff804199d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff804199df:	00 

ffffffff804199e0 <fctprintf>:
}

int fctprintf(void (*out)(char character, void* arg), void* arg,
              const char* format, ...) {
ffffffff804199e0:	48 83 ec 68          	sub    $0x68,%rsp
  va_list va;
  va_start(va, format);
ffffffff804199e4:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
              const char* format, ...) {
ffffffff804199e9:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  const out_fct_wrap_type out_fct_wrap = {out, arg};
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff804199ee:	48 89 d1             	mov    %rdx,%rcx
ffffffff804199f1:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
              const char* format, ...) {
ffffffff804199f8:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff804199fd:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
  va_start(va, format);
ffffffff80419a02:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff80419a07:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  const out_fct_wrap_type out_fct_wrap = {out, arg};
ffffffff80419a0c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff80419a11:	48 c7 c7 b0 91 41 80 	mov    $0xffffffff804191b0,%rdi
  const out_fct_wrap_type out_fct_wrap = {out, arg};
ffffffff80419a18:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff80419a1d:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
              const char* format, ...) {
ffffffff80419a22:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
  va_start(va, format);
ffffffff80419a27:	c7 44 24 18 18 00 00 	movl   $0x18,0x18(%rsp)
ffffffff80419a2e:	00 
ffffffff80419a2f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap,
ffffffff80419a34:	e8 97 ec ff ff       	callq  ffffffff804186d0 <_ZL10_vsnprintfPFvcPvmmEPcmPKcP13__va_list_tag>
                             (size_t)-1, format, va);
  va_end(va);
  return ret;
}
ffffffff80419a39:	48 83 c4 68          	add    $0x68,%rsp
ffffffff80419a3d:	c3                   	retq   
ffffffff80419a3e:	66 90                	xchg   %ax,%ax

ffffffff80419a40 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>:
    return 32 - num_leading_zeros;
  }
}

int RoundDownNearestPowerOfTwoLog(uint32_t bytes) {
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff80419a40:	0f bd cf             	bsr    %edi,%ecx

  // bytes is the power of 2.
  return 31 - num_leading_zeros;
ffffffff80419a43:	b8 1f 00 00 00       	mov    $0x1f,%eax
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff80419a48:	83 f1 1f             	xor    $0x1f,%ecx
  return 31 - num_leading_zeros;
ffffffff80419a4b:	29 c8                	sub    %ecx,%eax
  return 1 << RoundUpNearestPowerOfTwoLog(bytes);
}

int GetBucketIndexOfFreeChunk(uint32_t bytes) {
  int power = RoundDownNearestPowerOfTwoLog(bytes);
  if (power <= 2) {
ffffffff80419a4d:	83 f8 02             	cmp    $0x2,%eax
ffffffff80419a50:	7e 16                	jle    ffffffff80419a68 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj+0x28>
    printf("kmalloc : Cannot create bucket with too small memory %d \n", bytes);
    return -1;
  } else if (3 <= power && power < 3 + NUM_BUCKETS) {
ffffffff80419a52:	83 e8 03             	sub    $0x3,%eax
    return power - 3;
ffffffff80419a55:	ba 1c 00 00 00       	mov    $0x1c,%edx
ffffffff80419a5a:	29 ca                	sub    %ecx,%edx
ffffffff80419a5c:	83 f8 10             	cmp    $0x10,%eax
ffffffff80419a5f:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff80419a64:	0f 42 c2             	cmovb  %edx,%eax
  }
  return NUM_BUCKETS - 1;
}
ffffffff80419a67:	c3                   	retq   
int GetBucketIndexOfFreeChunk(uint32_t bytes) {
ffffffff80419a68:	48 83 ec 08          	sub    $0x8,%rsp
    printf("kmalloc : Cannot create bucket with too small memory %d \n", bytes);
ffffffff80419a6c:	89 fe                	mov    %edi,%esi
ffffffff80419a6e:	31 c0                	xor    %eax,%eax
ffffffff80419a70:	48 c7 c7 f0 b8 41 80 	mov    $0xffffffff8041b8f0,%rdi
ffffffff80419a77:	e8 f4 fd ff ff       	callq  ffffffff80419870 <printf_>
    return -1;
ffffffff80419a7c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
}
ffffffff80419a81:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80419a85:	c3                   	retq   
ffffffff80419a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80419a8d:	00 00 00 

ffffffff80419a90 <_ZN6Kernel6memcpyEPvS0_j>:
namespace Kernel {

void* memcpy(void* dest, void* src, size_t count) {
  char* s = reinterpret_cast<char*>(src);
  char* d = reinterpret_cast<char*>(dest);
  while (count-- > 0) {
ffffffff80419a90:	44 8d 42 ff          	lea    -0x1(%rdx),%r8d
ffffffff80419a94:	85 d2                	test   %edx,%edx
ffffffff80419a96:	74 28                	je     ffffffff80419ac0 <_ZN6Kernel6memcpyEPvS0_j+0x30>
ffffffff80419a98:	49 8d 40 01          	lea    0x1(%r8),%rax
ffffffff80419a9c:	31 d2                	xor    %edx,%edx
ffffffff80419a9e:	66 90                	xchg   %ax,%ax
    *d = *s;
ffffffff80419aa0:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
ffffffff80419aa4:	88 0c 17             	mov    %cl,(%rdi,%rdx,1)
  while (count-- > 0) {
ffffffff80419aa7:	48 89 d1             	mov    %rdx,%rcx
ffffffff80419aaa:	48 83 c2 01          	add    $0x1,%rdx
ffffffff80419aae:	49 39 c8             	cmp    %rcx,%r8
ffffffff80419ab1:	75 ed                	jne    ffffffff80419aa0 <_ZN6Kernel6memcpyEPvS0_j+0x10>
ffffffff80419ab3:	48 01 f8             	add    %rdi,%rax
ffffffff80419ab6:	c3                   	retq   
ffffffff80419ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80419abe:	00 00 
ffffffff80419ac0:	48 89 f8             	mov    %rdi,%rax
    d++;
    s++;
  }
  return d;
}
ffffffff80419ac3:	c3                   	retq   
ffffffff80419ac4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419acb:	00 00 00 00 
ffffffff80419acf:	90                   	nop

ffffffff80419ad0 <_ZN6Kernel6memsetEPvij>:

void* memset(void* dest, int ch, size_t count) {
  char* d = reinterpret_cast<char*>(dest);
  while (count-- > 0) {
ffffffff80419ad0:	8d 42 ff             	lea    -0x1(%rdx),%eax
ffffffff80419ad3:	85 d2                	test   %edx,%edx
ffffffff80419ad5:	74 19                	je     ffffffff80419af0 <_ZN6Kernel6memsetEPvij+0x20>
ffffffff80419ad7:	48 8d 44 07 01       	lea    0x1(%rdi,%rax,1),%rax
ffffffff80419adc:	0f 1f 40 00          	nopl   0x0(%rax)
    *d = ch;
ffffffff80419ae0:	40 88 37             	mov    %sil,(%rdi)
    d++;
ffffffff80419ae3:	48 83 c7 01          	add    $0x1,%rdi
  while (count-- > 0) {
ffffffff80419ae7:	48 39 c7             	cmp    %rax,%rdi
ffffffff80419aea:	75 f4                	jne    ffffffff80419ae0 <_ZN6Kernel6memsetEPvij+0x10>
ffffffff80419aec:	c3                   	retq   
ffffffff80419aed:	0f 1f 00             	nopl   (%rax)
  char* d = reinterpret_cast<char*>(dest);
ffffffff80419af0:	48 89 f8             	mov    %rdi,%rax
  }
  return d;
}
ffffffff80419af3:	c3                   	retq   
ffffffff80419af4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419afb:	00 00 00 00 
ffffffff80419aff:	90                   	nop

ffffffff80419b00 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj>:
  return CreateNewUsedChunkAt(GetAddressByOffset(current_heap_size_),
                              allocate_size);
}

uint32_t KernelMemoryManager::IterateFreeList(uint32_t free_list,
                                              uint32_t memory_size) {
ffffffff80419b00:	89 f0                	mov    %esi,%eax
  uint32_t current_offset = free_list;
  while (current_offset) {
ffffffff80419b02:	85 f6                	test   %esi,%esi
ffffffff80419b04:	74 2b                	je     ffffffff80419b31 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x31>
    CoalsceTwoChunks(addr, prefix_of_right_chunk);
  }
}

uint8_t* KernelMemoryManager::GetAddressByOffset(uint32_t offset_size) const {
  return heap_start_ + offset_size;
ffffffff80419b06:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80419b09:	eb 10                	jmp    ffffffff80419b1b <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x1b>
ffffffff80419b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  return (suffix_block << 1) >> 1;
ffffffff80419b10:	8b 44 0e 04          	mov    0x4(%rsi,%rcx,1),%eax
  while (current_offset) {
ffffffff80419b14:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
ffffffff80419b19:	74 15                	je     ffffffff80419b30 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x30>
  return heap_start_ + offset_size;
ffffffff80419b1b:	89 c6                	mov    %eax,%esi
ffffffff80419b1d:	48 01 fe             	add    %rdi,%rsi
  return prefix_block >> 1;
ffffffff80419b20:	8b 0e                	mov    (%rsi),%ecx
ffffffff80419b22:	d1 e9                	shr    %ecx
    if (chunk_mem_size >= memory_size) {
ffffffff80419b24:	39 ca                	cmp    %ecx,%edx
ffffffff80419b26:	77 e8                	ja     ffffffff80419b10 <_ZN6Kernel19KernelMemoryManager15IterateFreeListEjj+0x10>
}
ffffffff80419b28:	c3                   	retq   
ffffffff80419b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff80419b30:	c3                   	retq   
  return 0;
ffffffff80419b31:	31 c0                	xor    %eax,%eax
}
ffffffff80419b33:	c3                   	retq   
ffffffff80419b34:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419b3b:	00 00 00 00 
ffffffff80419b3f:	90                   	nop

ffffffff80419b40 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>:
void SetFree(uint8_t* byte) { (*byte) &= 0b11111110; }
ffffffff80419b40:	80 26 fe             	andb   $0xfe,(%rsi)
                                               int bucket_index) {
ffffffff80419b43:	41 89 c8             	mov    %ecx,%r8d
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff80419b46:	8b 0e                	mov    (%rsi),%ecx
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419b48:	44 8d 0c 12          	lea    (%rdx,%rdx,1),%r9d
}

uint32_t KernelMemoryManager::GetOffsetFromHeapStart(uint8_t* addr) const {
  return reinterpret_cast<uint64_t>(addr) -
         reinterpret_cast<uint64_t>(heap_start_);
ffffffff80419b4c:	4c 8b 17             	mov    (%rdi),%r10
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419b4f:	49 89 f3             	mov    %rsi,%r11
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff80419b52:	83 e1 01             	and    $0x1,%ecx
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419b55:	44 09 c9             	or     %r9d,%ecx
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419b58:	4d 29 d3             	sub    %r10,%r11
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419b5b:	89 0e                	mov    %ecx,(%rsi)
  auto next = free_list_[bucket_index];
ffffffff80419b5d:	49 63 c8             	movslq %r8d,%rcx
ffffffff80419b60:	48 8d 04 8f          	lea    (%rdi,%rcx,4),%rax
ffffffff80419b64:	8b 48 10             	mov    0x10(%rax),%ecx
  free_list_[bucket_index] = my_offset;
ffffffff80419b67:	44 89 58 10          	mov    %r11d,0x10(%rax)
  if (next != 0) {
ffffffff80419b6b:	85 c9                	test   %ecx,%ecx
ffffffff80419b6d:	74 07                	je     ffffffff80419b76 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji+0x36>
  return heap_start_ + offset_size;
ffffffff80419b6f:	89 c8                	mov    %ecx,%eax
  addr[1] = prev_chunk_offset;
ffffffff80419b71:	45 89 5c 02 04       	mov    %r11d,0x4(%r10,%rax,1)
  return addr + memory_size + 4;
ffffffff80419b76:	89 d2                	mov    %edx,%edx
  addr[1] = prev_chunk_offset;
ffffffff80419b78:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
  return addr + memory_size + 4;
ffffffff80419b7f:	48 8d 54 16 04       	lea    0x4(%rsi,%rdx,1),%rdx
  addr[2] = next_chunk_offset;
ffffffff80419b84:	89 4e 08             	mov    %ecx,0x8(%rsi)
void SetFree(uint8_t* byte) { (*byte) &= 0b11111110; }
ffffffff80419b87:	80 22 fe             	andb   $0xfe,(%rdx)
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff80419b8a:	8b 02                	mov    (%rdx),%eax
ffffffff80419b8c:	83 e0 01             	and    $0x1,%eax
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419b8f:	44 09 c8             	or     %r9d,%eax
ffffffff80419b92:	89 02                	mov    %eax,(%rdx)
}
ffffffff80419b94:	c3                   	retq   
ffffffff80419b95:	90                   	nop
ffffffff80419b96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80419b9d:	00 00 00 

ffffffff80419ba0 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj>:
  if (current_heap_size_ + allocated_size >= heap_memory_limit_) {
ffffffff80419ba0:	8b 47 0c             	mov    0xc(%rdi),%eax
ffffffff80419ba3:	8d 4c 10 08          	lea    0x8(%rax,%rdx,1),%ecx
ffffffff80419ba7:	3b 4f 08             	cmp    0x8(%rdi),%ecx
ffffffff80419baa:	73 44                	jae    ffffffff80419bf0 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj+0x50>
                                                   uint32_t memory_size) {
ffffffff80419bac:	53                   	push   %rbx
ffffffff80419bad:	48 89 f3             	mov    %rsi,%rbx
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419bb0:	48 2b 37             	sub    (%rdi),%rsi
  if (GetOffsetFromHeapStart(addr) == current_heap_size_) {
ffffffff80419bb3:	39 f0                	cmp    %esi,%eax
ffffffff80419bb5:	75 03                	jne    ffffffff80419bba <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj+0x1a>
    current_heap_size_ += allocated_size;
ffffffff80419bb7:	89 4f 0c             	mov    %ecx,0xc(%rdi)
void SetOccupied(uint8_t* byte) { (*byte) |= 0b00000001; }
ffffffff80419bba:	80 0b 01             	orb    $0x1,(%rbx)
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff80419bbd:	8b 03                	mov    (%rbx),%eax
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419bbf:	8d 0c 12             	lea    (%rdx,%rdx,1),%ecx
  printf("New chunk at %x %d \n", addr, memory_size);
ffffffff80419bc2:	48 89 de             	mov    %rbx,%rsi
ffffffff80419bc5:	48 c7 c7 40 ba 41 80 	mov    $0xffffffff8041ba40,%rdi
  (*reinterpret_cast<uint32_t*>(addr)) &= 1;
ffffffff80419bcc:	83 e0 01             	and    $0x1,%eax
  (*reinterpret_cast<uint32_t*>(addr)) |= (size << 1);
ffffffff80419bcf:	09 c8                	or     %ecx,%eax
ffffffff80419bd1:	89 03                	mov    %eax,(%rbx)
  return addr + memory_size + 4;
ffffffff80419bd3:	89 d0                	mov    %edx,%eax
    (*reinterpret_cast<uint32_t*>(addr)) = kKmallocMagicOccupied;
ffffffff80419bd5:	c7 44 03 04 df dd dd 	movl   $0xdddddddf,0x4(%rbx,%rax,1)
ffffffff80419bdc:	dd 
  printf("New chunk at %x %d \n", addr, memory_size);
ffffffff80419bdd:	31 c0                	xor    %eax,%eax
ffffffff80419bdf:	e8 8c fc ff ff       	callq  ffffffff80419870 <printf_>
  return (addr + 4);
ffffffff80419be4:	48 8d 43 04          	lea    0x4(%rbx),%rax
}
ffffffff80419be8:	5b                   	pop    %rbx
ffffffff80419be9:	c3                   	retq   
ffffffff80419bea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    return nullptr;
ffffffff80419bf0:	31 c0                	xor    %eax,%eax
}
ffffffff80419bf2:	c3                   	retq   
ffffffff80419bf3:	90                   	nop
ffffffff80419bf4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419bfb:	00 00 00 00 
ffffffff80419bff:	90                   	nop

ffffffff80419c00 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji>:
                                          int bucket_index) {
ffffffff80419c00:	41 57                	push   %r15
ffffffff80419c02:	41 56                	push   %r14
ffffffff80419c04:	4c 63 f1             	movslq %ecx,%r14
ffffffff80419c07:	41 55                	push   %r13
ffffffff80419c09:	41 54                	push   %r12
ffffffff80419c0b:	49 89 f4             	mov    %rsi,%r12
ffffffff80419c0e:	55                   	push   %rbp
ffffffff80419c0f:	48 89 fd             	mov    %rdi,%rbp
ffffffff80419c12:	53                   	push   %rbx
ffffffff80419c13:	89 d3                	mov    %edx,%ebx
ffffffff80419c15:	48 83 ec 18          	sub    $0x18,%rsp
  return prefix_block >> 1;
ffffffff80419c19:	8b 16                	mov    (%rsi),%edx
  return {data[0], data[1]};
ffffffff80419c1b:	44 8b 46 04          	mov    0x4(%rsi),%r8d
ffffffff80419c1f:	44 8b 7e 08          	mov    0x8(%rsi),%r15d
  return prefix_block >> 1;
ffffffff80419c23:	d1 ea                	shr    %edx
  if (memory_size - split_size < 16) {
ffffffff80419c25:	89 d0                	mov    %edx,%eax
ffffffff80419c27:	29 d8                	sub    %ebx,%eax
ffffffff80419c29:	83 f8 0f             	cmp    $0xf,%eax
ffffffff80419c2c:	0f 86 ae 00 00 00    	jbe    ffffffff80419ce0 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0xe0>
ffffffff80419c32:	89 d0                	mov    %edx,%eax
ffffffff80419c34:	29 d8                	sub    %ebx,%eax
ffffffff80419c36:	44 8d 68 f8          	lea    -0x8(%rax),%r13d
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419c3a:	4c 89 e1             	mov    %r12,%rcx
  printf("split size: %d  memory size : %d ffset : %d\n", split_size,
ffffffff80419c3d:	89 de                	mov    %ebx,%esi
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419c3f:	48 2b 4d 00          	sub    0x0(%rbp),%rcx
  printf("split size: %d  memory size : %d ffset : %d\n", split_size,
ffffffff80419c43:	48 c7 c7 30 b9 41 80 	mov    $0xffffffff8041b930,%rdi
ffffffff80419c4a:	31 c0                	xor    %eax,%eax
ffffffff80419c4c:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
ffffffff80419c51:	e8 1a fc ff ff       	callq  ffffffff80419870 <printf_>
}

void KernelMemoryManager::WeaveTwoChunksTogether(
    const PrevAndNext& prev_and_next, int bucket_index) {
  // This means the prev chunk was just the free_list.
  if (prev_and_next.prev_offset == 0) {
ffffffff80419c56:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
ffffffff80419c5b:	45 85 c0             	test   %r8d,%r8d
ffffffff80419c5e:	75 70                	jne    ffffffff80419cd0 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0xd0>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff80419c60:	46 89 7c b5 10       	mov    %r15d,0x10(%rbp,%r14,4)
  } else {
    uint8_t* chunk = GetAddressByOffset(prev_and_next.prev_offset);
    SetNextOffset(chunk, prev_and_next.next_offset);
  }

  if (prev_and_next.next_offset != 0) {
ffffffff80419c65:	45 85 ff             	test   %r15d,%r15d
ffffffff80419c68:	74 09                	je     ffffffff80419c73 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0x73>
  addr[1] = prev_chunk_offset;
ffffffff80419c6a:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff80419c6e:	46 89 44 38 04       	mov    %r8d,0x4(%rax,%r15,1)
  CreateNewUsedChunkAt(addr, split_size);
ffffffff80419c73:	89 da                	mov    %ebx,%edx
ffffffff80419c75:	4c 89 e6             	mov    %r12,%rsi
ffffffff80419c78:	48 89 ef             	mov    %rbp,%rdi
ffffffff80419c7b:	e8 20 ff ff ff       	callq  ffffffff80419ba0 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj>
  if (remaining_size == 0) {
ffffffff80419c80:	45 85 ed             	test   %r13d,%r13d
ffffffff80419c83:	74 34                	je     ffffffff80419cb9 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0xb9>
  int bucket_index_of_remaining = GetBucketIndexOfFreeChunk(remaining_size);
ffffffff80419c85:	44 89 ef             	mov    %r13d,%edi
  return addr + memory_size + 8;
ffffffff80419c88:	4d 8d 7c 1c 08       	lea    0x8(%r12,%rbx,1),%r15
  int bucket_index_of_remaining = GetBucketIndexOfFreeChunk(remaining_size);
ffffffff80419c8d:	e8 ae fd ff ff       	callq  ffffffff80419a40 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
  printf("Remainig size: %d bucket: %d \n", remaining_size,
ffffffff80419c92:	44 89 ee             	mov    %r13d,%esi
ffffffff80419c95:	48 c7 c7 60 b9 41 80 	mov    $0xffffffff8041b960,%rdi
ffffffff80419c9c:	89 c2                	mov    %eax,%edx
  int bucket_index_of_remaining = GetBucketIndexOfFreeChunk(remaining_size);
ffffffff80419c9e:	41 89 c6             	mov    %eax,%r14d
  printf("Remainig size: %d bucket: %d \n", remaining_size,
ffffffff80419ca1:	31 c0                	xor    %eax,%eax
ffffffff80419ca3:	e8 c8 fb ff ff       	callq  ffffffff80419870 <printf_>
  CreateNewFreeChunkAt(free_chunk_start, remaining_size,
ffffffff80419ca8:	44 89 f1             	mov    %r14d,%ecx
ffffffff80419cab:	44 89 ea             	mov    %r13d,%edx
ffffffff80419cae:	4c 89 fe             	mov    %r15,%rsi
ffffffff80419cb1:	48 89 ef             	mov    %rbp,%rdi
ffffffff80419cb4:	e8 87 fe ff ff       	callq  ffffffff80419b40 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>
}
ffffffff80419cb9:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80419cbd:	4c 89 e0             	mov    %r12,%rax
ffffffff80419cc0:	5b                   	pop    %rbx
ffffffff80419cc1:	5d                   	pop    %rbp
ffffffff80419cc2:	41 5c                	pop    %r12
ffffffff80419cc4:	41 5d                	pop    %r13
ffffffff80419cc6:	41 5e                	pop    %r14
ffffffff80419cc8:	41 5f                	pop    %r15
ffffffff80419cca:	c3                   	retq   
ffffffff80419ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  addr[2] = next_chunk_offset;
ffffffff80419cd0:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  return heap_start_ + offset_size;
ffffffff80419cd4:	44 89 c0             	mov    %r8d,%eax
  addr[2] = next_chunk_offset;
ffffffff80419cd7:	44 89 7c 02 08       	mov    %r15d,0x8(%rdx,%rax,1)
}
ffffffff80419cdc:	eb 87                	jmp    ffffffff80419c65 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0x65>
ffffffff80419cde:	66 90                	xchg   %ax,%ax
    split_size = memory_size;
ffffffff80419ce0:	89 d3                	mov    %edx,%ebx
ffffffff80419ce2:	41 bd f8 ff ff ff    	mov    $0xfffffff8,%r13d
ffffffff80419ce8:	e9 4d ff ff ff       	jmpq   ffffffff80419c3a <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji+0x3a>
ffffffff80419ced:	90                   	nop
ffffffff80419cee:	66 90                	xchg   %ax,%ax

ffffffff80419cf0 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij>:
                                                  uint32_t bytes) {
ffffffff80419cf0:	41 54                	push   %r12
ffffffff80419cf2:	55                   	push   %rbp
ffffffff80419cf3:	48 89 fd             	mov    %rdi,%rbp
ffffffff80419cf6:	48 83 ec 08          	sub    $0x8,%rsp
  for (int i = bucket_index; i < NUM_BUCKETS; i++) {
ffffffff80419cfa:	83 fe 0f             	cmp    $0xf,%esi
ffffffff80419cfd:	7f 5a                	jg     ffffffff80419d59 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x69>
ffffffff80419cff:	48 63 fe             	movslq %esi,%rdi
ffffffff80419d02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    auto free_chunk_offset = IterateFreeList(free_list_[i], bytes);
ffffffff80419d08:	8b 74 bd 10          	mov    0x10(%rbp,%rdi,4),%esi
ffffffff80419d0c:	41 89 f8             	mov    %edi,%r8d
  while (current_offset) {
ffffffff80419d0f:	85 f6                	test   %esi,%esi
ffffffff80419d11:	74 3d                	je     ffffffff80419d50 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x60>
  return heap_start_ + offset_size;
ffffffff80419d13:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
ffffffff80419d17:	eb 13                	jmp    ffffffff80419d2c <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x3c>
ffffffff80419d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  return (suffix_block << 1) >> 1;
ffffffff80419d20:	8b 74 06 04          	mov    0x4(%rsi,%rax,1),%esi
  while (current_offset) {
ffffffff80419d24:	81 e6 ff ff ff 7f    	and    $0x7fffffff,%esi
ffffffff80419d2a:	74 24                	je     ffffffff80419d50 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x60>
  return heap_start_ + offset_size;
ffffffff80419d2c:	89 f6                	mov    %esi,%esi
ffffffff80419d2e:	48 01 ce             	add    %rcx,%rsi
  return prefix_block >> 1;
ffffffff80419d31:	8b 06                	mov    (%rsi),%eax
ffffffff80419d33:	d1 e8                	shr    %eax
    if (chunk_mem_size >= memory_size) {
ffffffff80419d35:	39 c2                	cmp    %eax,%edx
ffffffff80419d37:	77 e7                	ja     ffffffff80419d20 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x30>
      return GetMemoryBlockAddressFromChunkStart(
ffffffff80419d39:	48 89 ef             	mov    %rbp,%rdi
ffffffff80419d3c:	44 89 c1             	mov    %r8d,%ecx
ffffffff80419d3f:	e8 bc fe ff ff       	callq  ffffffff80419c00 <_ZN6Kernel19KernelMemoryManager11SplitMemoryEPhji>
}
ffffffff80419d44:	48 83 c4 08          	add    $0x8,%rsp
  return (addr + 4);
ffffffff80419d48:	48 83 c0 04          	add    $0x4,%rax
}
ffffffff80419d4c:	5d                   	pop    %rbp
ffffffff80419d4d:	41 5c                	pop    %r12
ffffffff80419d4f:	c3                   	retq   
    if (free_chunk_offset) {
ffffffff80419d50:	48 83 c7 01          	add    $0x1,%rdi
  for (int i = bucket_index; i < NUM_BUCKETS; i++) {
ffffffff80419d54:	83 ff 0f             	cmp    $0xf,%edi
ffffffff80419d57:	7e af                	jle    ffffffff80419d08 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij+0x18>
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff80419d59:	0f bd c2             	bsr    %edx,%eax
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419d5c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  return 1 << RoundUpNearestPowerOfTwoLog(bytes);
ffffffff80419d61:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  printf("Allocate size: %d \n", allocate_size);
ffffffff80419d67:	48 c7 c7 55 ba 41 80 	mov    $0xffffffff8041ba55,%rdi
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff80419d6e:	83 f0 1f             	xor    $0x1f,%eax
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419d71:	0f bc d2             	bsf    %edx,%edx
ffffffff80419d74:	0f 44 d1             	cmove  %ecx,%edx
    return num_trailing_zeros - 1;
ffffffff80419d77:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffff80419d7c:	29 c1                	sub    %eax,%ecx
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff80419d7e:	83 c2 01             	add    $0x1,%edx
  if (num_leading_zeros + num_trailing_zeros == 32) {
ffffffff80419d81:	8d 34 10             	lea    (%rax,%rdx,1),%esi
    return num_trailing_zeros - 1;
ffffffff80419d84:	83 ea 01             	sub    $0x1,%edx
ffffffff80419d87:	83 fe 20             	cmp    $0x20,%esi
ffffffff80419d8a:	0f 44 ca             	cmove  %edx,%ecx
  printf("Allocate size: %d \n", allocate_size);
ffffffff80419d8d:	31 c0                	xor    %eax,%eax
  return 1 << RoundUpNearestPowerOfTwoLog(bytes);
ffffffff80419d8f:	41 d3 e4             	shl    %cl,%r12d
  printf("Allocate size: %d \n", allocate_size);
ffffffff80419d92:	44 89 e6             	mov    %r12d,%esi
ffffffff80419d95:	e8 d6 fa ff ff       	callq  ffffffff80419870 <printf_>
  return heap_start_ + offset_size;
ffffffff80419d9a:	8b 75 0c             	mov    0xc(%rbp),%esi
ffffffff80419d9d:	48 03 75 00          	add    0x0(%rbp),%rsi
}
ffffffff80419da1:	48 83 c4 08          	add    $0x8,%rsp
  return CreateNewUsedChunkAt(GetAddressByOffset(current_heap_size_),
ffffffff80419da5:	44 89 e2             	mov    %r12d,%edx
ffffffff80419da8:	48 89 ef             	mov    %rbp,%rdi
}
ffffffff80419dab:	5d                   	pop    %rbp
ffffffff80419dac:	41 5c                	pop    %r12
  return CreateNewUsedChunkAt(GetAddressByOffset(current_heap_size_),
ffffffff80419dae:	e9 ed fd ff ff       	jmpq   ffffffff80419ba0 <_ZN6Kernel19KernelMemoryManager20CreateNewUsedChunkAtEPhj>
ffffffff80419db3:	90                   	nop
ffffffff80419db4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff80419dbb:	00 00 00 00 
ffffffff80419dbf:	90                   	nop

ffffffff80419dc0 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_>:
void KernelMemoryManager::CoalsceTwoChunks(uint8_t* left, uint8_t* right) {
ffffffff80419dc0:	41 56                	push   %r14
ffffffff80419dc2:	41 55                	push   %r13
ffffffff80419dc4:	41 54                	push   %r12
ffffffff80419dc6:	49 89 f4             	mov    %rsi,%r12
ffffffff80419dc9:	55                   	push   %rbp
ffffffff80419dca:	48 89 fd             	mov    %rdi,%rbp
ffffffff80419dcd:	53                   	push   %rbx
  return prefix_block >> 1;
ffffffff80419dce:	44 8b 2e             	mov    (%rsi),%r13d
void KernelMemoryManager::CoalsceTwoChunks(uint8_t* left, uint8_t* right) {
ffffffff80419dd1:	48 89 d3             	mov    %rdx,%rbx
  return prefix_block >> 1;
ffffffff80419dd4:	44 8b 32             	mov    (%rdx),%r14d
ffffffff80419dd7:	41 d1 ed             	shr    %r13d
  WeaveTwoChunksTogether(GetPrevAndNextFromFreeChunk(left),
ffffffff80419dda:	44 89 ef             	mov    %r13d,%edi
  return prefix_block >> 1;
ffffffff80419ddd:	41 d1 ee             	shr    %r14d
  WeaveTwoChunksTogether(GetPrevAndNextFromFreeChunk(left),
ffffffff80419de0:	e8 5b fc ff ff       	callq  ffffffff80419a40 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
  return {data[0], data[1]};
ffffffff80419de5:	41 8b 4c 24 04       	mov    0x4(%r12),%ecx
ffffffff80419dea:	41 8b 54 24 08       	mov    0x8(%r12),%edx
  if (prev_and_next.prev_offset == 0) {
ffffffff80419def:	85 c9                	test   %ecx,%ecx
ffffffff80419df1:	75 6d                	jne    ffffffff80419e60 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0xa0>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff80419df3:	48 98                	cltq   
ffffffff80419df5:	89 54 85 10          	mov    %edx,0x10(%rbp,%rax,4)
  if (prev_and_next.next_offset != 0) {
ffffffff80419df9:	85 d2                	test   %edx,%edx
ffffffff80419dfb:	74 08                	je     ffffffff80419e05 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x45>
  addr[1] = prev_chunk_offset;
ffffffff80419dfd:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff80419e01:	89 4c 10 04          	mov    %ecx,0x4(%rax,%rdx,1)
  WeaveTwoChunksTogether(GetPrevAndNextFromFreeChunk(right),
ffffffff80419e05:	44 89 f7             	mov    %r14d,%edi
ffffffff80419e08:	e8 33 fc ff ff       	callq  ffffffff80419a40 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
  return {data[0], data[1]};
ffffffff80419e0d:	8b 4b 04             	mov    0x4(%rbx),%ecx
ffffffff80419e10:	8b 53 08             	mov    0x8(%rbx),%edx
  if (prev_and_next.prev_offset == 0) {
ffffffff80419e13:	85 c9                	test   %ecx,%ecx
ffffffff80419e15:	75 39                	jne    ffffffff80419e50 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x90>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff80419e17:	48 98                	cltq   
ffffffff80419e19:	89 54 85 10          	mov    %edx,0x10(%rbp,%rax,4)
  if (prev_and_next.next_offset != 0) {
ffffffff80419e1d:	85 d2                	test   %edx,%edx
ffffffff80419e1f:	74 08                	je     ffffffff80419e29 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x69>
  addr[1] = prev_chunk_offset;
ffffffff80419e21:	48 8b 45 00          	mov    0x0(%rbp),%rax
ffffffff80419e25:	89 4c 10 04          	mov    %ecx,0x4(%rax,%rdx,1)
  int total_size = left_size + right_size + 8;
ffffffff80419e29:	47 8d 6c 2e 08       	lea    0x8(%r14,%r13,1),%r13d
  int bucket_index = GetBucketIndexOfFreeChunk(total_size);
ffffffff80419e2e:	44 89 ef             	mov    %r13d,%edi
ffffffff80419e31:	e8 0a fc ff ff       	callq  ffffffff80419a40 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
}
ffffffff80419e36:	5b                   	pop    %rbx
  CreateNewFreeChunkAt(left, total_size, bucket_index);
ffffffff80419e37:	44 89 ea             	mov    %r13d,%edx
ffffffff80419e3a:	4c 89 e6             	mov    %r12,%rsi
ffffffff80419e3d:	48 89 ef             	mov    %rbp,%rdi
  int bucket_index = GetBucketIndexOfFreeChunk(total_size);
ffffffff80419e40:	89 c1                	mov    %eax,%ecx
}
ffffffff80419e42:	5d                   	pop    %rbp
ffffffff80419e43:	41 5c                	pop    %r12
ffffffff80419e45:	41 5d                	pop    %r13
ffffffff80419e47:	41 5e                	pop    %r14
  CreateNewFreeChunkAt(left, total_size, bucket_index);
ffffffff80419e49:	e9 f2 fc ff ff       	jmpq   ffffffff80419b40 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>
ffffffff80419e4e:	66 90                	xchg   %ax,%ax
  addr[2] = next_chunk_offset;
ffffffff80419e50:	48 8b 75 00          	mov    0x0(%rbp),%rsi
  return heap_start_ + offset_size;
ffffffff80419e54:	89 c8                	mov    %ecx,%eax
  addr[2] = next_chunk_offset;
ffffffff80419e56:	89 54 06 08          	mov    %edx,0x8(%rsi,%rax,1)
}
ffffffff80419e5a:	eb c1                	jmp    ffffffff80419e1d <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x5d>
ffffffff80419e5c:	0f 1f 40 00          	nopl   0x0(%rax)
  addr[2] = next_chunk_offset;
ffffffff80419e60:	48 8b 75 00          	mov    0x0(%rbp),%rsi
  return heap_start_ + offset_size;
ffffffff80419e64:	89 c8                	mov    %ecx,%eax
  addr[2] = next_chunk_offset;
ffffffff80419e66:	89 54 06 08          	mov    %edx,0x8(%rsi,%rax,1)
}
ffffffff80419e6a:	eb 8d                	jmp    ffffffff80419df9 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_+0x39>
ffffffff80419e6c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80419e70 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh>:
void KernelMemoryManager::FreeOccupiedChunk(uint8_t* addr) {
ffffffff80419e70:	41 55                	push   %r13
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419e72:	48 89 f2             	mov    %rsi,%rdx
  printf("occ chunk size : %d %d \n", chunk_size, GetOffsetFromHeapStart(addr));
ffffffff80419e75:	31 c0                	xor    %eax,%eax
void KernelMemoryManager::FreeOccupiedChunk(uint8_t* addr) {
ffffffff80419e77:	41 54                	push   %r12
ffffffff80419e79:	49 89 f4             	mov    %rsi,%r12
ffffffff80419e7c:	55                   	push   %rbp
  return prefix_block >> 1;
ffffffff80419e7d:	44 8b 2e             	mov    (%rsi),%r13d
void KernelMemoryManager::FreeOccupiedChunk(uint8_t* addr) {
ffffffff80419e80:	48 89 fd             	mov    %rdi,%rbp
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419e83:	48 2b 17             	sub    (%rdi),%rdx
  printf("occ chunk size : %d %d \n", chunk_size, GetOffsetFromHeapStart(addr));
ffffffff80419e86:	48 c7 c7 69 ba 41 80 	mov    $0xffffffff8041ba69,%rdi
  return prefix_block >> 1;
ffffffff80419e8d:	41 d1 ed             	shr    %r13d
  printf("occ chunk size : %d %d \n", chunk_size, GetOffsetFromHeapStart(addr));
ffffffff80419e90:	44 89 ee             	mov    %r13d,%esi
ffffffff80419e93:	e8 d8 f9 ff ff       	callq  ffffffff80419870 <printf_>
  CreateNewFreeChunkAt(addr, chunk_size, GetBucketIndexOfFreeChunk(chunk_size));
ffffffff80419e98:	44 89 ef             	mov    %r13d,%edi
ffffffff80419e9b:	e8 a0 fb ff ff       	callq  ffffffff80419a40 <_ZN6Kernel12_GLOBAL__N_125GetBucketIndexOfFreeChunkEj>
ffffffff80419ea0:	44 89 ea             	mov    %r13d,%edx
ffffffff80419ea3:	4c 89 e6             	mov    %r12,%rsi
ffffffff80419ea6:	48 89 ef             	mov    %rbp,%rdi
ffffffff80419ea9:	89 c1                	mov    %eax,%ecx
ffffffff80419eab:	e8 90 fc ff ff       	callq  ffffffff80419b40 <_ZN6Kernel19KernelMemoryManager20CreateNewFreeChunkAtEPhji>
  if (suffix_of_left_chunk >= heap_start_ + 8 /* initial offset */ &&
ffffffff80419eb0:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  uint8_t* suffix_of_left_chunk = reinterpret_cast<uint8_t*>(addr) - 4;
ffffffff80419eb4:	49 8d 44 24 fc       	lea    -0x4(%r12),%rax
  if (suffix_of_left_chunk >= heap_start_ + 8 /* initial offset */ &&
ffffffff80419eb9:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
ffffffff80419ebd:	48 39 c8             	cmp    %rcx,%rax
ffffffff80419ec0:	72 08                	jb     ffffffff80419eca <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x5a>
ffffffff80419ec2:	41 f6 44 24 fc 01    	testb  $0x1,-0x4(%r12)
ffffffff80419ec8:	74 3e                	je     ffffffff80419f08 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x98>
  return prefix_block >> 1;
ffffffff80419eca:	41 8b 04 24          	mov    (%r12),%eax
ffffffff80419ece:	d1 e8                	shr    %eax
  return addr + memory_size + 8;
ffffffff80419ed0:	4d 8d 44 04 08       	lea    0x8(%r12,%rax,1),%r8
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419ed5:	4c 89 c0             	mov    %r8,%rax
ffffffff80419ed8:	48 29 d0             	sub    %rdx,%rax
  if (GetOffsetFromHeapStart(prefix_of_right_chunk) < current_heap_size_ &&
ffffffff80419edb:	39 45 0c             	cmp    %eax,0xc(%rbp)
ffffffff80419ede:	76 06                	jbe    ffffffff80419ee6 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x76>
ffffffff80419ee0:	41 f6 00 01          	testb  $0x1,(%r8)
ffffffff80419ee4:	74 0a                	je     ffffffff80419ef0 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x80>
}
ffffffff80419ee6:	5d                   	pop    %rbp
ffffffff80419ee7:	41 5c                	pop    %r12
ffffffff80419ee9:	41 5d                	pop    %r13
ffffffff80419eeb:	c3                   	retq   
ffffffff80419eec:	0f 1f 40 00          	nopl   0x0(%rax)
    CoalsceTwoChunks(addr, prefix_of_right_chunk);
ffffffff80419ef0:	4c 89 e6             	mov    %r12,%rsi
ffffffff80419ef3:	48 89 ef             	mov    %rbp,%rdi
ffffffff80419ef6:	4c 89 c2             	mov    %r8,%rdx
}
ffffffff80419ef9:	5d                   	pop    %rbp
ffffffff80419efa:	41 5c                	pop    %r12
ffffffff80419efc:	41 5d                	pop    %r13
    CoalsceTwoChunks(addr, prefix_of_right_chunk);
ffffffff80419efe:	e9 bd fe ff ff       	jmpq   ffffffff80419dc0 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_>
ffffffff80419f03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  return prefix_block >> 1;
ffffffff80419f08:	41 8b 54 24 fc       	mov    -0x4(%r12),%edx
ffffffff80419f0d:	d1 ea                	shr    %edx
  return suffix - mem_size - 4;
ffffffff80419f0f:	48 29 d0             	sub    %rdx,%rax
    CoalsceTwoChunks(left, addr);
ffffffff80419f12:	4c 89 e2             	mov    %r12,%rdx
  return suffix - mem_size - 4;
ffffffff80419f15:	4c 8d 68 fc          	lea    -0x4(%rax),%r13
    CoalsceTwoChunks(left, addr);
ffffffff80419f19:	4c 89 ee             	mov    %r13,%rsi
    addr = left;
ffffffff80419f1c:	4d 89 ec             	mov    %r13,%r12
    CoalsceTwoChunks(left, addr);
ffffffff80419f1f:	e8 9c fe ff ff       	callq  ffffffff80419dc0 <_ZN6Kernel19KernelMemoryManager16CoalsceTwoChunksEPhS1_>
    addr = left;
ffffffff80419f24:	48 8b 55 00          	mov    0x0(%rbp),%rdx
ffffffff80419f28:	eb a0                	jmp    ffffffff80419eca <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh+0x5a>
ffffffff80419f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80419f30 <_ZNK6Kernel19KernelMemoryManager18GetAddressByOffsetEj>:
  return heap_start_ + offset_size;
ffffffff80419f30:	89 f0                	mov    %esi,%eax
ffffffff80419f32:	48 03 07             	add    (%rdi),%rax
}
ffffffff80419f35:	c3                   	retq   
ffffffff80419f36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80419f3d:	00 00 00 

ffffffff80419f40 <_ZNK6Kernel19KernelMemoryManager22GetOffsetFromHeapStartEPh>:
  return reinterpret_cast<uint64_t>(addr) -
ffffffff80419f40:	48 89 f0             	mov    %rsi,%rax
ffffffff80419f43:	48 2b 07             	sub    (%rdi),%rax
}
ffffffff80419f46:	c3                   	retq   
ffffffff80419f47:	90                   	nop
ffffffff80419f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80419f4f:	00 

ffffffff80419f50 <_ZNK6Kernel19KernelMemoryManager30GetActualMemoryAddressByOffsetEj>:
  return heap_start_ + offset_size + /* prefix size = */ 4;
ffffffff80419f50:	48 8b 07             	mov    (%rdi),%rax
ffffffff80419f53:	89 f6                	mov    %esi,%esi
ffffffff80419f55:	48 8d 44 30 04       	lea    0x4(%rax,%rsi,1),%rax
}
ffffffff80419f5a:	c3                   	retq   
ffffffff80419f5b:	90                   	nop
ffffffff80419f5c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80419f60 <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi>:
  if (prev_and_next.prev_offset == 0) {
ffffffff80419f60:	8b 0e                	mov    (%rsi),%ecx
ffffffff80419f62:	8b 46 04             	mov    0x4(%rsi),%eax
ffffffff80419f65:	85 c9                	test   %ecx,%ecx
ffffffff80419f67:	75 17                	jne    ffffffff80419f80 <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi+0x20>
    free_list_[bucket_index] = prev_and_next.next_offset;
ffffffff80419f69:	48 63 d2             	movslq %edx,%rdx
ffffffff80419f6c:	89 44 97 10          	mov    %eax,0x10(%rdi,%rdx,4)
  if (prev_and_next.next_offset != 0) {
ffffffff80419f70:	85 c0                	test   %eax,%eax
ffffffff80419f72:	74 09                	je     ffffffff80419f7d <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi+0x1d>
    uint8_t* chunk = GetAddressByOffset(prev_and_next.next_offset);
    SetPrevOffset(chunk, prev_and_next.prev_offset);
ffffffff80419f74:	8b 0e                	mov    (%rsi),%ecx
  addr[1] = prev_chunk_offset;
ffffffff80419f76:	48 8b 17             	mov    (%rdi),%rdx
ffffffff80419f79:	89 4c 02 04          	mov    %ecx,0x4(%rdx,%rax,1)
  }
}
ffffffff80419f7d:	c3                   	retq   
ffffffff80419f7e:	66 90                	xchg   %ax,%ax
  addr[2] = next_chunk_offset;
ffffffff80419f80:	48 8b 17             	mov    (%rdi),%rdx
ffffffff80419f83:	89 44 0a 08          	mov    %eax,0x8(%rdx,%rcx,1)
ffffffff80419f87:	8b 46 04             	mov    0x4(%rsi),%eax
}
ffffffff80419f8a:	eb e4                	jmp    ffffffff80419f70 <_ZN6Kernel19KernelMemoryManager22WeaveTwoChunksTogetherERKNS0_11PrevAndNextEi+0x10>
ffffffff80419f8c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80419f90 <_ZNK6Kernel19KernelMemoryManager13ShowDebugInfoEv>:

void KernelMemoryManager::ShowDebugInfo() const {
ffffffff80419f90:	55                   	push   %rbp
  printf("---------- kmalloc Debug Info ---------- \n");
ffffffff80419f91:	31 c0                	xor    %eax,%eax
void KernelMemoryManager::ShowDebugInfo() const {
ffffffff80419f93:	48 89 fd             	mov    %rdi,%rbp
  printf("---------- kmalloc Debug Info ---------- \n");
ffffffff80419f96:	48 c7 c7 80 b9 41 80 	mov    $0xffffffff8041b980,%rdi
void KernelMemoryManager::ShowDebugInfo() const {
ffffffff80419f9d:	53                   	push   %rbx
ffffffff80419f9e:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
ffffffff80419fa2:	48 83 c5 50          	add    $0x50,%rbp
ffffffff80419fa6:	48 83 ec 08          	sub    $0x8,%rsp
  printf("---------- kmalloc Debug Info ---------- \n");
ffffffff80419faa:	e8 c1 f8 ff ff       	callq  ffffffff80419870 <printf_>
  printf("Current Total heap size : %d \n", current_heap_size_ - 8);
ffffffff80419faf:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80419fb2:	48 c7 c7 b0 b9 41 80 	mov    $0xffffffff8041b9b0,%rdi
ffffffff80419fb9:	8d 70 f8             	lea    -0x8(%rax),%esi
ffffffff80419fbc:	31 c0                	xor    %eax,%eax
ffffffff80419fbe:	e8 ad f8 ff ff       	callq  ffffffff80419870 <printf_>
  printf("---------- Free list offsets  ---------- \n");
ffffffff80419fc3:	48 c7 c7 d0 b9 41 80 	mov    $0xffffffff8041b9d0,%rdi
ffffffff80419fca:	31 c0                	xor    %eax,%eax
ffffffff80419fcc:	e8 9f f8 ff ff       	callq  ffffffff80419870 <printf_>
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff80419fd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    printf("%5d", free_list_[i]);
ffffffff80419fd8:	8b 33                	mov    (%rbx),%esi
ffffffff80419fda:	48 c7 c7 82 ba 41 80 	mov    $0xffffffff8041ba82,%rdi
ffffffff80419fe1:	31 c0                	xor    %eax,%eax
ffffffff80419fe3:	48 83 c3 04          	add    $0x4,%rbx
ffffffff80419fe7:	e8 84 f8 ff ff       	callq  ffffffff80419870 <printf_>
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff80419fec:	48 39 eb             	cmp    %rbp,%rbx
ffffffff80419fef:	75 e7                	jne    ffffffff80419fd8 <_ZNK6Kernel19KernelMemoryManager13ShowDebugInfoEv+0x48>
  }
}
ffffffff80419ff1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80419ff5:	5b                   	pop    %rbx
ffffffff80419ff6:	5d                   	pop    %rbp
ffffffff80419ff7:	c3                   	retq   
ffffffff80419ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80419fff:	00 

ffffffff8041a000 <_ZN6Kernel19KernelMemoryManager5ResetEv>:

void KernelMemoryManager::Reset() {
  current_heap_size_ = 8;
ffffffff8041a000:	c7 47 0c 08 00 00 00 	movl   $0x8,0xc(%rdi)
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff8041a007:	48 8d 47 10          	lea    0x10(%rdi),%rax
ffffffff8041a00b:	48 8d 57 50          	lea    0x50(%rdi),%rdx
ffffffff8041a00f:	90                   	nop
    free_list_[i] = 0;
ffffffff8041a010:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff8041a016:	48 83 c0 04          	add    $0x4,%rax
  for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff8041a01a:	48 39 d0             	cmp    %rdx,%rax
ffffffff8041a01d:	75 f1                	jne    ffffffff8041a010 <_ZN6Kernel19KernelMemoryManager5ResetEv+0x10>
  }
}
ffffffff8041a01f:	c3                   	retq   

ffffffff8041a020 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv>:

bool KernelMemoryManager::SanityCheck() {
  // First scan the entire heap from the start to the end.
  uint32_t current_offset = 8;
  while (current_offset < current_heap_size_) {
ffffffff8041a020:	44 8b 47 0c          	mov    0xc(%rdi),%r8d
ffffffff8041a024:	41 83 f8 08          	cmp    $0x8,%r8d
ffffffff8041a028:	76 36                	jbe    ffffffff8041a060 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x40>
  return heap_start_ + offset_size;
ffffffff8041a02a:	48 8b 3f             	mov    (%rdi),%rdi
  uint32_t current_offset = 8;
ffffffff8041a02d:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8041a032:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  return heap_start_ + offset_size;
ffffffff8041a038:	89 f2                	mov    %esi,%edx
ffffffff8041a03a:	48 01 fa             	add    %rdi,%rdx
  return prefix_block >> 1;
ffffffff8041a03d:	8b 02                	mov    (%rdx),%eax
ffffffff8041a03f:	d1 e8                	shr    %eax
    uint8_t* chunk = GetAddressByOffset(current_offset);
    uint32_t chunk_size = GetChunkSize(chunk);

    if (IsOccupied(chunk)) {
ffffffff8041a041:	f6 02 01             	testb  $0x1,(%rdx)
ffffffff8041a044:	74 11                	je     ffffffff8041a057 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x37>
  return addr + memory_size + 4;
ffffffff8041a046:	89 c1                	mov    %eax,%ecx
  return (*s) == kKmallocMagic || (*s) == kKmallocMagicOccupied;
ffffffff8041a048:	8b 4c 0a 04          	mov    0x4(%rdx,%rcx,1),%ecx
ffffffff8041a04c:	83 e1 f7             	and    $0xfffffff7,%ecx
      uint8_t* suffix = GetSuffixBlockAddressFromChunkStart(chunk, chunk_size);
      if (!CheckMagic(suffix)) {
ffffffff8041a04f:	81 f9 d7 dd dd dd    	cmp    $0xddddddd7,%ecx
ffffffff8041a055:	75 19                	jne    ffffffff8041a070 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x50>
        printf("Magic Corrupted at : %d of %x \n", current_offset, chunk);
        return false;
      }
    }

    current_offset += (8 + chunk_size);
ffffffff8041a057:	8d 74 30 08          	lea    0x8(%rax,%rsi,1),%esi
  while (current_offset < current_heap_size_) {
ffffffff8041a05b:	44 39 c6             	cmp    %r8d,%esi
ffffffff8041a05e:	72 d8                	jb     ffffffff8041a038 <_ZN6Kernel19KernelMemoryManager11SanityCheckEv+0x18>
  }
  return true;
ffffffff8041a060:	b8 01 00 00 00       	mov    $0x1,%eax
}
ffffffff8041a065:	c3                   	retq   
ffffffff8041a066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a06d:	00 00 00 
bool KernelMemoryManager::SanityCheck() {
ffffffff8041a070:	48 83 ec 08          	sub    $0x8,%rsp
        printf("Magic Corrupted at : %d of %x \n", current_offset, chunk);
ffffffff8041a074:	48 c7 c7 00 ba 41 80 	mov    $0xffffffff8041ba00,%rdi
ffffffff8041a07b:	31 c0                	xor    %eax,%eax
ffffffff8041a07d:	e8 ee f7 ff ff       	callq  ffffffff80419870 <printf_>
        return false;
ffffffff8041a082:	31 c0                	xor    %eax,%eax
}
ffffffff8041a084:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041a088:	c3                   	retq   
ffffffff8041a089:	90                   	nop
ffffffff8041a08a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8041a090 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv>:

void KernelMemoryManager::DumpMemory() {
  uint32_t current_offset = 8;
  while (current_offset < current_heap_size_) {
ffffffff8041a090:	83 7f 0c 08          	cmpl   $0x8,0xc(%rdi)
ffffffff8041a094:	0f 86 b6 00 00 00    	jbe    ffffffff8041a150 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0xc0>
void KernelMemoryManager::DumpMemory() {
ffffffff8041a09a:	41 55                	push   %r13
ffffffff8041a09c:	49 89 fd             	mov    %rdi,%r13
ffffffff8041a09f:	41 54                	push   %r12
  uint32_t current_offset = 8;
ffffffff8041a0a1:	41 bc 08 00 00 00    	mov    $0x8,%r12d
void KernelMemoryManager::DumpMemory() {
ffffffff8041a0a7:	55                   	push   %rbp
ffffffff8041a0a8:	53                   	push   %rbx
ffffffff8041a0a9:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041a0ad:	eb 3c                	jmp    ffffffff8041a0eb <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x5b>
ffffffff8041a0af:	90                   	nop

    bool is_occupied = IsOccupied(chunk);
    if (is_occupied) {
      printf("O ");
    } else {
      printf("F ");
ffffffff8041a0b0:	48 c7 c7 89 ba 41 80 	mov    $0xffffffff8041ba89,%rdi
ffffffff8041a0b7:	31 c0                	xor    %eax,%eax
ffffffff8041a0b9:	e8 b2 f7 ff ff       	callq  ffffffff80419870 <printf_>
      if (!CheckMagic(suffix)) {
        printf("MAGIC FAILED!");
      }
    } else {
      auto prev_and_next = GetPrevAndNextFromFreeChunk(chunk);
      printf(" prev : [%d] next : [%d]", prev_and_next.prev_offset,
ffffffff8041a0be:	8b 53 08             	mov    0x8(%rbx),%edx
ffffffff8041a0c1:	8b 73 04             	mov    0x4(%rbx),%esi
ffffffff8041a0c4:	31 c0                	xor    %eax,%eax
ffffffff8041a0c6:	48 c7 c7 8c ba 41 80 	mov    $0xffffffff8041ba8c,%rdi
ffffffff8041a0cd:	e8 9e f7 ff ff       	callq  ffffffff80419870 <printf_>
             prev_and_next.next_offset);
    }

    printf("\n");
ffffffff8041a0d2:	48 c7 c7 fb b7 41 80 	mov    $0xffffffff8041b7fb,%rdi
ffffffff8041a0d9:	31 c0                	xor    %eax,%eax

    current_offset += (8 + chunk_size);
ffffffff8041a0db:	46 8d 64 25 08       	lea    0x8(%rbp,%r12,1),%r12d
    printf("\n");
ffffffff8041a0e0:	e8 8b f7 ff ff       	callq  ffffffff80419870 <printf_>
  while (current_offset < current_heap_size_) {
ffffffff8041a0e5:	45 39 65 0c          	cmp    %r12d,0xc(%r13)
ffffffff8041a0e9:	76 55                	jbe    ffffffff8041a140 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0xb0>
  return heap_start_ + offset_size;
ffffffff8041a0eb:	44 89 e3             	mov    %r12d,%ebx
ffffffff8041a0ee:	49 03 5d 00          	add    0x0(%r13),%rbx
    printf("Offset [%d] Chunk Size : [%d] ", current_offset, chunk_size);
ffffffff8041a0f2:	31 c0                	xor    %eax,%eax
ffffffff8041a0f4:	44 89 e6             	mov    %r12d,%esi
  return prefix_block >> 1;
ffffffff8041a0f7:	8b 2b                	mov    (%rbx),%ebp
    printf("Offset [%d] Chunk Size : [%d] ", current_offset, chunk_size);
ffffffff8041a0f9:	48 c7 c7 20 ba 41 80 	mov    $0xffffffff8041ba20,%rdi
  return prefix_block >> 1;
ffffffff8041a100:	d1 ed                	shr    %ebp
    printf("Offset [%d] Chunk Size : [%d] ", current_offset, chunk_size);
ffffffff8041a102:	89 ea                	mov    %ebp,%edx
ffffffff8041a104:	e8 67 f7 ff ff       	callq  ffffffff80419870 <printf_>
    if (is_occupied) {
ffffffff8041a109:	f6 03 01             	testb  $0x1,(%rbx)
ffffffff8041a10c:	74 a2                	je     ffffffff8041a0b0 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x20>
      printf("O ");
ffffffff8041a10e:	48 c7 c7 86 ba 41 80 	mov    $0xffffffff8041ba86,%rdi
ffffffff8041a115:	31 c0                	xor    %eax,%eax
ffffffff8041a117:	e8 54 f7 ff ff       	callq  ffffffff80419870 <printf_>
  return addr + memory_size + 4;
ffffffff8041a11c:	89 e8                	mov    %ebp,%eax
  return (*s) == kKmallocMagic || (*s) == kKmallocMagicOccupied;
ffffffff8041a11e:	8b 44 03 04          	mov    0x4(%rbx,%rax,1),%eax
ffffffff8041a122:	83 e0 f7             	and    $0xfffffff7,%eax
      if (!CheckMagic(suffix)) {
ffffffff8041a125:	3d d7 dd dd dd       	cmp    $0xddddddd7,%eax
ffffffff8041a12a:	74 a6                	je     ffffffff8041a0d2 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x42>
        printf("MAGIC FAILED!");
ffffffff8041a12c:	48 c7 c7 a5 ba 41 80 	mov    $0xffffffff8041baa5,%rdi
ffffffff8041a133:	31 c0                	xor    %eax,%eax
ffffffff8041a135:	e8 36 f7 ff ff       	callq  ffffffff80419870 <printf_>
ffffffff8041a13a:	eb 96                	jmp    ffffffff8041a0d2 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv+0x42>
ffffffff8041a13c:	0f 1f 40 00          	nopl   0x0(%rax)
  }
}
ffffffff8041a140:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041a144:	5b                   	pop    %rbx
ffffffff8041a145:	5d                   	pop    %rbp
ffffffff8041a146:	41 5c                	pop    %r12
ffffffff8041a148:	41 5d                	pop    %r13
ffffffff8041a14a:	c3                   	retq   
ffffffff8041a14b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8041a150:	c3                   	retq   
ffffffff8041a151:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041a158:	00 00 00 00 
ffffffff8041a15c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8041a160 <_ZN6Kernel7kmallocEj>:

void* kmalloc(size_t bytes) {
  if (bytes == 0) {
ffffffff8041a160:	85 ff                	test   %edi,%edi
ffffffff8041a162:	74 6c                	je     ffffffff8041a1d0 <_ZN6Kernel7kmallocEj+0x70>
    return nullptr;
  }

  if (bytes < 8) {
ffffffff8041a164:	83 ff 08             	cmp    $0x8,%edi
ffffffff8041a167:	ba 08 00 00 00       	mov    $0x8,%edx
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff8041a16c:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff8041a171:	0f 43 d7             	cmovae %edi,%edx
  int num_leading_zeros = __builtin_clz(bytes);
ffffffff8041a174:	0f bd ca             	bsr    %edx,%ecx
ffffffff8041a177:	83 f1 1f             	xor    $0x1f,%ecx
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff8041a17a:	0f bc c2             	bsf    %edx,%eax
ffffffff8041a17d:	0f 44 c6             	cmove  %esi,%eax
    return 32 - num_leading_zeros;
ffffffff8041a180:	be 20 00 00 00       	mov    $0x20,%esi
ffffffff8041a185:	29 ce                	sub    %ecx,%esi
  int num_trailing_zeros = __builtin_ffs(bytes);
ffffffff8041a187:	83 c0 01             	add    $0x1,%eax
  if (num_leading_zeros + num_trailing_zeros == 32) {
ffffffff8041a18a:	8d 3c 01             	lea    (%rcx,%rax,1),%edi
ffffffff8041a18d:	83 ff 20             	cmp    $0x20,%edi
ffffffff8041a190:	74 1e                	je     ffffffff8041a1b0 <_ZN6Kernel7kmallocEj+0x50>
  } else if (3 < power && power < 3 + NUM_BUCKETS) {
ffffffff8041a192:	8d 46 fc             	lea    -0x4(%rsi),%eax
    return power - 3;
ffffffff8041a195:	83 ee 03             	sub    $0x3,%esi
    bytes = 8;
  }

  int bucket_index = GetBucketIndex(bytes);
  return reinterpret_cast<void*>(
      kernel_memory_manager.GetMemoryFromBucket(bucket_index, bytes));
ffffffff8041a198:	48 c7 c7 a0 09 42 80 	mov    $0xffffffff804209a0,%rdi
    return power - 3;
ffffffff8041a19f:	83 f8 0f             	cmp    $0xf,%eax
ffffffff8041a1a2:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff8041a1a7:	0f 43 f0             	cmovae %eax,%esi
      kernel_memory_manager.GetMemoryFromBucket(bucket_index, bytes));
ffffffff8041a1aa:	e9 41 fb ff ff       	jmpq   ffffffff80419cf0 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij>
ffffffff8041a1af:	90                   	nop
    return num_trailing_zeros - 1;
ffffffff8041a1b0:	8d 70 ff             	lea    -0x1(%rax),%esi
  if (power < 3) {
ffffffff8041a1b3:	83 fe 02             	cmp    $0x2,%esi
ffffffff8041a1b6:	7f da                	jg     ffffffff8041a192 <_ZN6Kernel7kmallocEj+0x32>
    return 0;
ffffffff8041a1b8:	31 f6                	xor    %esi,%esi
      kernel_memory_manager.GetMemoryFromBucket(bucket_index, bytes));
ffffffff8041a1ba:	48 c7 c7 a0 09 42 80 	mov    $0xffffffff804209a0,%rdi
ffffffff8041a1c1:	e9 2a fb ff ff       	jmpq   ffffffff80419cf0 <_ZN6Kernel19KernelMemoryManager19GetMemoryFromBucketEij>
ffffffff8041a1c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a1cd:	00 00 00 
}
ffffffff8041a1d0:	31 c0                	xor    %eax,%eax
ffffffff8041a1d2:	c3                   	retq   
ffffffff8041a1d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041a1da:	00 00 00 00 
ffffffff8041a1de:	66 90                	xchg   %ax,%ax

ffffffff8041a1e0 <_ZN6Kernel7kcallocEj>:

void* kcalloc(size_t bytes) {
ffffffff8041a1e0:	53                   	push   %rbx
ffffffff8041a1e1:	89 fb                	mov    %edi,%ebx
  void* addr = kmalloc(bytes);
ffffffff8041a1e3:	e8 78 ff ff ff       	callq  ffffffff8041a160 <_ZN6Kernel7kmallocEj>
  if (addr != nullptr) {
ffffffff8041a1e8:	48 85 c0             	test   %rax,%rax
ffffffff8041a1eb:	74 1f                	je     ffffffff8041a20c <_ZN6Kernel7kcallocEj+0x2c>
  while (count-- > 0) {
ffffffff8041a1ed:	8d 53 ff             	lea    -0x1(%rbx),%edx
ffffffff8041a1f0:	85 db                	test   %ebx,%ebx
ffffffff8041a1f2:	74 18                	je     ffffffff8041a20c <_ZN6Kernel7kcallocEj+0x2c>
ffffffff8041a1f4:	48 8d 4c 10 01       	lea    0x1(%rax,%rdx,1),%rcx
ffffffff8041a1f9:	48 89 c2             	mov    %rax,%rdx
ffffffff8041a1fc:	0f 1f 40 00          	nopl   0x0(%rax)
    *d = ch;
ffffffff8041a200:	c6 02 00             	movb   $0x0,(%rdx)
    d++;
ffffffff8041a203:	48 83 c2 01          	add    $0x1,%rdx
  while (count-- > 0) {
ffffffff8041a207:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8041a20a:	75 f4                	jne    ffffffff8041a200 <_ZN6Kernel7kcallocEj+0x20>
    memset(addr, 0, bytes);
  }
  return addr;
}
ffffffff8041a20c:	5b                   	pop    %rbx
ffffffff8041a20d:	c3                   	retq   
ffffffff8041a20e:	66 90                	xchg   %ax,%ax

ffffffff8041a210 <_ZN6Kernel5kfreeEPv>:

void kfree(void* ptr) {
  // Move addr to point start of the chunk.
  uint8_t* addr = reinterpret_cast<uint8_t*>(ptr);
  addr -= 4;
ffffffff8041a210:	48 8d 77 fc          	lea    -0x4(%rdi),%rsi
  kernel_memory_manager.FreeOccupiedChunk(addr);
ffffffff8041a214:	48 c7 c7 a0 09 42 80 	mov    $0xffffffff804209a0,%rdi
ffffffff8041a21b:	e9 50 fc ff ff       	jmpq   ffffffff80419e70 <_ZN6Kernel19KernelMemoryManager17FreeOccupiedChunkEPh>

ffffffff8041a220 <__cxa_pure_virtual>:
#include "kernel_test.h"

extern "C" void __cxa_pure_virtual() {
  while (1)
ffffffff8041a220:	eb fe                	jmp    ffffffff8041a220 <__cxa_pure_virtual>
ffffffff8041a222:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
ffffffff8041a229:	00 00 00 00 
ffffffff8041a22d:	0f 1f 00             	nopl   (%rax)

ffffffff8041a230 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv>:

namespace Kernel {
namespace kernel_test {

void KernelTestRunner::RunTest() {
  for (int i = 0; i < num_tests_; i++) {
ffffffff8041a230:	8b 97 20 03 00 00    	mov    0x320(%rdi),%edx
ffffffff8041a236:	85 d2                	test   %edx,%edx
ffffffff8041a238:	0f 8e a2 00 00 00    	jle    ffffffff8041a2e0 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0xb0>
void KernelTestRunner::RunTest() {
ffffffff8041a23e:	55                   	push   %rbp
ffffffff8041a23f:	48 89 fd             	mov    %rdi,%rbp
ffffffff8041a242:	53                   	push   %rbx
  for (int i = 0; i < num_tests_; i++) {
ffffffff8041a243:	31 db                	xor    %ebx,%ebx
void KernelTestRunner::RunTest() {
ffffffff8041a245:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041a249:	eb 3a                	jmp    ffffffff8041a285 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0x55>
ffffffff8041a24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    printf("[ RUN      ]  %s.%s\n", tests_[i]->GetTestSuiteName(),
           tests_[i]->GetTestName());
    tests_[i]->TestBody();
    if (!tests_[i]->GetBadCount()) {
      printf("[       OK ] ");
ffffffff8041a250:	48 c7 c7 c8 ba 41 80 	mov    $0xffffffff8041bac8,%rdi
ffffffff8041a257:	31 c0                	xor    %eax,%eax
ffffffff8041a259:	e8 12 f6 ff ff       	callq  ffffffff80419870 <printf_>
    } else {
      printf("[  FAILED  ] ");
    }
    printf("%s.%s\n", tests_[i]->GetTestSuiteName(), tests_[i]->GetTestName());
ffffffff8041a25e:	48 8b 44 dd 00       	mov    0x0(%rbp,%rbx,8),%rax
ffffffff8041a263:	48 c7 c7 c1 ba 41 80 	mov    $0xffffffff8041bac1,%rdi
ffffffff8041a26a:	48 83 c3 01          	add    $0x1,%rbx
ffffffff8041a26e:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8041a272:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff8041a276:	31 c0                	xor    %eax,%eax
ffffffff8041a278:	e8 f3 f5 ff ff       	callq  ffffffff80419870 <printf_>
  for (int i = 0; i < num_tests_; i++) {
ffffffff8041a27d:	39 9d 20 03 00 00    	cmp    %ebx,0x320(%rbp)
ffffffff8041a283:	7e 4b                	jle    ffffffff8041a2d0 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0xa0>
           tests_[i]->GetTestName());
ffffffff8041a285:	48 8b 44 dd 00       	mov    0x0(%rbp,%rbx,8),%rax
    printf("[ RUN      ]  %s.%s\n", tests_[i]->GetTestSuiteName(),
ffffffff8041a28a:	48 c7 c7 b3 ba 41 80 	mov    $0xffffffff8041bab3,%rdi
ffffffff8041a291:	48 8b 50 10          	mov    0x10(%rax),%rdx
ffffffff8041a295:	48 8b 70 08          	mov    0x8(%rax),%rsi
ffffffff8041a299:	31 c0                	xor    %eax,%eax
ffffffff8041a29b:	e8 d0 f5 ff ff       	callq  ffffffff80419870 <printf_>
    tests_[i]->TestBody();
ffffffff8041a2a0:	48 8b 7c dd 00       	mov    0x0(%rbp,%rbx,8),%rdi
ffffffff8041a2a5:	48 8b 07             	mov    (%rdi),%rax
ffffffff8041a2a8:	ff 10                	callq  *(%rax)
    if (!tests_[i]->GetBadCount()) {
ffffffff8041a2aa:	48 8b 44 dd 00       	mov    0x0(%rbp,%rbx,8),%rax
ffffffff8041a2af:	8b 40 18             	mov    0x18(%rax),%eax
ffffffff8041a2b2:	85 c0                	test   %eax,%eax
ffffffff8041a2b4:	74 9a                	je     ffffffff8041a250 <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0x20>
      printf("[  FAILED  ] ");
ffffffff8041a2b6:	48 c7 c7 d6 ba 41 80 	mov    $0xffffffff8041bad6,%rdi
ffffffff8041a2bd:	31 c0                	xor    %eax,%eax
ffffffff8041a2bf:	e8 ac f5 ff ff       	callq  ffffffff80419870 <printf_>
ffffffff8041a2c4:	eb 98                	jmp    ffffffff8041a25e <_ZN6Kernel11kernel_test16KernelTestRunner7RunTestEv+0x2e>
ffffffff8041a2c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a2cd:	00 00 00 
  }
}
ffffffff8041a2d0:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041a2d4:	5b                   	pop    %rbx
ffffffff8041a2d5:	5d                   	pop    %rbp
ffffffff8041a2d6:	c3                   	retq   
ffffffff8041a2d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a2de:	00 00 
ffffffff8041a2e0:	c3                   	retq   
ffffffff8041a2e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a2e8:	00 00 00 
ffffffff8041a2eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041a2f0 <_ZN6Kernel11kernel_test29kmallocTest_IncreaseSize_Test8TestBodyEv>:

  EXPECT_TRUE(kernel_memory_manager.SanityCheck());
}
*/

TEST(kmallocTest, IncreaseSize) {
ffffffff8041a2f0:	53                   	push   %rbx
  kernel_memory_manager.Reset();
ffffffff8041a2f1:	48 c7 c7 a0 09 42 80 	mov    $0xffffffff804209a0,%rdi
ffffffff8041a2f8:	bb 0a 00 00 00       	mov    $0xa,%ebx
ffffffff8041a2fd:	e8 fe fc ff ff       	callq  ffffffff8041a000 <_ZN6Kernel19KernelMemoryManager5ResetEv>
  for (int i = 1; i <= 11; i++) {
    void* mem = kmalloc(i * 10);
ffffffff8041a302:	89 df                	mov    %ebx,%edi
ffffffff8041a304:	83 c3 0a             	add    $0xa,%ebx
ffffffff8041a307:	e8 54 fe ff ff       	callq  ffffffff8041a160 <_ZN6Kernel7kmallocEj>
ffffffff8041a30c:	48 89 c7             	mov    %rax,%rdi
    kfree(mem);
ffffffff8041a30f:	e8 fc fe ff ff       	callq  ffffffff8041a210 <_ZN6Kernel5kfreeEPv>
  for (int i = 1; i <= 11; i++) {
ffffffff8041a314:	83 fb 78             	cmp    $0x78,%ebx
ffffffff8041a317:	75 e9                	jne    ffffffff8041a302 <_ZN6Kernel11kernel_test29kmallocTest_IncreaseSize_Test8TestBodyEv+0x12>
  }

  void* mem = kmalloc(120);
ffffffff8041a319:	bf 78 00 00 00       	mov    $0x78,%edi
ffffffff8041a31e:	e8 3d fe ff ff       	callq  ffffffff8041a160 <_ZN6Kernel7kmallocEj>
  kernel_memory_manager.DumpMemory();
ffffffff8041a323:	48 c7 c7 a0 09 42 80 	mov    $0xffffffff804209a0,%rdi
ffffffff8041a32a:	e8 61 fd ff ff       	callq  ffffffff8041a090 <_ZN6Kernel19KernelMemoryManager10DumpMemoryEv>
  while(1){}
ffffffff8041a32f:	eb fe                	jmp    ffffffff8041a32f <_ZN6Kernel11kernel_test29kmallocTest_IncreaseSize_Test8TestBodyEv+0x3f>
ffffffff8041a331:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a338:	00 00 00 
ffffffff8041a33b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041a340 <__do_global_ctors_aux>:
ffffffff8041a340:	48 a1 d0 d9 41 80 ff 	movabs 0xffffffff8041d9d0,%rax
ffffffff8041a347:	ff ff ff 
ffffffff8041a34a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff8041a34e:	74 30                	je     ffffffff8041a380 <__do_global_ctors_aux+0x40>
ffffffff8041a350:	55                   	push   %rbp
ffffffff8041a351:	48 89 e5             	mov    %rsp,%rbp
ffffffff8041a354:	53                   	push   %rbx
ffffffff8041a355:	48 bb d0 d9 41 80 ff 	movabs $0xffffffff8041d9d0,%rbx
ffffffff8041a35c:	ff ff ff 
ffffffff8041a35f:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041a363:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8041a368:	ff d0                	callq  *%rax
ffffffff8041a36a:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
ffffffff8041a36e:	48 83 eb 08          	sub    $0x8,%rbx
ffffffff8041a372:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
ffffffff8041a376:	75 f0                	jne    ffffffff8041a368 <__do_global_ctors_aux+0x28>
ffffffff8041a378:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041a37c:	5b                   	pop    %rbx
ffffffff8041a37d:	5d                   	pop    %rbp
ffffffff8041a37e:	c3                   	retq   
ffffffff8041a37f:	90                   	nop
ffffffff8041a380:	c3                   	retq   
ffffffff8041a381:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a388:	00 00 00 
ffffffff8041a38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041a390 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE>:
  void PrintString(string_view s, VGAColor color = White) {
ffffffff8041a390:	41 57                	push   %r15
ffffffff8041a392:	41 56                	push   %r14
ffffffff8041a394:	41 55                	push   %r13
ffffffff8041a396:	41 54                	push   %r12
ffffffff8041a398:	55                   	push   %rbp
ffffffff8041a399:	53                   	push   %rbx
ffffffff8041a39a:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8041a39e:	44 8b 6f 0c          	mov    0xc(%rdi),%r13d
ffffffff8041a3a2:	44 8b 7f 08          	mov    0x8(%rdi),%r15d
ffffffff8041a3a6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    while (!s.empty()) {
ffffffff8041a3ab:	85 d2                	test   %edx,%edx
ffffffff8041a3ad:	0f 84 77 01 00 00    	je     ffffffff8041a52a <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x19a>
ffffffff8041a3b3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8041a3b8:	89 d3                	mov    %edx,%ebx
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8041a3ba:	41 89 cc             	mov    %ecx,%r12d
ffffffff8041a3bd:	41 c1 e4 08          	shl    $0x8,%r12d
ffffffff8041a3c1:	44 8b 77 04          	mov    0x4(%rdi),%r14d
ffffffff8041a3c5:	8b 07                	mov    (%rdi),%eax
ffffffff8041a3c7:	4c 8d 57 12          	lea    0x12(%rdi),%r10
ffffffff8041a3cb:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
ffffffff8041a3d0:	41 8d 56 ff          	lea    -0x1(%r14),%edx
ffffffff8041a3d4:	89 44 24 10          	mov    %eax,0x10(%rsp)
ffffffff8041a3d8:	48 8d 8c 57 b2 00 00 	lea    0xb2(%rdi,%rdx,2),%rcx
ffffffff8041a3df:	00 
ffffffff8041a3e0:	89 54 24 4c          	mov    %edx,0x4c(%rsp)
ffffffff8041a3e4:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
ffffffff8041a3e9:	89 c1                	mov    %eax,%ecx
ffffffff8041a3eb:	8d 40 fe             	lea    -0x2(%rax),%eax
ffffffff8041a3ee:	48 8d 44 80 05       	lea    0x5(%rax,%rax,4),%rax
ffffffff8041a3f3:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041a3f7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
ffffffff8041a3fc:	8d 41 ff             	lea    -0x1(%rcx),%eax
ffffffff8041a3ff:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041a403:	48 89 c1             	mov    %rax,%rcx
ffffffff8041a406:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8041a40a:	48 01 d0             	add    %rdx,%rax
ffffffff8041a40d:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8041a411:	49 8d 04 42          	lea    (%r10,%rax,2),%rax
ffffffff8041a415:	48 8d 4c 0f 10       	lea    0x10(%rdi,%rcx,1),%rcx
ffffffff8041a41a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
ffffffff8041a41f:	48 8d 87 b0 00 00 00 	lea    0xb0(%rdi),%rax
ffffffff8041a426:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
ffffffff8041a42b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
      auto len = min(num_cols_ - current_col_, s.size());
ffffffff8041a430:	44 89 f5             	mov    %r14d,%ebp
ffffffff8041a433:	44 29 ed             	sub    %r13d,%ebp
ffffffff8041a436:	39 dd                	cmp    %ebx,%ebp
ffffffff8041a438:	0f 47 eb             	cmova  %ebx,%ebp
  constexpr size_t find_first_of(CharT c, size_t pos, size_t count) const
ffffffff8041a43b:	39 eb                	cmp    %ebp,%ebx
ffffffff8041a43d:	89 e8                	mov    %ebp,%eax
ffffffff8041a43f:	0f 46 c3             	cmovbe %ebx,%eax
    for (; i < min(size_, pos + count); i++) {
ffffffff8041a442:	85 c0                	test   %eax,%eax
ffffffff8041a444:	0f 84 b6 02 00 00    	je     ffffffff8041a700 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x370>
ffffffff8041a44a:	83 e8 01             	sub    $0x1,%eax
ffffffff8041a44d:	31 d2                	xor    %edx,%edx
ffffffff8041a44f:	eb 17                	jmp    ffffffff8041a468 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xd8>
ffffffff8041a451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
ffffffff8041a458:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
ffffffff8041a45c:	48 39 c2             	cmp    %rax,%rdx
ffffffff8041a45f:	0f 84 9b 02 00 00    	je     ffffffff8041a700 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x370>
ffffffff8041a465:	48 89 ca             	mov    %rcx,%rdx
      if (str_[i] == c) {
ffffffff8041a468:	80 3c 16 0a          	cmpb   $0xa,(%rsi,%rdx,1)
ffffffff8041a46c:	41 89 d0             	mov    %edx,%r8d
ffffffff8041a46f:	75 e7                	jne    ffffffff8041a458 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xc8>
  constexpr basic_string_view substr(size_t pos = 0,
ffffffff8041a471:	44 39 c3             	cmp    %r8d,%ebx
ffffffff8041a474:	45 89 c3             	mov    %r8d,%r11d
ffffffff8041a477:	44 0f 46 db          	cmovbe %ebx,%r11d
    if (current_row_ == num_rows_) {
ffffffff8041a47b:	44 39 7c 24 10       	cmp    %r15d,0x10(%rsp)
ffffffff8041a480:	0f 84 aa 01 00 00    	je     ffffffff8041a630 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2a0>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041a486:	45 01 eb             	add    %r13d,%r11d
ffffffff8041a489:	45 39 f3             	cmp    %r14d,%r11d
ffffffff8041a48c:	45 0f 47 de          	cmova  %r14d,%r11d
ffffffff8041a490:	45 39 dd             	cmp    %r11d,%r13d
ffffffff8041a493:	0f 83 56 02 00 00    	jae    ffffffff8041a6ef <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x35f>
ffffffff8041a499:	44 89 e8             	mov    %r13d,%eax
ffffffff8041a49c:	f7 d0                	not    %eax
ffffffff8041a49e:	42 8d 3c 18          	lea    (%rax,%r11,1),%edi
ffffffff8041a4a2:	44 89 f8             	mov    %r15d,%eax
ffffffff8041a4a5:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041a4a9:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff8041a4ad:	49 01 c5             	add    %rax,%r13
ffffffff8041a4b0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8041a4b5:	4e 8d 0c 68          	lea    (%rax,%r13,2),%r9
ffffffff8041a4b9:	31 c0                	xor    %eax,%eax
ffffffff8041a4bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      text_buffer_[current_row_][i] = (s[i - current_col_] | (color << 8));
ffffffff8041a4c0:	66 0f be 0c 06       	movsbw (%rsi,%rax,1),%cx
ffffffff8041a4c5:	44 09 e1             	or     %r12d,%ecx
ffffffff8041a4c8:	66 41 89 4c 41 10    	mov    %cx,0x10(%r9,%rax,2)
ffffffff8041a4ce:	48 89 c1             	mov    %rax,%rcx
ffffffff8041a4d1:	48 83 c0 01          	add    $0x1,%rax
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041a4d5:	48 39 cf             	cmp    %rcx,%rdi
ffffffff8041a4d8:	75 e6                	jne    ffffffff8041a4c0 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x130>
      current_col_ = 0;
ffffffff8041a4da:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    if (current_col_ == num_cols_) {
ffffffff8041a4df:	45 39 de             	cmp    %r11d,%r14d
ffffffff8041a4e2:	0f 84 08 01 00 00    	je     ffffffff8041a5f0 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x260>
    current_col_ = i;
ffffffff8041a4e8:	44 89 58 0c          	mov    %r11d,0xc(%rax)
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041a4ec:	83 fa ff             	cmp    $0xffffffff,%edx
ffffffff8041a4ef:	0f 84 19 01 00 00    	je     ffffffff8041a60e <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x27e>
ffffffff8041a4f5:	45 85 db             	test   %r11d,%r11d
ffffffff8041a4f8:	0f 84 7d 02 00 00    	je     ffffffff8041a77b <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x3eb>
ffffffff8041a4fe:	45 89 dd             	mov    %r11d,%r13d
ffffffff8041a501:	41 83 ff 18          	cmp    $0x18,%r15d
ffffffff8041a505:	0f 86 0d 02 00 00    	jbe    ffffffff8041a718 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x388>
        s.remove_prefix(min(endline_or_col_chars + 1, len));
ffffffff8041a50b:	41 83 c0 01          	add    $0x1,%r8d
ffffffff8041a50f:	41 39 e8             	cmp    %ebp,%r8d
ffffffff8041a512:	41 0f 46 e8          	cmovbe %r8d,%ebp
    str_ += n;
ffffffff8041a516:	89 e8                	mov    %ebp,%eax
ffffffff8041a518:	48 01 c6             	add    %rax,%rsi
    size_ -= min(n, size_);
ffffffff8041a51b:	39 eb                	cmp    %ebp,%ebx
ffffffff8041a51d:	0f 46 eb             	cmovbe %ebx,%ebp
ffffffff8041a520:	29 eb                	sub    %ebp,%ebx
    while (!s.empty()) {
ffffffff8041a522:	85 db                	test   %ebx,%ebx
ffffffff8041a524:	0f 85 06 ff ff ff    	jne    ffffffff8041a430 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xa0>
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041a52a:	45 85 ff             	test   %r15d,%r15d
ffffffff8041a52d:	74 6b                	je     ffffffff8041a59a <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x20a>
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a52f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff8041a534:	41 8d 47 ff          	lea    -0x1(%r15),%eax
ffffffff8041a538:	45 31 d2             	xor    %r10d,%r10d
ffffffff8041a53b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
ffffffff8041a53f:	44 8b 4b 04          	mov    0x4(%rbx),%r9d
ffffffff8041a543:	48 c1 e0 05          	shl    $0x5,%rax
ffffffff8041a547:	4c 8d 43 10          	lea    0x10(%rbx),%r8
ffffffff8041a54b:	4c 8d 9c 03 b0 00 00 	lea    0xb0(%rbx,%rax,1),%r11
ffffffff8041a552:	00 
ffffffff8041a553:	44 89 cf             	mov    %r9d,%edi
ffffffff8041a556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a55d:	00 00 00 
ffffffff8041a560:	4c 89 c2             	mov    %r8,%rdx
ffffffff8041a563:	44 89 d0             	mov    %r10d,%eax
ffffffff8041a566:	45 85 c9             	test   %r9d,%r9d
ffffffff8041a569:	74 1d                	je     ffffffff8041a588 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x1f8>
ffffffff8041a56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        vga[i * num_cols_ + j] = text_buffer_[i][j];
ffffffff8041a570:	0f b7 32             	movzwl (%rdx),%esi
ffffffff8041a573:	89 c1                	mov    %eax,%ecx
ffffffff8041a575:	83 c0 01             	add    $0x1,%eax
ffffffff8041a578:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8041a57c:	66 89 b4 09 00 80 0b 	mov    %si,0xb8000(%rcx,%rcx,1)
ffffffff8041a583:	00 
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a584:	39 c7                	cmp    %eax,%edi
ffffffff8041a586:	75 e8                	jne    ffffffff8041a570 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x1e0>
ffffffff8041a588:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
ffffffff8041a58f:	45 01 ca             	add    %r9d,%r10d
ffffffff8041a592:	44 01 cf             	add    %r9d,%edi
    for (size_t i = 0; i < current_row_; i++) {
ffffffff8041a595:	4d 39 d8             	cmp    %r11,%r8
ffffffff8041a598:	75 c6                	jne    ffffffff8041a560 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x1d0>
    if (current_col_ != 0) {
ffffffff8041a59a:	45 85 ed             	test   %r13d,%r13d
ffffffff8041a59d:	74 39                	je     ffffffff8041a5d8 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x248>
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a59f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
ffffffff8041a5a4:	8b 7b 04             	mov    0x4(%rbx),%edi
ffffffff8041a5a7:	85 ff                	test   %edi,%edi
ffffffff8041a5a9:	74 2d                	je     ffffffff8041a5d8 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x248>
        vga[num_cols_ * current_row_ + i] = text_buffer_[current_row_][i];
ffffffff8041a5ab:	89 f8                	mov    %edi,%eax
ffffffff8041a5ad:	4b 8d 14 bf          	lea    (%r15,%r15,4),%rdx
ffffffff8041a5b1:	41 0f af c7          	imul   %r15d,%eax
ffffffff8041a5b5:	48 c1 e2 05          	shl    $0x5,%rdx
ffffffff8041a5b9:	48 8d 54 13 10       	lea    0x10(%rbx,%rdx,1),%rdx
ffffffff8041a5be:	01 c7                	add    %eax,%edi
ffffffff8041a5c0:	0f b7 32             	movzwl (%rdx),%esi
ffffffff8041a5c3:	89 c1                	mov    %eax,%ecx
ffffffff8041a5c5:	83 c0 01             	add    $0x1,%eax
ffffffff8041a5c8:	48 83 c2 02          	add    $0x2,%rdx
ffffffff8041a5cc:	66 89 b4 09 00 80 0b 	mov    %si,0xb8000(%rcx,%rcx,1)
ffffffff8041a5d3:	00 
      for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a5d4:	39 c7                	cmp    %eax,%edi
ffffffff8041a5d6:	75 e8                	jne    ffffffff8041a5c0 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x230>
  }
ffffffff8041a5d8:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8041a5dc:	5b                   	pop    %rbx
ffffffff8041a5dd:	5d                   	pop    %rbp
ffffffff8041a5de:	41 5c                	pop    %r12
ffffffff8041a5e0:	41 5d                	pop    %r13
ffffffff8041a5e2:	41 5e                	pop    %r14
ffffffff8041a5e4:	41 5f                	pop    %r15
ffffffff8041a5e6:	c3                   	retq   
ffffffff8041a5e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a5ee:	00 00 
      current_row_++;
ffffffff8041a5f0:	41 83 c7 01          	add    $0x1,%r15d
      current_col_ = 0;
ffffffff8041a5f4:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041a5fb:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041a5fe:	45 31 db             	xor    %r11d,%r11d
      current_row_++;
ffffffff8041a601:	44 89 78 08          	mov    %r15d,0x8(%rax)
      if (endline_found && current_col_ != 0 && current_row_ < NUM_ROWS) {
ffffffff8041a605:	83 fa ff             	cmp    $0xffffffff,%edx
ffffffff8041a608:	0f 85 fd fe ff ff    	jne    ffffffff8041a50b <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x17b>
ffffffff8041a60e:	44 39 c5             	cmp    %r8d,%ebp
ffffffff8041a611:	45 89 dd             	mov    %r11d,%r13d
ffffffff8041a614:	44 0f 46 c5          	cmovbe %ebp,%r8d
    str_ += n;
ffffffff8041a618:	44 89 c0             	mov    %r8d,%eax
ffffffff8041a61b:	48 01 c6             	add    %rax,%rsi
    size_ -= min(n, size_);
ffffffff8041a61e:	44 39 c3             	cmp    %r8d,%ebx
ffffffff8041a621:	44 0f 46 c3          	cmovbe %ebx,%r8d
ffffffff8041a625:	44 29 c3             	sub    %r8d,%ebx
ffffffff8041a628:	e9 f5 fe ff ff       	jmpq   ffffffff8041a522 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x192>
ffffffff8041a62d:	0f 1f 00             	nopl   (%rax)
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041a630:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
ffffffff8041a635:	76 74                	jbe    ffffffff8041a6ab <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x31b>
ffffffff8041a637:	44 89 5c 24 14       	mov    %r11d,0x14(%rsp)
ffffffff8041a63c:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
ffffffff8041a641:	31 c9                	xor    %ecx,%ecx
ffffffff8041a643:	49 c7 c1 60 ff ff ff 	mov    $0xffffffffffffff60,%r9
ffffffff8041a64a:	89 54 24 48          	mov    %edx,0x48(%rsp)
ffffffff8041a64e:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
ffffffff8041a653:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
ffffffff8041a658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8041a65f:	00 
ffffffff8041a660:	49 8d 04 0b          	lea    (%r11,%rcx,1),%rax
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a664:	45 85 f6             	test   %r14d,%r14d
ffffffff8041a667:	74 1f                	je     ffffffff8041a688 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2f8>
ffffffff8041a669:	48 89 14 24          	mov    %rdx,(%rsp)
ffffffff8041a66d:	0f 1f 00             	nopl   (%rax)
        text_buffer_[i - 1][j] = text_buffer_[i][j];
ffffffff8041a670:	0f b7 10             	movzwl (%rax),%edx
ffffffff8041a673:	4a 8d 3c 08          	lea    (%rax,%r9,1),%rdi
ffffffff8041a677:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a67b:	66 89 14 0f          	mov    %dx,(%rdi,%rcx,1)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a67f:	4c 39 d0             	cmp    %r10,%rax
ffffffff8041a682:	75 ec                	jne    ffffffff8041a670 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2e0>
ffffffff8041a684:	48 8b 14 24          	mov    (%rsp),%rdx
ffffffff8041a688:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
ffffffff8041a68f:	49 81 e9 a0 00 00 00 	sub    $0xa0,%r9
ffffffff8041a696:	49 81 c2 a0 00 00 00 	add    $0xa0,%r10
    for (size_t i = 1; i < num_rows_; i++) {
ffffffff8041a69d:	48 39 d1             	cmp    %rdx,%rcx
ffffffff8041a6a0:	75 be                	jne    ffffffff8041a660 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x2d0>
ffffffff8041a6a2:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
ffffffff8041a6a7:	8b 54 24 48          	mov    0x48(%rsp),%edx
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a6ab:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
ffffffff8041a6b0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
ffffffff8041a6b5:	45 85 f6             	test   %r14d,%r14d
ffffffff8041a6b8:	74 15                	je     ffffffff8041a6cf <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x33f>
ffffffff8041a6ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
      text_buffer_[num_rows_ - 1][i] = 0;
ffffffff8041a6c0:	31 ff                	xor    %edi,%edi
ffffffff8041a6c2:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a6c6:	66 89 78 fe          	mov    %di,-0x2(%rax)
    for (size_t i = 0; i < num_cols_; i++) {
ffffffff8041a6ca:	48 39 c8             	cmp    %rcx,%rax
ffffffff8041a6cd:	75 f1                	jne    ffffffff8041a6c0 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x330>
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041a6cf:	45 01 eb             	add    %r13d,%r11d
      current_row_--;
ffffffff8041a6d2:	41 83 ef 01          	sub    $0x1,%r15d
ffffffff8041a6d6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8041a6db:	45 39 f3             	cmp    %r14d,%r11d
ffffffff8041a6de:	45 0f 47 de          	cmova  %r14d,%r11d
ffffffff8041a6e2:	44 89 78 08          	mov    %r15d,0x8(%rax)
    for (i = current_col_; i < min(current_col_ + s.size(), num_cols_); i++) {
ffffffff8041a6e6:	45 39 dd             	cmp    %r11d,%r13d
ffffffff8041a6e9:	0f 82 aa fd ff ff    	jb     ffffffff8041a499 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x109>
ffffffff8041a6ef:	45 89 eb             	mov    %r13d,%r11d
ffffffff8041a6f2:	e9 e3 fd ff ff       	jmpq   ffffffff8041a4da <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x14a>
ffffffff8041a6f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a6fe:	00 00 
    if (count == npos) {
ffffffff8041a700:	83 fd ff             	cmp    $0xffffffff,%ebp
ffffffff8041a703:	75 7e                	jne    ffffffff8041a783 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x3f3>
ffffffff8041a705:	ba ff ff ff ff       	mov    $0xffffffff,%edx
        endline_or_col_chars = len;
ffffffff8041a70a:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
ffffffff8041a710:	41 89 db             	mov    %ebx,%r11d
ffffffff8041a713:	e9 63 fd ff ff       	jmpq   ffffffff8041a47b <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xeb>
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041a718:	45 39 de             	cmp    %r11d,%r14d
ffffffff8041a71b:	76 42                	jbe    ffffffff8041a75f <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x3cf>
ffffffff8041a71d:	44 89 f8             	mov    %r15d,%eax
ffffffff8041a720:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
ffffffff8041a725:	44 89 d9             	mov    %r11d,%ecx
ffffffff8041a728:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
ffffffff8041a72c:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff8041a730:	48 8d 44 11 08       	lea    0x8(%rcx,%rdx,1),%rax
ffffffff8041a735:	48 01 ca             	add    %rcx,%rdx
ffffffff8041a738:	48 8d 04 47          	lea    (%rdi,%rax,2),%rax
ffffffff8041a73c:	8b 7c 24 4c          	mov    0x4c(%rsp),%edi
ffffffff8041a740:	44 29 df             	sub    %r11d,%edi
ffffffff8041a743:	48 01 fa             	add    %rdi,%rdx
ffffffff8041a746:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
ffffffff8041a74b:	48 8d 14 57          	lea    (%rdi,%rdx,2),%rdx
ffffffff8041a74f:	90                   	nop
          text_buffer_[current_row_][i] = 0;
ffffffff8041a750:	31 c9                	xor    %ecx,%ecx
ffffffff8041a752:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a756:	66 89 48 fe          	mov    %cx,-0x2(%rax)
        for (size_t i = current_col_; i < num_cols_; i++) {
ffffffff8041a75a:	48 39 c2             	cmp    %rax,%rdx
ffffffff8041a75d:	75 f1                	jne    ffffffff8041a750 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x3c0>
        current_row_++;
ffffffff8041a75f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
ffffffff8041a764:	41 83 c7 01          	add    $0x1,%r15d
ffffffff8041a768:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041a76b:	44 89 78 08          	mov    %r15d,0x8(%rax)
        current_col_ = 0;
ffffffff8041a76f:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
ffffffff8041a776:	e9 90 fd ff ff       	jmpq   ffffffff8041a50b <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x17b>
ffffffff8041a77b:	45 31 ed             	xor    %r13d,%r13d
ffffffff8041a77e:	e9 88 fd ff ff       	jmpq   ffffffff8041a50b <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0x17b>
ffffffff8041a783:	41 89 e8             	mov    %ebp,%r8d
ffffffff8041a786:	83 ca ff             	or     $0xffffffff,%edx
ffffffff8041a789:	e9 e3 fc ff ff       	jmpq   ffffffff8041a471 <_ZN6Kernel9VGAOutputILj25ELj80EE11PrintStringENS_17basic_string_viewIcEENS_8VGAColorE+0xe1>
ffffffff8041a78e:	66 90                	xchg   %ax,%ax

ffffffff8041a790 <_GLOBAL__sub_I__ZN6Kernel10vga_outputE>:
        current_col_(0) {
ffffffff8041a790:	48 b8 19 00 00 00 50 	movabs $0x5000000019,%rax
ffffffff8041a797:	00 00 00 
ffffffff8041a79a:	48 c7 c2 10 e1 41 80 	mov    $0xffffffff8041e110,%rdx
ffffffff8041a7a1:	48 c7 05 bc 38 00 00 	movq   $0x0,0x38bc(%rip)        # ffffffff8041e068 <_ZN6Kernel10vga_outputE+0x8>
ffffffff8041a7a8:	00 00 00 00 
ffffffff8041a7ac:	48 89 05 ad 38 00 00 	mov    %rax,0x38ad(%rip)        # ffffffff8041e060 <_ZN6Kernel10vga_outputE>
ffffffff8041a7b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8041a7b8:	48 8d 82 60 ff ff ff 	lea    -0xa0(%rdx),%rax
ffffffff8041a7bf:	90                   	nop
        text_buffer_[i][j] = 0;
ffffffff8041a7c0:	31 c9                	xor    %ecx,%ecx
ffffffff8041a7c2:	48 83 c0 02          	add    $0x2,%rax
ffffffff8041a7c6:	66 89 48 fe          	mov    %cx,-0x2(%rax)
      for (size_t j = 0; j < num_cols_; j++) {
ffffffff8041a7ca:	48 39 d0             	cmp    %rdx,%rax
ffffffff8041a7cd:	75 f1                	jne    ffffffff8041a7c0 <_GLOBAL__sub_I__ZN6Kernel10vga_outputE+0x30>
ffffffff8041a7cf:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    for (size_t i = 0; i < num_rows_; i++) {
ffffffff8041a7d6:	48 3d 10 f0 41 80    	cmp    $0xffffffff8041f010,%rax
ffffffff8041a7dc:	75 da                	jne    ffffffff8041a7b8 <_GLOBAL__sub_I__ZN6Kernel10vga_outputE+0x28>
  }
}
ffffffff8041a7de:	c3                   	retq   
ffffffff8041a7df:	90                   	nop

ffffffff8041a7e0 <_GLOBAL__sub_I__Z11ToUpperCasec>:
};

class PS2Keyboard {
 public:
  PS2Keyboard() {
    for (size_t i = 0; i < NUM_KEY_CODES; i++) {
ffffffff8041a7e0:	48 c7 c0 40 00 42 80 	mov    $0xffffffff80420040,%rax
ffffffff8041a7e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a7ee:	00 00 
      key_press_list_[i].time_down = 0;
ffffffff8041a7f0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8041a7f7:	48 83 c0 08          	add    $0x8,%rax
    for (size_t i = 0; i < NUM_KEY_CODES; i++) {
ffffffff8041a7fb:	48 3d 80 09 42 80    	cmp    $0xffffffff80420980,%rax
ffffffff8041a801:	75 ed                	jne    ffffffff8041a7f0 <_GLOBAL__sub_I__Z11ToUpperCasec+0x10>

}  // namespace Kernel
ffffffff8041a803:	c3                   	retq   
ffffffff8041a804:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8041a80b:	00 00 00 
ffffffff8041a80e:	66 90                	xchg   %ax,%ax

ffffffff8041a810 <_GLOBAL__sub_I__ZN6Kernel7PITimerC2Ev>:
PITimer::PITimer() : timer_tick_lower_(0), timer_tick_upper_(0) {}
ffffffff8041a810:	48 c7 05 65 61 00 00 	movq   $0x0,0x6165(%rip)        # ffffffff80420980 <_ZN6Kernel9pic_timerE>
ffffffff8041a817:	00 00 00 00 
ffffffff8041a81b:	48 c7 05 62 61 00 00 	movq   $0x0,0x6162(%rip)        # ffffffff80420988 <_ZN6Kernel9pic_timerE+0x8>
ffffffff8041a822:	00 00 00 00 

PITimer pic_timer;

}  // namespace Kernel
ffffffff8041a826:	c3                   	retq   
ffffffff8041a827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8041a82e:	00 00 

ffffffff8041a830 <_GLOBAL__sub_I__ZN6Kernel6memcpyEPvS0_j>:
      : heap_start_(reinterpret_cast<uint8_t*>(KERNEL_VIRTUAL_START +
                                               KERNEL_HEAP_MEMORY_START_OFFSET +
                                               MEMORY_ALGIN_OFFSET)),
        heap_memory_limit_(ONE_GB - KERNEL_HEAP_MEMORY_START_OFFSET -
                           MEMORY_ALGIN_OFFSET),
        current_heap_size_(8 /* Added initial offset*/) {
ffffffff8041a830:	48 c7 05 65 61 00 00 	movq   $0xffffffff81400004,0x6165(%rip)        # ffffffff804209a0 <_ZN6Kernel21kernel_memory_managerE>
ffffffff8041a837:	04 00 40 81 
ffffffff8041a83b:	48 b8 fc ff ff 3e 08 	movabs $0x83efffffc,%rax
ffffffff8041a842:	00 00 00 
ffffffff8041a845:	48 89 05 5c 61 00 00 	mov    %rax,0x615c(%rip)        # ffffffff804209a8 <_ZN6Kernel21kernel_memory_managerE+0x8>
    for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff8041a84c:	48 c7 c0 b0 09 42 80 	mov    $0xffffffff804209b0,%rax
ffffffff8041a853:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      free_list_[i] = 0;
ffffffff8041a858:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff8041a85e:	48 83 c0 04          	add    $0x4,%rax
    for (int i = 0; i < NUM_BUCKETS; i++) {
ffffffff8041a862:	48 3d f0 09 42 80    	cmp    $0xffffffff804209f0,%rax
ffffffff8041a868:	75 ee                	jne    ffffffff8041a858 <_GLOBAL__sub_I__ZN6Kernel6memcpyEPvS0_j+0x28>
}

}  // namespace Kernel
ffffffff8041a86a:	c3                   	retq   
ffffffff8041a86b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8041a870 <_GLOBAL__sub_I__ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE>:
ffffffff8041a870:	80 3d a9 61 00 00 00 	cmpb   $0x0,0x61a9(%rip)        # ffffffff80420a20 <_kernel_virtual_end>
};

class KernelTest {
 public:
  KernelTest(const char* test_suite_name, const char* test_name)
      : test_suite_name_(test_suite_name), test_name_(test_name) {
ffffffff8041a877:	48 c7 05 7e 61 00 00 	movq   $0xffffffff8041bb28,0x617e(%rip)        # ffffffff80420a00 <_ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE>
ffffffff8041a87e:	28 bb 41 80 
ffffffff8041a882:	48 c7 05 7b 61 00 00 	movq   $0xffffffff8041bae4,0x617b(%rip)        # ffffffff80420a08 <_ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE+0x8>
ffffffff8041a889:	e4 ba 41 80 
ffffffff8041a88d:	48 c7 05 78 61 00 00 	movq   $0xffffffff8041baf0,0x6178(%rip)        # ffffffff80420a10 <_ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE+0x10>
ffffffff8041a894:	f0 ba 41 80 
ffffffff8041a898:	c7 05 76 61 00 00 00 	movl   $0x0,0x6176(%rip)        # ffffffff80420a18 <_ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE+0x18>
ffffffff8041a89f:	00 00 00 
    static KernelTestRunner test_runner;
ffffffff8041a8a2:	75 2a                	jne    ffffffff8041a8ce <_GLOBAL__sub_I__ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE+0x5e>
ffffffff8041a8a4:	c6 05 75 61 00 00 01 	movb   $0x1,0x6175(%rip)        # ffffffff80420a20 <_kernel_virtual_end>
    if (num_tests_ >= kMaxNumTest) {
ffffffff8041a8ab:	31 c0                	xor    %eax,%eax
    tests_[num_tests_++] = test;
ffffffff8041a8ad:	48 c7 04 c5 40 0a 42 	movq   $0xffffffff80420a00,-0x7fbdf5c0(,%rax,8)
ffffffff8041a8b4:	80 00 0a 42 80 
ffffffff8041a8b9:	8d 50 01             	lea    0x1(%rax),%edx
ffffffff8041a8bc:	89 15 9e 64 00 00    	mov    %edx,0x649e(%rip)        # ffffffff80420d60 <_ZZN6Kernel11kernel_test16KernelTestRunner13GetTestRunnerEvE11test_runner+0x320>
TEST(kmallocTest, IncreaseSize) {
ffffffff8041a8c2:	48 c7 05 33 61 00 00 	movq   $0xffffffff8041bb40,0x6133(%rip)        # ffffffff80420a00 <_ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE>
ffffffff8041a8c9:	40 bb 41 80 
ffffffff8041a8cd:	c3                   	retq   
    if (num_tests_ >= kMaxNumTest) {
ffffffff8041a8ce:	48 63 05 8b 64 00 00 	movslq 0x648b(%rip),%rax        # ffffffff80420d60 <_ZZN6Kernel11kernel_test16KernelTestRunner13GetTestRunnerEvE11test_runner+0x320>
ffffffff8041a8d5:	83 f8 63             	cmp    $0x63,%eax
ffffffff8041a8d8:	7e d3                	jle    ffffffff8041a8ad <_GLOBAL__sub_I__ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE+0x3d>
  EXPECT_TRUE(kernel_memory_manager.SanityCheck());
  kernel_memory_manager.DumpMemory();
}

}  // namespace kernel_test
}  // namespace Kernel
ffffffff8041a8da:	50                   	push   %rax
      printf("Max Test Number Exceeded!");
ffffffff8041a8db:	48 c7 c7 fd ba 41 80 	mov    $0xffffffff8041bafd,%rdi
ffffffff8041a8e2:	31 c0                	xor    %eax,%eax
ffffffff8041a8e4:	e8 87 ef ff ff       	callq  ffffffff80419870 <printf_>
TEST(kmallocTest, IncreaseSize) {
ffffffff8041a8e9:	48 c7 05 0c 61 00 00 	movq   $0xffffffff8041bb40,0x610c(%rip)        # ffffffff80420a00 <_ZN6Kernel11kernel_test33kmallocTest_IncreaseSize_Test_objE>
ffffffff8041a8f0:	40 bb 41 80 
}  // namespace Kernel
ffffffff8041a8f4:	5a                   	pop    %rdx
ffffffff8041a8f5:	c3                   	retq   
ffffffff8041a8f6:	66 90                	xchg   %ax,%ax

ffffffff8041a8f8 <_fini>:
ffffffff8041a8f8:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041a8fc:	e8 7f 27 ff ff       	callq  ffffffff8040d080 <__do_global_dtors_aux>
ffffffff8041a901:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041a905:	c3                   	retq   
ffffffff8041a906:	66 90                	xchg   %ax,%ax

ffffffff8041a908 <_init>:
ffffffff8041a908:	48 83 ec 08          	sub    $0x8,%rsp
ffffffff8041a90c:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
ffffffff8041a913:	48 85 c0             	test   %rax,%rax
ffffffff8041a916:	74 02                	je     ffffffff8041a91a <_init+0x12>
ffffffff8041a918:	ff d0                	callq  *%rax
ffffffff8041a91a:	e8 f1 27 ff ff       	callq  ffffffff8040d110 <frame_dummy>
ffffffff8041a91f:	e8 1c fa ff ff       	callq  ffffffff8041a340 <__do_global_ctors_aux>
ffffffff8041a924:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8041a928:	c3                   	retq   
